{
	"id": "84c5548965fac112e876a28572a2c064",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/GameToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title GameToken\n * @dev Optimized ERC-20 game token with enhanced security\n * Each game gets its own instance of this contract\n * Optimized for gas efficiency while maintaining security\n */\ncontract GameToken is ERC20, Ownable, ReentrancyGuard {\n    // ============ Immutable Variables (Gas Optimized) ============\n    uint8 private immutable _decimals;\n    address public immutable factory; // Factory contract that deployed this token\n    uint256 public immutable gameId; // Unique game identifier\n    \n    // ============ State Variables ============\n    uint256 public totalBurned; // Track total burned for analytics\n    bool public burnEnabled = true; // Emergency disable burning\n    \n    // ============ Minting Protection ============\n    \n    // State to track if initial minting is complete\n    bool private _initialMintComplete;\n    \n    // ============ Events ============\n    event TokensBurned(address indexed user, uint256 amount, uint256 totalBurned);\n    event BurnStatusChanged(bool enabled);\n    \n    // ============ Comprehensive Error Definitions ============\n    // Input Validation Errors\n    error ZeroAmount();\n    error ZeroAddress();\n    error InvalidAddress(address provided, string reason);\n    error InvalidAmount(uint256 provided, uint256 min, uint256 max);\n    \n    // Access Control Errors\n    error UnauthorizedFactory(address caller, address expectedFactory);\n    error UnauthorizedOwner(address caller, address expectedOwner);\n    error UnauthorizedBurner(address caller);\n    \n    // Contract State Errors\n    error BurnDisabled(string reason);\n    error ContractPaused();\n    error InvalidContractState(string reason);\n    error ReentrancyDetected();\n    \n    // Balance and Supply Errors\n    error InsufficientBalance(address account, uint256 required, uint256 available);\n    error ExcessiveBurnRequest(uint256 requested, uint256 maxAllowed);\n    error InvalidBurnAmount(uint256 amount, string reason);\n    \n    // Business Logic Errors\n    error MintingDisabledAfterInit(string reason);\n    error BurningOperationFailed(address from, uint256 amount, string reason);\n    error TransferOperationFailed(address from, address to, uint256 amount);\n    error GameTokenInactive(uint256 gameId);\n    error InvalidGameOperation(string operation, string reason);\n    \n    // Mathematical Errors\n    error MathOverflow(string operation);\n    error MathUnderflow(string operation);\n    \n    // Recovery Errors\n    error RecoveryFailed(address token, string reason);\n    error InvalidRecoveryTarget(address target);\n    error RecoveryNotAllowed(string reason);\n    \n    // ============ Modifiers ============\n    modifier onlyFactory() {\n        if (msg.sender != factory) revert UnauthorizedBurner(msg.sender);\n        _;\n    }\n    \n    modifier burnAllowed() {\n        if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\");\n        _;\n    }\n    \n    // ============ Constructor ============\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals_,\n        uint256 initialSupply,\n        address owner,\n        address factory_,\n        uint256 gameId_\n    ) ERC20(name, symbol) Ownable(owner) {\n        // Comprehensive input validation\n        if (bytes(name).length == 0) {\n            revert InvalidAddress(address(0), \"Token name cannot be empty\");\n        }\n        if (bytes(symbol).length == 0) {\n            revert InvalidAddress(address(0), \"Token symbol cannot be empty\");\n        }\n        if (owner == address(0)) {\n            revert ZeroAddress();\n        }\n        if (factory_ == address(0)) {\n            revert ZeroAddress();\n        }\n        if (decimals_ > 18) {\n            revert InvalidAmount(decimals_, 0, 18);\n        }\n        if (initialSupply == 0) {\n            revert ZeroAmount();\n        }\n        if (owner == factory_) {\n            revert InvalidContractState(\"Owner and factory cannot be the same\");\n        }\n        \n        _decimals = decimals_;\n        factory = factory_;\n        gameId = gameId_;\n        \n        // Mint initial supply directly to owner - simplified for deployment success\n        _mint(owner, initialSupply);\n        _initialMintComplete = true;\n    }\n    \n    // ============ View Functions ============\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n    \n    // ============ Burn Functions ============\n    /**\n     * @dev Burn tokens from a specific account (called by factory)\n     * @param from Address to burn tokens from\n     * @param amount Amount of tokens to burn\n     */\n    function burnFrom(address from, uint256 amount) \n        external \n        onlyFactory \n        burnAllowed \n        nonReentrant \n    {\n        // Enhanced input validation\n        if (from == address(0)) {\n            revert ZeroAddress();\n        }\n        if (amount == 0) {\n            revert ZeroAmount();\n        }\n        \n        uint256 userBalance = balanceOf(from);\n        if (userBalance < amount) {\n            revert InsufficientBalance(from, amount, userBalance);\n        }\n        \n        // Validate burn amount isn't excessive (no more than total supply)\n        if (amount > totalSupply()) {\n            revert ExcessiveBurnRequest(amount, totalSupply());\n        }\n        \n        // Additional security check - prevent burning more than reasonable limit per transaction\n        uint256 maxBurnPerTx = totalSupply() / 10; // Max 10% of supply per transaction\n        if (amount > maxBurnPerTx) {\n            revert InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\");\n        }\n        \n        // Update total burned before burning (for reentrancy safety)\n        totalBurned += amount;\n        \n        try this._performBurn(from, amount) {\n            emit TokensBurned(from, amount, totalBurned);\n        } catch Error(string memory reason) {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(from, amount, reason);\n        } catch {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(from, amount, \"Unknown burn error\");\n        }\n    }\n    \n    /**\n     * @dev Internal burn function for error handling separation\n     */\n    function _performBurn(address from, uint256 amount) external {\n        require(msg.sender == address(this), \"Only self-call allowed\");\n        _burn(from, amount);\n    }\n    \n    /**\n     * @dev Allow users to burn their own tokens directly\n     * @param amount Amount of tokens to burn\n     */\n    function burn(uint256 amount) external burnAllowed nonReentrant {\n        // Enhanced input validation\n        if (amount == 0) {\n            revert ZeroAmount();\n        }\n        \n        uint256 userBalance = balanceOf(msg.sender);\n        if (userBalance < amount) {\n            revert InsufficientBalance(msg.sender, amount, userBalance);\n        }\n        \n        // Update total burned and perform burn\n        totalBurned += amount;\n        \n        try this._performBurn(msg.sender, amount) {\n            emit TokensBurned(msg.sender, amount, totalBurned);\n        } catch Error(string memory reason) {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(msg.sender, amount, reason);\n        } catch {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(msg.sender, amount, \"Unknown burn error\");\n        }\n    }\n    \n    // ============ Admin Functions ============\n    /**\n     * @dev Enable/disable burning (emergency control)\n     * @param enabled Whether burning should be enabled\n     */\n    function setBurnEnabled(bool enabled) external onlyOwner {\n        burnEnabled = enabled;\n        emit BurnStatusChanged(enabled);\n    }\n    \n    /**\n     * @dev Emergency function to recover stuck tokens\n     * @param token Address of token to recover (address(0) for ETH)\n     * @param to Address to send recovered tokens\n     * @param amount Amount to recover\n     */\n    function emergencyRecover(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner {\n        if (to == address(0)) revert ZeroAddress();\n        \n        if (token == address(0)) {\n            // Recover ETH\n            (bool success, ) = payable(to).call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            // Recover ERC20 tokens\n            IERC20(token).transfer(to, amount);\n        }\n    }\n    \n    /**\n     * @dev Restricted mint function - only callable by factory\n     * This ensures tokens can only be created when XP is properly locked\n     */\n    function factoryMint(address to, uint256 amount) external onlyFactory {\n        // Factory can mint even after initial mint is complete\n        // This represents XP being locked for additional tokens\n        _mint(to, amount);\n    }\n    \n    /**\n     * @dev Block any attempts to call mint functions directly\n     * Prevents manual token creation outside the XP locking mechanism\n     */\n    function mint(address) external pure {\n        revert(\"Mint disabled: use factory to lock XP\");\n    }\n} "
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GameToken.sol": {
				"GameToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "factory_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "gameId_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "BurnDisabled",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "BurningOperationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ContractPaused",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAllowed",
									"type": "uint256"
								}
							],
							"name": "ExcessiveBurnRequest",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "GameTokenInactive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provided",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidBurnAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidContractState",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidGameOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "InvalidRecoveryTarget",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "MathOverflow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "MathUnderflow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "MintingDisabledAfterInit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "RecoveryFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "RecoveryNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyDetected",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransferOperationFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "UnauthorizedBurner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "expectedFactory",
									"type": "address"
								}
							],
							"name": "UnauthorizedFactory",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "expectedOwner",
									"type": "address"
								}
							],
							"name": "UnauthorizedOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "BurnStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalBurned",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_performBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyRecover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "factoryMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setBurnEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optimized ERC-20 game token with enhanced security Each game gets its own instance of this contract Optimized for gas efficiency while maintaining security",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"_performBurn(address,uint256)": {
								"details": "Internal burn function for error handling separation"
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Allow users to burn their own tokens directly",
								"params": {
									"amount": "Amount of tokens to burn"
								}
							},
							"burnFrom(address,uint256)": {
								"details": "Burn tokens from a specific account (called by factory)",
								"params": {
									"amount": "Amount of tokens to burn",
									"from": "Address to burn tokens from"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"emergencyRecover(address,address,uint256)": {
								"details": "Emergency function to recover stuck tokens",
								"params": {
									"amount": "Amount to recover",
									"to": "Address to send recovered tokens",
									"token": "Address of token to recover (address(0) for ETH)"
								}
							},
							"factoryMint(address,uint256)": {
								"details": "Restricted mint function - only callable by factory This ensures tokens can only be created when XP is properly locked"
							},
							"mint(address)": {
								"details": "Block any attempts to call mint functions directly Prevents manual token creation outside the XP locking mechanism"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBurnEnabled(bool)": {
								"details": "Enable/disable burning (emergency control)",
								"params": {
									"enabled": "Whether burning should be enabled"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "GameToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xe0)\n  jumpi(tag_15, callvalue)\n  bytecodeSize\n  dup1\n  codesize\n  sub\n  dup1\n  tag_6\n  dup2\n  tag_1\n  jump\t// in\ntag_6:\n  swap3\n  dup4\n  codecopy\n  dup2\n  add\n  swap1\n  0xe0\n  dup2\n  dup4\n  sub\n  slt\n  tag_15\n  jumpi\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_15\n  jumpi\n  dup3\n  tag_11\n  swap2\n  dup4\n  add\n  tag_2\n  jump\t// in\ntag_11:\n  0x20\n  dup3\n  add\n  mload\n  swap1\n  swap3\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_15\n  jumpi\n  tag_14\n  swap2\n  dup4\n  add\n  tag_2\n  jump\t// in\ntag_14:\n  0x40\n  dup3\n  add\n  mload\n  swap2\n  0xff\n  dup4\n  and\n  swap3\n  dup4\n  dup2\n  sub\n  tag_15\n  jumpi\n  0x60\n  dup3\n  add\n  mload\n  swap4\n  tag_17\n  0x80\n  dup5\n  add\n  tag_3\n  jump\t// in\ntag_17:\n  swap4\n  0xc0\n  tag_18\n  0xa0\n  dup7\n  add\n  tag_3\n  jump\t// in\ntag_18:\n  swap5\n  add\n  mload\n  dup8\n  mload\n  swap1\n  swap6\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sload\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_21\n  jumpi\ntag_22:\n  0x20\n  dup3\n  lt\n  eq\n  tag_36\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_25\n  jumpi\ntag_26:\n  pop\n  dup1\n  0x20\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_27\n  jumpi\n  0x00\n  swap2\n  tag_29\n  jumpi\ntag_30:\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  shl\n  shr\n  not\n  and\n  or\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\ntag_31:\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sload\n  0x01\n  dup2\n  dup2\n  shr\n  swap2\n  and\n  dup1\n  iszero\n  tag_34\n  jumpi\ntag_35:\n  0x20\n  dup3\n  lt\n  eq\n  tag_36\n  jumpi\n  0x1f\n  dup2\n  gt\n  tag_38\n  jumpi\ntag_39:\n  pop\n  dup1\n  0x20\n  0x1f\n  dup3\n  gt\n  0x01\n  eq\n  tag_40\n  jumpi\n  0x00\n  swap2\n  tag_42\n  jumpi\ntag_43:\n  pop\n  dup2\n  0x01\n  shl\n  swap2\n  not(0x00)\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  shl\n  shr\n  not\n  and\n  or\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\ntag_44:\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup8\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup2\n  and\n  dup11\n  or\n  swap1\n  swap2\n  sstore\n  mload(0x40)\n  swap2\n  swap1\n  dup10\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  0x00\n  dup1\n  log3\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  sstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x01\n  not(0xff)\n    /* \"contracts/GameToken.sol\":945:949  true */\n  0x08\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sload\n  and\n  or\n    /* \"contracts/GameToken.sol\":945:949  true */\n  0x08\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\n  mload\n    /* \"contracts/GameToken.sol\":3523:3546  bytes(name).length == 0 */\n  iszero\n    /* \"contracts/GameToken.sol\":3519:3636  if (bytes(name).length == 0) {... */\n  tag_47\n  jumpi\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  pop\n  mload\n    /* \"contracts/GameToken.sol\":3649:3674  bytes(symbol).length == 0 */\n  iszero\n    /* \"contracts/GameToken.sol\":3645:3766  if (bytes(symbol).length == 0) {... */\n  tag_49\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  dup4\n  and\n  swap1\n    /* \"contracts/GameToken.sol\":3858:3880  factory_ == address(0) */\n  dup2\n  iszero\n    /* \"contracts/GameToken.sol\":3854:3927  if (factory_ == address(0)) {... */\n  tag_51\n  jumpi\n    /* \"contracts/GameToken.sol\":3952:3954  18 */\n  0x12\n    /* \"contracts/GameToken.sol\":3940:3954  decimals_ > 18 */\n  dup2\n  gt\n    /* \"contracts/GameToken.sol\":3936:4019  if (decimals_ > 18) {... */\n  tag_53\n  jumpi\n    /* \"contracts/GameToken.sol\":4032:4050  initialSupply == 0 */\n  pop\n  dup5\n  iszero\n    /* \"contracts/GameToken.sol\":4028:4096  if (initialSupply == 0) {... */\n  tag_55\n  jumpi\n    /* \"contracts/GameToken.sol\":4109:4126  owner == factory_ */\n  dup6\n  eq\n    /* \"contracts/GameToken.sol\":4105:4220  if (owner == factory_) {... */\n  tag_57\n  jumpi\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x80\n    /* \"contracts/GameToken.sol\":4238:4259  _decimals = decimals_ */\n  mstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0xa0\n    /* \"contracts/GameToken.sol\":4269:4287  factory = factory_ */\n  mstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0xc0\n    /* \"contracts/GameToken.sol\":4297:4313  gameId = gameId_ */\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  0x02\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sload\n  swap1\n  dup1\n  dup3\n  add\n  dup1\n  swap3\n  gt\n  tag_59\n  jumpi\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  swap2\n  0x00\n  swap4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  0x02\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  sstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  dup5\n  dup5\n  mstore\n  dup4\n  dup3\n  mstore\n  0x40\n  dup5\n  keccak256\n  dup2\n  dup2\n  sload\n  add\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  swap1\n  sstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mload(0x40)\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  log3\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x0100\n  not(0xff00)\n    /* \"contracts/GameToken.sol\":945:949  true */\n  0x08\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sload\n  and\n  or\n    /* \"contracts/GameToken.sol\":945:949  true */\n  0x08\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  mload(0x80)\n  dup2\n  assignImmutable(\"0x45e4122ae096aaf6e2aaec946f0a01ae525edda3a7e2c6a387bb8ca107829b76\")\n  mload(0xa0)\n  dup2\n  assignImmutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n  mload(0xc0)\n  dup2\n  assignImmutable(\"0x1574fd9c456ac2178cca2062e903c8444982ecdf56930f6d4f7e607dd7e8f619\")\n  return\ntag_59:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\n    /* \"contracts/GameToken.sol\":4105:4220  if (owner == factory_) {... */\ntag_57:\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mload(0x40)\n  shl(0xe2, 0x313b9aa1)\n    /* \"contracts/GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  dup2\n  mstore\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  dup3\n  add\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0x24\n  dup1\n  dup3\n  add\n  mstore\n  0x4f776e657220616e6420666163746f72792063616e6e6f742062652074686520\n  0x44\n  dup3\n  add\n  mstore\n  shl(0xe0, 0x73616d65)\n  0x64\n  dup3\n  add\n  mstore\n    /* \"contracts/GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  0x84\n  swap1\n  revert\n    /* \"contracts/GameToken.sol\":4028:4096  if (initialSupply == 0) {... */\ntag_55:\n    /* \"contracts/GameToken.sol\":4073:4085  ZeroAmount() */\n  mstore(0x00, shl(0xe0, 0x1f2a2005))\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/GameToken.sol\":4073:4085  ZeroAmount() */\n  revert\n    /* \"contracts/GameToken.sol\":3936:4019  if (decimals_ > 18) {... */\ntag_53:\n    /* \"contracts/GameToken.sol\":3977:4008  InvalidAmount(decimals_, 0, 18) */\n  mstore(0x00, shl(0xe0, 0x46f4384b))\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  mstore(0x24, 0x00)\n    /* \"contracts/GameToken.sol\":3952:3954  18 */\n  0x12\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  0x44\n  mstore\n  0x64\n  0x00\n    /* \"contracts/GameToken.sol\":3977:4008  InvalidAmount(decimals_, 0, 18) */\n  revert\n    /* \"contracts/GameToken.sol\":3854:3927  if (factory_ == address(0)) {... */\ntag_51:\n    /* \"contracts/GameToken.sol\":3903:3916  ZeroAddress() */\n  mstore(0x00, shl(0xe0, 0xd92e233d))\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/GameToken.sol\":3903:3916  ZeroAddress() */\n  revert\n    /* \"contracts/GameToken.sol\":3645:3766  if (bytes(symbol).length == 0) {... */\ntag_49:\n    /* \"contracts/GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  0x84\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mload(0x40)\n    /* \"contracts/GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  shl(0xe0, 0xf7693c3d)\n    /* \"contracts/GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  dup2\n  mstore\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  dup3\n  add\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0x40\n  0x24\n  dup3\n  add\n  mstore\n  0x1c\n  0x44\n  dup3\n  add\n  mstore\n  0x546f6b656e2073796d626f6c2063616e6e6f7420626520656d70747900000000\n  0x64\n  dup3\n  add\n  mstore\n    /* \"contracts/GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  revert\n    /* \"contracts/GameToken.sol\":3519:3636  if (bytes(name).length == 0) {... */\ntag_47:\n  shl(0xe0, 0xf7693c3d)\n    /* \"contracts/GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  dup2\n  mstore\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  dup3\n  add\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0x40\n  0x24\n  dup3\n  add\n  mstore\n  0x1a\n  0x44\n  dup3\n  add\n  mstore\n  0x546f6b656e206e616d652063616e6e6f7420626520656d707479000000000000\n  0x64\n  dup3\n  add\n  mstore\n    /* \"contracts/GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  0x84\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore(0x00, shl(0xe0, 0x1e4fbdf7))\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0x24\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\ntag_42:\n  swap1\n  pop\n  dup4\n  add\n  mload\n  0x00\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  swap1\n  dup2\n  mstore\n  dup2\n  dup2\n  keccak256\n  swap3\n  pop\n  not(0x1f)\n  dup5\n  and\n  swap1\ntag_61:\n  dup2\n  dup2\n  lt\n  tag_62\n  jumpi\n  pop\n  swap1\n  dup4\n  0x01\n  swap5\n  swap4\n  swap3\n  lt\n  tag_64\n  jumpi\ntag_65:\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\n  jump(tag_44)\ntag_64:\n  dup6\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  jump(tag_65)\ntag_62:\n  swap2\n  swap3\n  0x20\n  0x01\n  dup2\n  swap3\n  dup7\n  dup11\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_61)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n  0x00\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_66\n  jumpi\ntag_67:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_68:\n  dup2\n  dup2\n  lt\n  tag_69\n  jumpi\n  pop\n  jump(tag_39)\ntag_69:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_68)\ntag_66:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_67)\ntag_36:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x22\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\ntag_34:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_35)\ntag_32:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  0x41\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  0x04\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  revert(0x00, 0x24)\ntag_29:\n  swap1\n  pop\n  dup10\n  add\n  mload\n  0x00\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n  0x00\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  swap1\n  dup2\n  mstore\n  dup2\n  dup2\n  keccak256\n  swap3\n  pop\n  not(0x1f)\n  dup5\n  and\n  swap1\ntag_71:\n  dup13\n  dup3\n  dup3\n  lt\n  tag_72\n  jumpi\n  pop\n  pop\n  swap1\n  dup4\n  0x01\n  swap5\n  swap4\n  swap3\n  lt\n  tag_74\n  jumpi\ntag_75:\n  pop\n  pop\n  dup2\n  shl\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  sstore\n  jump(tag_31)\ntag_74:\n  dup12\n  add\n  mload\n  not(0x00)\n  0xf8\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  shl\n  and\n  shr\n  not\n  and\n  swap1\n  sstore\n  0x00\n  dup1\n  jump(tag_75)\ntag_72:\n  0x01\n  dup5\n  swap6\n  0x20\n  swap4\n  swap6\n  dup5\n  swap4\n  add\n  mload\n  dup2\n  sstore\n  add\n  swap5\n  add\n  swap3\n  add\n  jump(tag_71)\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  0x03\n  0x00\n    /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore\n  0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n  0x1f\n  dup4\n  add\n  0x05\n  shr\n  dup2\n  add\n  swap2\n  0x20\n  dup5\n  lt\n  tag_76\n  jumpi\ntag_77:\n  0x1f\n  add\n  0x05\n  shr\n  add\n  swap1\ntag_78:\n  dup2\n  dup2\n  lt\n  tag_79\n  jumpi\n  pop\n  jump(tag_26)\ntag_79:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_78)\ntag_76:\n  swap1\n  swap2\n  pop\n  dup2\n  swap1\n  jump(tag_77)\ntag_21:\n  swap1\n  0x7f\n  and\n  swap1\n  jump(tag_22)\ntag_15:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap2\n  swap1\n  0x1f\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_32\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  dup2\n  0x1f\n  dup3\n  add\n  slt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  mload\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_32\n  jumpi\n  tag_87\n  0x1f\n  dup4\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  tag_1\n  jump\t// in\ntag_87:\n  swap3\n  dup3\n  dup5\n  mstore\n  0x20\n  dup4\n  dup4\n  add\n  add\n  gt\n  tag_15\n  jumpi\n  dup2\n  0x00\n  swap3\n  0x20\n  dup1\n  swap4\n  add\n  dup4\n  dup7\n  add\n  mcopy\n  dup4\n  add\n  add\n  mstore\n  swap1\n  jump\t// out\ntag_3:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_15\n  jumpi\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_16, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_16:\n      0x00\n      swap1\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x06fdde03\n      eq\n      tag_18\n      jumpi\n      pop\n      dup1\n      0x095ea7b3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x5dc96d16\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_32\n      jumpi\n        /* \"contracts/GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      dup1\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x70a08231\n        /* \"contracts/GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      eq\n      tag_34\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      0x715018a6\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x7b2c835f\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xa4f0ecd3\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xad1329d1\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xd7c81b55\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_60\n      jumpi\n      0xf658f32a\n      eq\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_68\n      tag_2\n      jump\t// in\n    tag_68:\n      swap1\n      calldataload(0x24)\n        /* \"contracts/GameToken.sol\":6707:6711  this */\n      swap2\n      address\n        /* \"contracts/GameToken.sol\":6685:6695  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":6685:6712  msg.sender == address(this) */\n      sub\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      tag_69\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_71\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n      dup3\n      mstore\n      dup2\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      tag_73\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      dup3\n      dup6\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap4\n      dup7\n      swap8\n      dup8\n      mstore\n      dup7\n      dup5\n      mstore\n      sub\n      0x40\n      dup7\n      keccak256\n      sstore\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      log3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_73:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      swap4\n      shl(0xe2, 0x391434e3)\n      dup5\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_71:\n      shl(0xe1, 0x4b637e8f)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      dup3\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      dup3\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      dup3\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_69:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x52, 0x13db9b1e481cd95b198b58d85b1b08185b1b1bddd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_66:\n      dup1\n      revert\n    tag_60:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      tag_79\n      tag_2\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_80\n      tag_15\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup4\n      dup1\n      log3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_81:\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      dup3\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      dup3\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_58:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_87\n      tag_2\n      jump\t// in\n    tag_87:\n      calldataload(0x24)\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      dup4\n      sub\n      tag_88\n      jumpi\n      swap1\n      0x40\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap1\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_88:\n      pop\n      dup1\n      revert\n    tag_56:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n      0x20\n        /* \"contracts/GameToken.sol\":851:877  uint256 public totalBurned */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_54:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/GameToken.sol\":734:765  uint256 public immutable gameId */\n      immutable(\"0x1574fd9c456ac2178cca2062e903c8444982ecdf56930f6d4f7e607dd7e8f619\")\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_52:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n      mload(0x40)\n        /* \"contracts/GameToken.sol\":651:683  address public immutable factory */\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_50:\n      pop\n      jumpi(tag_66, callvalue)\n      tag_104\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_105\n      swap4\n      swap3\n      swap4\n      tag_15\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup2\n      and\n      swap1\n        /* \"contracts/GameToken.sol\":8582:8598  to == address(0) */\n      dup2\n      iszero\n        /* \"contracts/GameToken.sol\":8578:8620  if (to == address(0)) revert ZeroAddress() */\n      tag_106\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap3\n      swap4\n      dup5\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/GameToken.sol\":8643:8662  token == address(0) */\n      dup2\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      tag_108\n      jumpi\n        /* \"contracts/GameToken.sol\":8724:8759  payable(to).call{value: amount}(\"\") */\n      pop\n      pop\n      dup3\n      dup1\n      swap3\n      dup2\n      swap3\n      gas\n      call\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      jumpi(tag_110, iszero(returndatasize))\n      returndatasize\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_112\n      jumpi\n      mload(0x40)\n      swap1\n      tag_114\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup4\n      tag_4\n      jump\t// in\n    tag_114:\n      dup2\n      mstore\n      dup3\n      0x20\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_115:\n      iszero\n      tag_116\n      jumpi\n      dup1\n      return\n    tag_116:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x115512081d1c985b9cd9995c8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_112:\n      shl(0xe0, 0x4e487b71)\n      dup4\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup4\n      revert\n    tag_110:\n      jump(tag_115)\n        /* \"contracts/GameToken.sol\":8639:8924  if (token == address(0)) {... */\n    tag_108:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      swap3\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      0x20\n      swap3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n      swap3\n      pop\n      0x44\n      swap2\n      dup4\n      swap2\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_120\n      jumpi\n      tag_122\n      jumpi\n        /* \"contracts/GameToken.sol\":8639:8924  if (token == address(0)) {... */\n      pop\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n    tag_122:\n      0x20\n      dup2\n      jumpi(tag_124, gt(0x20, returndatasize))\n    tag_125:\n      dup2\n      tag_126\n      0x20\n      swap4\n      dup4\n      tag_4\n      jump\t// in\n    tag_126:\n      dup2\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sub\n      slt\n      tag_88\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      sub\n      tag_66\n      jumpi\n      dup1\n      return\n        /* \"contracts/GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n    tag_124:\n      returndatasize\n      swap2\n      pop\n      jump(tag_125)\n    tag_120:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/GameToken.sol\":8578:8620  if (to == address(0)) revert ZeroAddress() */\n    tag_106:\n      shl(0xe0, 0xd92e233d)\n        /* \"contracts/GameToken.sol\":8607:8620  ZeroAddress() */\n      dup5\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":5098:5111  ZeroAddress() */\n      dup5\n        /* \"contracts/GameToken.sol\":8607:8620  ZeroAddress() */\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_48:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      tag_135\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      tag_136\n      tag_2\n      jump\t// in\n    tag_136:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      swap1\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      tag_13\n      jump\t// in\n    tag_135:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n    tag_46:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_141\n      tag_2\n      jump\t// in\n    tag_141:\n      calldataload(0x24)\n      swap1\n        /* \"contracts/GameToken.sol\":2986:2993  factory */\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n        /* \"contracts/GameToken.sol\":2972:2982  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":2972:2993  msg.sender != factory */\n      sub\n        /* \"contracts/GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n      tag_142\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      tag_146\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup7\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      tag_6\n      jump\t// in\n    tag_146:\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n      dup5\n      dup5\n      mstore\n      dup4\n      dup3\n      mstore\n      0x40\n      dup5\n      keccak256\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      log3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_144:\n      shl(0xe0, 0xec442f05)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      dup4\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      dup4\n      swap1\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      dup4\n      revert\n        /* \"contracts/GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n    tag_142:\n      shl(0xe0, 0x5936416f)\n        /* \"contracts/GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      dup4\n      mstore\n        /* \"contracts/GameToken.sol\":2972:2982  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n        /* \"contracts/GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      dup4\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_44:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n      mload(0x40)\n      swap1\n      dup1\n      sload(0x04)\n      swap1\n      dup2\n      0x01\n      shr\n      swap2\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_151\n      jumpi\n    tag_152:\n      0x20\n      dup5\n      lt\n      dup2\n      eq\n      tag_153\n      jumpi\n      dup4\n      dup7\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_155\n      jumpi\n      pop\n      0x01\n      eq\n      tag_157\n      jumpi\n    tag_158:\n      tag_159\n      dup5\n      tag_160\n      dup2\n      dup7\n      sub\n      dup3\n      tag_4\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_1\n      jump\t// in\n    tag_159:\n      sub\n      swap1\n      return\n    tag_157:\n      0x04\n      dup2\n      mstore\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      swap4\n      swap3\n      pop\n      swap1\n    tag_161:\n      dup1\n      dup3\n      lt\n      tag_162\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_160\n      dup3\n      jump(tag_158)\n    tag_162:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_161)\n    tag_155:\n      not(0xff)\n      and\n      0x20\n      dup1\n      dup8\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap3\n      iszero\n      iszero\n      0x05\n      shl\n      dup6\n      add\n      swap1\n      swap3\n      add\n      swap3\n      pop\n      tag_160\n      swap2\n      pop\n      dup4\n      swap1\n      pop\n      jump(tag_158)\n    tag_153:\n      shl(0xe0, 0x4e487b71)\n      dup4\n      mstore\n      mstore(0x04, 0x22)\n      0x24\n      dup4\n      revert\n    tag_151:\n      swap3\n      0x7f\n      and\n      swap3\n      jump(tag_152)\n    tag_42:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_40:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_88\n      jumpi\n      0x20\n        /* \"contracts/GameToken.sol\":8178:8204  BurnStatusChanged(enabled) */\n      0x1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n      tag_174\n      tag_15\n      jump\t// in\n    tag_174:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      not(0xff)\n        /* \"contracts/GameToken.sol\":8142:8163  burnEnabled = enabled */\n      0x08\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      and\n      0xff\n      dup3\n      and\n      or\n        /* \"contracts/GameToken.sol\":8142:8163  burnEnabled = enabled */\n      0x08\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":8178:8204  BurnStatusChanged(enabled) */\n      log1\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n    tag_38:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x40))\n      tag_179\n      tag_2\n      jump\t// in\n    tag_179:\n      calldataload(0x24)\n      swap2\n        /* \"contracts/GameToken.sol\":2986:2993  factory */\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n        /* \"contracts/GameToken.sol\":2972:2982  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":2972:2993  msg.sender != factory */\n      sub\n        /* \"contracts/GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n      tag_180\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0xff\n        /* \"contracts/GameToken.sol\":3098:3109  burnEnabled */\n      0x08\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/GameToken.sol\":3097:3109  !burnEnabled */\n      iszero\n        /* \"contracts/GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      tag_184\n      tag_14\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"contracts/GameToken.sol\":5057:5075  from == address(0) */\n      dup1\n      iszero\n        /* \"contracts/GameToken.sol\":5053:5122  if (from == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"contracts/GameToken.sol\":5135:5146  amount == 0 */\n      dup4\n      iszero\n        /* \"contracts/GameToken.sol\":5131:5192  if (amount == 0) {... */\n      tag_187\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      dup3\n      mstore\n      dup2\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      sload\n        /* \"contracts/GameToken.sol\":5261:5281  userBalance < amount */\n      dup5\n      dup2\n      lt\n        /* \"contracts/GameToken.sol\":5257:5361  if (userBalance < amount) {... */\n      tag_189\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":5459:5481  amount > totalSupply() */\n      dup1\n      dup6\n      gt\n        /* \"contracts/GameToken.sol\":5455:5558  if (amount > totalSupply()) {... */\n      tag_191\n      jumpi\n        /* \"contracts/GameToken.sol\":5713:5715  10 */\n      0x0a\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap1\n      div\n        /* \"contracts/GameToken.sol\":5766:5787  amount > maxBurnPerTx */\n      dup5\n      gt\n        /* \"contracts/GameToken.sol\":5762:5886  if (amount > maxBurnPerTx) {... */\n      tag_193\n      jumpi\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      tag_195\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      tag_6\n      jump\t// in\n    tag_195:\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/GameToken.sol\":6018:6022  this */\n      address\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      extcodesize\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe1, 0x7b2c7995)\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n      and\n      0x04\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      dup3\n      dup1\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n      0x44\n      dup2\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      dup4\n        /* \"contracts/GameToken.sol\":6018:6022  this */\n      address\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      gas\n      call\n      swap2\n      dup3\n      tag_199\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_200:\n      pop\n      pop\n        /* \"contracts/GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n      tag_201\n      jumpi\n      pop\n      pop\n      tag_203\n      tag_8\n      jump\t// in\n    tag_203:\n      0x08c379a0\n      eq\n      tag_204\n      jumpi\n    tag_205:\n        /* \"contracts/GameToken.sol\":6398:6419  totalBurned -= amount */\n      tag_206\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":6398:6419  totalBurned -= amount */\n      tag_10\n      jump\t// in\n    tag_206:\n      pop\n        /* \"contracts/GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      tag_207\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"contracts/GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      swap3\n      dup4\n      swap3\n      shl(0xe3, 0x1e764bc5)\n        /* \"contracts/GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      dup5\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      dup5\n      add\n      tag_12\n      jump\t// in\n    tag_207:\n      sub\n      swap1\n      revert\n        /* \"contracts/GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n    tag_204:\n        /* \"contracts/GameToken.sol\":6120:6321  catch Error(string memory reason) {... */\n      tag_208\n      tag_9\n      jump\t// in\n    tag_208:\n      dup1\n      tag_209\n      jumpi\n        /* \"contracts/GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n      pop\n      jump(tag_205)\n        /* \"contracts/GameToken.sol\":6120:6321  catch Error(string memory reason) {... */\n    tag_209:\n        /* \"contracts/GameToken.sol\":6266:6310  BurningOperationFailed(from, amount, reason) */\n      tag_207\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap1\n        /* \"contracts/GameToken.sol\":6224:6245  totalBurned -= amount */\n      tag_212\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":6224:6245  totalBurned -= amount */\n      tag_10\n      jump\t// in\n    tag_212:\n      pop\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n        /* \"contracts/GameToken.sol\":6266:6310  BurningOperationFailed(from, amount, reason) */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap4\n      dup5\n      swap4\n      0x04\n        /* \"contracts/GameToken.sol\":6266:6310  BurningOperationFailed(from, amount, reason) */\n      dup6\n      add\n      tag_11\n      jump\t// in\n        /* \"contracts/GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n    tag_201:\n        /* \"contracts/GameToken.sol\":6069:6108  TokensBurned(from, amount, totalBurned) */\n      0xccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x40\n      dup6\n        /* \"contracts/GameToken.sol\":5974:5995  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/GameToken.sol\":6069:6108  TokensBurned(from, amount, totalBurned) */\n      log2\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      0x06\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n      dup1\n      return\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n    tag_199:\n      dup2\n      tag_213\n      swap2\n      tag_4\n      jump\t// in\n    tag_213:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      tag_214\n      jumpi\n        /* \"contracts/GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      dup3\n      0x00\n      jump(tag_200)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_214:\n      dup3\n      dup1\n      revert\n        /* \"contracts/GameToken.sol\":5762:5886  if (amount > maxBurnPerTx) {... */\n    tag_193:\n        /* \"contracts/GameToken.sol\":5810:5875  InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\") */\n      0xa4\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n      mload(0x40)\n        /* \"contracts/GameToken.sol\":5810:5875  InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\") */\n      swap1\n      shl(0xe2, 0x33be48f5)\n      dup3\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":5810:5875  InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\") */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x40\n      0x24\n      dup3\n      add\n      mstore\n      0x24\n      0x44\n      dup3\n      add\n      mstore\n      0x45786365656473206d6178696d756d206275726e20706572207472616e736163\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xe1, 0x3a34b7b7)\n      0x84\n      dup3\n      add\n      mstore\n        /* \"contracts/GameToken.sol\":5810:5875  InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\") */\n      revert\n        /* \"contracts/GameToken.sol\":5455:5558  if (amount > totalSupply()) {... */\n    tag_191:\n      shl(0xe3, 0x1ee970cd)\n        /* \"contracts/GameToken.sol\":5504:5547  ExcessiveBurnRequest(amount, totalSupply()) */\n      dup4\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      dup6\n      swap1\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"contracts/GameToken.sol\":5504:5547  ExcessiveBurnRequest(amount, totalSupply()) */\n      dup3\n      revert\n        /* \"contracts/GameToken.sol\":5257:5361  if (userBalance < amount) {... */\n    tag_189:\n        /* \"contracts/GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      dup5\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x64\n        /* \"contracts/GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      swap4\n      swap3\n      shl(0xe0, 0xdb42144d)\n        /* \"contracts/GameToken.sol\":5304:5350  InsufficientBalance(from, amount, userBalance) */\n      dup5\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n        /* \"contracts/GameToken.sol\":5304:5350  InsufficientBalance(from, amount, userBalance) */\n      revert\n        /* \"contracts/GameToken.sol\":5131:5192  if (amount == 0) {... */\n    tag_187:\n      shl(0xe0, 0x1f2a2005)\n        /* \"contracts/GameToken.sol\":5169:5181  ZeroAmount() */\n      dup3\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":7054:7066  ZeroAmount() */\n      dup3\n        /* \"contracts/GameToken.sol\":5169:5181  ZeroAmount() */\n      revert\n        /* \"contracts/GameToken.sol\":5053:5122  if (from == address(0)) {... */\n    tag_185:\n      shl(0xe0, 0xd92e233d)\n        /* \"contracts/GameToken.sol\":5098:5111  ZeroAddress() */\n      dup3\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":5098:5111  ZeroAddress() */\n      dup3\n      revert\n        /* \"contracts/GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n    tag_182:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x0eb8953f)\n        /* \"contracts/GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      0x04\n        /* \"contracts/GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x109d5c9b9a5b99c81a5cc8191a5cd8589b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n        /* \"contracts/GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      revert\n        /* \"contracts/GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n    tag_180:\n      shl(0xe0, 0x5936416f)\n        /* \"contracts/GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":2972:2982  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      swap1\n        /* \"contracts/GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_36:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_221\n      tag_15\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n      return\n    tag_34:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      0x40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_226\n      tag_2\n      jump\t// in\n    tag_226:\n      and\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      keccak256\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_32:\n      pop\n      jumpi(tag_66, callvalue)\n      jumpi(tag_66, slt(add(not(0x03), calldatasize), 0x20))\n      tag_231\n      tag_2\n      jump\t// in\n    tag_231:\n      pop\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      0x04\n        /* \"contracts/GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x25\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696e742064697361626c65643a2075736520666163746f727920746f206c6f\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xdc, 0x0636b20585)\n      0x64\n      dup3\n      add\n      mstore\n        /* \"contracts/GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      0x84\n      swap1\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_30:\n      pop\n      jumpi(tag_66, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_66\n      jumpi\n      0x20\n      0xff\n        /* \"contracts/GameToken.sol\":919:949  bool public burnEnabled = true */\n      0x08\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_28:\n      pop\n      jumpi(tag_248, callvalue)\n      jumpi(tag_248, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      0xff\n        /* \"contracts/GameToken.sol\":3098:3109  burnEnabled */\n      0x08\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      and\n        /* \"contracts/GameToken.sol\":3097:3109  !burnEnabled */\n      iszero\n        /* \"contracts/GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2466:2569  modifier nonReentrant() {... */\n      tag_242\n      tag_14\n      jump\t// in\n    tag_242:\n        /* \"contracts/GameToken.sol\":7020:7031  amount == 0 */\n      dup2\n      iszero\n        /* \"contracts/GameToken.sol\":7016:7077  if (amount == 0) {... */\n      tag_243\n      jumpi\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/GameToken.sol\":7152:7172  userBalance < amount */\n      dup3\n      dup2\n      lt\n        /* \"contracts/GameToken.sol\":7148:7258  if (userBalance < amount) {... */\n      tag_245\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      pop\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      tag_247\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      tag_6\n      jump\t// in\n    tag_247:\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n        /* \"contracts/GameToken.sol\":7368:7372  this */\n      address\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      extcodesize\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe1, 0x7b2c7995)\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      dup3\n      add\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      0x00\n      dup2\n      0x44\n      dup2\n      dup4\n        /* \"contracts/GameToken.sol\":7368:7372  this */\n      address\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      gas\n      call\n      swap1\n      dup2\n      tag_251\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_252:\n      pop\n        /* \"contracts/GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n      tag_253\n      jumpi\n      pop\n      tag_255\n      tag_8\n      jump\t// in\n    tag_255:\n      0x08c379a0\n      eq\n      tag_256\n      jumpi\n    tag_257:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup1\n        /* \"contracts/GameToken.sol\":7766:7787  totalBurned -= amount */\n      tag_258\n        /* \"contracts/GameToken.sol\":7808:7872  BurningOperationFailed(msg.sender, amount, \"Unknown burn error\") */\n      tag_207\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap3\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":7766:7787  totalBurned -= amount */\n      tag_10\n      jump\t// in\n    tag_258:\n      pop\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n        /* \"contracts/GameToken.sol\":7808:7872  BurningOperationFailed(msg.sender, amount, \"Unknown burn error\") */\n      dup2\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap2\n      dup3\n      swap2\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":7808:7872  BurningOperationFailed(msg.sender, amount, \"Unknown burn error\") */\n      dup5\n      add\n      tag_12\n      jump\t// in\n        /* \"contracts/GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n    tag_256:\n        /* \"contracts/GameToken.sol\":7482:7689  catch Error(string memory reason) {... */\n      tag_260\n      tag_9\n      jump\t// in\n    tag_260:\n      swap1\n      dup2\n      tag_261\n      jumpi\n        /* \"contracts/GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n      swap1\n      pop\n      jump(tag_257)\n        /* \"contracts/GameToken.sol\":7482:7689  catch Error(string memory reason) {... */\n    tag_261:\n        /* \"contracts/GameToken.sol\":7586:7607  totalBurned -= amount */\n      tag_263\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup2\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"contracts/GameToken.sol\":7586:7607  totalBurned -= amount */\n      tag_10\n      jump\t// in\n    tag_263:\n      pop\n        /* \"contracts/GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      tag_207\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mload(0x40)\n        /* \"contracts/GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      swap3\n      dup4\n      swap3\n      shl(0xe3, 0x1e764bc5)\n      dup5\n      mstore\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      dup6\n      add\n      tag_11\n      jump\t// in\n        /* \"contracts/GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n    tag_253:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap1\n        /* \"contracts/GameToken.sol\":7324:7345  totalBurned += amount */\n      0x07\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/GameToken.sol\":7425:7470  TokensBurned(msg.sender, amount, totalBurned) */\n      0xccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x40\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":7425:7470  TokensBurned(msg.sender, amount, totalBurned) */\n      swap3\n      log2\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      0x06\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n      dup1\n      return\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n    tag_251:\n      tag_265\n      swap2\n      swap3\n      pop\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      swap1\n      tag_4\n      jump\t// in\n    tag_265:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      swap1\n      0x00\n      jump(tag_252)\n    tag_248:\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n      dup1\n      revert\n        /* \"contracts/GameToken.sol\":7148:7258  if (userBalance < amount) {... */\n    tag_245:\n        /* \"contracts/GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      dup3\n      shl(0xe0, 0xdb42144d)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      mstore\n        /* \"contracts/GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"contracts/GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      revert\n        /* \"contracts/GameToken.sol\":7016:7077  if (amount == 0) {... */\n    tag_243:\n        /* \"contracts/GameToken.sol\":7054:7066  ZeroAmount() */\n      shl(0xe0, 0x1f2a2005)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"contracts/GameToken.sol\":7054:7066  ZeroAmount() */\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      0x00\n        /* \"contracts/GameToken.sol\":7054:7066  ZeroAmount() */\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_26:\n      jumpi(tag_248, callvalue)\n      jumpi(tag_248, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0xff\n        /* \"contracts/GameToken.sol\":4620:4629  _decimals */\n      immutable(\"0x45e4122ae096aaf6e2aaec946f0a01ae525edda3a7e2c6a387bb8ca107829b76\")\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      dup2\n      mstore\n      return\n    tag_24:\n      jumpi(tag_248, callvalue)\n      tag_273\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      swap4\n      swap2\n      swap3\n      swap2\n      swap1\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      tag_274\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      pop\n      tag_135\n      swap4\n      pop\n      tag_13\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      dup4\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      tag_135\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap5\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      dup4\n      keccak256(0x00, 0x40)\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      dup5\n      jump(tag_275)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      shl(0xe1, 0x4a1406b1)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      shl(0xe0, 0xe602df05)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mstore\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      dup4\n      swap1\n      shl(0xe1, 0x7dc7a0d9)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x04\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      revert\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_22:\n      jumpi(tag_248, callvalue)\n      jumpi(tag_248, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      0x02\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_20:\n      jumpi(tag_248, callvalue)\n      jumpi(tag_248, slt(add(not(0x03), calldatasize), 0x40))\n      tag_291\n      tag_2\n      jump\t// in\n    tag_291:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      swap1\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_279\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n      mstore\n      mstore(0x20, 0x01)\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      dup1\n      keccak256(0x00, 0x40)\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      swap3\n      log3\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n    tag_18:\n      jumpi(tag_248, callvalue)\n      jumpi(tag_248, slt(add(not(0x03), calldatasize), 0x00))\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      dup1\n      0x01\n      shr\n      swap1\n      0x01\n      dup2\n      and\n      dup1\n      iszero\n      tag_300\n      jumpi\n    tag_301:\n      0x20\n      dup4\n      lt\n      dup2\n      eq\n      tag_302\n      jumpi\n      dup3\n      dup6\n      mstore\n      swap1\n      dup2\n      iszero\n      tag_304\n      jumpi\n      pop\n      0x01\n      eq\n      tag_306\n      jumpi\n    tag_307:\n      tag_159\n      dup4\n      tag_160\n      dup2\n      dup6\n      sub\n      dup3\n      tag_4\n      jump\t// in\n    tag_306:\n      swap2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x00\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      swap2\n      0x00\n      swap1\n    tag_310:\n      dup1\n      dup3\n      lt\n      tag_311\n      jumpi\n      pop\n      swap1\n      swap2\n      pop\n      dup2\n      add\n      0x20\n      add\n      tag_160\n      jump(tag_307)\n    tag_311:\n      swap2\n      swap3\n      0x01\n      dup2\n      0x20\n      swap3\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap3\n      swap2\n      jump(tag_310)\n    tag_304:\n      not(0xff)\n      and\n      0x20\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      iszero\n      iszero\n      0x05\n      shl\n      dup5\n      add\n      swap1\n      swap2\n      add\n      swap2\n      pop\n      tag_160\n      swap1\n      pop\n      jump(tag_307)\n    tag_302:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_300:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_301)\n    tag_1:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_2:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_248\n      jumpi\n      jump\t// out\n    tag_3:\n      0x60\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_248\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_248\n      jumpi\n      swap1\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_248\n      jumpi\n      swap1\n      calldataload(0x44)\n      swap1\n      jump\t// out\n    tag_4:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_321\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_321:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_6:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_323\n      jumpi\n      jump\t// out\n    tag_323:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_8:\n      0x00\n      swap1\n      jumpi(tag_325, gt(returndatasize, 0x03))\n      jump\t// out\n    tag_325:\n      swap1\n      pop\n      0x04\n      0x00\n      dup1\n      returndatacopy\n      shr(0xe0, mload(0x00))\n      swap1\n      jump\t// out\n    tag_9:\n      0x00\n      jumpi(tag_335, lt(returndatasize, 0x44))\n      mload(0x40)\n      add(not(0x03), returndatasize)\n      0x04\n      dup3\n      returndatacopy\n      dup1\n      mload\n      swap2\n      returndatasize\n      0x24\n      dup5\n      add\n      gt\n      0xffffffffffffffff\n      dup5\n      gt\n      or\n      tag_329\n      jumpi\n      dup3\n      dup3\n      add\n      swap3\n      dup4\n      mload\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_333\n      jumpi\n      returndatasize\n      dup5\n      add\n      not(0x03)\n      add\n      dup6\n      dup5\n      add\n      0x20\n      add\n      gt\n      tag_333\n      jumpi\n      pop\n      tag_335\n      swap3\n      swap2\n      add\n      0x20\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_335:\n      swap1\n      jump\t// out\n    tag_333:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_329:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_323\n      jumpi\n      jump\t// out\n    tag_11:\n      tag_335\n      swap4\n      swap3\n      0x60\n      swap3\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      0x40\n      dup3\n      add\n      mstore\n      add\n      swap1\n      tag_1\n      jump\t// in\n    tag_12:\n      swap1\n      swap2\n      0xa0\n      swap3\n      0x01\n      dup1\n      dup6\n      shl\n      sub\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x60\n      0x40\n      dup3\n      add\n      mstore\n      0x12\n      0x60\n      dup3\n      add\n      mstore\n      shl(0x71, 0x2ab735b737bbb710313ab9371032b93937b9)\n      0x80\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_13:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_339\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      and\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      tag_343\n      jumpi\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      swap3\n      0x20\n      swap3\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup5\n      mstore\n      sub\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      keccak256\n      sstore\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      dup3\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      keccak256\n      dup2\n      dup2\n      sload\n      add\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      dup3\n      shl(0xe2, 0x391434e3)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mstore\n      0x04\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      mstore\n      0x44\n      mstore\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      shl(0xe0, 0xec442f05)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      shl(0xe1, 0x4b637e8f)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x06\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      0x06\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mstore(0x00, shl(0xe0, 0x3ee5aeb5))\n      revert(0x00, 0x04)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore(0x00, shl(0xe0, 0x118cdaa7))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"contracts/GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n\n    auxdata: 0xa2646970667358221220bcb1bcc83d5fff4c232431eace352c5802fe9028b3fd3dfdbfa19d49dea0f12464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60e0604052346105bb5761190180380380610019816105bf565b92833981019060e0818303126105bb5780516001600160401b0381116105bb57826100459183016105e4565b602082015190926001600160401b0382116105bb576100659183016105e4565b60408201519160ff8316928381036105bb5760608201519361008960808401610635565b9360c061009860a08601610635565b94015187519095906001600160401b0381116104c957600354600181811c911680156105b1575b60208210146104ab57601f811161054e575b50806020601f82116001146104e8575f916104dd575b508160011b915f199060031b1c1916176003555b81516001600160401b0381116104c957600454600181811c911680156104bf575b60208210146104ab57601f8111610448575b50806020601f82116001146103e4575f916103d9575b508160011b915f199060031b1c1916176004555b6001600160a01b03169687156103c657600580546001600160a01b031981168a17909155604051919089906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600655600160ff196008541617600855511561037d57505115610332576001600160a01b0383169081156103235760128111610308575084156102f95785146102a75760805260a05260c052600254908082018092116102935760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a361010061ff001960085416176008556040516112b7908161064a823960805181610d30015260a0518181816103720152818161056301526107d4015260c051816103390152f35b634e487b7160e01b5f52601160045260245ffd5b60405163313b9aa160e21b8152602060048201526024808201527f4f776e657220616e6420666163746f72792063616e6e6f74206265207468652060448201526373616d6560e01b6064820152608490fd5b631f2a200560e01b5f5260045ffd5b6346f4384b60e01b5f526004525f602452601260445260645ffd5b63d92e233d60e01b5f5260045ffd5b608460405163f7693c3d60e01b81525f600482015260406024820152601c60448201527f546f6b656e2073796d626f6c2063616e6e6f7420626520656d707479000000006064820152fd5b63f7693c3d60e01b81525f600482015260406024820152601a60448201527f546f6b656e206e616d652063616e6e6f7420626520656d7074790000000000006064820152608490fd5b631e4fbdf760e01b5f525f60045260245ffd5b90508301515f610144565b60045f9081528181209250601f198416905b81811061043057509083600194939210610418575b5050811b01600455610158565b8501515f1960f88460031b161c191690555f8061040b565b9192602060018192868a0151815501940192016103f6565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106104a1575b601f0160051c01905b818110610496575061012e565b5f8155600101610489565b9091508190610480565b634e487b7160e01b5f52602260045260245ffd5b90607f169061011c565b634e487b7160e01b5f52604160045260245ffd5b90508901515f6100e7565b60035f9081528181209250601f198416905b8c828210610536575050908360019493921061051e575b5050811b016003556100fb565b8b01515f1960f88460031b161c191690555f80610511565b600184956020939584930151815501940192016104fa565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106105a7575b601f0160051c01905b81811061059c57506100d1565b5f815560010161058f565b9091508190610586565b90607f16906100bf565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176104c957604052565b81601f820112156105bb578051906001600160401b0382116104c957610613601f8301601f19166020016105bf565b92828452602083830101116105bb57815f9260208093018386015e8301015290565b51906001600160a01b03821682036105bb5756fe6080806040526004361015610012575f80fd5b5f905f3560e01c90816306fdde0314610ebe57508063095ea7b314610e3c57806318160ddd14610e1f57806323b872dd14610d54578063313ce56714610d1757806342966c6814610b925780635dc96d1614610b6f5780636a62784214610b0157806370a0823114610ac9578063715018a614610a6c57806379cc6790146107b45780637b2c835f146107505780638da5cb5b1461072757806395d89b4114610616578063a4f0ecd314610543578063a9059cbb14610511578063ad1329d1146103a1578063c45a01551461035c578063d7c81b5514610321578063d89135cd14610303578063dd62ed3e1461029f578063f2fde38b146102165763f658f32a1461011b575f80fd5b3461021357604036600319011261021357610134610fd3565b90602435913033036101d5576001600160a01b03169182156101c1578282528160205260408220548181106101a95760208285937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93869787528684520360408620558060025403600255604051908152a380f35b60649363391434e360e21b8452600452602452604452fd5b634b637e8f60e11b82526004829052602482fd5b60405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b198b58d85b1b08185b1b1bddd95960521b6044820152606490fd5b80fd5b503461021357602036600319011261021357610230610fd3565b61023861125a565b6001600160a01b0316801561028b57600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5034610213576040366003190112610213576102b9610fd3565b60243591906001600160a01b03831683036102ff579060409160018060a01b031681526001602052209060018060a01b03165f52602052602060405f2054604051908152f35b5080fd5b50346102135780600319360112610213576020600754604051908152f35b503461021357806003193601126102135760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346102135780600319360112610213576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610213576103b036610fe9565b906103bc93929361125a565b6001600160a01b03811690811561050257929384936001600160a01b03909116908161047f57505082809281925af13d1561047a573d67ffffffffffffffff81116104665760405190610419601f8201601f191660200183611023565b81528260203d92013e5b1561042b5780f35b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b634e487b7160e01b83526041600452602483fd5b610423565b60405163a9059cbb60e01b81526001600160a01b039190911660048201526024810193909352919260209284925060449183915af180156104f7576104c2575080f35b6020813d6020116104ef575b816104db60209383611023565b810103126102ff5751801515036102135780f35b3d91506104ce565b6040513d84823e3d90fd5b63d92e233d60e01b8452600484fd5b50346102135760403660031901126102135761053861052e610fd3565b602435903361117d565b602060405160018152f35b50346102135760403660031901126102135761055d610fd3565b602435907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610603576001600160a01b03169081156105ef577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826105d28694600254611059565b60025584845283825260408420818154019055604051908152a380f35b63ec442f0560e01b83526004839052602483fd5b635936416f60e01b835233600452602483fd5b50346102135780600319360112610213576040519080600454908160011c9160018116801561071d575b602084108114610709578386529081156106e25750600114610685575b6106818461066d81860382611023565b604051918291602083526020830190610faf565b0390f35b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106106c85750909150810160200161066d8261065d565b9192600181602092548385880101520191019092916106af565b60ff191660208087019190915292151560051b8501909201925061066d915083905061065d565b634e487b7160e01b83526022600452602483fd5b92607f1692610640565b50346102135780600319360112610213576005546040516001600160a01b039091168152602090f35b5034610213576020366003190112610213576004358015158091036102ff5760207f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd9161079b61125a565b60ff196008541660ff821617600855604051908152a180f35b5034610213576040366003190112610213576107ce610fd3565b602435917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610a595760ff6008541615610a1d5761081561123a565b6001600160a01b0382168015610a0e5783156109ff578082528160205260408220548481106109e557506002548085116109ce57600a900484116109755761085f84600754611059565b600755303b156102ff57604051637b2c799560e11b81526001600160a01b03841660048201526024810185905282808260448183305af1918261095c575b50506109225750506108ad61107a565b6308c379a0146108e5575b6108c48260075461110c565b506108e1604051928392631e764bc560e31b84526004840161113d565b0390fd5b6108ed611095565b806108f857506108b8565b6108e1906109088460075461110c565b50604051631e764bc560e31b815293849360048501611119565b7fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0060408560075482519182526020820152a2600160065580f35b8161096691611023565b61097157825f61089d565b8280fd5b60a484604051906333be48f560e21b8252600482015260406024820152602460448201527f45786365656473206d6178696d756d206275726e20706572207472616e7361636064820152633a34b7b760e11b6084820152fd5b631ee970cd60e31b83526004859052602452604482fd5b846064939263db42144d60e01b8452600452602452604452fd5b631f2a200560e01b8252600482fd5b63d92e233d60e01b8252600482fd5b604051630eb8953f60e01b8152602060048201526013602482015272109d5c9b9a5b99c81a5cc8191a5cd8589b1959606a1b6044820152606490fd5b635936416f60e01b815233600452602490fd5b5034610213578060031936011261021357610a8561125a565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610213576020366003190112610213576020906040906001600160a01b03610af1610fd3565b1681528083522054604051908152f35b503461021357602036600319011261021357610b1b610fd3565b5060405162461bcd60e51b815260206004820152602560248201527f4d696e742064697361626c65643a2075736520666163746f727920746f206c6f6044820152640636b2058560dc1b6064820152608490fd5b5034610213578060031936011261021357602060ff600854166040519015158152f35b5034610cea576020366003190112610cea576004359060ff6008541615610a1d57610bbb61123a565b8115610d0857335f525f60205260405f2054828110610cee5750610be182600754611059565b600755303b15610cea57604051637b2c799560e11b8152336004820152602481018390525f8160448183305af19081610cd5575b50610c985750610c2361107a565b6308c379a014610c59575b80610c3e6108e19260075461110c565b50604051631e764bc560e31b8152918291336004840161113d565b610c61611095565b9081610c6e579050610c2e565b610c7a8160075461110c565b506108e1604051928392631e764bc560e31b84523360048501611119565b9060075460405191825260208201527fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0060403392a2600160065580f35b610ce29192505f90611023565b5f905f610c15565b5f80fd5b8263db42144d60e01b5f523360045260245260445260645ffd5b631f2a200560e01b5f5260045ffd5b34610cea575f366003190112610cea57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610cea57610d6236610fe9565b6001600160a01b0383165f8181526001602090815260408083203384529091529020549093919291905f198110610d9f575b50610538935061117d565b838110610e04578415610df1573315610dde57610538945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610d94565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b34610cea575f366003190112610cea576020600254604051908152f35b34610cea576040366003190112610cea57610e55610fd3565b602435903315610df1576001600160a01b0316908115610dde57335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610cea575f366003190112610cea575f6003548060011c90600181168015610fa5575b602083108114610f9157828552908115610f6d5750600114610f0f575b6106818361066d81850382611023565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b808210610f535750909150810160200161066d610eff565b919260018160209254838588010152019101909291610f3b565b60ff191660208086019190915291151560051b8401909101915061066d9050610eff565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610ee2565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b0382168203610cea57565b6060906003190112610cea576004356001600160a01b0381168103610cea57906024356001600160a01b0381168103610cea579060443590565b90601f8019910116810190811067ffffffffffffffff82111761104557604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161106657565b634e487b7160e01b5f52601160045260245ffd5b5f9060033d1161108657565b905060045f803e5f5160e01c90565b5f60443d106110fb576040513d600319016004823e8051913d602484011167ffffffffffffffff841117611106578282019283519167ffffffffffffffff83116110fe573d840160031901858401602001116110fe57506110fb92910160200190611023565b90565b949350505050565b92915050565b9190820391821161106657565b6110fb939260609260018060a01b0316825260208201528160408201520190610faf565b909160a092600180851b0316825260208201526060604082015260126060820152712ab735b737bbb710313ab9371032b93937b960711b60808201520190565b6001600160a01b0316908115611227576001600160a01b031691821561121457815f525f60205260405f20548181106111fb57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffd5b60026006541461124b576002600655565b633ee5aeb560e01b5f5260045ffd5b6005546001600160a01b0316330361126e57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220bcb1bcc83d5fff4c232431eace352c5802fe9028b3fd3dfdbfa19d49dea0f12464736f6c634300081a0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5BB JUMPI PUSH2 0x1901 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x5BF JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x5BB JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5BB JUMPI DUP3 PUSH2 0x45 SWAP2 DUP4 ADD PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5BB JUMPI PUSH2 0x65 SWAP2 DUP4 ADD PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP3 DUP4 DUP2 SUB PUSH2 0x5BB JUMPI PUSH1 0x60 DUP3 ADD MLOAD SWAP4 PUSH2 0x89 PUSH1 0x80 DUP5 ADD PUSH2 0x635 JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x98 PUSH1 0xA0 DUP7 ADD PUSH2 0x635 JUMP JUMPDEST SWAP5 ADD MLOAD DUP8 MLOAD SWAP1 SWAP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4C9 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x5B1 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x4AB JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x54E JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x4E8 JUMPI PUSH0 SWAP2 PUSH2 0x4DD JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4C9 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x4BF JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x4AB JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x448 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x3E4 JUMPI PUSH0 SWAP2 PUSH2 0x3D9 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP8 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP11 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE MLOAD ISZERO PUSH2 0x37D JUMPI POP MLOAD ISZERO PUSH2 0x332 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x323 JUMPI PUSH1 0x12 DUP2 GT PUSH2 0x308 JUMPI POP DUP5 ISZERO PUSH2 0x2F9 JUMPI DUP6 EQ PUSH2 0x2A7 JUMPI PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x2 SLOAD SWAP1 DUP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x293 JUMPI PUSH1 0x20 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH0 SWAP4 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH2 0x12B7 SWAP1 DUP2 PUSH2 0x64A DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xD30 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x372 ADD MSTORE DUP2 DUP2 PUSH2 0x563 ADD MSTORE PUSH2 0x7D4 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x339 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313B9AA1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F776E657220616E6420666163746F72792063616E6E6F742062652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x73616D65 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH4 0x46F4384B PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x12 PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH4 0xF7693C3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F6B656E2073796D626F6C2063616E6E6F7420626520656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0xF7693C3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E616D652063616E6E6F7420626520656D707479000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP4 ADD MLOAD PUSH0 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE DUP2 DUP2 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x430 JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x418 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x158 JUMP JUMPDEST DUP6 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x40B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x4A1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x496 JUMPI POP PUSH2 0x12E JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x489 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x11C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 POP DUP10 ADD MLOAD PUSH0 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE DUP2 DUP2 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND SWAP1 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x536 JUMPI POP POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH2 0x51E JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xFB JUMP JUMPDEST DUP12 ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 PUSH1 0x20 SWAP4 SWAP6 DUP5 SWAP4 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x5A7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x59C JUMPI POP PUSH2 0xD1 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x58F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x586 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xBF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x4C9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5BB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4C9 JUMPI PUSH2 0x613 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x5BB JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5BB JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xEBE JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE1F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD54 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD17 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xB92 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xB01 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xA4F0ECD3 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x216 JUMPI PUSH4 0xF658F32A EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x134 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 ADDRESS CALLER SUB PUSH2 0x1D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1C1 JUMPI DUP3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x1A9 JUMPI PUSH1 0x20 DUP3 DUP6 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 DUP7 SWAP8 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x230 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x2B9 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2FF JUMPI SWAP1 PUSH1 0x40 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH2 0x3B0 CALLDATASIZE PUSH2 0xFE9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP4 SWAP3 SWAP4 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x502 JUMPI SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 PUSH2 0x47F JUMPI POP POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x419 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x1023 JUMP JUMPDEST DUP2 MSTORE DUP3 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x42B JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 POP PUSH1 0x44 SWAP2 DUP4 SWAP2 GAS CALL DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4C2 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4EF JUMPI JUMPDEST DUP2 PUSH2 0x4DB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1023 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2FF JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x213 JUMPI DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x538 PUSH2 0x52E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x117D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x55D PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x603 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x5EF JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x5D2 DUP7 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x5936416F PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x709 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6E2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x685 JUMPI JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x66D DUP2 DUP7 SUB DUP3 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xFAF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x6C8 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x66D DUP3 PUSH2 0x65D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x66D SWAP2 POP DUP4 SWAP1 POP PUSH2 0x65D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x640 JUMP JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2FF JUMPI PUSH1 0x20 PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH2 0x79B PUSH2 0x125A JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x7CE PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xA59 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0xA1D JUMPI PUSH2 0x815 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 ISZERO PUSH2 0xA0E JUMPI DUP4 ISZERO PUSH2 0x9FF JUMPI DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP5 DUP2 LT PUSH2 0x9E5 JUMPI POP PUSH1 0x2 SLOAD DUP1 DUP6 GT PUSH2 0x9CE JUMPI PUSH1 0xA SWAP1 DIV DUP5 GT PUSH2 0x975 JUMPI PUSH2 0x85F DUP5 PUSH1 0x7 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x7 SSTORE ADDRESS EXTCODESIZE ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 DUP1 DUP3 PUSH1 0x44 DUP2 DUP4 ADDRESS GAS CALL SWAP2 DUP3 PUSH2 0x95C JUMPI JUMPDEST POP POP PUSH2 0x922 JUMPI POP POP PUSH2 0x8AD PUSH2 0x107A JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8E5 JUMPI JUMPDEST PUSH2 0x8C4 DUP3 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x113D JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x8ED PUSH2 0x1095 JUMP JUMPDEST DUP1 PUSH2 0x8F8 JUMPI POP PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x8E1 SWAP1 PUSH2 0x908 DUP5 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 PUSH1 0x40 DUP6 PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x966 SWAP2 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x971 JUMPI DUP3 PUSH0 PUSH2 0x89D JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0xA4 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x33BE48F5 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206275726E20706572207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x1EE970CD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 DUP3 REVERT JUMPDEST DUP5 PUSH1 0x64 SWAP4 SWAP3 PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH2 0xA85 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAF1 PUSH2 0xFD3 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0xB1B PUSH2 0xFD3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E742064697361626C65643A2075736520666163746F727920746F206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B20585 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xCEA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0xA1D JUMPI PUSH2 0xBBB PUSH2 0x123A JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD08 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0xCEE JUMPI POP PUSH2 0xBE1 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x7 SSTORE ADDRESS EXTCODESIZE ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP2 PUSH1 0x44 DUP2 DUP4 ADDRESS GAS CALL SWAP1 DUP2 PUSH2 0xCD5 JUMPI JUMPDEST POP PUSH2 0xC98 JUMPI POP PUSH2 0xC23 PUSH2 0x107A JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC59 JUMPI JUMPDEST DUP1 PUSH2 0xC3E PUSH2 0x8E1 SWAP3 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 CALLER PUSH1 0x4 DUP5 ADD PUSH2 0x113D JUMP JUMPDEST PUSH2 0xC61 PUSH2 0x1095 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xC6E JUMPI SWAP1 POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xCE2 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0xC15 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH4 0xDB42144D PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH2 0xD62 CALLDATASIZE PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH0 NOT DUP2 LT PUSH2 0xD9F JUMPI JUMPDEST POP PUSH2 0x538 SWAP4 POP PUSH2 0x117D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xE04 JUMPI DUP5 ISZERO PUSH2 0xDF1 JUMPI CALLER ISZERO PUSH2 0xDDE JUMPI PUSH2 0x538 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xD94 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH2 0xE55 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xDDE JUMPI CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xFA5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xF91 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xF6D JUMPI POP PUSH1 0x1 EQ PUSH2 0xF0F JUMPI JUMPDEST PUSH2 0x681 DUP4 PUSH2 0x66D DUP2 DUP6 SUB DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xF53 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x66D PUSH2 0xEFF JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x66D SWAP1 POP PUSH2 0xEFF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xEE2 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCEA JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xCEA JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xCEA JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1045 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1066 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1086 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY PUSH0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x1106 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10FE JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0x10FE JUMPI POP PUSH2 0x10FB SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x1023 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1066 JUMPI JUMP JUMPDEST PUSH2 0x10FB SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xFAF JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xA0 SWAP3 PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x60 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB710313AB9371032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1214 JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x11FB JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x124B JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x126E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB1 0xBC 0xC8 RETURNDATASIZE PUSH0 SELFDESTRUCT 0x4C 0x23 0x24 BALANCE 0xEA 0xCE CALLDATALOAD 0x2C PC MUL INVALID SWAP1 0x28 0xB3 REVERT RETURNDATASIZE REVERT 0xBF LOG1 SWAP14 BLOBHASH 0xDE LOG0 CALL 0x24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "483:9107:7:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;1648:13:2;483:9107:7;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;;1648:13:2;483:9107:7;;;;;1648:13:2;483:9107:7;;;;-1:-1:-1;;;;;483:9107:7;;;;1671:17:2;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;;1648:13:2;483:9107:7;;;;;1671:17:2;483:9107:7;;-1:-1:-1;;;;;483:9107:7;;1273:26:0;;1269:95;;3004:6;483:9107:7;;-1:-1:-1;;;;;;483:9107:7;;;;;;;;;;;;;-1:-1:-1;;;;;483:9107:7;3052:40:0;-1:-1:-1;;3052:40:0;483:9107:7;2061:21:6;1857:1;483:9107:7;;;945:4;483:9107;;;945:4;483:9107;;3523:23;3519:117;;483:9107;;3649:25;3645:121;;-1:-1:-1;;;;;483:9107:7;;;3858:22;;3854:73;;3952:2;3940:14;;3936:83;;4032:18;;;4028:68;;4109:17;;4105:115;;483:9107;4238:21;483:9107;4269:18;483:9107;4297:16;6214:21:2;483:9107:7;;;;;;;;;;;7064:25:2;1857:1:6;-1:-1:-1;1857:1:6;6214:21:2;1857:1:6;483:9107:7;;;;;;;;;;;;;1857:1:6;;483:9107:7;;;;;7064:25:2;483:9107:7;;;945:4;483:9107;;;945:4;483:9107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;1671:17:2;483:9107:7;;-1:-1:-1;483:9107:7;4105:115;483:9107;;-1:-1:-1;;;4149:60:7;;483:9107;1671:17:2;4149:60:7;;483:9107;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;4149:60;;;4028:68;4073:12;;;-1:-1:-1;4073:12:7;1671:17:2;-1:-1:-1;4073:12:7;3936:83;3977:31;;;-1:-1:-1;3977:31:7;1671:17:2;483:9107:7;-1:-1:-1;483:9107:7;;3952:2;483:9107;;;-1:-1:-1;3977:31:7;3854:73;3903:13;;;-1:-1:-1;3903:13:7;1671:17:2;-1:-1:-1;3903:13:7;3645:121;3697:58;483:9107;;3569:56;;;3697:58;;-1:-1:-1;1671:17:2;3697:58:7;;483:9107;;;;;;;;;;;;;;;;3697:58;3519:117;-1:-1:-1;;;3569:56:7;;-1:-1:-1;1671:17:2;3569:56:7;;483:9107;;;;;;;;;;;;;;;;3569:56;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1671:17:2;483:9107:7;;-1:-1:-1;1322:31:0;483:9107:7;;;;;;;;;;1671:17:2;-1:-1:-1;483:9107:7;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:2;483:9107:7;;;;;;;;;;;1648:13:2;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:2;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;-1:-1:-1;483:9107:7;;1671:17:2;483:9107:7;;-1:-1:-1;483:9107:7;;;;;;;;;;;;-1:-1:-1;483:9107:7;;1671:17:2;483:9107:7;;-1:-1:-1;483:9107:7;;;;;;;;;;;1648:13:2;-1:-1:-1;483:9107:7;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;483:9107:7;;;;;;;;;;;1648:13:2;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;-1:-1:-1;;483:9107:7;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;-1:-1:-1;;483:9107:7;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;483:9107:7;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_string": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_stringliteral_8a0d": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_stringliteral": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 4698,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4666,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_transfer": {
									"entryPoint": 4477,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"1017": [
									{
										"length": 32,
										"start": 3376
									}
								],
								"1019": [
									{
										"length": 32,
										"start": 882
									},
									{
										"length": 32,
										"start": 1379
									},
									{
										"length": 32,
										"start": 2004
									}
								],
								"1021": [
									{
										"length": 32,
										"start": 825
									}
								]
							},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f905f3560e01c90816306fdde0314610ebe57508063095ea7b314610e3c57806318160ddd14610e1f57806323b872dd14610d54578063313ce56714610d1757806342966c6814610b925780635dc96d1614610b6f5780636a62784214610b0157806370a0823114610ac9578063715018a614610a6c57806379cc6790146107b45780637b2c835f146107505780638da5cb5b1461072757806395d89b4114610616578063a4f0ecd314610543578063a9059cbb14610511578063ad1329d1146103a1578063c45a01551461035c578063d7c81b5514610321578063d89135cd14610303578063dd62ed3e1461029f578063f2fde38b146102165763f658f32a1461011b575f80fd5b3461021357604036600319011261021357610134610fd3565b90602435913033036101d5576001600160a01b03169182156101c1578282528160205260408220548181106101a95760208285937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93869787528684520360408620558060025403600255604051908152a380f35b60649363391434e360e21b8452600452602452604452fd5b634b637e8f60e11b82526004829052602482fd5b60405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b198b58d85b1b08185b1b1bddd95960521b6044820152606490fd5b80fd5b503461021357602036600319011261021357610230610fd3565b61023861125a565b6001600160a01b0316801561028b57600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5034610213576040366003190112610213576102b9610fd3565b60243591906001600160a01b03831683036102ff579060409160018060a01b031681526001602052209060018060a01b03165f52602052602060405f2054604051908152f35b5080fd5b50346102135780600319360112610213576020600754604051908152f35b503461021357806003193601126102135760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346102135780600319360112610213576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610213576103b036610fe9565b906103bc93929361125a565b6001600160a01b03811690811561050257929384936001600160a01b03909116908161047f57505082809281925af13d1561047a573d67ffffffffffffffff81116104665760405190610419601f8201601f191660200183611023565b81528260203d92013e5b1561042b5780f35b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b634e487b7160e01b83526041600452602483fd5b610423565b60405163a9059cbb60e01b81526001600160a01b039190911660048201526024810193909352919260209284925060449183915af180156104f7576104c2575080f35b6020813d6020116104ef575b816104db60209383611023565b810103126102ff5751801515036102135780f35b3d91506104ce565b6040513d84823e3d90fd5b63d92e233d60e01b8452600484fd5b50346102135760403660031901126102135761053861052e610fd3565b602435903361117d565b602060405160018152f35b50346102135760403660031901126102135761055d610fd3565b602435907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610603576001600160a01b03169081156105ef577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826105d28694600254611059565b60025584845283825260408420818154019055604051908152a380f35b63ec442f0560e01b83526004839052602483fd5b635936416f60e01b835233600452602483fd5b50346102135780600319360112610213576040519080600454908160011c9160018116801561071d575b602084108114610709578386529081156106e25750600114610685575b6106818461066d81860382611023565b604051918291602083526020830190610faf565b0390f35b600481527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106106c85750909150810160200161066d8261065d565b9192600181602092548385880101520191019092916106af565b60ff191660208087019190915292151560051b8501909201925061066d915083905061065d565b634e487b7160e01b83526022600452602483fd5b92607f1692610640565b50346102135780600319360112610213576005546040516001600160a01b039091168152602090f35b5034610213576020366003190112610213576004358015158091036102ff5760207f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd9161079b61125a565b60ff196008541660ff821617600855604051908152a180f35b5034610213576040366003190112610213576107ce610fd3565b602435917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610a595760ff6008541615610a1d5761081561123a565b6001600160a01b0382168015610a0e5783156109ff578082528160205260408220548481106109e557506002548085116109ce57600a900484116109755761085f84600754611059565b600755303b156102ff57604051637b2c799560e11b81526001600160a01b03841660048201526024810185905282808260448183305af1918261095c575b50506109225750506108ad61107a565b6308c379a0146108e5575b6108c48260075461110c565b506108e1604051928392631e764bc560e31b84526004840161113d565b0390fd5b6108ed611095565b806108f857506108b8565b6108e1906109088460075461110c565b50604051631e764bc560e31b815293849360048501611119565b7fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0060408560075482519182526020820152a2600160065580f35b8161096691611023565b61097157825f61089d565b8280fd5b60a484604051906333be48f560e21b8252600482015260406024820152602460448201527f45786365656473206d6178696d756d206275726e20706572207472616e7361636064820152633a34b7b760e11b6084820152fd5b631ee970cd60e31b83526004859052602452604482fd5b846064939263db42144d60e01b8452600452602452604452fd5b631f2a200560e01b8252600482fd5b63d92e233d60e01b8252600482fd5b604051630eb8953f60e01b8152602060048201526013602482015272109d5c9b9a5b99c81a5cc8191a5cd8589b1959606a1b6044820152606490fd5b635936416f60e01b815233600452602490fd5b5034610213578060031936011261021357610a8561125a565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610213576020366003190112610213576020906040906001600160a01b03610af1610fd3565b1681528083522054604051908152f35b503461021357602036600319011261021357610b1b610fd3565b5060405162461bcd60e51b815260206004820152602560248201527f4d696e742064697361626c65643a2075736520666163746f727920746f206c6f6044820152640636b2058560dc1b6064820152608490fd5b5034610213578060031936011261021357602060ff600854166040519015158152f35b5034610cea576020366003190112610cea576004359060ff6008541615610a1d57610bbb61123a565b8115610d0857335f525f60205260405f2054828110610cee5750610be182600754611059565b600755303b15610cea57604051637b2c799560e11b8152336004820152602481018390525f8160448183305af19081610cd5575b50610c985750610c2361107a565b6308c379a014610c59575b80610c3e6108e19260075461110c565b50604051631e764bc560e31b8152918291336004840161113d565b610c61611095565b9081610c6e579050610c2e565b610c7a8160075461110c565b506108e1604051928392631e764bc560e31b84523360048501611119565b9060075460405191825260208201527fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0060403392a2600160065580f35b610ce29192505f90611023565b5f905f610c15565b5f80fd5b8263db42144d60e01b5f523360045260245260445260645ffd5b631f2a200560e01b5f5260045ffd5b34610cea575f366003190112610cea57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610cea57610d6236610fe9565b6001600160a01b0383165f8181526001602090815260408083203384529091529020549093919291905f198110610d9f575b50610538935061117d565b838110610e04578415610df1573315610dde57610538945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610d94565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b34610cea575f366003190112610cea576020600254604051908152f35b34610cea576040366003190112610cea57610e55610fd3565b602435903315610df1576001600160a01b0316908115610dde57335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610cea575f366003190112610cea575f6003548060011c90600181168015610fa5575b602083108114610f9157828552908115610f6d5750600114610f0f575b6106818361066d81850382611023565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b808210610f535750909150810160200161066d610eff565b919260018160209254838588010152019101909291610f3b565b60ff191660208086019190915291151560051b8401909101915061066d9050610eff565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610ee2565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b0382168203610cea57565b6060906003190112610cea576004356001600160a01b0381168103610cea57906024356001600160a01b0381168103610cea579060443590565b90601f8019910116810190811067ffffffffffffffff82111761104557604052565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161106657565b634e487b7160e01b5f52601160045260245ffd5b5f9060033d1161108657565b905060045f803e5f5160e01c90565b5f60443d106110fb576040513d600319016004823e8051913d602484011167ffffffffffffffff841117611106578282019283519167ffffffffffffffff83116110fe573d840160031901858401602001116110fe57506110fb92910160200190611023565b90565b949350505050565b92915050565b9190820391821161106657565b6110fb939260609260018060a01b0316825260208201528160408201520190610faf565b909160a092600180851b0316825260208201526060604082015260126060820152712ab735b737bbb710313ab9371032b93937b960711b60808201520190565b6001600160a01b0316908115611227576001600160a01b031691821561121457815f525f60205260405f20548181106111fb57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b63ec442f0560e01b5f525f60045260245ffd5b634b637e8f60e11b5f525f60045260245ffd5b60026006541461124b576002600655565b633ee5aeb560e01b5f5260045ffd5b6005546001600160a01b0316330361126e57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220bcb1bcc83d5fff4c232431eace352c5802fe9028b3fd3dfdbfa19d49dea0f12464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xEBE JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE1F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD54 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD17 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xB92 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0xB01 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xA4F0ECD3 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x216 JUMPI PUSH4 0xF658F32A EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x134 PUSH2 0xFD3 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 ADDRESS CALLER SUB PUSH2 0x1D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1C1 JUMPI DUP3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x1A9 JUMPI PUSH1 0x20 DUP3 DUP6 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 DUP7 SWAP8 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x230 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x2B9 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x2FF JUMPI SWAP1 PUSH1 0x40 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH2 0x3B0 CALLDATASIZE PUSH2 0xFE9 JUMP JUMPDEST SWAP1 PUSH2 0x3BC SWAP4 SWAP3 SWAP4 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x502 JUMPI SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 PUSH2 0x47F JUMPI POP POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x419 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x1023 JUMP JUMPDEST DUP2 MSTORE DUP3 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x42B JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 POP PUSH1 0x44 SWAP2 DUP4 SWAP2 GAS CALL DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4C2 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4EF JUMPI JUMPDEST DUP2 PUSH2 0x4DB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1023 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2FF JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x213 JUMPI DUP1 RETURN JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x538 PUSH2 0x52E PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x117D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x55D PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x603 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x5EF JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x5D2 DUP7 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x5936416F PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x709 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6E2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x685 JUMPI JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x66D DUP2 DUP7 SUB DUP3 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xFAF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x6C8 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x66D DUP3 PUSH2 0x65D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x66D SWAP2 POP DUP4 SWAP1 POP PUSH2 0x65D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x640 JUMP JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2FF JUMPI PUSH1 0x20 PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH2 0x79B PUSH2 0x125A JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0x7CE PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xA59 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0xA1D JUMPI PUSH2 0x815 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 ISZERO PUSH2 0xA0E JUMPI DUP4 ISZERO PUSH2 0x9FF JUMPI DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP5 DUP2 LT PUSH2 0x9E5 JUMPI POP PUSH1 0x2 SLOAD DUP1 DUP6 GT PUSH2 0x9CE JUMPI PUSH1 0xA SWAP1 DIV DUP5 GT PUSH2 0x975 JUMPI PUSH2 0x85F DUP5 PUSH1 0x7 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x7 SSTORE ADDRESS EXTCODESIZE ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 DUP1 DUP3 PUSH1 0x44 DUP2 DUP4 ADDRESS GAS CALL SWAP2 DUP3 PUSH2 0x95C JUMPI JUMPDEST POP POP PUSH2 0x922 JUMPI POP POP PUSH2 0x8AD PUSH2 0x107A JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8E5 JUMPI JUMPDEST PUSH2 0x8C4 DUP3 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x113D JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x8ED PUSH2 0x1095 JUMP JUMPDEST DUP1 PUSH2 0x8F8 JUMPI POP PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x8E1 SWAP1 PUSH2 0x908 DUP5 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 PUSH1 0x40 DUP6 PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x966 SWAP2 PUSH2 0x1023 JUMP JUMPDEST PUSH2 0x971 JUMPI DUP3 PUSH0 PUSH2 0x89D JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0xA4 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x33BE48F5 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206275726E20706572207472616E736163 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x1EE970CD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 DUP3 REVERT JUMPDEST DUP5 PUSH1 0x64 SWAP4 SWAP3 PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH2 0xA85 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xAF1 PUSH2 0xFD3 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x213 JUMPI PUSH2 0xB1B PUSH2 0xFD3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E742064697361626C65643A2075736520666163746F727920746F206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B20585 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x213 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xCEA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0xA1D JUMPI PUSH2 0xBBB PUSH2 0x123A JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD08 JUMPI CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0xCEE JUMPI POP PUSH2 0xBE1 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x7 SSTORE ADDRESS EXTCODESIZE ISZERO PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP2 PUSH1 0x44 DUP2 DUP4 ADDRESS GAS CALL SWAP1 DUP2 PUSH2 0xCD5 JUMPI JUMPDEST POP PUSH2 0xC98 JUMPI POP PUSH2 0xC23 PUSH2 0x107A JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC59 JUMPI JUMPDEST DUP1 PUSH2 0xC3E PUSH2 0x8E1 SWAP3 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 CALLER PUSH1 0x4 DUP5 ADD PUSH2 0x113D JUMP JUMPDEST PUSH2 0xC61 PUSH2 0x1095 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xC6E JUMPI SWAP1 POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH1 0x7 SLOAD PUSH2 0x110C JUMP JUMPDEST POP PUSH2 0x8E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xCE2 SWAP2 SWAP3 POP PUSH0 SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 PUSH2 0xC15 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH4 0xDB42144D PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0x1F2A2005 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH2 0xD62 CALLDATASIZE PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH0 NOT DUP2 LT PUSH2 0xD9F JUMPI JUMPDEST POP PUSH2 0x538 SWAP4 POP PUSH2 0x117D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xE04 JUMPI DUP5 ISZERO PUSH2 0xDF1 JUMPI CALLER ISZERO PUSH2 0xDDE JUMPI PUSH2 0x538 SWAP5 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0xD94 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH2 0xE55 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xDDE JUMPI CALLER PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xCEA JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xFA5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0xF91 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xF6D JUMPI POP PUSH1 0x1 EQ PUSH2 0xF0F JUMPI JUMPDEST PUSH2 0x681 DUP4 PUSH2 0x66D DUP2 DUP6 SUB DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xF53 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x66D PUSH2 0xEFF JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x66D SWAP1 POP PUSH2 0xEFF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xEE2 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCEA JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xCEA JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xCEA JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xCEA JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1045 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1066 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1086 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY PUSH0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x1106 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10FE JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0x10FE JUMPI POP PUSH2 0x10FB SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x1023 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1066 JUMPI JUMP JUMPDEST PUSH2 0x10FB SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xFAF JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xA0 SWAP3 PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x60 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB710313AB9371032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1214 JUMPI DUP2 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x11FB JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x124B JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x126E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xB1 0xBC 0xC8 RETURNDATASIZE PUSH0 SELFDESTRUCT 0x4C 0x23 0x24 BALANCE 0xEA 0xCE CALLDATALOAD 0x2C PC MUL INVALID SWAP1 0x28 0xB3 REVERT RETURNDATASIZE REVERT 0xBF LOG1 SWAP14 BLOBHASH 0xDE LOG0 CALL 0x24 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "483:9107:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9534:47;483:9107;9534:47;;;483:9107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;;;;6707:4;;6685:10;:27;483:9107;;-1:-1:-1;;;;;483:9107:7;;8035:21:2;;8031:89;;483:9107:7;;;;;;;;;;6321:19:2;;;6317:115;;483:9107:7;;;;7064:25:2;483:9107:7;;;;;;;;;;;;;;6791:21:2;483:9107:7;;6791:21:2;483:9107:7;;;;;;7064:25:2;483:9107:7;;6317:115:2;483:9107:7;6367:50:2;;;;;;483:9107:7;;;;;;6367:50:2;8031:89;-1:-1:-1;;;8079:30:2;;483:9107:7;;;;;8079:30:2;;483:9107:7;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;483:9107:7;2627:22:0;;2623:91;;3004:6;483:9107:7;;-1:-1:-1;;;;;;483:9107:7;;;;;;;-1:-1:-1;;;;;483:9107:7;3052:40:0;;;;483:9107:7;;2623:91:0;-1:-1:-1;;;2672:31:0;;483:9107:7;;;;;2672:31:0;;483:9107:7;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;;;;;;;;3638:11:2;483:9107:7;;;3638:27:2;483:9107:7;;;;;;-1:-1:-1;483:9107:7;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;851:26;483:9107;;;;;;;;;;;;;;;;;;;;;;;734:31;483:9107;;;;;;;;;;;;;;;;;;651:32;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;;:::i;:::-;-1:-1:-1;;;;;483:9107:7;;;8582:16;;8578:42;;483:9107;;;;-1:-1:-1;;;;;483:9107:7;;;;8643:19;483:9107;;8724:35;;;;;;;;;483:9107;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;8639:285;483:9107;;-1:-1:-1;;;8879:34:7;;-1:-1:-1;;;;;483:9107:7;;;;;8879:34;;483:9107;;;;;;;;;;8879:34;;483:9107;;-1:-1:-1;483:9107:7;;;;8879:34;;;;;;;;8639:285;483:9107;;8879:34;;;;;;;;;;;;;;;:::i;:::-;;;483:9107;;;;;;;;;;;;;8879:34;;;-1:-1:-1;8879:34:7;;;483:9107;;;;;;;;;8578:42;-1:-1:-1;;;8607:13:7;;483:9107;5098:13;8607;483:9107;;;;;;;-1:-1:-1;;483:9107:7;;;;3440:5:2;483:9107:7;;:::i;:::-;;;735:10:5;;3440:5:2;:::i;:::-;483:9107:7;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;;;;2986:7;-1:-1:-1;;;;;483:9107:7;2972:10;:21;2968:64;;-1:-1:-1;;;;;483:9107:7;;7509:21:2;;7505:91;;7064:25;483:9107:7;;6214:21:2;483:9107:7;;6214:21:2;483:9107:7;6214:21:2;:::i;:::-;;483:9107:7;;;;;;;;;;;;;;;;;;;;;7064:25:2;483:9107:7;;7505:91:2;-1:-1:-1;;;7553:32:2;;483:9107:7;;;;;7553:32:2;;2968:64:7;-1:-1:-1;;;3002:30:7;;2972:10;483:9107;;;3002:30;;483:9107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;-1:-1:-1;483:9107:7;;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;-1:-1:-1;483:9107:7;;-1:-1:-1;483:9107:7;;;-1:-1:-1;;;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;483:9107:7;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;;;;;;;;8178:26;1500:62:0;;;:::i;:::-;483:9107:7;;8142:21;483:9107;;;;;;8142:21;483:9107;;;;;;8178:26;483:9107;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;;;;2986:7;-1:-1:-1;;;;;483:9107:7;2972:10;:21;2968:64;;483:9107;3098:11;483:9107;;3097:12;3093:60;;2466:103:6;;:::i;:::-;-1:-1:-1;;;;;483:9107:7;;5057:18;;5053:69;;5135:11;;5131:61;;483:9107;;;;;;;;;;5261:20;;;5257:104;;483:9107;2908:12:2;483:9107:7;5459:22;;;5455:103;;5713:2;483:9107;;5766:21;;5762:124;;5974:21;483:9107;5974:21;483:9107;5974:21;:::i;:::-;;483:9107;6018:4;:31;;;;483:9107;;-1:-1:-1;;;6018:31:7;;-1:-1:-1;;;;;483:9107:7;;;6018:31;;483:9107;;;;;;;6018:31;;483:9107;;;6018:31;:4;:31;;;;;;483:9107;-1:-1:-1;;6014:495:7;;;;;;:::i;:::-;;;;;;6398:21;483:9107;5974:21;483:9107;6398:21;:::i;:::-;;6440:58;483:9107;;7628:50;;;;;;6440:58;;483:9107;6440:58;;;:::i;:::-;;;;6014:495;6120:201;;:::i;:::-;;;;6014:495;;;6120:201;6266:44;483:9107;6224:21;483:9107;5974:21;483:9107;6224:21;:::i;:::-;-1:-1:-1;483:9107:7;;-1:-1:-1;;;6266:44:7;;483:9107;;;;6266:44;;;:::i;6014:495::-;6069:39;483:9107;;5974:21;483:9107;;;;;;;;;;6069:39;483:9107;3068:21:6;483:9107:7;;;6018:31;;;;;:::i;:::-;483:9107;;6018:31;;;;483:9107;;;;5762:124;5810:65;483:9107;;;5810:65;;;;;;483:9107;5810:65;;483:9107;;;;;;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;5810:65;5455:103;-1:-1:-1;;;5504:43:7;;483:9107;;;;;;;5504:43;;5257:104;7195:52;483:9107;7195:52;;;;;5304:46;;483:9107;;;;;;5304:46;5131:61;-1:-1:-1;;;5169:12:7;;483:9107;7054:12;5169;5053:69;-1:-1:-1;;;5098:13:7;;483:9107;5098:13;;3093:60;483:9107;;-1:-1:-1;;;3118:35:7;;483:9107;;3118:35;;483:9107;;;;;;-1:-1:-1;;;483:9107:7;;;;;;6440:58;2968:64;-1:-1:-1;;;3002:30:7;;2972:10;483:9107;;;;3002:30;483:9107;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;483:9107:7;;-1:-1:-1;;;;;;483:9107:7;;;;;;;-1:-1:-1;;;;;483:9107:7;3052:40:0;483:9107:7;;3052:40:0;483:9107:7;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;-1:-1:-1;;;;;483:9107:7;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;-1:-1:-1;483:9107:7;;-1:-1:-1;;;9534:47:7;;483:9107;;9534:47;;483:9107;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;9534:47;;;483:9107;;;;;;;;;;;;;;;919:30;483:9107;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;3098:11;483:9107;;3097:12;3093:60;;2466:103:6;;:::i;:::-;7020:11:7;;7016:61;;7127:10;483:9107;;;;;;;;;7152:20;;;7148:110;;483:9107;7324:21;483:9107;7324:21;483:9107;7324:21;:::i;:::-;;483:9107;7368:4;:37;;;;483:9107;;-1:-1:-1;;;7368:37:7;;7127:10;483:9107;7368:37;;483:9107;;;;;;;-1:-1:-1;483:9107:7;;;-1:-1:-1;7368:4:7;:37;;;;;;483:9107;-1:-1:-1;7364:519:7;;;;;:::i;:::-;;;;;;483:9107;7766:21;7808:64;483:9107;7324:21;483:9107;7766:21;:::i;:::-;-1:-1:-1;483:9107:7;;-1:-1:-1;;;7808:64:7;;483:9107;;;7127:10;483:9107;7808:64;;;:::i;7364:519::-;7482:207;;:::i;:::-;;;;;7364:519;;;;7482:207;7586:21;483:9107;7324:21;483:9107;7586:21;:::i;:::-;;7628:50;483:9107;;7628:50;;;;;;;;7127:10;483:9107;7628:50;;;:::i;7364:519::-;483:9107;7324:21;483:9107;;;;;;;;;;7425:45;483:9107;7127:10;7425:45;;483:9107;3068:21:6;483:9107:7;;;7368:37;;;;;483:9107;7368:37;;:::i;:::-;483:9107;7368:37;;;;;483:9107;;;7148:110;7195:52;;;;483:9107;7195:52;7127:10;483:9107;;;;;;;;7195:52;7016:61;7054:12;;;483:9107;7054:12;483:9107;;7054:12;483:9107;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;4620:9;483:9107;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;;;;;;735:10:5;483:9107:7;;;;;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;483:9107:7;4967:5:2;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:5;9892:21:2;9888:90;;4967:5;483:9107:7;;;3638:11:2;483:9107:7;;;;;;;;;;735:10:5;483:9107:7;;;;;;;;;;;;;10557:309:2;;;9888:90;9936:31;;;483:9107:7;9936:31:2;483:9107:7;;;;;9936:31:2;9790:89;9836:32;;;483:9107:7;9836:32:2;483:9107:7;;;;;9836:32:2;10613:130;10668:60;;;;;483:9107:7;10668:60:2;735:10:5;483:9107:7;;;;;;;;10668:60:2;483:9107:7;;;;;;-1:-1:-1;;483:9107:7;;;;;2908:12:2;483:9107:7;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;:::i;:::-;;;735:10:5;;9794:19:2;9790:89;;-1:-1:-1;;;;;483:9107:7;;9892:21:2;;9888:90;;735:10:5;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;10066:31:2;483:9107:7;735:10:5;10066:31:2;;483:9107:7;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;1837:5:2;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1837:5:2;483:9107:7;;;;;;;;;;;;-1:-1:-1;483:9107:7;;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;-1:-1:-1;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;-1:-1:-1;;483:9107:7;;;;:::o;:::-;;;;-1:-1:-1;;;;;483:9107:7;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;-1:-1:-1;;;;;483:9107:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;483:9107:7;;;;;-1:-1:-1;483:9107:7;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:9107:7;;;;;;;;;-1:-1:-1;483:9107:7;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;483:9107:7;;;;;;:::o;5374:300:2:-;-1:-1:-1;;;;;483:9107:7;;5457:18:2;;5453:86;;-1:-1:-1;;;;;483:9107:7;;5552:16:2;;5548:86;;483:9107:7;5473:1:2;483:9107:7;5473:1:2;483:9107:7;;;5473:1:2;483:9107:7;;6321:19:2;;;6317:115;;483:9107:7;7064:25:2;483:9107:7;;;;5473:1:2;483:9107:7;5473:1:2;483:9107:7;;;;5473:1:2;483:9107:7;;;5473:1:2;483:9107:7;5473:1:2;483:9107:7;;;5473:1:2;483:9107:7;;;;;;;;;;;;7064:25:2;5374:300::o;6317:115::-;6367:50;;;;5473:1;6367:50;;483:9107:7;;;;;;5473:1:2;6367:50;5548:86;7553:32;;;5473:1;5591:32;5473:1;5591:32;483:9107:7;;5473:1:2;5591:32;5453:86;8079:30;;;5473:1;5498:30;5473:1;5498:30;483:9107:7;;5473:1:2;5498:30;2575:307:6;1899:1;2702:7;483:9107:7;2702:18:6;2698:86;;1899:1;2702:7;483:9107:7;2575:307:6:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:6;;-1:-1:-1;2743:30:6;1796:162:0;1710:6;483:9107:7;-1:-1:-1;;;;;483:9107:7;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:5;1901:40:0;483:9107:7;;-1:-1:-1;1901:40:0"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "958200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_performBurn(address,uint256)": "51131",
								"allowance(address,address)": "2989",
								"approve(address,uint256)": "24330",
								"balanceOf(address)": "2594",
								"burn(uint256)": "infinite",
								"burnEnabled()": "2408",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "infinite",
								"emergencyRecover(address,address,uint256)": "infinite",
								"factory()": "infinite",
								"factoryMint(address,uint256)": "infinite",
								"gameId()": "infinite",
								"mint(address)": "477",
								"name()": "infinite",
								"owner()": "2552",
								"renounceOwnership()": "28270",
								"setBurnEnabled(bool)": "27845",
								"symbol()": "infinite",
								"totalBurned()": "2682",
								"totalSupply()": "2305",
								"transfer(address,uint256)": "51091",
								"transferFrom(address,address,uint256)": "75516",
								"transferOwnership(address)": "28644"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "22"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "26"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3546,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3519,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3519,
									"end": 3636,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3674,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3645,
									"end": 3766,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3854,
									"end": 3927,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 3954,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3940,
									"end": 3954,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3940,
									"end": 3954,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 4019,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3936,
									"end": 4019,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4050,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4096,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4028,
									"end": 4096,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4109,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4109,
									"end": 4126,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4105,
									"end": 4220,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4238,
									"end": 4259,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 4297,
									"end": 4313,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "FF00"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1017"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1019"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1021"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4220,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4105,
									"end": 4220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313B9AA1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "4F776E657220616E6420666163746F72792063616E6E6F742062652074686520"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73616D65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4096,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4028,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"name": "PUSH",
									"source": 7,
									"value": "1F2A2005"
								},
								{
									"begin": 4073,
									"end": 4085,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4073,
									"end": 4085,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4073,
									"end": 4085,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 4073,
									"end": 4085,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 4019,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3936,
									"end": 4019,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "PUSH",
									"source": 7,
									"value": "46F4384B"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 3954,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3927,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3854,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"name": "PUSH",
									"source": 7,
									"value": "D92E233D"
								},
								{
									"begin": 3903,
									"end": 3916,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3903,
									"end": 3916,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3903,
									"end": 3916,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3903,
									"end": 3916,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3766,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3645,
									"end": 3766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "F7693C3D"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1C"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "546F6B656E2073796D626F6C2063616E6E6F7420626520656D70747900000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3519,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3519,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F7693C3D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1A"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "546F6B656E206E616D652063616E6E6F7420626520656D707479000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcb1bcc83d5fff4c232431eace352c5802fe9028b3fd3dfdbfa19d49dea0f12464736f6c634300081a0033",
									".code": [
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "5DC96D16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "6A627842"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "7B2C835F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A4F0ECD3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "AD1329D1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "C45A0155"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "D7C81B55"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "D89135CD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "F658F32A"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6712,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "391434E3"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E2"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 877,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 734,
											"end": 765,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1021"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 651,
											"end": 683,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8598,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8924,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8639,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8879,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 8578,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8607,
											"end": 8620,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3440,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5936416F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8178,
											"end": 8204,
											"name": "PUSH",
											"source": 7,
											"value": "1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2466,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5053,
											"end": 5122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5131,
											"end": 5192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5281,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5281,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5257,
											"end": 5361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5455,
											"end": 5558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5787,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5787,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5762,
											"end": 5886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5974,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6022,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B2C7995"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6022,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6014,
											"end": 6509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A0"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6398,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "1E764BC5"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "E3"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6440,
											"end": 6498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6120,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6120,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6224,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6266,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"name": "PUSH",
											"source": 7,
											"value": "CCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5886,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5762,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "33BE48F5"
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "PUSH",
											"source": 7,
											"value": "E2"
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "45786365656473206D6178696D756D206275726E20706572207472616E736163"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5558,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 5455,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1EE970CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5361,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5257,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "DB42144D"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5131,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5122,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5053,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EB8953F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109D5C9B9A5B99C81A5CC8191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5936416F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4D696E742064697361626C65643A2075736520666163746F727920746F206C6F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636B20585"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 919,
											"end": 949,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2466,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2466,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7020,
											"end": 7031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7016,
											"end": 7077,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7148,
											"end": 7258,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7324,
											"end": 7345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B2C7995"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7364,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A0"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7766,
											"end": 7787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7808,
											"end": 7872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7482,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7482,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7586,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "1E764BC5"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "E3"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7628,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "PUSH",
											"source": 7,
											"value": "CCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7258,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7148,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "DB42144D"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7247,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7077,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7016,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "PUSH",
											"source": 7,
											"value": "1F2A2005"
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1017"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4967,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4A1406B1"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF05"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "7DC7A0D9"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB735B737BBB710313AB9371032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "391434E3"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E2"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F05"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4B637E8F"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "3EE5AEB5"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/GameToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_performBurn(address,uint256)": "f658f32a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnEnabled()": "5dc96d16",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"emergencyRecover(address,address,uint256)": "ad1329d1",
							"factory()": "c45a0155",
							"factoryMint(address,uint256)": "a4f0ecd3",
							"gameId()": "d7c81b55",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBurnEnabled(bool)": "7b2c835f",
							"symbol()": "95d89b41",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BurnDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BurningOperationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllowed\",\"type\":\"uint256\"}],\"name\":\"ExcessiveBurnRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameTokenInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provided\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidBurnAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidContractState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidGameOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"InvalidRecoveryTarget\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"MathOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"MathUnderflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"MintingDisabledAfterInit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RecoveryFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RecoveryNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyDetected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferOperationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"UnauthorizedBurner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedFactory\",\"type\":\"address\"}],\"name\":\"UnauthorizedFactory\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedOwner\",\"type\":\"address\"}],\"name\":\"UnauthorizedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BurnStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBurned\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_performBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRecover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"factoryMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setBurnEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optimized ERC-20 game token with enhanced security Each game gets its own instance of this contract Optimized for gas efficiency while maintaining security\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_performBurn(address,uint256)\":{\"details\":\"Internal burn function for error handling separation\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Allow users to burn their own tokens directly\",\"params\":{\"amount\":\"Amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burn tokens from a specific account (called by factory)\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyRecover(address,address,uint256)\":{\"details\":\"Emergency function to recover stuck tokens\",\"params\":{\"amount\":\"Amount to recover\",\"to\":\"Address to send recovered tokens\",\"token\":\"Address of token to recover (address(0) for ETH)\"}},\"factoryMint(address,uint256)\":{\"details\":\"Restricted mint function - only callable by factory This ensures tokens can only be created when XP is properly locked\"},\"mint(address)\":{\"details\":\"Block any attempts to call mint functions directly Prevents manual token creation outside the XP locking mechanism\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBurnEnabled(bool)\":{\"details\":\"Enable/disable burning (emergency control)\",\"params\":{\"enabled\":\"Whether burning should be enabled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GameToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameToken.sol\":\"GameToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/GameToken.sol\":{\"keccak256\":\"0xe371f18de6e87ce61b0be308231db4010946854d6348d027e0ade10ae9fc610c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7987e640f7f674e858935fe5923d92473cf594db753c755b0f108977eac0894e\",\"dweb:/ipfs/QmSxWoLU2MdF8aRKAxuZQQ8269qywUkJocwnDuqAhCvKxA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1023,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "totalBurned",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1026,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "burnEnabled",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 1028,
								"contract": "contracts/GameToken.sol:GameToken",
								"label": "_initialMintComplete",
								"offset": 1,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 939,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1818:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1864:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1907:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 947,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"src": "1994:37:6"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2051:38:6",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "2071:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:6"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:6"
									},
									"scope": 1002,
									"src": "2037:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2490:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2500:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 962,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2542:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 966,
									"name": "nonReentrant",
									"nameLocation": "2475:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:6"
									},
									"src": "2466:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2614:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2702:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 970,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "2698:86:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "2722:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 972,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2743:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "2736:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:6"
									},
									"scope": 1002,
									"src": "2575:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2926:170:6",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "3078:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:6"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:6"
									},
									"scope": 1002,
									"src": "2888:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3339:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 997,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 995,
												"id": 999,
												"nodeType": "Return",
												"src": "3349:25:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3333:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:6"
									},
									"scope": 1002,
									"src": "3275:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1003,
							"src": "1030:2353:6",
							"usedErrors": [
								947
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:6"
				},
				"id": 6
			},
			"contracts/GameToken.sol": {
				"ast": {
					"absolutePath": "contracts/GameToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"GameToken": [
							1661
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 878,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 148,
							"src": "171:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1008,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 1003,
							"src": "224:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1010,
										"name": "ERC20",
										"nameLocations": [
											"505:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "505:5:7"
									},
									"id": 1011,
									"nodeType": "InheritanceSpecifier",
									"src": "505:5:7"
								},
								{
									"baseName": {
										"id": 1012,
										"name": "Ownable",
										"nameLocations": [
											"512:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "512:7:7"
									},
									"id": 1013,
									"nodeType": "InheritanceSpecifier",
									"src": "512:7:7"
								},
								{
									"baseName": {
										"id": 1014,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"521:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "521:15:7"
									},
									"id": 1015,
									"nodeType": "InheritanceSpecifier",
									"src": "521:15:7"
								}
							],
							"canonicalName": "GameToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1009,
								"nodeType": "StructuredDocumentation",
								"src": "285:197:7",
								"text": " @title GameToken\n @dev Optimized ERC-20 game token with enhanced security\n Each game gets its own instance of this contract\n Optimized for gas efficiency while maintaining security"
							},
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661,
								1002,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "GameToken",
							"nameLocation": "492:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1017,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "636:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "612:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1016,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "612:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 1019,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "676:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "651:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7c81b55",
									"id": 1021,
									"mutability": "immutable",
									"name": "gameId",
									"nameLocation": "759:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "734:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 1023,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "866:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "851:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dc96d16",
									"id": 1026,
									"mutability": "mutable",
									"name": "burnEnabled",
									"nameLocation": "931:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "919:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1024,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "919:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "945:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1028,
									"mutability": "mutable",
									"name": "_initialMintComplete",
									"nameLocation": "1112:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "1099:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1027,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1099:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00",
									"id": 1036,
									"name": "TokensBurned",
									"nameLocation": "1189:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1218:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1202:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1224:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalBurned",
												"nameLocation": "1248:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1240:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:59:7"
									},
									"src": "1183:78:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd",
									"id": 1040,
									"name": "BurnStatusChanged",
									"nameLocation": "1272:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1295:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1290:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:14:7"
									},
									"src": "1266:38:7"
								},
								{
									"errorSelector": "1f2a2005",
									"id": 1042,
									"name": "ZeroAmount",
									"nameLocation": "1416:10:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1426:2:7"
									},
									"src": "1410:19:7"
								},
								{
									"errorSelector": "d92e233d",
									"id": 1044,
									"name": "ZeroAddress",
									"nameLocation": "1440:11:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:2:7"
									},
									"src": "1434:20:7"
								},
								{
									"errorSelector": "f7693c3d",
									"id": 1050,
									"name": "InvalidAddress",
									"nameLocation": "1465:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "provided",
												"nameLocation": "1488:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1505:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1498:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1498:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:33:7"
									},
									"src": "1459:54:7"
								},
								{
									"errorSelector": "46f4384b",
									"id": 1058,
									"name": "InvalidAmount",
									"nameLocation": "1524:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "provided",
												"nameLocation": "1546:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1538:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "1564:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1556:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "1577:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1569:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:44:7"
									},
									"src": "1518:64:7"
								},
								{
									"errorSelector": "81ca561d",
									"id": 1064,
									"name": "UnauthorizedFactory",
									"nameLocation": "1627:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1655:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1647:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "expectedFactory",
												"nameLocation": "1671:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1663:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:41:7"
									},
									"src": "1621:67:7"
								},
								{
									"errorSelector": "ccc65e39",
									"id": 1070,
									"name": "UnauthorizedOwner",
									"nameLocation": "1699:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1725:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1717:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "expectedOwner",
												"nameLocation": "1741:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1733:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:39:7"
									},
									"src": "1693:63:7"
								},
								{
									"errorSelector": "5936416f",
									"id": 1074,
									"name": "UnauthorizedBurner",
									"nameLocation": "1767:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:16:7"
									},
									"src": "1761:41:7"
								},
								{
									"errorSelector": "0eb8953f",
									"id": 1078,
									"name": "BurnDisabled",
									"nameLocation": "1847:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1867:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1860:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1860:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:15:7"
									},
									"src": "1841:34:7"
								},
								{
									"errorSelector": "ab35696f",
									"id": 1080,
									"name": "ContractPaused",
									"nameLocation": "1886:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:2:7"
									},
									"src": "1880:23:7"
								},
								{
									"errorSelector": "c4ee6a84",
									"id": 1084,
									"name": "InvalidContractState",
									"nameLocation": "1914:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1942:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1935:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1081,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1935:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:15:7"
									},
									"src": "1908:42:7"
								},
								{
									"errorSelector": "c5f2be51",
									"id": 1086,
									"name": "ReentrancyDetected",
									"nameLocation": "1961:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1979:2:7"
									},
									"src": "1955:27:7"
								},
								{
									"errorSelector": "db42144d",
									"id": 1094,
									"name": "InsufficientBalance",
									"nameLocation": "2031:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2059:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2051:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "2076:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2068:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "2094:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2086:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:54:7"
									},
									"src": "2025:80:7"
								},
								{
									"errorSelector": "f74b8668",
									"id": 1100,
									"name": "ExcessiveBurnRequest",
									"nameLocation": "2116:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "2145:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2137:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "maxAllowed",
												"nameLocation": "2164:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2156:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:39:7"
									},
									"src": "2110:66:7"
								},
								{
									"errorSelector": "cef923d4",
									"id": 1106,
									"name": "InvalidBurnAmount",
									"nameLocation": "2187:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2228:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2221:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2221:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:31:7"
									},
									"src": "2181:55:7"
								},
								{
									"errorSelector": "07d020c3",
									"id": 1110,
									"name": "MintingDisabledAfterInit",
									"nameLocation": "2281:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2313:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2306:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2305:15:7"
									},
									"src": "2275:46:7"
								},
								{
									"errorSelector": "f3b25e28",
									"id": 1118,
									"name": "BurningOperationFailed",
									"nameLocation": "2332:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2363:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2355:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2377:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2369:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2392:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2385:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:45:7"
									},
									"src": "2326:74:7"
								},
								{
									"errorSelector": "b2288a63",
									"id": 1126,
									"name": "TransferOperationFailed",
									"nameLocation": "2411:23:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2443:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2435:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2457:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2449:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2469:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2461:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:42:7"
									},
									"src": "2405:72:7"
								},
								{
									"errorSelector": "1678774c",
									"id": 1130,
									"name": "GameTokenInactive",
									"nameLocation": "2488:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:16:7"
									},
									"src": "2482:40:7"
								},
								{
									"errorSelector": "80059ab4",
									"id": 1136,
									"name": "InvalidGameOperation",
									"nameLocation": "2533:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2561:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2554:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2554:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2579:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2572:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2572:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2553:33:7"
									},
									"src": "2527:60:7"
								},
								{
									"errorSelector": "01f0b138",
									"id": 1140,
									"name": "MathOverflow",
									"nameLocation": "2630:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2650:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2643:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2643:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2642:18:7"
									},
									"src": "2624:37:7"
								},
								{
									"errorSelector": "7d752677",
									"id": 1144,
									"name": "MathUnderflow",
									"nameLocation": "2672:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2686:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2686:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:18:7"
									},
									"src": "2666:38:7"
								},
								{
									"errorSelector": "5a9443cc",
									"id": 1150,
									"name": "RecoveryFailed",
									"nameLocation": "2743:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2766:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2758:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2780:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2773:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2773:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:30:7"
									},
									"src": "2737:51:7"
								},
								{
									"errorSelector": "eb169525",
									"id": 1154,
									"name": "InvalidRecoveryTarget",
									"nameLocation": "2799:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2829:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2821:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:16:7"
									},
									"src": "2793:44:7"
								},
								{
									"errorSelector": "409dfd75",
									"id": 1158,
									"name": "RecoveryNotAllowed",
									"nameLocation": "2848:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2874:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2867:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2867:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2866:15:7"
									},
									"src": "2842:40:7"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "2958:92:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1160,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2972:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2976:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2972:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1162,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2972:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "2968:64:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1165,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3021:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3025:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3021:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1164,
															"name": "UnauthorizedBurner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "3002:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3002:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1168,
													"nodeType": "RevertStatement",
													"src": "2995:37:7"
												}
											},
											{
												"id": 1170,
												"nodeType": "PlaceholderStatement",
												"src": "3042:1:7"
											}
										]
									},
									"id": 1172,
									"name": "onlyFactory",
									"nameLocation": "2944:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2955:2:7"
									},
									"src": "2935:115:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "3083:88:7",
										"statements": [
											{
												"condition": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3097:12:7",
													"subExpression": {
														"id": 1174,
														"name": "burnEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3098:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "3093:60:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "4275726e696e672069732064697361626c6564",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3131:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01",
																	"typeString": "literal_string \"Burning is disabled\""
																},
																"value": "Burning is disabled"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01",
																	"typeString": "literal_string \"Burning is disabled\""
																}
															],
															"id": 1176,
															"name": "BurnDisabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "3118:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																"typeString": "function (string memory) pure returns (error)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3118:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1179,
													"nodeType": "RevertStatement",
													"src": "3111:42:7"
												}
											},
											{
												"id": 1181,
												"nodeType": "PlaceholderStatement",
												"src": "3163:1:7"
											}
										]
									},
									"id": 1183,
									"name": "burnAllowed",
									"nameLocation": "3069:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3080:2:7"
									},
									"src": "3060:111:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "3467:1021:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "3529:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3523:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3523:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3535:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3523:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3545:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3523:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "3519:117:7",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "3548:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3592:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3584:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3584:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3584:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "546f6b656e206e616d652063616e6e6f7420626520656d707479",
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3596:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9",
																			"typeString": "literal_string \"Token name cannot be empty\""
																		},
																		"value": "Token name cannot be empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9",
																			"typeString": "literal_string \"Token name cannot be empty\""
																		}
																	],
																	"id": 1214,
																	"name": "InvalidAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "3569:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (address,string memory) pure returns (error)"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3569:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "3562:63:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "symbol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3655:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3649:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3649:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3649:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3663:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3649:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3673:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3649:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "3645:121:7",
												"trueBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "3676:90:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3720:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3712:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1232,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3712:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3712:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "546f6b656e2073796d626f6c2063616e6e6f7420626520656d707479",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3724:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6",
																			"typeString": "literal_string \"Token symbol cannot be empty\""
																		},
																		"value": "Token symbol cannot be empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6",
																			"typeString": "literal_string \"Token symbol cannot be empty\""
																		}
																	],
																	"id": 1231,
																	"name": "InvalidAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "3697:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (address,string memory) pure returns (error)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3697:58:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1238,
															"nodeType": "RevertStatement",
															"src": "3690:65:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3779:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3796:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3788:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3788:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3779:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "3775:70:7",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "3800:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1247,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3821:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3821:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1249,
															"nodeType": "RevertStatement",
															"src": "3814:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3858:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3878:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3870:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3870:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3858:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "3854:73:7",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "3882:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1258,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3903:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3903:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1260,
															"nodeType": "RevertStatement",
															"src": "3896:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1263,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "3940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3952:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3940:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "3936:83:7",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "3956:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1267,
																		"name": "decimals_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "3991:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4002:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "3138",
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4005:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		}
																	],
																	"id": 1266,
																	"name": "InvalidAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "3977:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3977:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1271,
															"nodeType": "RevertStatement",
															"src": "3970:38:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1274,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4032:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4049:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4032:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "4028:68:7",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "4052:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1277,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "4073:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4073:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1279,
															"nodeType": "RevertStatement",
															"src": "4066:19:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4109:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1283,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4118:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4109:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "4105:115:7",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "4128:92:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4f776e657220616e6420666163746f72792063616e6e6f74206265207468652073616d65",
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4170:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6",
																			"typeString": "literal_string \"Owner and factory cannot be the same\""
																		},
																		"value": "Owner and factory cannot be the same"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6",
																			"typeString": "literal_string \"Owner and factory cannot be the same\""
																		}
																	],
																	"id": 1285,
																	"name": "InvalidContractState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "4149:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4149:60:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "4142:67:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1291,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "4238:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1292,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "4250:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4238:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "4238:21:7"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1295,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4269:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1296,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4279:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4269:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "4269:18:7"
											},
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1299,
														"name": "gameId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "4297:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1300,
														"name": "gameId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4306:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4297:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "4297:16:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "4423:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "4430:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4417:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4417:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "4417:27:7"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_initialMintComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4454:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4477:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4454:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "4454:27:7"
											}
										]
									},
									"id": 1313,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1200,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1185,
													"src": "3438:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1201,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1187,
													"src": "3444:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1202,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1199,
												"name": "ERC20",
												"nameLocations": [
													"3432:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "3432:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3432:19:7"
										},
										{
											"arguments": [
												{
													"id": 1204,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1193,
													"src": "3460:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1205,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1203,
												"name": "Ownable",
												"nameLocations": [
													"3452:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3452:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3452:14:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3261:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3247:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3247:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "3289:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3275:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "3311:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3305:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3305:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "3338:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3330:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3369:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3361:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "factory_",
												"nameLocation": "3392:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3384:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "gameId_",
												"nameLocation": "3418:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3410:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3237:194:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:7"
									},
									"scope": 1661,
									"src": "3226:1262:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "4603:33:7",
										"statements": [
											{
												"expression": {
													"id": 1319,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "4620:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1320,
												"nodeType": "Return",
												"src": "4613:16:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4555:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4578:8:7"
									},
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4563:2:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "4596:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1316,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4596:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:7:7"
									},
									"scope": 1661,
									"src": "4546:90:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "5006:1509:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1336,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5057:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5073:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1337,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5065:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5065:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5057:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "5053:69:7",
												"trueBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "5077:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1342,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "5098:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1344,
															"nodeType": "RevertStatement",
															"src": "5091:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5135:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5145:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5135:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "5131:61:7",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "5148:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1350,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5169:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5169:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1352,
															"nodeType": "RevertStatement",
															"src": "5162:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "5218:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "5210:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5210:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"arguments": [
														{
															"id": 1358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5242:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1357,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5232:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5210:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1361,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "5261:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1362,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5275:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5261:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"nodeType": "IfStatement",
												"src": "5257:104:7",
												"trueBody": {
													"id": 1370,
													"nodeType": "Block",
													"src": "5283:78:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "5324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1366,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5330:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1367,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "5338:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1364,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "5304:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5304:46:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1369,
															"nodeType": "RevertStatement",
															"src": "5297:53:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5459:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1373,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5468:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5468:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5459:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "5455:103:7",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "5483:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1377,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5525:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1378,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "5533:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5533:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1376,
																	"name": "ExcessiveBurnRequest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "5504:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5504:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1381,
															"nodeType": "RevertStatement",
															"src": "5497:50:7"
														}
													]
												}
											},
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "maxBurnPerTx",
														"nameLocation": "5682:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "5674:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5674:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1386,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5697:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5697:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5713:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "5697:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5674:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5766:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1392,
														"name": "maxBurnPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "5775:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5766:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "5762:124:7",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "5789:97:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1395,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5828:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d206275726e20706572207472616e73616374696f6e",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5836:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab",
																			"typeString": "literal_string \"Exceeds maximum burn per transaction\""
																		},
																		"value": "Exceeds maximum burn per transaction"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab",
																			"typeString": "literal_string \"Exceeds maximum burn per transaction\""
																		}
																	],
																	"id": 1394,
																	"name": "InvalidBurnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "5810:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (uint256,string memory) pure returns (error)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5810:65:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1398,
															"nodeType": "RevertStatement",
															"src": "5803:72:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1401,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5974:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1402,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5974:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "5974:21:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1416,
															"nodeType": "Block",
															"src": "6050:69:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1411,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6082:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1412,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6088:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1413,
																				"name": "totalBurned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "6096:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1410,
																			"name": "TokensBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1036,
																			"src": "6069:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256)"
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6069:39:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1415,
																	"nodeType": "EmitStatement",
																	"src": "6064:44:7"
																}
															]
														},
														"errorName": "",
														"id": 1417,
														"nodeType": "TryCatchClause",
														"src": "6050:69:7"
													},
													{
														"block": {
															"id": 1431,
															"nodeType": "Block",
															"src": "6154:167:7",
															"statements": [
																{
																	"expression": {
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1421,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6224:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1422,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "6239:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6224:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1424,
																	"nodeType": "ExpressionStatement",
																	"src": "6224:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1426,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6289:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1427,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6295:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1428,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "6303:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1425,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "6266:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6266:44:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1430,
																	"nodeType": "RevertStatement",
																	"src": "6259:51:7"
																}
															]
														},
														"errorName": "Error",
														"id": 1432,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1420,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1419,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "6146:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1432,
																	"src": "6132:20:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "6132:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6131:22:7"
														},
														"src": "6120:201:7"
													},
													{
														"block": {
															"id": 1443,
															"nodeType": "Block",
															"src": "6328:181:7",
															"statements": [
																{
																	"expression": {
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6398:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1434,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "6413:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6398:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1436,
																	"nodeType": "ExpressionStatement",
																	"src": "6398:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1438,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6463:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1439,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6469:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "556e6b6e6f776e206275726e206572726f72",
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6477:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				},
																				"value": "Unknown burn error"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				}
																			],
																			"id": 1437,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "6440:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6440:58:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1442,
																	"nodeType": "RevertStatement",
																	"src": "6433:65:7"
																}
															]
														},
														"errorName": "",
														"id": 1444,
														"nodeType": "TryCatchClause",
														"src": "6322:187:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1407,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "6036:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "6042:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1405,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "6018:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GameToken_$1661",
																"typeString": "contract GameToken"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6023:12:7",
														"memberName": "_performBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "6018:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:31:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "TryStatement",
												"src": "6014:495:7"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "4694:172:7",
										"text": " @dev Burn tokens from a specific account (called by factory)\n @param from Address to burn tokens from\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "79cc6790",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1329,
												"name": "onlyFactory",
												"nameLocations": [
													"4946:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1172,
												"src": "4946:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4946:11:7"
										},
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "burnAllowed",
												"nameLocations": [
													"4967:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1183,
												"src": "4967:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4967:11:7"
										},
										{
											"id": 1334,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1333,
												"name": "nonReentrant",
												"nameLocations": [
													"4988:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "4988:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4988:12:7"
										}
									],
									"name": "burnFrom",
									"nameLocation": "4880:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4897:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4889:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4911:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4903:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:30:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5006:0:7"
									},
									"scope": 1661,
									"src": "4871:1644:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "6667:108:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1456,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6685:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6689:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6685:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1460,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6707:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GameToken_$1661",
																			"typeString": "contract GameToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GameToken_$1661",
																			"typeString": "contract GameToken"
																		}
																	],
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6699:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6699:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6685:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792073656c662d63616c6c20616c6c6f776564",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6714:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4",
																"typeString": "literal_string \"Only self-call allowed\""
															},
															"value": "Only self-call allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4",
																"typeString": "literal_string \"Only self-call allowed\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6677:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6677:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "6677:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "6755:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "6761:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1466,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "6749:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "6749:19:7"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "6525:76:7",
										"text": " @dev Internal burn function for error handling separation"
									},
									"functionSelector": "f658f32a",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performBurn",
									"nameLocation": "6615:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6636:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6628:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6650:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6642:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6627:30:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6667:0:7"
									},
									"scope": 1661,
									"src": "6606:169:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6969:920:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1482,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7020:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7030:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7020:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "IfStatement",
												"src": "7016:61:7",
												"trueBody": {
													"id": 1488,
													"nodeType": "Block",
													"src": "7033:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1485,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7054:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7054:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1487,
															"nodeType": "RevertStatement",
															"src": "7047:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "7103:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "7095:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7095:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7127:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7131:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7127:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1492,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7117:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7117:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7095:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "7152:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1498,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7166:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7152:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "IfStatement",
												"src": "7148:110:7",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "7174:84:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1501,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7215:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7219:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7215:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "7227:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1504,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "7235:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1500,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "7195:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7195:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1506,
															"nodeType": "RevertStatement",
															"src": "7188:59:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1509,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "7324:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7339:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7324:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "7324:21:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1526,
															"nodeType": "Block",
															"src": "7406:75:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1520,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7438:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7442:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7438:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1522,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7450:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1523,
																				"name": "totalBurned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "7458:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1519,
																			"name": "TokensBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1036,
																			"src": "7425:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256)"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7425:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1525,
																	"nodeType": "EmitStatement",
																	"src": "7420:50:7"
																}
															]
														},
														"errorName": "",
														"id": 1527,
														"nodeType": "TryCatchClause",
														"src": "7406:75:7"
													},
													{
														"block": {
															"id": 1542,
															"nodeType": "Block",
															"src": "7516:173:7",
															"statements": [
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "7586:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1532,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "7601:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7586:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "7586:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1536,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7651:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7655:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7651:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1538,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7663:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1539,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1529,
																				"src": "7671:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1535,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "7628:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7628:50:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1541,
																	"nodeType": "RevertStatement",
																	"src": "7621:57:7"
																}
															]
														},
														"errorName": "Error",
														"id": 1543,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1530,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1529,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "7508:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1543,
																	"src": "7494:20:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1528,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "7494:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "7493:22:7"
														},
														"src": "7482:207:7"
													},
													{
														"block": {
															"id": 1555,
															"nodeType": "Block",
															"src": "7696:187:7",
															"statements": [
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1544,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "7766:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "7781:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7766:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "7766:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1549,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7831:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7835:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7831:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1551,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7843:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "556e6b6e6f776e206275726e206572726f72",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7851:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				},
																				"value": "Unknown burn error"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				}
																			],
																			"id": 1548,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "7808:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7808:64:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1554,
																	"nodeType": "RevertStatement",
																	"src": "7801:71:7"
																}
															]
														},
														"errorName": "",
														"id": 1556,
														"nodeType": "TryCatchClause",
														"src": "7690:193:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"expression": {
																"id": 1515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7386:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7390:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7386:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "7398:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1513,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7368:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GameToken_$1661",
																"typeString": "contract GameToken"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7373:12:7",
														"memberName": "_performBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "7368:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7368:37:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "TryStatement",
												"src": "7364:519:7"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "6785:115:7",
										"text": " @dev Allow users to burn their own tokens directly\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "42966c68",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1477,
												"name": "burnAllowed",
												"nameLocations": [
													"6944:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1183,
												"src": "6944:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6944:11:7"
										},
										{
											"id": 1480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1479,
												"name": "nonReentrant",
												"nameLocations": [
													"6956:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "6956:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6956:12:7"
										}
									],
									"name": "burn",
									"nameLocation": "6914:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6927:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6919:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6919:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6918:16:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6969:0:7"
									},
									"scope": 1661,
									"src": "6905:984:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "8132:79:7",
										"statements": [
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1567,
														"name": "burnEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "8142:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1568,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "8156:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8142:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "8142:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1572,
															"name": "enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "8196:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1571,
														"name": "BurnStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "8178:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "EmitStatement",
												"src": "8173:31:7"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "7948:122:7",
										"text": " @dev Enable/disable burning (emergency control)\n @param enabled Whether burning should be enabled"
									},
									"functionSelector": "7b2c835f",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1564,
												"name": "onlyOwner",
												"nameLocations": [
													"8122:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8122:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8122:9:7"
										}
									],
									"name": "setBurnEnabled",
									"nameLocation": "8084:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "8104:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "8099:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8099:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8098:14:7"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8132:0:7"
									},
									"scope": 1661,
									"src": "8075:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "8568:362:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "8582:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8596:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8588:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1589,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8588:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8588:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8582:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "8578:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1594,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "8607:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8607:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1596,
													"nodeType": "RevertStatement",
													"src": "8600:20:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1598,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "8643:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8660:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8652:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8652:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8652:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8643:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1630,
													"nodeType": "Block",
													"src": "8829:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1626,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "8902:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1627,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "8906:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1623,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1579,
																				"src": "8886:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1622,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "8879:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8879:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8893:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "8879:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8879:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1629,
															"nodeType": "ExpressionStatement",
															"src": "8879:34:7"
														}
													]
												},
												"id": 1631,
												"nodeType": "IfStatement",
												"src": "8639:285:7",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "8664:159:7",
													"statements": [
														{
															"assignments": [
																1605,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1605,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "8711:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1621,
																	"src": "8706:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1604,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8706:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1615,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8756:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1581,
																					"src": "8732:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:8:7",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8736:4:7",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "8724:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1611,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "8748:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "8724:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8724:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8705:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1617,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "8781:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8790:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		},
																		"value": "ETH transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8773:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8773:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "8773:39:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "8221:224:7",
										"text": " @dev Emergency function to recover stuck tokens\n @param token Address of token to recover (address(0) for ETH)\n @param to Address to send recovered tokens\n @param amount Amount to recover"
									},
									"functionSelector": "ad1329d1",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1585,
												"name": "onlyOwner",
												"nameLocations": [
													"8558:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8558:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8558:9:7"
										}
									],
									"name": "emergencyRecover",
									"nameLocation": "8459:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8493:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8485:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8485:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8516:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8508:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8536:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8528:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8475:73:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8568:0:7"
									},
									"scope": 1661,
									"src": "8450:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "9164:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1644,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "9309:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "9313:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "9303:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9303:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "9303:17:7"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "8940:149:7",
										"text": " @dev Restricted mint function - only callable by factory\n This ensures tokens can only be created when XP is properly locked"
									},
									"functionSelector": "a4f0ecd3",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1640,
												"name": "onlyFactory",
												"nameLocations": [
													"9152:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1172,
												"src": "9152:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9152:11:7"
										}
									],
									"name": "factoryMint",
									"nameLocation": "9103:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9123:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "9115:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9135:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "9127:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9114:28:7"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9164:0:7"
									},
									"scope": 1661,
									"src": "9094:233:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "9524:64:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d696e742064697361626c65643a2075736520666163746f727920746f206c6f636b205850",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9541:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751",
																"typeString": "literal_string \"Mint disabled: use factory to lock XP\""
															},
															"value": "Mint disabled: use factory to lock XP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751",
																"typeString": "literal_string \"Mint disabled: use factory to lock XP\""
															}
														],
														"id": 1655,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "9534:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9534:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "9534:47:7"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "9337:145:7",
										"text": " @dev Block any attempts to call mint functions directly\n Prevents manual token creation outside the XP locking mechanism"
									},
									"functionSelector": "6a627842",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "9496:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "9501:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9500:9:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9524:0:7"
									},
									"scope": 1661,
									"src": "9487:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1662,
							"src": "483:9107:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								947,
								1042,
								1044,
								1050,
								1058,
								1064,
								1070,
								1074,
								1078,
								1080,
								1084,
								1086,
								1094,
								1100,
								1106,
								1110,
								1118,
								1126,
								1130,
								1136,
								1140,
								1144,
								1150,
								1154,
								1158
							],
							"usedEvents": [
								24,
								811,
								820,
								1036,
								1040
							]
						}
					],
					"src": "32:9559:7"
				},
				"id": 7
			}
		}
	}
}