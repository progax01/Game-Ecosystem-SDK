{
	"id": "4a10254446c35cb323d14b9883070da8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"GameToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title GameToken\n * @dev Optimized ERC-20 game token with enhanced security\n * Each game gets its own instance of this contract\n * Optimized for gas efficiency while maintaining security\n */\ncontract GameToken is ERC20, Ownable, ReentrancyGuard {\n    // ============ Immutable Variables (Gas Optimized) ============\n    uint8 private immutable _decimals;\n    address public immutable factory; // Factory contract that deployed this token\n    uint256 public immutable gameId; // Unique game identifier\n    \n    // ============ State Variables ============\n    uint256 public totalBurned; // Track total burned for analytics\n    bool public burnEnabled = true; // Emergency disable burning\n    \n    // ============ Minting Protection ============\n    \n    // State to track if initial minting is complete\n    bool private _initialMintComplete;\n    \n    // ============ Events ============\n    event TokensBurned(address indexed user, uint256 amount, uint256 totalBurned);\n    event BurnStatusChanged(bool enabled);\n    \n    // ============ Comprehensive Error Definitions ============\n    // Input Validation Errors\n    error ZeroAmount();\n    error ZeroAddress();\n    error InvalidAddress(address provided, string reason);\n    error InvalidAmount(uint256 provided, uint256 min, uint256 max);\n    \n    // Access Control Errors\n    error UnauthorizedFactory(address caller, address expectedFactory);\n    error UnauthorizedOwner(address caller, address expectedOwner);\n    error UnauthorizedBurner(address caller);\n    \n    // Contract State Errors\n    error BurnDisabled(string reason);\n    error ContractPaused();\n    error InvalidContractState(string reason);\n    error ReentrancyDetected();\n    \n    // Balance and Supply Errors\n    error InsufficientBalance(address account, uint256 required, uint256 available);\n    error ExcessiveBurnRequest(uint256 requested, uint256 maxAllowed);\n    error InvalidBurnAmount(uint256 amount, string reason);\n    \n    // Business Logic Errors\n    error MintingDisabledAfterInit(string reason);\n    error BurningOperationFailed(address from, uint256 amount, string reason);\n    error TransferOperationFailed(address from, address to, uint256 amount);\n    error GameTokenInactive(uint256 gameId);\n    error InvalidGameOperation(string operation, string reason);\n    \n    // Mathematical Errors\n    error MathOverflow(string operation);\n    error MathUnderflow(string operation);\n    \n    // Recovery Errors\n    error RecoveryFailed(address token, string reason);\n    error InvalidRecoveryTarget(address target);\n    error RecoveryNotAllowed(string reason);\n    \n    // ============ Modifiers ============\n    modifier onlyFactory() {\n        if (msg.sender != factory) revert UnauthorizedBurner(msg.sender);\n        _;\n    }\n    \n    modifier burnAllowed() {\n        if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\");\n        _;\n    }\n    \n    // ============ Constructor ============\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals_,\n        uint256 initialSupply,\n        address owner,\n        address factory_,\n        uint256 gameId_\n    ) ERC20(name, symbol) Ownable(owner) {\n        // Comprehensive input validation\n        if (bytes(name).length == 0) {\n            revert InvalidAddress(address(0), \"Token name cannot be empty\");\n        }\n        if (bytes(symbol).length == 0) {\n            revert InvalidAddress(address(0), \"Token symbol cannot be empty\");\n        }\n        if (owner == address(0)) {\n            revert ZeroAddress();\n        }\n        if (factory_ == address(0)) {\n            revert ZeroAddress();\n        }\n        if (decimals_ > 18) {\n            revert InvalidAmount(decimals_, 0, 18);\n        }\n        if (initialSupply == 0) {\n            revert ZeroAmount();\n        }\n        if (owner == factory_) {\n            revert InvalidContractState(\"Owner and factory cannot be the same\");\n        }\n        \n        _decimals = decimals_;\n        factory = factory_;\n        gameId = gameId_;\n        \n        // Mint initial supply directly to owner - simplified for deployment success\n        _mint(owner, initialSupply);\n        _initialMintComplete = true;\n    }\n    \n    // ============ View Functions ============\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n    \n    // ============ Burn Functions ============\n    /**\n     * @dev Burn tokens from a specific account (called by factory)\n     * @param from Address to burn tokens from\n     * @param amount Amount of tokens to burn\n     */\n    function burnFrom(address from, uint256 amount) \n        external \n        onlyFactory \n        burnAllowed \n        nonReentrant \n    {\n        // Enhanced input validation\n        if (from == address(0)) {\n            revert ZeroAddress();\n        }\n        if (amount == 0) {\n            revert ZeroAmount();\n        }\n        \n        uint256 userBalance = balanceOf(from);\n        if (userBalance < amount) {\n            revert InsufficientBalance(from, amount, userBalance);\n        }\n        \n        // Validate burn amount isn't excessive (no more than total supply)\n        if (amount > totalSupply()) {\n            revert ExcessiveBurnRequest(amount, totalSupply());\n        }\n        \n        // Additional security check - prevent burning more than reasonable limit per transaction\n        uint256 maxBurnPerTx = totalSupply() / 10; // Max 10% of supply per transaction\n        if (amount > maxBurnPerTx) {\n            revert InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\");\n        }\n        \n        // Update total burned before burning (for reentrancy safety)\n        totalBurned += amount;\n        \n        try this._performBurn(from, amount) {\n            emit TokensBurned(from, amount, totalBurned);\n        } catch Error(string memory reason) {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(from, amount, reason);\n        } catch {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(from, amount, \"Unknown burn error\");\n        }\n    }\n    \n    /**\n     * @dev Internal burn function for error handling separation\n     */\n    function _performBurn(address from, uint256 amount) external {\n        require(msg.sender == address(this), \"Only self-call allowed\");\n        _burn(from, amount);\n    }\n    \n    /**\n     * @dev Allow users to burn their own tokens directly\n     * @param amount Amount of tokens to burn\n     */\n    function burn(uint256 amount) external burnAllowed nonReentrant {\n        // Enhanced input validation\n        if (amount == 0) {\n            revert ZeroAmount();\n        }\n        \n        uint256 userBalance = balanceOf(msg.sender);\n        if (userBalance < amount) {\n            revert InsufficientBalance(msg.sender, amount, userBalance);\n        }\n        \n        // Update total burned and perform burn\n        totalBurned += amount;\n        \n        try this._performBurn(msg.sender, amount) {\n            emit TokensBurned(msg.sender, amount, totalBurned);\n        } catch Error(string memory reason) {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(msg.sender, amount, reason);\n        } catch {\n            // Revert total burned update if burn fails\n            totalBurned -= amount;\n            revert BurningOperationFailed(msg.sender, amount, \"Unknown burn error\");\n        }\n    }\n    \n    // ============ Admin Functions ============\n    /**\n     * @dev Enable/disable burning (emergency control)\n     * @param enabled Whether burning should be enabled\n     */\n    function setBurnEnabled(bool enabled) external onlyOwner {\n        burnEnabled = enabled;\n        emit BurnStatusChanged(enabled);\n    }\n    \n    /**\n     * @dev Emergency function to recover stuck tokens\n     * @param token Address of token to recover (address(0) for ETH)\n     * @param to Address to send recovered tokens\n     * @param amount Amount to recover\n     */\n    function emergencyRecover(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner {\n        if (to == address(0)) revert ZeroAddress();\n        \n        if (token == address(0)) {\n            // Recover ETH\n            (bool success, ) = payable(to).call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            // Recover ERC20 tokens\n            IERC20(token).transfer(to, amount);\n        }\n    }\n    \n    /**\n     * @dev Restricted mint function - only callable by factory\n     * This ensures tokens can only be created when XP is properly locked\n     */\n    function factoryMint(address to, uint256 amount) external onlyFactory {\n        // Factory can mint even after initial mint is complete\n        // This represents XP being locked for additional tokens\n        _mint(to, amount);\n    }\n    \n    /**\n     * @dev Block any attempts to call mint functions directly\n     * Prevents manual token creation outside the XP locking mechanism\n     */\n    function mint(address) external pure {\n        revert(\"Mint disabled: use factory to lock XP\");\n    }\n} "
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 944,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GameToken.sol": {
				"GameToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "factory_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "gameId_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "BurnDisabled",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "BurningOperationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ContractPaused",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAllowed",
									"type": "uint256"
								}
							],
							"name": "ExcessiveBurnRequest",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "GameTokenInactive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "required",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provided",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidBurnAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidContractState",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "InvalidGameOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "InvalidRecoveryTarget",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "MathOverflow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "operation",
									"type": "string"
								}
							],
							"name": "MathUnderflow",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "MintingDisabledAfterInit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "RecoveryFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "RecoveryNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyDetected",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransferOperationFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "UnauthorizedBurner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "expectedFactory",
									"type": "address"
								}
							],
							"name": "UnauthorizedFactory",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "expectedOwner",
									"type": "address"
								}
							],
							"name": "UnauthorizedOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "BurnStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalBurned",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "_performBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyRecover",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "factoryMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setBurnEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optimized ERC-20 game token with enhanced security Each game gets its own instance of this contract Optimized for gas efficiency while maintaining security",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"_performBurn(address,uint256)": {
								"details": "Internal burn function for error handling separation"
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Allow users to burn their own tokens directly",
								"params": {
									"amount": "Amount of tokens to burn"
								}
							},
							"burnFrom(address,uint256)": {
								"details": "Burn tokens from a specific account (called by factory)",
								"params": {
									"amount": "Amount of tokens to burn",
									"from": "Address to burn tokens from"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"emergencyRecover(address,address,uint256)": {
								"details": "Emergency function to recover stuck tokens",
								"params": {
									"amount": "Amount to recover",
									"to": "Address to send recovered tokens",
									"token": "Address of token to recover (address(0) for ETH)"
								}
							},
							"factoryMint(address,uint256)": {
								"details": "Restricted mint function - only callable by factory This ensures tokens can only be created when XP is properly locked"
							},
							"mint(address)": {
								"details": "Block any attempts to call mint functions directly Prevents manual token creation outside the XP locking mechanism"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setBurnEnabled(bool)": {
								"details": "Enable/disable burning (emergency control)",
								"params": {
									"enabled": "Whether burning should be enabled"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "GameToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xe0)\n    /* \"GameToken.sol\":919:949  bool public burnEnabled = true */\n  0x08\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"GameToken.sol\":945:949  true */\n  0x01\n    /* \"GameToken.sol\":919:949  bool public burnEnabled = true */\n  or\n  swap1\n  sstore\n    /* \"GameToken.sol\":3226:4488  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GameToken.sol\":3460:3465  owner */\n  dup3\n    /* \"GameToken.sol\":3438:3442  name */\n  dup8\n    /* \"GameToken.sol\":3444:3450  symbol */\n  dup8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_9\n    /* \"GameToken.sol\":3438:3442  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4823:4874   */\n  mstore\n    /* \"#utility.yul\":4796:4814   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x06\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  sstore\n    /* \"GameToken.sol\":3523:3541  bytes(name).length */\n  dup7\n  mload\n    /* \"GameToken.sol\":3545:3546  0 */\n  0x00\n    /* \"GameToken.sol\":3523:3546  bytes(name).length == 0 */\n  sub\n    /* \"GameToken.sol\":3519:3636  if (bytes(name).length == 0) {... */\n  tag_20\n  jumpi\n    /* \"GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0xf7693c3d)\n  dup2\n  mstore\n    /* \"GameToken.sol\":3592:3593  0 */\n  0x00\n    /* \"GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5097:5148   */\n  mstore\n    /* \"#utility.yul\":5164:5182   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5157:5187   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":5223:5225   */\n  0x1a\n    /* \"#utility.yul\":5203:5221   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5196:5226   */\n  mstore\n    /* \"#utility.yul\":5262:5290   */\n  0x546f6b656e206e616d652063616e6e6f7420626520656d707479000000000000\n    /* \"#utility.yul\":5242:5260   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":5235:5291   */\n  mstore\n    /* \"#utility.yul\":5308:5327   */\n  0x84\n  add\n    /* \"GameToken.sol\":3569:3625  InvalidAddress(address(0), \"Token name cannot be empty\") */\n  tag_14\n    /* \"#utility.yul\":4885:5333   */\n  jump\n    /* \"GameToken.sol\":3519:3636  if (bytes(name).length == 0) {... */\ntag_20:\n    /* \"GameToken.sol\":3655:3661  symbol */\n  dup6\n    /* \"GameToken.sol\":3649:3669  bytes(symbol).length */\n  mload\n    /* \"GameToken.sol\":3673:3674  0 */\n  0x00\n    /* \"GameToken.sol\":3649:3674  bytes(symbol).length == 0 */\n  sub\n    /* \"GameToken.sol\":3645:3766  if (bytes(symbol).length == 0) {... */\n  tag_23\n  jumpi\n    /* \"GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0xf7693c3d)\n  dup2\n  mstore\n    /* \"GameToken.sol\":3720:3721  0 */\n  0x00\n    /* \"GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5550:5601   */\n  mstore\n    /* \"#utility.yul\":5617:5635   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5610:5640   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":5676:5678   */\n  0x1c\n    /* \"#utility.yul\":5656:5674   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5649:5679   */\n  mstore\n    /* \"#utility.yul\":5715:5745   */\n  0x546f6b656e2073796d626f6c2063616e6e6f7420626520656d70747900000000\n    /* \"#utility.yul\":5695:5713   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":5688:5746   */\n  mstore\n    /* \"#utility.yul\":5763:5782   */\n  0x84\n  add\n    /* \"GameToken.sol\":3697:3755  InvalidAddress(address(0), \"Token symbol cannot be empty\") */\n  tag_14\n    /* \"#utility.yul\":5338:5788   */\n  jump\n    /* \"GameToken.sol\":3645:3766  if (bytes(symbol).length == 0) {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GameToken.sol\":3779:3798  owner == address(0) */\n  dup4\n  and\n    /* \"GameToken.sol\":3775:3845  if (owner == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"GameToken.sol\":3821:3834  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"GameToken.sol\":3775:3845  if (owner == address(0)) {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GameToken.sol\":3858:3880  factory_ == address(0) */\n  dup3\n  and\n    /* \"GameToken.sol\":3854:3927  if (factory_ == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"GameToken.sol\":3903:3916  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"GameToken.sol\":3854:3927  if (factory_ == address(0)) {... */\ntag_27:\n    /* \"GameToken.sol\":3952:3954  18 */\n  0x12\n    /* \"GameToken.sol\":3940:3949  decimals_ */\n  dup6\n    /* \"GameToken.sol\":3940:3954  decimals_ > 18 */\n  0xff\n  and\n  gt\n    /* \"GameToken.sol\":3936:4019  if (decimals_ > 18) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"GameToken.sol\":3977:4008  InvalidAmount(decimals_, 0, 18) */\n  mload(0x40)\n  shl(0xe0, 0x46f4384b)\n  dup2\n  mstore\n    /* \"#utility.yul\":6040:6044   */\n  0xff\n    /* \"#utility.yul\":6028:6045   */\n  dup7\n  and\n    /* \"GameToken.sol\":3977:4008  InvalidAmount(decimals_, 0, 18) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6010:6046   */\n  mstore\n    /* \"GameToken.sol\":4002:4003  0 */\n  0x00\n    /* \"#utility.yul\":6062:6080   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6055:6089   */\n  mstore\n    /* \"GameToken.sol\":4005:4007  18 */\n  0x12\n    /* \"#utility.yul\":6105:6123   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6098:6132   */\n  mstore\n    /* \"#utility.yul\":5983:6001   */\n  0x64\n  add\n    /* \"GameToken.sol\":3977:4008  InvalidAmount(decimals_, 0, 18) */\n  tag_14\n    /* \"#utility.yul\":5793:6138   */\n  jump\n    /* \"GameToken.sol\":3936:4019  if (decimals_ > 18) {... */\ntag_28:\n    /* \"GameToken.sol\":4032:4045  initialSupply */\n  dup4\n    /* \"GameToken.sol\":4049:4050  0 */\n  0x00\n    /* \"GameToken.sol\":4032:4050  initialSupply == 0 */\n  sub\n    /* \"GameToken.sol\":4028:4096  if (initialSupply == 0) {... */\n  tag_31\n  jumpi\n    /* \"GameToken.sol\":4073:4085  ZeroAmount() */\n  mload(0x40)\n  shl(0xe0, 0x1f2a2005)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"GameToken.sol\":4028:4096  if (initialSupply == 0) {... */\ntag_31:\n    /* \"GameToken.sol\":4118:4126  factory_ */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GameToken.sol\":4109:4126  owner == factory_ */\n  and\n    /* \"GameToken.sol\":4109:4114  owner */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GameToken.sol\":4109:4126  owner == factory_ */\n  and\n  sub\n    /* \"GameToken.sol\":4105:4220  if (owner == factory_) {... */\n  tag_32\n  jumpi\n    /* \"GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  mload(0x40)\n  shl(0xe2, 0x313b9aa1)\n  dup2\n  mstore\n    /* \"#utility.yul\":6345:6347   */\n  0x20\n    /* \"GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6327:6348   */\n  mstore\n    /* \"#utility.yul\":6384:6386   */\n  0x24\n    /* \"#utility.yul\":6364:6382   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6357:6387   */\n  mstore\n    /* \"#utility.yul\":6423:6457   */\n  0x4f776e657220616e6420666163746f72792063616e6e6f742062652074686520\n    /* \"#utility.yul\":6403:6421   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6396:6458   */\n  mstore\n  shl(0xe0, 0x73616d65)\n    /* \"#utility.yul\":6474:6492   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":6467:6501   */\n  mstore\n    /* \"#utility.yul\":6518:6537   */\n  0x84\n  add\n    /* \"GameToken.sol\":4149:4209  InvalidContractState(\"Owner and factory cannot be the same\") */\n  tag_14\n    /* \"#utility.yul\":6143:6543   */\n  jump\n    /* \"GameToken.sol\":4105:4220  if (owner == factory_) {... */\ntag_32:\n    /* \"GameToken.sol\":4238:4259  _decimals = decimals_ */\n  0xff\n  dup6\n  and\n  0x80\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"GameToken.sol\":4269:4287  factory = factory_ */\n  dup3\n  and\n  0xa0\n  mstore\n    /* \"GameToken.sol\":4297:4313  gameId = gameId_ */\n  0xc0\n  dup2\n  swap1\n  mstore\n    /* \"GameToken.sol\":4417:4444  _mint(owner, initialSupply) */\n  tag_35\n    /* \"GameToken.sol\":4423:4428  owner */\n  dup4\n    /* \"GameToken.sol\":4430:4443  initialSupply */\n  dup6\n    /* \"GameToken.sol\":4417:4422  _mint */\n  tag_36\n    /* \"GameToken.sol\":4417:4444  _mint(owner, initialSupply) */\n  jump\t// in\ntag_35:\n  pop\n  pop\n    /* \"GameToken.sol\":4454:4474  _initialMintComplete */\n  0x08\n    /* \"GameToken.sol\":4454:4481  _initialMintComplete = true */\n  dup1\n  sload\n  not(0xff00)\n  and\n  0x0100\n  or\n  swap1\n  sstore\n  pop\n    /* \"GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  tag_63\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4823:4874   */\n  mstore\n    /* \"#utility.yul\":4796:4814   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_14\n    /* \"#utility.yul\":4677:4880   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_43\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_48\n  swap1\n  pop\n  jump\ntag_45:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6995:7027   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6977:7028   */\n  mstore\n    /* \"#utility.yul\":7044:7062   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":7037:7071   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":7087:7105   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":7080:7114   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6950:6968   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":6775:7120   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_48:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_53)\ntag_52:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_54\n  swap2\n    /* \"#utility.yul\":7271:7296   */\n  dup2\n  mstore\n    /* \"#utility.yul\":7259:7261   */\n  0x20\n    /* \"#utility.yul\":7244:7262   */\n  add\n  swap1\n    /* \"#utility.yul\":7125:7302   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_56:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_57:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_66:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_68\n  tag_56\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_70\n  tag_56\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_71:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1051   */\ntag_58:\n    /* \"#utility.yul\":953:966   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":995:1026   */\n  dup2\n  and\n    /* \"#utility.yul\":985:1027   */\n  dup2\n  eq\n    /* \"#utility.yul\":975:1045   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1041:1042   */\n  0x00\n    /* \"#utility.yul\":1038:1039   */\n  0x00\n    /* \"#utility.yul\":1031:1043   */\n  revert\n    /* \"#utility.yul\":975:1045   */\ntag_73:\n    /* \"#utility.yul\":874:1051   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:2163   */\ntag_3:\n    /* \"#utility.yul\":1198:1204   */\n  0x00\n    /* \"#utility.yul\":1206:1212   */\n  0x00\n    /* \"#utility.yul\":1214:1220   */\n  0x00\n    /* \"#utility.yul\":1222:1228   */\n  0x00\n    /* \"#utility.yul\":1230:1236   */\n  0x00\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1246:1252   */\n  0x00\n    /* \"#utility.yul\":1299:1302   */\n  0xe0\n    /* \"#utility.yul\":1287:1296   */\n  dup9\n    /* \"#utility.yul\":1278:1285   */\n  dup11\n    /* \"#utility.yul\":1274:1297   */\n  sub\n    /* \"#utility.yul\":1270:1303   */\n  slt\n    /* \"#utility.yul\":1267:1320   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1316:1317   */\n  0x00\n    /* \"#utility.yul\":1313:1314   */\n  0x00\n    /* \"#utility.yul\":1306:1318   */\n  revert\n    /* \"#utility.yul\":1267:1320   */\ntag_75:\n    /* \"#utility.yul\":1343:1359   */\n  dup8\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1371:1401   */\n  dup2\n  gt\n    /* \"#utility.yul\":1368:1418   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1414:1415   */\n  0x00\n    /* \"#utility.yul\":1411:1412   */\n  0x00\n    /* \"#utility.yul\":1404:1416   */\n  revert\n    /* \"#utility.yul\":1368:1418   */\ntag_76:\n    /* \"#utility.yul\":1437:1498   */\n  tag_77\n    /* \"#utility.yul\":1490:1497   */\n  dup11\n    /* \"#utility.yul\":1481:1487   */\n  dup3\n    /* \"#utility.yul\":1470:1479   */\n  dup12\n    /* \"#utility.yul\":1466:1488   */\n  add\n    /* \"#utility.yul\":1437:1498   */\n  tag_57\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1544:1546   */\n  0x20\n    /* \"#utility.yul\":1529:1547   */\n  dup11\n  add\n    /* \"#utility.yul\":1523:1548   */\n  mload\n    /* \"#utility.yul\":1427:1498   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":1523:1548   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1560:1592   */\n  dup2\n  gt\n    /* \"#utility.yul\":1557:1609   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":1605:1606   */\n  0x00\n    /* \"#utility.yul\":1602:1603   */\n  0x00\n    /* \"#utility.yul\":1595:1607   */\n  revert\n    /* \"#utility.yul\":1557:1609   */\ntag_78:\n    /* \"#utility.yul\":1628:1691   */\n  tag_79\n    /* \"#utility.yul\":1683:1690   */\n  dup11\n    /* \"#utility.yul\":1672:1680   */\n  dup3\n    /* \"#utility.yul\":1661:1670   */\n  dup12\n    /* \"#utility.yul\":1657:1681   */\n  add\n    /* \"#utility.yul\":1628:1691   */\n  tag_57\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1618:1691   */\n  swap7\n  pop\n  pop\n    /* \"#utility.yul\":1734:1736   */\n  0x40\n    /* \"#utility.yul\":1723:1732   */\n  dup9\n    /* \"#utility.yul\":1719:1737   */\n  add\n    /* \"#utility.yul\":1713:1738   */\n  mload\n    /* \"#utility.yul\":1778:1782   */\n  0xff\n    /* \"#utility.yul\":1771:1776   */\n  dup2\n    /* \"#utility.yul\":1767:1783   */\n  and\n    /* \"#utility.yul\":1760:1765   */\n  dup2\n    /* \"#utility.yul\":1757:1784   */\n  eq\n    /* \"#utility.yul\":1747:1802   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1798:1799   */\n  0x00\n    /* \"#utility.yul\":1795:1796   */\n  0x00\n    /* \"#utility.yul\":1788:1800   */\n  revert\n    /* \"#utility.yul\":1747:1802   */\ntag_80:\n    /* \"#utility.yul\":1892:1894   */\n  0x60\n    /* \"#utility.yul\":1877:1895   */\n  dup10\n  add\n    /* \"#utility.yul\":1871:1896   */\n  mload\n    /* \"#utility.yul\":1821:1826   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":1871:1896   */\n  swap4\n  pop\n    /* \"#utility.yul\":1941:1991   */\n  tag_81\n    /* \"#utility.yul\":1986:1989   */\n  0x80\n    /* \"#utility.yul\":1971:1990   */\n  dup10\n  add\n    /* \"#utility.yul\":1941:1991   */\n  tag_58\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1931:1991   */\n  swap3\n  pop\n    /* \"#utility.yul\":2010:2060   */\n  tag_82\n    /* \"#utility.yul\":2055:2058   */\n  0xa0\n    /* \"#utility.yul\":2044:2053   */\n  dup10\n    /* \"#utility.yul\":2040:2059   */\n  add\n    /* \"#utility.yul\":2010:2060   */\n  tag_58\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2000:2060   */\n  swap2\n  pop\n    /* \"#utility.yul\":2084:2085   */\n  0x00\n    /* \"#utility.yul\":2126:2129   */\n  0xc0\n    /* \"#utility.yul\":2115:2124   */\n  dup10\n    /* \"#utility.yul\":2111:2130   */\n  add\n    /* \"#utility.yul\":2105:2131   */\n  mload\n    /* \"#utility.yul\":2094:2131   */\n  swap1\n  pop\n    /* \"#utility.yul\":2150:2157   */\n  dup1\n    /* \"#utility.yul\":2140:2157   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1056:2163   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2168:2548   */\ntag_59:\n    /* \"#utility.yul\":2247:2248   */\n  0x01\n    /* \"#utility.yul\":2243:2255   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2290:2302   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2311:2372   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2365:2369   */\n  0x7f\n    /* \"#utility.yul\":2357:2363   */\n  dup3\n    /* \"#utility.yul\":2353:2370   */\n  and\n    /* \"#utility.yul\":2343:2370   */\n  swap2\n  pop\n    /* \"#utility.yul\":2311:2372   */\ntag_84:\n    /* \"#utility.yul\":2418:2420   */\n  0x20\n    /* \"#utility.yul\":2410:2416   */\n  dup3\n    /* \"#utility.yul\":2407:2421   */\n  lt\n    /* \"#utility.yul\":2387:2405   */\n  dup2\n    /* \"#utility.yul\":2384:2422   */\n  sub\n    /* \"#utility.yul\":2381:2542   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2464:2474   */\n  0x4e487b71\n    /* \"#utility.yul\":2459:2462   */\n  0xe0\n    /* \"#utility.yul\":2455:2475   */\n  shl\n    /* \"#utility.yul\":2452:2453   */\n  0x00\n    /* \"#utility.yul\":2445:2476   */\n  mstore\n    /* \"#utility.yul\":2499:2503   */\n  0x22\n    /* \"#utility.yul\":2496:2497   */\n  0x04\n    /* \"#utility.yul\":2489:2504   */\n  mstore\n    /* \"#utility.yul\":2527:2531   */\n  0x24\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2517:2532   */\n  revert\n    /* \"#utility.yul\":2381:2542   */\ntag_85:\n  pop\n    /* \"#utility.yul\":2168:2548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2679:3197   */\ntag_61:\n    /* \"#utility.yul\":2781:2783   */\n  0x1f\n    /* \"#utility.yul\":2776:2779   */\n  dup3\n    /* \"#utility.yul\":2773:2784   */\n  gt\n    /* \"#utility.yul\":2770:3191   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2817:2822   */\n  dup1\n    /* \"#utility.yul\":2814:2815   */\n  0x00\n    /* \"#utility.yul\":2807:2823   */\n  mstore\n    /* \"#utility.yul\":2861:2865   */\n  0x20\n    /* \"#utility.yul\":2858:2859   */\n  0x00\n    /* \"#utility.yul\":2848:2866   */\n  keccak256\n    /* \"#utility.yul\":2931:2933   */\n  0x1f\n    /* \"#utility.yul\":2919:2929   */\n  dup5\n    /* \"#utility.yul\":2915:2934   */\n  add\n    /* \"#utility.yul\":2912:2913   */\n  0x05\n    /* \"#utility.yul\":2908:2935   */\n  shr\n    /* \"#utility.yul\":2902:2906   */\n  dup2\n    /* \"#utility.yul\":2898:2936   */\n  add\n    /* \"#utility.yul\":2967:2971   */\n  0x20\n    /* \"#utility.yul\":2955:2965   */\n  dup6\n    /* \"#utility.yul\":2952:2972   */\n  lt\n    /* \"#utility.yul\":2949:2996   */\n  iszero\n  tag_89\n  jumpi\n  pop\n    /* \"#utility.yul\":2990:2994   */\n  dup1\n    /* \"#utility.yul\":2949:2996   */\ntag_89:\n    /* \"#utility.yul\":3045:3047   */\n  0x1f\n    /* \"#utility.yul\":3040:3043   */\n  dup5\n    /* \"#utility.yul\":3036:3048   */\n  add\n    /* \"#utility.yul\":3033:3034   */\n  0x05\n    /* \"#utility.yul\":3029:3049   */\n  shr\n    /* \"#utility.yul\":3023:3027   */\n  dup3\n    /* \"#utility.yul\":3019:3050   */\n  add\n    /* \"#utility.yul\":3009:3050   */\n  swap2\n  pop\n    /* \"#utility.yul\":3100:3181   */\ntag_90:\n    /* \"#utility.yul\":3118:3120   */\n  dup2\n    /* \"#utility.yul\":3111:3116   */\n  dup2\n    /* \"#utility.yul\":3108:3121   */\n  lt\n    /* \"#utility.yul\":3100:3181   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3177:3178   */\n  0x00\n    /* \"#utility.yul\":3163:3179   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3144:3145   */\n  0x01\n    /* \"#utility.yul\":3133:3146   */\n  add\n    /* \"#utility.yul\":3100:3181   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":3104:3107   */\n  pop\n  pop\n    /* \"#utility.yul\":2770:3191   */\ntag_88:\n    /* \"#utility.yul\":2679:3197   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3373:4672   */\ntag_10:\n    /* \"#utility.yul\":3493:3503   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3515:3545   */\n  dup2\n  gt\n    /* \"#utility.yul\":3512:3568   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3548:3566   */\n  tag_96\n  tag_56\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3577:3674   */\n  tag_97\n    /* \"#utility.yul\":3667:3673   */\n  dup2\n    /* \"#utility.yul\":3627:3665   */\n  tag_98\n    /* \"#utility.yul\":3659:3663   */\n  dup5\n    /* \"#utility.yul\":3653:3664   */\n  sload\n    /* \"#utility.yul\":3627:3665   */\n  tag_59\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3621:3625   */\n  dup5\n    /* \"#utility.yul\":3577:3674   */\n  tag_61\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3723:3727   */\n  0x20\n    /* \"#utility.yul\":3754:3756   */\n  0x1f\n    /* \"#utility.yul\":3743:3757   */\n  dup3\n  gt\n    /* \"#utility.yul\":3771:3772   */\n  0x01\n    /* \"#utility.yul\":3766:4415   */\n  dup2\n  eq\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4459:4460   */\n  0x00\n    /* \"#utility.yul\":4476:4482   */\n  dup4\n    /* \"#utility.yul\":4473:4562   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":4528:4547   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4522:4548   */\n  mload\n    /* \"#utility.yul\":4473:4562   */\ntag_101:\n  not(0x00)\n    /* \"#utility.yul\":3330:3331   */\n  0x03\n    /* \"#utility.yul\":3326:3337   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3322:3346   */\n  shr\n    /* \"#utility.yul\":3318:3347   */\n  not\n    /* \"#utility.yul\":3308:3348   */\n  and\n    /* \"#utility.yul\":3354:3355   */\n  0x01\n    /* \"#utility.yul\":3350:3361   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3305:3362   */\n  or\n    /* \"#utility.yul\":4575:4656   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3736:4666   */\n  jump(tag_92)\n    /* \"#utility.yul\":3766:4415   */\ntag_100:\n    /* \"#utility.yul\":2626:2627   */\n  0x00\n    /* \"#utility.yul\":2619:2633   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2663:2667   */\n  0x20\n    /* \"#utility.yul\":2650:2668   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3802:3822   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3920:4142   */\ntag_104:\n    /* \"#utility.yul\":3934:3941   */\n  dup3\n    /* \"#utility.yul\":3931:3932   */\n  dup2\n    /* \"#utility.yul\":3928:3942   */\n  lt\n    /* \"#utility.yul\":3920:4142   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4016:4035   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4010:4036   */\n  mload\n    /* \"#utility.yul\":3995:4037   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4123:4127   */\n  0x20\n    /* \"#utility.yul\":4108:4128   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":4076:4077   */\n  0x01\n    /* \"#utility.yul\":4064:4078   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3950:3962   */\n  add\n    /* \"#utility.yul\":3920:4142   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":3924:3927   */\n  pop\n    /* \"#utility.yul\":4170:4176   */\n  dup5\n    /* \"#utility.yul\":4161:4168   */\n  dup3\n    /* \"#utility.yul\":4158:4177   */\n  lt\n    /* \"#utility.yul\":4155:4356   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4231:4250   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4225:4251   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4314:4315   */\n  0x03\n    /* \"#utility.yul\":4310:4324   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4326:4329   */\n  0xf8\n    /* \"#utility.yul\":4306:4330   */\n  and\n    /* \"#utility.yul\":4302:4339   */\n  shr\n    /* \"#utility.yul\":4298:4340   */\n  not\n    /* \"#utility.yul\":4283:4341   */\n  and\n    /* \"#utility.yul\":4268:4342   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4155:4356   */\ntag_107:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4402:4403   */\n  0x01\n    /* \"#utility.yul\":4386:4400   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4382:4404   */\n  add\n    /* \"#utility.yul\":4369:4405   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3373:4672   */\n  jump\t// out\n    /* \"#utility.yul\":6548:6770   */\ntag_47:\n    /* \"#utility.yul\":6613:6622   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6634:6644   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6631:6764   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6686:6696   */\n  0x4e487b71\n    /* \"#utility.yul\":6681:6684   */\n  0xe0\n    /* \"#utility.yul\":6677:6697   */\n  shl\n    /* \"#utility.yul\":6674:6675   */\n  0x00\n    /* \"#utility.yul\":6667:6698   */\n  mstore\n    /* \"#utility.yul\":6721:6725   */\n  0x11\n    /* \"#utility.yul\":6718:6719   */\n  0x04\n    /* \"#utility.yul\":6711:6726   */\n  mstore\n    /* \"#utility.yul\":6749:6753   */\n  0x24\n    /* \"#utility.yul\":6746:6747   */\n  0x00\n    /* \"#utility.yul\":6739:6754   */\n  revert\n    /* \"#utility.yul\":6631:6764   */\ntag_114:\n    /* \"#utility.yul\":6548:6770   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7125:7302   */\ntag_63:\n    /* \"GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1574fd9c456ac2178cca2062e903c8444982ecdf56930f6d4f7e607dd7e8f619\")\n  0x00\n  assignImmutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n  0x00\n  assignImmutable(\"0x45e4122ae096aaf6e2aaec946f0a01ae525edda3a7e2c6a387bb8ca107829b76\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"GameToken.sol\":483:9590  contract GameToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b2c835f\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd7c81b55\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf658f32a\n      eq\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0x7b2c835f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa4f0ecd3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xad1329d1\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x42966c68\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5dc96d16\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1181:1195   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1174:1196   */\n      iszero\n        /* \"#utility.yul\":1156:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1016:1203   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1354:1379   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_33\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"GameToken.sol\":4546:4636  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"#utility.yul\":1941:1945   */\n      0xff\n        /* \"GameToken.sol\":4620:4629  _decimals */\n      immutable(\"0x45e4122ae096aaf6e2aaec946f0a01ae525edda3a7e2c6a387bb8ca107829b76\")\n        /* \"#utility.yul\":1929:1946   */\n      and\n        /* \"#utility.yul\":1911:1947   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1899:1901   */\n      0x20\n        /* \"#utility.yul\":1884:1902   */\n      add\n        /* \"GameToken.sol\":4546:4636  function decimals() public view override returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":1769:1953   */\n      jump\n        /* \"GameToken.sol\":6905:7889  function burn(uint256 amount) external burnAllowed nonReentrant {... */\n    tag_8:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"GameToken.sol\":919:949  bool public burnEnabled = true */\n    tag_9:\n      sload(0x08)\n      tag_33\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"GameToken.sol\":9487:9588  function mint(address) external pure {... */\n    tag_10:\n      tag_52\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_39\n      tag_64\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_52\n      tag_68\n      jump\t// in\n        /* \"GameToken.sol\":4871:6515  function burnFrom(address from, uint256 amount) ... */\n    tag_13:\n      tag_52\n      tag_70\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"GameToken.sol\":8075:8211  function setBurnEnabled(bool enabled) external onlyOwner {... */\n    tag_14:\n      tag_52\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_76:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2913:2945   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2895:2946   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2883:2885   */\n      0x20\n        /* \"#utility.yul\":2868:2886   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_31\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_29\n      tag_81\n      jump\t// in\n        /* \"GameToken.sol\":9094:9327  function factoryMint(address to, uint256 amount) external onlyFactory {... */\n    tag_17:\n      tag_52\n      tag_84\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_33\n      tag_87\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"GameToken.sol\":8450:8930  function emergencyRecover(... */\n    tag_19:\n      tag_52\n      tag_91\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"GameToken.sol\":651:683  address public immutable factory */\n    tag_20:\n      tag_76\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n      dup2\n      jump\n        /* \"GameToken.sol\":734:765  uint256 public immutable gameId */\n    tag_21:\n      tag_39\n      immutable(\"0x1574fd9c456ac2178cca2062e903c8444982ecdf56930f6d4f7e607dd7e8f619\")\n      dup2\n      jump\n        /* \"GameToken.sol\":851:877  uint256 public totalBurned */\n    tag_22:\n      tag_39\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_39\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_52\n      tag_108\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"GameToken.sol\":6606:6775  function _performBurn(address from, uint256 amount) external {... */\n    tag_25:\n      tag_52\n      tag_111\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_115\n      jump\t// in\n    tag_116:\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_120:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GameToken.sol\":6905:7889  function burn(uint256 amount) external burnAllowed nonReentrant {... */\n    tag_55:\n        /* \"GameToken.sol\":3098:3109  burnEnabled */\n      and(0xff, sload(0x08))\n        /* \"GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n      tag_134\n      jumpi\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      mload(0x40)\n      shl(0xe0, 0x0eb8953f)\n      dup2\n      mstore\n        /* \"#utility.yul\":3809:3811   */\n      0x20\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3791:3812   */\n      mstore\n        /* \"#utility.yul\":3848:3850   */\n      0x13\n        /* \"#utility.yul\":3828:3846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3821:3851   */\n      mstore\n      shl(0x6a, 0x109d5c9b9a5b99c81a5cc8191a5cd8589b1959)\n        /* \"#utility.yul\":3867:3885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3860:3909   */\n      mstore\n        /* \"#utility.yul\":3926:3944   */\n      0x64\n      add\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_138:\n        /* \"GameToken.sol\":7020:7026  amount */\n      dup1\n        /* \"GameToken.sol\":7030:7031  0 */\n      0x00\n        /* \"GameToken.sol\":7020:7031  amount == 0 */\n      sub\n        /* \"GameToken.sol\":7016:7077  if (amount == 0) {... */\n      tag_141\n      jumpi\n        /* \"GameToken.sol\":7054:7066  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GameToken.sol\":7016:7077  if (amount == 0) {... */\n    tag_141:\n        /* \"GameToken.sol\":7127:7137  msg.sender */\n      caller\n        /* \"GameToken.sol\":7095:7114  uint256 userBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GameToken.sol\":7152:7172  userBalance < amount */\n      dup2\n      dup2\n      lt\n        /* \"GameToken.sol\":7148:7258  if (userBalance < amount) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"GameToken.sol\":7215:7225  msg.sender */\n      caller\n        /* \"GameToken.sol\":7227:7233  amount */\n      dup3\n        /* \"GameToken.sol\":7235:7246  userBalance */\n      dup3\n        /* \"GameToken.sol\":7195:7247  InsufficientBalance(msg.sender, amount, userBalance) */\n      mload(0x40)\n      shl(0xe0, 0xdb42144d)\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"GameToken.sol\":7148:7258  if (userBalance < amount) {... */\n    tag_143:\n        /* \"GameToken.sol\":7339:7345  amount */\n      dup2\n        /* \"GameToken.sol\":7324:7335  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":7324:7345  totalBurned += amount */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe1, 0x7b2c7995)\n      dup2\n      mstore\n        /* \"GameToken.sol\":7386:7396  msg.sender */\n      caller\n        /* \"GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4792   */\n      mstore\n        /* \"#utility.yul\":4808:4826   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4801:4835   */\n      dup4\n      swap1\n      mstore\n        /* \"GameToken.sol\":7368:7372  this */\n      address\n      swap1\n        /* \"GameToken.sol\":7368:7385  this._performBurn */\n      0xf658f32a\n      swap1\n        /* \"#utility.yul\":4714:4732   */\n      0x44\n      add\n        /* \"GameToken.sol\":7368:7405  this._performBurn(msg.sender, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      revert(0x00, 0x00)\n    tag_150:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n      0x01\n    tag_151:\n        /* \"GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n      tag_152\n      jumpi\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      dup1\n      0x08c379a0\n      sub\n      tag_155\n      jumpi\n      pop\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      tag_160\n      jumpi\n      pop\n      jump(tag_154)\n    tag_160:\n        /* \"GameToken.sol\":7601:7607  amount */\n      dup3\n        /* \"GameToken.sol\":7586:7597  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":7586:7607  totalBurned -= amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n      dup2\n      mstore\n      tag_135\n      swap1\n        /* \"GameToken.sol\":7651:7661  msg.sender */\n      caller\n      swap1\n        /* \"GameToken.sol\":7663:7669  amount */\n      dup6\n      swap1\n        /* \"GameToken.sol\":7671:7677  reason */\n      dup5\n      swap1\n        /* \"GameToken.sol\":7628:7678  BurningOperationFailed(msg.sender, amount, reason) */\n      0x04\n      add\n      tag_164\n      jump\t// in\n        /* \"GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n    tag_155:\n      pop\n    tag_154:\n        /* \"GameToken.sol\":7781:7787  amount */\n      dup2\n        /* \"GameToken.sol\":7766:7777  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":7766:7787  totalBurned -= amount */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_165:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":7808:7872  BurningOperationFailed(msg.sender, amount, \"Unknown burn error\") */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n      dup2\n      mstore\n      tag_135\n      swap1\n        /* \"GameToken.sol\":7831:7841  msg.sender */\n      caller\n      swap1\n        /* \"GameToken.sol\":7843:7849  amount */\n      dup5\n      swap1\n        /* \"GameToken.sol\":7808:7872  BurningOperationFailed(msg.sender, amount, \"Unknown burn error\") */\n      0x04\n      add\n      tag_167\n      jump\t// in\n        /* \"GameToken.sol\":7364:7883  try this._performBurn(msg.sender, amount) {... */\n    tag_152:\n        /* \"GameToken.sol\":7458:7469  totalBurned */\n      sload(0x07)\n        /* \"GameToken.sol\":7425:7470  TokensBurned(msg.sender, amount, totalBurned) */\n      mload(0x40)\n        /* \"GameToken.sol\":7438:7448  msg.sender */\n      caller\n      swap2\n        /* \"GameToken.sol\":7425:7470  TokensBurned(msg.sender, amount, totalBurned) */\n      0xccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00\n      swap2\n      tag_169\n      swap2\n        /* \"GameToken.sol\":7450:7456  amount */\n      dup7\n        /* \"#utility.yul\":7231:7256   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7287:7289   */\n      0x20\n        /* \"#utility.yul\":7272:7290   */\n      dup3\n      add\n        /* \"#utility.yul\":7265:7299   */\n      mstore\n        /* \"#utility.yul\":7219:7221   */\n      0x40\n        /* \"#utility.yul\":7204:7222   */\n      add\n      swap1\n        /* \"#utility.yul\":7057:7305   */\n      jump\n        /* \"GameToken.sol\":7425:7470  TokensBurned(msg.sender, amount, totalBurned) */\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GameToken.sol\":6969:7889  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_171:\n        /* \"GameToken.sol\":6905:7889  function burn(uint256 amount) external burnAllowed nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"GameToken.sol\":9487:9588  function mint(address) external pure {... */\n    tag_62:\n        /* \"GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7512:7514   */\n      0x20\n        /* \"GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7494:7515   */\n      mstore\n        /* \"#utility.yul\":7551:7553   */\n      0x25\n        /* \"#utility.yul\":7531:7549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7524:7554   */\n      mstore\n        /* \"#utility.yul\":7590:7624   */\n      0x4d696e742064697361626c65643a2075736520666163746f727920746f206c6f\n        /* \"#utility.yul\":7570:7588   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7563:7625   */\n      mstore\n      shl(0xdc, 0x0636b20585)\n        /* \"#utility.yul\":7641:7659   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7634:7669   */\n      mstore\n        /* \"#utility.yul\":7686:7705   */\n      0x84\n      add\n        /* \"GameToken.sol\":9534:9581  revert(\"Mint disabled: use factory to lock XP\") */\n      tag_135\n        /* \"#utility.yul\":7310:7711   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"GameToken.sol\":4871:6515  function burnFrom(address from, uint256 amount) ... */\n    tag_71:\n        /* \"GameToken.sol\":2972:2982  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":2986:2993  factory */\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n        /* \"GameToken.sol\":2972:2993  msg.sender != factory */\n      and\n      eq\n        /* \"GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n      tag_184\n      jumpi\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x5936416f)\n      dup2\n      mstore\n        /* \"GameToken.sol\":3021:3031  msg.sender */\n      caller\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n    tag_184:\n        /* \"GameToken.sol\":3098:3109  burnEnabled */\n      and(0xff, sload(0x08))\n        /* \"GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n      tag_187\n      jumpi\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      mload(0x40)\n      shl(0xe0, 0x0eb8953f)\n      dup2\n      mstore\n        /* \"#utility.yul\":3809:3811   */\n      0x20\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3791:3812   */\n      mstore\n        /* \"#utility.yul\":3848:3850   */\n      0x13\n        /* \"#utility.yul\":3828:3846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3821:3851   */\n      mstore\n      shl(0x6a, 0x109d5c9b9a5b99c81a5cc8191a5cd8589b1959)\n        /* \"#utility.yul\":3867:3885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3860:3909   */\n      mstore\n        /* \"#utility.yul\":3926:3944   */\n      0x64\n      add\n        /* \"GameToken.sol\":3118:3153  BurnDisabled(\"Burning is disabled\") */\n      tag_135\n        /* \"#utility.yul\":3607:3950   */\n      jump\n        /* \"GameToken.sol\":3093:3153  if (!burnEnabled) revert BurnDisabled(\"Burning is disabled\") */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":5057:5075  from == address(0) */\n      dup3\n      and\n        /* \"GameToken.sol\":5053:5122  if (from == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"GameToken.sol\":5098:5111  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GameToken.sol\":5053:5122  if (from == address(0)) {... */\n    tag_192:\n        /* \"GameToken.sol\":5135:5141  amount */\n      dup1\n        /* \"GameToken.sol\":5145:5146  0 */\n      0x00\n        /* \"GameToken.sol\":5135:5146  amount == 0 */\n      sub\n        /* \"GameToken.sol\":5131:5192  if (amount == 0) {... */\n      tag_193\n      jumpi\n        /* \"GameToken.sol\":5169:5181  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GameToken.sol\":5131:5192  if (amount == 0) {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      dup3\n      and\n        /* \"GameToken.sol\":5210:5229  uint256 userBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"GameToken.sol\":5261:5281  userBalance < amount */\n      dup2\n      dup2\n      lt\n        /* \"GameToken.sol\":5257:5361  if (userBalance < amount) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"GameToken.sol\":5324:5328  from */\n      dup3\n        /* \"GameToken.sol\":5330:5336  amount */\n      dup3\n        /* \"GameToken.sol\":5338:5349  userBalance */\n      dup3\n        /* \"GameToken.sol\":5304:5350  InsufficientBalance(from, amount, userBalance) */\n      mload(0x40)\n      shl(0xe0, 0xdb42144d)\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"GameToken.sol\":5257:5361  if (userBalance < amount) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"GameToken.sol\":5459:5465  amount */\n      dup3\n        /* \"GameToken.sol\":5459:5481  amount > totalSupply() */\n      gt\n        /* \"GameToken.sol\":5455:5558  if (amount > totalSupply()) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"GameToken.sol\":5525:5531  amount */\n      dup2\n        /* \"GameToken.sol\":5533:5546  totalSupply() */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"GameToken.sol\":5533:5546  totalSupply() */\n    tag_199:\n        /* \"GameToken.sol\":5504:5547  ExcessiveBurnRequest(amount, totalSupply()) */\n      mload(0x40)\n      shl(0xe3, 0x1ee970cd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":7231:7256   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7272:7290   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7265:7299   */\n      mstore\n        /* \"#utility.yul\":7204:7222   */\n      0x44\n      add\n        /* \"GameToken.sol\":5504:5547  ExcessiveBurnRequest(amount, totalSupply()) */\n      tag_135\n        /* \"#utility.yul\":7057:7305   */\n      jump\n        /* \"GameToken.sol\":5455:5558  if (amount > totalSupply()) {... */\n    tag_198:\n        /* \"GameToken.sol\":5674:5694  uint256 maxBurnPerTx */\n      0x00\n        /* \"GameToken.sol\":5713:5715  10 */\n      0x0a\n        /* \"GameToken.sol\":5697:5710  totalSupply() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"GameToken.sol\":5697:5710  totalSupply() */\n    tag_201:\n        /* \"GameToken.sol\":5697:5715  totalSupply() / 10 */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"GameToken.sol\":5674:5715  uint256 maxBurnPerTx = totalSupply() / 10 */\n      swap1\n      pop\n        /* \"GameToken.sol\":5775:5787  maxBurnPerTx */\n      dup1\n        /* \"GameToken.sol\":5766:5772  amount */\n      dup4\n        /* \"GameToken.sol\":5766:5787  amount > maxBurnPerTx */\n      gt\n        /* \"GameToken.sol\":5762:5886  if (amount > maxBurnPerTx) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"GameToken.sol\":5828:5834  amount */\n      dup3\n        /* \"GameToken.sol\":5810:5875  InvalidBurnAmount(amount, \"Exceeds maximum burn per transaction\") */\n      mload(0x40)\n      shl(0xe2, 0x33be48f5)\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n        /* \"#utility.yul\":8150:8175   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8211:8213   */\n      0x40\n        /* \"#utility.yul\":8206:8208   */\n      0x20\n        /* \"#utility.yul\":8191:8209   */\n      dup3\n      add\n        /* \"#utility.yul\":8184:8214   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8250:8252   */\n      0x24\n        /* \"#utility.yul\":8230:8248   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8223:8253   */\n      mstore\n        /* \"#utility.yul\":8289:8323   */\n      0x45786365656473206d6178696d756d206275726e20706572207472616e736163\n        /* \"#utility.yul\":8284:8286   */\n      0x60\n        /* \"#utility.yul\":8269:8287   */\n      dup3\n      add\n        /* \"#utility.yul\":8262:8324   */\n      mstore\n      shl(0xe1, 0x3a34b7b7)\n        /* \"#utility.yul\":8355:8358   */\n      0x80\n        /* \"#utility.yul\":8340:8359   */\n      dup3\n      add\n        /* \"#utility.yul\":8333:8368   */\n      mstore\n        /* \"#utility.yul\":8400:8403   */\n      0xa0\n        /* \"#utility.yul\":8385:8404   */\n      add\n      swap1\n        /* \"#utility.yul\":7938:8410   */\n      jump\n        /* \"GameToken.sol\":5762:5886  if (amount > maxBurnPerTx) {... */\n    tag_204:\n        /* \"GameToken.sol\":5989:5995  amount */\n      dup3\n        /* \"GameToken.sol\":5974:5985  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":5974:5995  totalBurned += amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_207:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      mload(0x40)\n      shl(0xe1, 0x7b2c7995)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4759:4791   */\n      dup6\n      and\n        /* \"GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4741:4792   */\n      mstore\n        /* \"#utility.yul\":4808:4826   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4801:4835   */\n      dup5\n      swap1\n      mstore\n        /* \"GameToken.sol\":6018:6022  this */\n      address\n      swap1\n        /* \"GameToken.sol\":6018:6035  this._performBurn */\n      0xf658f32a\n      swap1\n        /* \"#utility.yul\":4714:4732   */\n      0x44\n      add\n        /* \"GameToken.sol\":6018:6049  this._performBurn(from, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      revert(0x00, 0x00)\n    tag_209:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_210\n      jumpi\n      pop\n      0x01\n    tag_210:\n        /* \"GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n      tag_211\n      jumpi\n      tag_215\n      tag_157\n      jump\t// in\n    tag_215:\n      dup1\n      0x08c379a0\n      sub\n      tag_214\n      jumpi\n      pop\n      tag_216\n      tag_159\n      jump\t// in\n    tag_216:\n      dup1\n      tag_217\n      jumpi\n      pop\n      jump(tag_213)\n    tag_217:\n        /* \"GameToken.sol\":6239:6245  amount */\n      dup4\n        /* \"GameToken.sol\":6224:6235  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":6224:6245  totalBurned -= amount */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_218:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":6266:6310  BurningOperationFailed(from, amount, reason) */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n      dup2\n      mstore\n      tag_135\n      swap1\n        /* \"GameToken.sol\":6289:6293  from */\n      dup7\n      swap1\n        /* \"GameToken.sol\":6295:6301  amount */\n      dup7\n      swap1\n        /* \"GameToken.sol\":6303:6309  reason */\n      dup5\n      swap1\n        /* \"GameToken.sol\":6266:6310  BurningOperationFailed(from, amount, reason) */\n      0x04\n      add\n      tag_164\n      jump\t// in\n        /* \"GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n    tag_214:\n      pop\n    tag_213:\n        /* \"GameToken.sol\":6413:6419  amount */\n      dup3\n        /* \"GameToken.sol\":6398:6409  totalBurned */\n      0x07\n      0x00\n        /* \"GameToken.sol\":6398:6419  totalBurned -= amount */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_220:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      mload(0x40)\n      shl(0xe3, 0x1e764bc5)\n      dup2\n      mstore\n      tag_135\n      swap1\n        /* \"GameToken.sol\":6463:6467  from */\n      dup6\n      swap1\n        /* \"GameToken.sol\":6469:6475  amount */\n      dup6\n      swap1\n        /* \"GameToken.sol\":6440:6498  BurningOperationFailed(from, amount, \"Unknown burn error\") */\n      0x04\n      add\n      tag_167\n      jump\t// in\n        /* \"GameToken.sol\":6014:6509  try this._performBurn(from, amount) {... */\n    tag_211:\n        /* \"GameToken.sol\":6082:6086  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":6069:6108  TokensBurned(from, amount, totalBurned) */\n      and\n      0xccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00\n        /* \"GameToken.sol\":6088:6094  amount */\n      dup5\n        /* \"GameToken.sol\":6096:6107  totalBurned */\n      sload(0x07)\n        /* \"GameToken.sol\":6069:6108  TokensBurned(from, amount, totalBurned) */\n      mload(0x40)\n      tag_223\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":7231:7256   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":7287:7289   */\n      0x20\n        /* \"#utility.yul\":7272:7290   */\n      dup3\n      add\n        /* \"#utility.yul\":7265:7299   */\n      mstore\n        /* \"#utility.yul\":7219:7221   */\n      0x40\n        /* \"#utility.yul\":7204:7222   */\n      add\n      swap1\n        /* \"#utility.yul\":7057:7305   */\n      jump\n        /* \"GameToken.sol\":6069:6108  TokensBurned(from, amount, totalBurned) */\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GameToken.sol\":5006:6515  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_224:\n        /* \"GameToken.sol\":4871:6515  function burnFrom(address from, uint256 amount) ... */\n      pop\n      pop\n      jump\t// out\n        /* \"GameToken.sol\":8075:8211  function setBurnEnabled(bool enabled) external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"GameToken.sol\":8142:8153  burnEnabled */\n      0x08\n        /* \"GameToken.sol\":8142:8163  burnEnabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"GameToken.sol\":8178:8204  BurnStatusChanged(enabled) */\n      mload(0x40)\n        /* \"#utility.yul\":1156:1197   */\n      swap1\n      dup2\n      mstore\n        /* \"GameToken.sol\":8178:8204  BurnStatusChanged(enabled) */\n      0x1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd\n      swap1\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"GameToken.sol\":8178:8204  BurnStatusChanged(enabled) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GameToken.sol\":8075:8211  function setBurnEnabled(bool enabled) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n        /* \"GameToken.sol\":9094:9327  function factoryMint(address to, uint256 amount) external onlyFactory {... */\n    tag_85:\n        /* \"GameToken.sol\":2972:2982  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":2986:2993  factory */\n      immutable(\"0x72fc7ab3e40b1907e59758f569afe04bc56a27641f6a4e6ae11ca369e7d44bde\")\n        /* \"GameToken.sol\":2972:2993  msg.sender != factory */\n      and\n      eq\n        /* \"GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n      tag_237\n      jumpi\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x5936416f)\n      dup2\n      mstore\n        /* \"GameToken.sol\":3021:3031  msg.sender */\n      caller\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"GameToken.sol\":3002:3032  UnauthorizedBurner(msg.sender) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"GameToken.sol\":2968:3032  if (msg.sender != factory) revert UnauthorizedBurner(msg.sender) */\n    tag_237:\n        /* \"GameToken.sol\":9303:9320  _mint(to, amount) */\n      tag_224\n        /* \"GameToken.sol\":9309:9311  to */\n      dup3\n        /* \"GameToken.sol\":9313:9319  amount */\n      dup3\n        /* \"GameToken.sol\":9303:9308  _mint */\n      tag_241\n        /* \"GameToken.sol\":9303:9320  _mint(to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"GameToken.sol\":8450:8930  function emergencyRecover(... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":8582:8598  to == address(0) */\n      dup3\n      and\n        /* \"GameToken.sol\":8578:8620  if (to == address(0)) revert ZeroAddress() */\n      tag_248\n      jumpi\n        /* \"GameToken.sol\":8607:8620  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GameToken.sol\":8578:8620  if (to == address(0)) revert ZeroAddress() */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":8643:8662  token == address(0) */\n      dup4\n      and\n        /* \"GameToken.sol\":8639:8924  if (token == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"GameToken.sol\":8706:8718  bool success */\n      0x00\n        /* \"GameToken.sol\":8732:8734  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GameToken.sol\":8724:8740  payable(to).call */\n      and\n        /* \"GameToken.sol\":8748:8754  amount */\n      dup3\n        /* \"GameToken.sol\":8724:8759  payable(to).call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_254\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_253)\n    tag_254:\n      0x60\n      swap2\n      pop\n    tag_253:\n      pop\n        /* \"GameToken.sol\":8705:8759  (bool success, ) = payable(to).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"GameToken.sol\":8781:8788  success */\n      dup1\n        /* \"GameToken.sol\":8773:8812  require(success, \"ETH transfer failed\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8827:8829   */\n      0x20\n        /* \"GameToken.sol\":8773:8812  require(success, \"ETH transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8809:8830   */\n      mstore\n        /* \"#utility.yul\":8866:8868   */\n      0x13\n        /* \"#utility.yul\":8846:8864   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8839:8869   */\n      mstore\n      shl(0x6a, 0x115512081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8885:8903   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8878:8927   */\n      mstore\n        /* \"#utility.yul\":8944:8962   */\n      0x64\n      add\n        /* \"GameToken.sol\":8773:8812  require(success, \"ETH transfer failed\") */\n      tag_135\n        /* \"#utility.yul\":8625:8968   */\n      jump\n        /* \"GameToken.sol\":8773:8812  require(success, \"ETH transfer failed\") */\n    tag_255:\n        /* \"GameToken.sol\":8664:8823  {... */\n      pop\n        /* \"GameToken.sol\":8450:8930  function emergencyRecover(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GameToken.sol\":8639:8924  if (token == address(0)) {... */\n    tag_249:\n        /* \"GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4759:4791   */\n      dup4\n      dup2\n      and\n        /* \"GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4741:4792   */\n      mstore\n        /* \"#utility.yul\":4808:4826   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4801:4835   */\n      dup4\n      swap1\n      mstore\n        /* \"GameToken.sol\":8879:8901  IERC20(token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4714:4732   */\n      0x44\n      add\n        /* \"GameToken.sol\":8879:8913  IERC20(token).transfer(to, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n        /* \"GameToken.sol\":8639:8924  if (token == address(0)) {... */\n    tag_258:\n        /* \"GameToken.sol\":8450:8930  function emergencyRecover(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"GameToken.sol\":6606:6775  function _performBurn(address from, uint256 amount) external {... */\n    tag_112:\n        /* \"GameToken.sol\":6685:6695  msg.sender */\n      caller\n        /* \"GameToken.sol\":6707:6711  this */\n      address\n        /* \"GameToken.sol\":6685:6712  msg.sender == address(this) */\n      eq\n        /* \"GameToken.sol\":6677:6739  require(msg.sender == address(this), \"Only self-call allowed\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9425:9427   */\n      0x20\n        /* \"GameToken.sol\":6677:6739  require(msg.sender == address(this), \"Only self-call allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9407:9428   */\n      mstore\n        /* \"#utility.yul\":9464:9466   */\n      0x16\n        /* \"#utility.yul\":9444:9462   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9437:9467   */\n      mstore\n      shl(0x52, 0x13db9b1e481cd95b198b58d85b1b08185b1b1bddd959)\n        /* \"#utility.yul\":9483:9501   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9476:9528   */\n      mstore\n        /* \"#utility.yul\":9545:9563   */\n      0x64\n      add\n        /* \"GameToken.sol\":6677:6739  require(msg.sender == address(this), \"Only self-call allowed\") */\n      tag_135\n        /* \"#utility.yul\":9223:9569   */\n      jump\n        /* \"GameToken.sol\":6677:6739  require(msg.sender == address(this), \"Only self-call allowed\") */\n    tag_272:\n        /* \"GameToken.sol\":6749:6768  _burn(from, amount) */\n      tag_224\n        /* \"GameToken.sol\":6755:6759  from */\n      dup3\n        /* \"GameToken.sol\":6761:6767  amount */\n      dup3\n        /* \"GameToken.sol\":6749:6754  _burn */\n      tag_276\n        /* \"GameToken.sol\":6749:6768  _burn(from, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x06\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2895:2946   */\n      mstore\n        /* \"#utility.yul\":2868:2886   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_135\n        /* \"#utility.yul\":2749:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_318\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_321:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_322\n      swap1\n      pop\n      jump\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_326)\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_327\n      swap2\n        /* \"#utility.yul\":1354:1379   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1342:1344   */\n      0x20\n        /* \"#utility.yul\":1327:1345   */\n      add\n      swap1\n        /* \"#utility.yul\":1208:1385   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:303   */\n    tag_328:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":177:183   */\n      dup1\n        /* \"#utility.yul\":170:174   */\n      0x20\n        /* \"#utility.yul\":163:168   */\n      dup5\n        /* \"#utility.yul\":159:175   */\n      add\n        /* \"#utility.yul\":152:156   */\n      0x20\n        /* \"#utility.yul\":147:150   */\n      dup7\n        /* \"#utility.yul\":143:157   */\n      add\n        /* \"#utility.yul\":137:184   */\n      mcopy\n        /* \"#utility.yul\":229:230   */\n      0x00\n        /* \"#utility.yul\":222:226   */\n      0x20\n        /* \"#utility.yul\":213:219   */\n      dup3\n        /* \"#utility.yul\":208:211   */\n      dup7\n        /* \"#utility.yul\":204:220   */\n      add\n        /* \"#utility.yul\":200:227   */\n      add\n        /* \"#utility.yul\":193:231   */\n      mstore\n        /* \"#utility.yul\":292:296   */\n      0x20\n        /* \"#utility.yul\":285:287   */\n      0x1f\n        /* \"#utility.yul\":281:288   */\n      not\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":268:274   */\n      dup4\n        /* \"#utility.yul\":264:279   */\n      add\n        /* \"#utility.yul\":260:289   */\n      and\n        /* \"#utility.yul\":255:258   */\n      dup6\n        /* \"#utility.yul\":251:290   */\n      add\n        /* \"#utility.yul\":247:297   */\n      add\n        /* \"#utility.yul\":240:297   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:528   */\n    tag_32:\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":446:455   */\n      dup2\n        /* \"#utility.yul\":439:460   */\n      mstore\n        /* \"#utility.yul\":420:424   */\n      0x00\n        /* \"#utility.yul\":477:522   */\n      tag_336\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup4\n        /* \"#utility.yul\":503:521   */\n      add\n        /* \"#utility.yul\":495:501   */\n      dup5\n        /* \"#utility.yul\":477:522   */\n      tag_328\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":469:522   */\n      swap4\n        /* \"#utility.yul\":308:528   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":533:706   */\n    tag_329:\n        /* \"#utility.yul\":601:621   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":650:681   */\n      dup2\n      and\n        /* \"#utility.yul\":640:682   */\n      dup2\n      eq\n        /* \"#utility.yul\":630:700   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":696:697   */\n      0x00\n        /* \"#utility.yul\":693:694   */\n      0x00\n        /* \"#utility.yul\":686:698   */\n      revert\n        /* \"#utility.yul\":630:700   */\n    tag_338:\n        /* \"#utility.yul\":533:706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":711:1011   */\n    tag_35:\n        /* \"#utility.yul\":779:785   */\n      0x00\n        /* \"#utility.yul\":787:793   */\n      0x00\n        /* \"#utility.yul\":840:842   */\n      0x40\n        /* \"#utility.yul\":828:837   */\n      dup4\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":815:838   */\n      sub\n        /* \"#utility.yul\":811:843   */\n      slt\n        /* \"#utility.yul\":808:860   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":856:857   */\n      0x00\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":846:858   */\n      revert\n        /* \"#utility.yul\":808:860   */\n    tag_340:\n        /* \"#utility.yul\":879:908   */\n      tag_341\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":879:908   */\n      tag_329\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":869:908   */\n      swap5\n        /* \"#utility.yul\":977:979   */\n      0x20\n        /* \"#utility.yul\":962:980   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":949:981   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":711:1011   */\n      jump\t// out\n        /* \"#utility.yul\":1390:1764   */\n    tag_45:\n        /* \"#utility.yul\":1467:1473   */\n      0x00\n        /* \"#utility.yul\":1475:1481   */\n      0x00\n        /* \"#utility.yul\":1483:1489   */\n      0x00\n        /* \"#utility.yul\":1536:1538   */\n      0x60\n        /* \"#utility.yul\":1524:1533   */\n      dup5\n        /* \"#utility.yul\":1515:1522   */\n      dup7\n        /* \"#utility.yul\":1511:1534   */\n      sub\n        /* \"#utility.yul\":1507:1539   */\n      slt\n        /* \"#utility.yul\":1504:1556   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      0x00\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1504:1556   */\n    tag_345:\n        /* \"#utility.yul\":1575:1604   */\n      tag_346\n        /* \"#utility.yul\":1594:1603   */\n      dup5\n        /* \"#utility.yul\":1575:1604   */\n      tag_329\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1565:1604   */\n      swap3\n      pop\n        /* \"#utility.yul\":1623:1661   */\n      tag_347\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1646:1655   */\n      dup6\n        /* \"#utility.yul\":1642:1660   */\n      add\n        /* \"#utility.yul\":1623:1661   */\n      tag_329\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1390:1764   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1613:1661   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1730:1732   */\n      0x40\n        /* \"#utility.yul\":1715:1733   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1702:1734   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1390:1764   */\n      jump\t// out\n        /* \"#utility.yul\":1958:2184   */\n    tag_54:\n        /* \"#utility.yul\":2017:2023   */\n      0x00\n        /* \"#utility.yul\":2070:2072   */\n      0x20\n        /* \"#utility.yul\":2058:2067   */\n      dup3\n        /* \"#utility.yul\":2049:2056   */\n      dup5\n        /* \"#utility.yul\":2045:2068   */\n      sub\n        /* \"#utility.yul\":2041:2073   */\n      slt\n        /* \"#utility.yul\":2038:2090   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      0x00\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2038:2090   */\n    tag_350:\n      pop\n        /* \"#utility.yul\":2131:2154   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1958:2184   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2375   */\n    tag_61:\n        /* \"#utility.yul\":2248:2254   */\n      0x00\n        /* \"#utility.yul\":2301:2303   */\n      0x20\n        /* \"#utility.yul\":2289:2298   */\n      dup3\n        /* \"#utility.yul\":2280:2287   */\n      dup5\n        /* \"#utility.yul\":2276:2299   */\n      sub\n        /* \"#utility.yul\":2272:2304   */\n      slt\n        /* \"#utility.yul\":2269:2321   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2317:2318   */\n      0x00\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2307:2319   */\n      revert\n        /* \"#utility.yul\":2269:2321   */\n    tag_352:\n        /* \"#utility.yul\":2340:2369   */\n      tag_336\n        /* \"#utility.yul\":2359:2368   */\n      dup3\n        /* \"#utility.yul\":2340:2369   */\n      tag_329\n      jump\t// in\n        /* \"#utility.yul\":2380:2498   */\n    tag_330:\n        /* \"#utility.yul\":2466:2471   */\n      dup1\n        /* \"#utility.yul\":2459:2472   */\n      iszero\n        /* \"#utility.yul\":2452:2473   */\n      iszero\n        /* \"#utility.yul\":2445:2450   */\n      dup2\n        /* \"#utility.yul\":2442:2474   */\n      eq\n        /* \"#utility.yul\":2432:2492   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2488:2489   */\n      0x00\n        /* \"#utility.yul\":2485:2486   */\n      0x00\n        /* \"#utility.yul\":2478:2490   */\n      revert\n        /* \"#utility.yul\":2503:2744   */\n    tag_74:\n        /* \"#utility.yul\":2559:2565   */\n      0x00\n        /* \"#utility.yul\":2612:2614   */\n      0x20\n        /* \"#utility.yul\":2600:2609   */\n      dup3\n        /* \"#utility.yul\":2591:2598   */\n      dup5\n        /* \"#utility.yul\":2587:2610   */\n      sub\n        /* \"#utility.yul\":2583:2615   */\n      slt\n        /* \"#utility.yul\":2580:2632   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":2628:2629   */\n      0x00\n        /* \"#utility.yul\":2625:2626   */\n      0x00\n        /* \"#utility.yul\":2618:2630   */\n      revert\n        /* \"#utility.yul\":2580:2632   */\n    tag_357:\n        /* \"#utility.yul\":2667:2676   */\n      dup2\n        /* \"#utility.yul\":2654:2677   */\n      calldataload\n        /* \"#utility.yul\":2686:2714   */\n      tag_336\n        /* \"#utility.yul\":2708:2713   */\n      dup2\n        /* \"#utility.yul\":2686:2714   */\n      tag_330\n      jump\t// in\n        /* \"#utility.yul\":2957:3217   */\n    tag_104:\n        /* \"#utility.yul\":3025:3031   */\n      0x00\n        /* \"#utility.yul\":3033:3039   */\n      0x00\n        /* \"#utility.yul\":3086:3088   */\n      0x40\n        /* \"#utility.yul\":3074:3083   */\n      dup4\n        /* \"#utility.yul\":3065:3072   */\n      dup6\n        /* \"#utility.yul\":3061:3084   */\n      sub\n        /* \"#utility.yul\":3057:3089   */\n      slt\n        /* \"#utility.yul\":3054:3106   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":3102:3103   */\n      0x00\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3092:3104   */\n      revert\n        /* \"#utility.yul\":3054:3106   */\n    tag_361:\n        /* \"#utility.yul\":3125:3154   */\n      tag_362\n        /* \"#utility.yul\":3144:3153   */\n      dup4\n        /* \"#utility.yul\":3125:3154   */\n      tag_329\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3115:3154   */\n      swap2\n      pop\n        /* \"#utility.yul\":3173:3211   */\n      tag_363\n        /* \"#utility.yul\":3207:3209   */\n      0x20\n        /* \"#utility.yul\":3196:3205   */\n      dup5\n        /* \"#utility.yul\":3192:3210   */\n      add\n        /* \"#utility.yul\":3173:3211   */\n      tag_329\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3163:3211   */\n      swap1\n      pop\n        /* \"#utility.yul\":2957:3217   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3602   */\n    tag_115:\n        /* \"#utility.yul\":3301:3302   */\n      0x01\n        /* \"#utility.yul\":3297:3309   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3344:3356   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3365:3426   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":3419:3423   */\n      0x7f\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3407:3424   */\n      and\n        /* \"#utility.yul\":3397:3424   */\n      swap2\n      pop\n        /* \"#utility.yul\":3365:3426   */\n    tag_365:\n        /* \"#utility.yul\":3472:3474   */\n      0x20\n        /* \"#utility.yul\":3464:3470   */\n      dup3\n        /* \"#utility.yul\":3461:3475   */\n      lt\n        /* \"#utility.yul\":3441:3459   */\n      dup2\n        /* \"#utility.yul\":3438:3476   */\n      sub\n        /* \"#utility.yul\":3435:3596   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3518:3528   */\n      0x4e487b71\n        /* \"#utility.yul\":3513:3516   */\n      0xe0\n        /* \"#utility.yul\":3509:3529   */\n      shl\n        /* \"#utility.yul\":3506:3507   */\n      0x00\n        /* \"#utility.yul\":3499:3530   */\n      mstore\n        /* \"#utility.yul\":3553:3557   */\n      0x22\n        /* \"#utility.yul\":3550:3551   */\n      0x04\n        /* \"#utility.yul\":3543:3558   */\n      mstore\n        /* \"#utility.yul\":3581:3585   */\n      0x24\n        /* \"#utility.yul\":3578:3579   */\n      0x00\n        /* \"#utility.yul\":3571:3586   */\n      revert\n        /* \"#utility.yul\":3435:3596   */\n    tag_366:\n      pop\n        /* \"#utility.yul\":3222:3602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3955:4300   */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4175:4207   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4157:4208   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4239:4241   */\n      0x20\n        /* \"#utility.yul\":4224:4242   */\n      dup4\n      add\n        /* \"#utility.yul\":4217:4251   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4282:4284   */\n      0x40\n        /* \"#utility.yul\":4267:4285   */\n      dup3\n      add\n        /* \"#utility.yul\":4260:4294   */\n      mstore\n        /* \"#utility.yul\":4145:4147   */\n      0x60\n        /* \"#utility.yul\":4130:4148   */\n      add\n      swap1\n        /* \"#utility.yul\":3955:4300   */\n      jump\t// out\n        /* \"#utility.yul\":4305:4432   */\n    tag_331:\n        /* \"#utility.yul\":4366:4376   */\n      0x4e487b71\n        /* \"#utility.yul\":4361:4364   */\n      0xe0\n        /* \"#utility.yul\":4357:4377   */\n      shl\n        /* \"#utility.yul\":4354:4355   */\n      0x00\n        /* \"#utility.yul\":4347:4378   */\n      mstore\n        /* \"#utility.yul\":4397:4401   */\n      0x11\n        /* \"#utility.yul\":4394:4395   */\n      0x04\n        /* \"#utility.yul\":4387:4402   */\n      mstore\n        /* \"#utility.yul\":4421:4425   */\n      0x24\n        /* \"#utility.yul\":4418:4419   */\n      0x00\n        /* \"#utility.yul\":4411:4426   */\n      revert\n        /* \"#utility.yul\":4437:4562   */\n    tag_147:\n        /* \"#utility.yul\":4502:4511   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4523:4533   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4520:4556   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4536:4554   */\n      tag_120\n      tag_331\n      jump\t// in\n        /* \"#utility.yul\":4846:5025   */\n    tag_157:\n        /* \"#utility.yul\":4881:4884   */\n      0x00\n        /* \"#utility.yul\":4923:4924   */\n      0x03\n        /* \"#utility.yul\":4905:4921   */\n      returndatasize\n        /* \"#utility.yul\":4902:4925   */\n      gt\n        /* \"#utility.yul\":4899:5019   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":4969:4970   */\n      0x04\n        /* \"#utility.yul\":4966:4967   */\n      0x00\n        /* \"#utility.yul\":4963:4964   */\n      0x00\n        /* \"#utility.yul\":4948:4971   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":5006:5007   */\n      0x00\n        /* \"#utility.yul\":5000:5008   */\n      mload\n        /* \"#utility.yul\":4995:4998   */\n      0xe0\n        /* \"#utility.yul\":4991:5009   */\n      shr\n        /* \"#utility.yul\":4899:5019   */\n    tag_375:\n        /* \"#utility.yul\":4846:5025   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5030:5376   */\n    tag_332:\n        /* \"#utility.yul\":5140:5142   */\n      0x1f\n        /* \"#utility.yul\":5121:5134   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5117:5144   */\n      and\n        /* \"#utility.yul\":5105:5145   */\n      dup2\n      add\n        /* \"#utility.yul\":5175:5193   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5160:5194   */\n      dup2\n      gt\n        /* \"#utility.yul\":5196:5218   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5157:5219   */\n      or\n        /* \"#utility.yul\":5154:5339   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5261:5271   */\n      0x4e487b71\n        /* \"#utility.yul\":5256:5259   */\n      0xe0\n        /* \"#utility.yul\":5252:5272   */\n      shl\n        /* \"#utility.yul\":5249:5250   */\n      0x00\n        /* \"#utility.yul\":5242:5273   */\n      mstore\n        /* \"#utility.yul\":5296:5300   */\n      0x41\n        /* \"#utility.yul\":5293:5294   */\n      0x04\n        /* \"#utility.yul\":5286:5301   */\n      mstore\n        /* \"#utility.yul\":5324:5328   */\n      0x24\n        /* \"#utility.yul\":5321:5322   */\n      0x00\n        /* \"#utility.yul\":5314:5329   */\n      revert\n        /* \"#utility.yul\":5154:5339   */\n    tag_377:\n        /* \"#utility.yul\":5355:5357   */\n      0x40\n        /* \"#utility.yul\":5348:5370   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":5030:5376   */\n      jump\t// out\n        /* \"#utility.yul\":5381:6009   */\n    tag_159:\n        /* \"#utility.yul\":5420:5423   */\n      0x00\n        /* \"#utility.yul\":5462:5466   */\n      0x44\n        /* \"#utility.yul\":5444:5460   */\n      returndatasize\n        /* \"#utility.yul\":5441:5467   */\n      lt\n        /* \"#utility.yul\":5438:5477   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":5381:6009   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5438:5477   */\n    tag_379:\n        /* \"#utility.yul\":5504:5506   */\n      0x40\n        /* \"#utility.yul\":5498:5507   */\n      mload\n        /* \"#utility.yul\":5544:5560   */\n      returndatasize\n      not(0x03)\n        /* \"#utility.yul\":5540:5569   */\n      add\n        /* \"#utility.yul\":5537:5538   */\n      0x04\n        /* \"#utility.yul\":5498:5507   */\n      dup3\n        /* \"#utility.yul\":5516:5570   */\n      returndatacopy\n        /* \"#utility.yul\":5599:5603   */\n      dup1\n        /* \"#utility.yul\":5593:5604   */\n      mload\n        /* \"#utility.yul\":5673:5689   */\n      returndatasize\n        /* \"#utility.yul\":5666:5670   */\n      0x24\n        /* \"#utility.yul\":5658:5664   */\n      dup3\n        /* \"#utility.yul\":5654:5671   */\n      add\n        /* \"#utility.yul\":5651:5690   */\n      gt\n        /* \"#utility.yul\":5630:5648   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5622:5628   */\n      dup3\n        /* \"#utility.yul\":5619:5649   */\n      gt\n        /* \"#utility.yul\":5616:5691   */\n      or\n        /* \"#utility.yul\":5613:5701   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5694:5699   */\n      pop\n      pop\n        /* \"#utility.yul\":5381:6009   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5613:5701   */\n    tag_380:\n        /* \"#utility.yul\":5731:5737   */\n      dup1\n        /* \"#utility.yul\":5725:5729   */\n      dup3\n        /* \"#utility.yul\":5721:5738   */\n      add\n        /* \"#utility.yul\":5767:5770   */\n      dup1\n        /* \"#utility.yul\":5761:5771   */\n      mload\n        /* \"#utility.yul\":5794:5812   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5786:5792   */\n      dup2\n        /* \"#utility.yul\":5783:5813   */\n      gt\n        /* \"#utility.yul\":5780:5823   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5816:5821   */\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5381:6009   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5780:5823   */\n    tag_381:\n        /* \"#utility.yul\":5881:5897   */\n      returndatasize\n        /* \"#utility.yul\":5871:5898   */\n      dup5\n      add\n      not(0x03)\n        /* \"#utility.yul\":5867:5907   */\n      add\n        /* \"#utility.yul\":5842:5858   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5838:5865   */\n      add\n        /* \"#utility.yul\":5835:5908   */\n      gt\n        /* \"#utility.yul\":5832:5918   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5911:5916   */\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5381:6009   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5832:5918   */\n    tag_382:\n        /* \"#utility.yul\":5927:5984   */\n      tag_383\n        /* \"#utility.yul\":5978:5982   */\n      0x20\n        /* \"#utility.yul\":5969:5975   */\n      dup3\n        /* \"#utility.yul\":5961:5967   */\n      dup6\n        /* \"#utility.yul\":5957:5976   */\n      add\n        /* \"#utility.yul\":5953:5983   */\n      add\n        /* \"#utility.yul\":5947:5951   */\n      dup6\n        /* \"#utility.yul\":5927:5984   */\n      tag_332\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":6000:6003   */\n      swap4\n        /* \"#utility.yul\":5381:6009   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6014:6142   */\n    tag_162:\n        /* \"#utility.yul\":6081:6090   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6102:6113   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6099:6136   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":6116:6134   */\n      tag_120\n      tag_331\n      jump\t// in\n        /* \"#utility.yul\":6147:6535   */\n    tag_164:\n        /* \"#utility.yul\":6381:6382   */\n      0x01\n        /* \"#utility.yul\":6377:6378   */\n      dup1\n        /* \"#utility.yul\":6372:6375   */\n      0xa0\n        /* \"#utility.yul\":6368:6379   */\n      shl\n        /* \"#utility.yul\":6364:6383   */\n      sub\n        /* \"#utility.yul\":6356:6362   */\n      dup5\n        /* \"#utility.yul\":6352:6384   */\n      and\n        /* \"#utility.yul\":6341:6350   */\n      dup2\n        /* \"#utility.yul\":6334:6385   */\n      mstore\n        /* \"#utility.yul\":6421:6427   */\n      dup3\n        /* \"#utility.yul\":6416:6418   */\n      0x20\n        /* \"#utility.yul\":6405:6414   */\n      dup3\n        /* \"#utility.yul\":6401:6419   */\n      add\n        /* \"#utility.yul\":6394:6428   */\n      mstore\n        /* \"#utility.yul\":6464:6466   */\n      0x60\n        /* \"#utility.yul\":6459:6461   */\n      0x40\n        /* \"#utility.yul\":6448:6457   */\n      dup3\n        /* \"#utility.yul\":6444:6462   */\n      add\n        /* \"#utility.yul\":6437:6467   */\n      mstore\n        /* \"#utility.yul\":6315:6319   */\n      0x00\n        /* \"#utility.yul\":6484:6529   */\n      tag_388\n        /* \"#utility.yul\":6525:6527   */\n      0x60\n        /* \"#utility.yul\":6514:6523   */\n      dup4\n        /* \"#utility.yul\":6510:6528   */\n      add\n        /* \"#utility.yul\":6502:6508   */\n      dup5\n        /* \"#utility.yul\":6484:6529   */\n      tag_328\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6476:6529   */\n      swap6\n        /* \"#utility.yul\":6147:6535   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6540:7052   */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6798:6830   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6780:6831   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6862:6864   */\n      0x20\n        /* \"#utility.yul\":6847:6865   */\n      dup3\n      add\n        /* \"#utility.yul\":6840:6874   */\n      mstore\n        /* \"#utility.yul\":6910:6912   */\n      0x60\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6890:6908   */\n      dup3\n      add\n        /* \"#utility.yul\":6883:6913   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6949:6951   */\n      0x12\n        /* \"#utility.yul\":6929:6947   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6922:6952   */\n      mstore\n      shl(0x71, 0x2ab735b737bbb710313ab9371032b93937b9)\n        /* \"#utility.yul\":6983:6986   */\n      0x80\n        /* \"#utility.yul\":6968:6987   */\n      dup3\n      add\n        /* \"#utility.yul\":6961:7010   */\n      mstore\n        /* \"#utility.yul\":6818:6821   */\n      0xa0\n        /* \"#utility.yul\":7027:7046   */\n      add\n      swap1\n        /* \"#utility.yul\":6540:7052   */\n      jump\t// out\n        /* \"#utility.yul\":7716:7933   */\n    tag_203:\n        /* \"#utility.yul\":7756:7757   */\n      0x00\n        /* \"#utility.yul\":7782:7783   */\n      dup3\n        /* \"#utility.yul\":7772:7904   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":7826:7836   */\n      0x4e487b71\n        /* \"#utility.yul\":7821:7824   */\n      0xe0\n        /* \"#utility.yul\":7817:7837   */\n      shl\n        /* \"#utility.yul\":7814:7815   */\n      0x00\n        /* \"#utility.yul\":7807:7838   */\n      mstore\n        /* \"#utility.yul\":7861:7865   */\n      0x12\n        /* \"#utility.yul\":7858:7859   */\n      0x04\n        /* \"#utility.yul\":7851:7866   */\n      mstore\n        /* \"#utility.yul\":7889:7893   */\n      0x24\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7894   */\n      revert\n        /* \"#utility.yul\":7772:7904   */\n    tag_393:\n      pop\n        /* \"#utility.yul\":7918:7927   */\n      div\n      swap1\n        /* \"#utility.yul\":7716:7933   */\n      jump\t// out\n        /* \"#utility.yul\":8973:9218   */\n    tag_263:\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9081:9090   */\n      dup3\n        /* \"#utility.yul\":9072:9079   */\n      dup5\n        /* \"#utility.yul\":9068:9091   */\n      sub\n        /* \"#utility.yul\":9064:9096   */\n      slt\n        /* \"#utility.yul\":9061:9113   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9099:9111   */\n      revert\n        /* \"#utility.yul\":9061:9113   */\n    tag_398:\n        /* \"#utility.yul\":9141:9150   */\n      dup2\n        /* \"#utility.yul\":9135:9151   */\n      mload\n        /* \"#utility.yul\":9160:9188   */\n      tag_336\n        /* \"#utility.yul\":9182:9187   */\n      dup2\n        /* \"#utility.yul\":9160:9188   */\n      tag_330\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220c9c7ae96297410fef143e8be3c9db06b71d4b72f344f43926a1b795f4ae75be264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1313": {
									"entryPoint": null,
									"id": 1313,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 748,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 667,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 804,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9__to_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_rational_0_by_1_t_rational_18_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7304:8",
										"nodeType": "YulBlock",
										"src": "0:7304:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "210:659:8",
													"nodeType": "YulBlock",
													"src": "210:659:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:8",
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nativeSrc": "261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nativeSrc": "261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:8",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nativeSrc": "234:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nativeSrc": "230:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nativeSrc": "223:35:8",
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nativeSrc": "220:55:8",
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nativeSrc": "284:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:8"
																},
																"nativeSrc": "298:13:8",
																"nodeType": "YulFunctionCall",
																"src": "298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:8",
																	"nodeType": "YulTypedName",
																	"src": "288:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:8",
																"nodeType": "YulBlock",
																"src": "354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:8"
																			},
																			"nativeSrc": "356:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:8"
																		},
																		"nativeSrc": "356:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:8",
																						"nodeType": "YulLiteral",
																						"src": "342:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:8",
																						"nodeType": "YulLiteral",
																						"src": "346:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:8"
																				},
																				"nativeSrc": "338:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:8",
																				"nodeType": "YulLiteral",
																				"src": "350:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:8"
																		},
																		"nativeSrc": "334:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:8"
																},
																"nativeSrc": "323:30:8",
																"nodeType": "YulFunctionCall",
																"src": "323:30:8"
															},
															"nativeSrc": "320:56:8",
															"nodeType": "YulIf",
															"src": "320:56:8"
														},
														{
															"nativeSrc": "385:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:8"
																},
																"nativeSrc": "399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "399:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:8",
																										"nodeType": "YulLiteral",
																										"src": "471:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:8"
																								},
																								"nativeSrc": "459:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:8",
																										"nodeType": "YulLiteral",
																										"src": "482:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:8"
																								},
																								"nativeSrc": "478:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:8"
																						},
																						"nativeSrc": "455:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:8",
																						"nodeType": "YulLiteral",
																						"src": "488:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:8"
																				},
																				"nativeSrc": "451:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:8",
																						"nodeType": "YulLiteral",
																						"src": "497:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:8"
																				},
																				"nativeSrc": "493:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:8"
																		},
																		"nativeSrc": "447:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:8"
																},
																"nativeSrc": "435:67:8",
																"nodeType": "YulFunctionCall",
																"src": "435:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:8",
																	"nodeType": "YulTypedName",
																	"src": "421:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:8",
																"nodeType": "YulBlock",
																"src": "577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:8"
																			},
																			"nativeSrc": "579:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:8"
																		},
																		"nativeSrc": "579:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:8",
																								"nodeType": "YulLiteral",
																								"src": "540:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:8",
																								"nodeType": "YulLiteral",
																								"src": "544:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:8"
																						},
																						"nativeSrc": "536:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:8",
																						"nodeType": "YulLiteral",
																						"src": "548:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:8"
																				},
																				"nativeSrc": "532:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:8"
																		},
																		"nativeSrc": "517:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nativeSrc": "553:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:8"
																},
																"nativeSrc": "514:62:8",
																"nodeType": "YulFunctionCall",
																"src": "514:62:8"
															},
															"nativeSrc": "511:88:8",
															"nodeType": "YulIf",
															"src": "511:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "615:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:8"
																},
																"nativeSrc": "608:22:8",
																"nodeType": "YulFunctionCall",
																"src": "608:22:8"
															},
															"nativeSrc": "608:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:8"
																},
																"nativeSrc": "639:22:8",
																"nodeType": "YulFunctionCall",
																"src": "639:22:8"
															},
															"nativeSrc": "639:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:8"
														},
														{
															"body": {
																"nativeSrc": "713:16:8",
																"nodeType": "YulBlock",
																"src": "713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:8"
																			},
																			"nativeSrc": "715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:8"
																		},
																		"nativeSrc": "715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:8"
																				},
																				"nativeSrc": "680:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:8",
																				"nodeType": "YulLiteral",
																				"src": "701:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nativeSrc": "676:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:8"
																},
																"nativeSrc": "673:39:8",
																"nodeType": "YulFunctionCall",
																"src": "673:39:8"
															},
															"nativeSrc": "670:59:8",
															"nodeType": "YulIf",
															"src": "670:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:8",
																				"nodeType": "YulLiteral",
																				"src": "756:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:8"
																		},
																		"nativeSrc": "744:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:8",
																				"nodeType": "YulLiteral",
																				"src": "775:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:8"
																		},
																		"nativeSrc": "763:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:8"
																},
																"nativeSrc": "738:51:8",
																"nodeType": "YulFunctionCall",
																"src": "738:51:8"
															},
															"nativeSrc": "738:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:8"
																				},
																				"nativeSrc": "809:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:8",
																				"nodeType": "YulLiteral",
																				"src": "830:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:8",
																		"nodeType": "YulLiteral",
																		"src": "837:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:8"
																},
																"nativeSrc": "798:41:8",
																"nodeType": "YulFunctionCall",
																"src": "798:41:8"
															},
															"nativeSrc": "798:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:8"
														},
														{
															"nativeSrc": "848:15:8",
															"nodeType": "YulAssignment",
															"src": "848:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:8",
																"nodeType": "YulIdentifier",
																"src": "857:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:8",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:8",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:8",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:723:8"
											},
											{
												"body": {
													"nativeSrc": "934:117:8",
													"nodeType": "YulBlock",
													"src": "934:117:8",
													"statements": [
														{
															"nativeSrc": "944:22:8",
															"nodeType": "YulAssignment",
															"src": "944:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "959:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "959:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "953:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:8"
																},
																"nativeSrc": "953:13:8",
																"nodeType": "YulFunctionCall",
																"src": "953:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "944:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1029:16:8",
																"nodeType": "YulBlock",
																"src": "1029:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1038:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1041:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1041:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1031:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:8"
																			},
																			"nativeSrc": "1031:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1031:12:8"
																		},
																		"nativeSrc": "1031:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1031:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "988:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "988:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "999:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "999:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1014:3:8",
																										"nodeType": "YulLiteral",
																										"src": "1014:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1019:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1019:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1010:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1010:3:8"
																								},
																								"nativeSrc": "1010:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1010:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1023:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1023:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1006:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1006:3:8"
																						},
																						"nativeSrc": "1006:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1006:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "995:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "995:3:8"
																				},
																				"nativeSrc": "995:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "995:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "985:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "985:2:8"
																		},
																		"nativeSrc": "985:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "985:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "978:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:8"
																},
																"nativeSrc": "978:50:8",
																"nodeType": "YulFunctionCall",
																"src": "978:50:8"
															},
															"nativeSrc": "975:70:8",
															"nodeType": "YulIf",
															"src": "975:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "874:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "913:6:8",
														"nodeType": "YulTypedName",
														"src": "913:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "924:5:8",
														"nodeType": "YulTypedName",
														"src": "924:5:8",
														"type": ""
													}
												],
												"src": "874:177:8"
											},
											{
												"body": {
													"nativeSrc": "1257:906:8",
													"nodeType": "YulBlock",
													"src": "1257:906:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1304:16:8",
																"nodeType": "YulBlock",
																"src": "1304:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1313:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1313:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1306:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1306:6:8"
																			},
																			"nativeSrc": "1306:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:12:8"
																		},
																		"nativeSrc": "1306:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1306:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1278:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1278:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1287:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1287:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1274:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:8"
																		},
																		"nativeSrc": "1274:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1274:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1299:3:8",
																		"nodeType": "YulLiteral",
																		"src": "1299:3:8",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1270:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:8"
																},
																"nativeSrc": "1270:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1270:33:8"
															},
															"nativeSrc": "1267:53:8",
															"nodeType": "YulIf",
															"src": "1267:53:8"
														},
														{
															"nativeSrc": "1329:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1329:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1343:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1343:5:8"
																},
																"nativeSrc": "1343:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1343:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1333:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1333:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1402:16:8",
																"nodeType": "YulBlock",
																"src": "1402:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1411:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1411:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1414:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1414:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1404:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1404:6:8"
																			},
																			"nativeSrc": "1404:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1404:12:8"
																		},
																		"nativeSrc": "1404:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1404:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1374:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1374:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1390:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1390:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1394:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1394:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1386:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1386:3:8"
																				},
																				"nativeSrc": "1386:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1386:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1398:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1398:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1382:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:8"
																		},
																		"nativeSrc": "1382:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1382:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1371:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1371:2:8"
																},
																"nativeSrc": "1371:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1371:30:8"
															},
															"nativeSrc": "1368:50:8",
															"nodeType": "YulIf",
															"src": "1368:50:8"
														},
														{
															"nativeSrc": "1427:71:8",
															"nodeType": "YulAssignment",
															"src": "1427:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1470:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1481:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1481:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1466:3:8"
																		},
																		"nativeSrc": "1466:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1466:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1490:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1490:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1437:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:28:8"
																},
																"nativeSrc": "1437:61:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1427:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:8"
																}
															]
														},
														{
															"nativeSrc": "1507:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1507:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1544:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:8"
																		},
																		"nativeSrc": "1529:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1523:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1523:5:8"
																},
																"nativeSrc": "1523:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1523:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1511:8:8",
																	"nodeType": "YulTypedName",
																	"src": "1511:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1593:16:8",
																"nodeType": "YulBlock",
																"src": "1593:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1602:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1602:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1605:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1605:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1595:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1595:6:8"
																			},
																			"nativeSrc": "1595:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1595:12:8"
																		},
																		"nativeSrc": "1595:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1595:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1563:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1563:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1581:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1581:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1585:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1585:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1577:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1577:3:8"
																				},
																				"nativeSrc": "1577:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1577:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1589:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1589:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1573:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:8"
																		},
																		"nativeSrc": "1573:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1573:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1560:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1560:2:8"
																},
																"nativeSrc": "1560:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1560:32:8"
															},
															"nativeSrc": "1557:52:8",
															"nodeType": "YulIf",
															"src": "1557:52:8"
														},
														{
															"nativeSrc": "1618:73:8",
															"nodeType": "YulAssignment",
															"src": "1618:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1661:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1672:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1672:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:8"
																		},
																		"nativeSrc": "1657:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1683:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1683:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1628:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1628:28:8"
																},
																"nativeSrc": "1628:63:8",
																"nodeType": "YulFunctionCall",
																"src": "1628:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1618:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:8"
																}
															]
														},
														{
															"nativeSrc": "1700:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1700:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1723:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1734:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1734:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:8"
																		},
																		"nativeSrc": "1719:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1713:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1713:5:8"
																},
																"nativeSrc": "1713:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1713:25:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1704:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1704:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1786:16:8",
																"nodeType": "YulBlock",
																"src": "1786:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1788:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1788:6:8"
																			},
																			"nativeSrc": "1788:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:12:8"
																		},
																		"nativeSrc": "1788:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1788:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1760:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1760:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1771:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1771:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1778:4:8",
																						"nodeType": "YulLiteral",
																						"src": "1778:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1767:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:8"
																				},
																				"nativeSrc": "1767:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1757:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1757:2:8"
																		},
																		"nativeSrc": "1757:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1757:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1750:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:8"
																},
																"nativeSrc": "1750:35:8",
																"nodeType": "YulFunctionCall",
																"src": "1750:35:8"
															},
															"nativeSrc": "1747:55:8",
															"nodeType": "YulIf",
															"src": "1747:55:8"
														},
														{
															"nativeSrc": "1811:15:8",
															"nodeType": "YulAssignment",
															"src": "1811:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1821:5:8",
																"nodeType": "YulIdentifier",
																"src": "1821:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1811:6:8"
																}
															]
														},
														{
															"nativeSrc": "1835:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1835:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1850:1:8",
																"nodeType": "YulLiteral",
																"src": "1850:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1839:7:8",
																	"nodeType": "YulTypedName",
																	"src": "1839:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1860:36:8",
															"nodeType": "YulAssignment",
															"src": "1860:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1892:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1892:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1877:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:8"
																		},
																		"nativeSrc": "1877:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1871:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:8"
																},
																"nativeSrc": "1871:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1871:25:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1860:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1860:7:8"
																}
															]
														},
														{
															"nativeSrc": "1905:17:8",
															"nodeType": "YulAssignment",
															"src": "1905:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "1915:7:8",
																"nodeType": "YulIdentifier",
																"src": "1915:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1905:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:8"
																}
															]
														},
														{
															"nativeSrc": "1931:60:8",
															"nodeType": "YulAssignment",
															"src": "1931:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1975:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1975:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1986:3:8",
																				"nodeType": "YulLiteral",
																				"src": "1986:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1971:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:8"
																		},
																		"nativeSrc": "1971:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1941:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "1941:29:8"
																},
																"nativeSrc": "1941:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1941:50:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1931:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:8"
																}
															]
														},
														{
															"nativeSrc": "2000:60:8",
															"nodeType": "YulAssignment",
															"src": "2000:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2044:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2044:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2055:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2055:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2040:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:8"
																		},
																		"nativeSrc": "2040:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2040:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "2010:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "2010:29:8"
																},
																"nativeSrc": "2010:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2010:50:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2000:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:8"
																}
															]
														},
														{
															"nativeSrc": "2069:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2069:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2084:1:8",
																"nodeType": "YulLiteral",
																"src": "2084:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2073:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2073:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2094:37:8",
															"nodeType": "YulAssignment",
															"src": "2094:37:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2115:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2126:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2126:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2111:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:8"
																		},
																		"nativeSrc": "2111:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2111:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2105:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2105:5:8"
																},
																"nativeSrc": "2105:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2105:26:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2094:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2094:7:8"
																}
															]
														},
														{
															"nativeSrc": "2140:17:8",
															"nodeType": "YulAssignment",
															"src": "2140:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "2150:7:8",
																"nodeType": "YulIdentifier",
																"src": "2150:7:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "2140:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1056:1107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1175:9:8",
														"nodeType": "YulTypedName",
														"src": "1175:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1186:7:8",
														"nodeType": "YulTypedName",
														"src": "1186:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1198:6:8",
														"nodeType": "YulTypedName",
														"src": "1198:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1206:6:8",
														"nodeType": "YulTypedName",
														"src": "1206:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1214:6:8",
														"nodeType": "YulTypedName",
														"src": "1214:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1222:6:8",
														"nodeType": "YulTypedName",
														"src": "1222:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1230:6:8",
														"nodeType": "YulTypedName",
														"src": "1230:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1238:6:8",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1246:6:8",
														"nodeType": "YulTypedName",
														"src": "1246:6:8",
														"type": ""
													}
												],
												"src": "1056:1107:8"
											},
											{
												"body": {
													"nativeSrc": "2223:325:8",
													"nodeType": "YulBlock",
													"src": "2223:325:8",
													"statements": [
														{
															"nativeSrc": "2233:22:8",
															"nodeType": "YulAssignment",
															"src": "2233:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2247:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2247:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2250:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2250:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2243:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2243:3:8"
																},
																"nativeSrc": "2243:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2243:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2233:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:8"
																}
															]
														},
														{
															"nativeSrc": "2264:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2264:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2294:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2294:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2300:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2300:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2290:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:8"
																},
																"nativeSrc": "2290:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2290:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2268:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2268:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2341:31:8",
																"nodeType": "YulBlock",
																"src": "2341:31:8",
																"statements": [
																	{
																		"nativeSrc": "2343:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2343:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2357:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2357:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2365:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2365:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2353:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2353:3:8"
																			},
																			"nativeSrc": "2353:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2353:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2343:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2343:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2321:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2321:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2314:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:8"
																},
																"nativeSrc": "2314:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2314:26:8"
															},
															"nativeSrc": "2311:61:8",
															"nodeType": "YulIf",
															"src": "2311:61:8"
														},
														{
															"body": {
																"nativeSrc": "2431:111:8",
																"nodeType": "YulBlock",
																"src": "2431:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2452:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2452:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2459:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2459:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2464:10:8",
																							"nodeType": "YulLiteral",
																							"src": "2464:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2455:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2455:3:8"
																					},
																					"nativeSrc": "2455:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2455:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2445:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2445:6:8"
																			},
																			"nativeSrc": "2445:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2445:31:8"
																		},
																		"nativeSrc": "2445:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2445:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2496:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2496:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2499:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2499:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2489:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2489:6:8"
																			},
																			"nativeSrc": "2489:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2489:15:8"
																		},
																		"nativeSrc": "2489:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2489:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2524:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2524:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2527:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2527:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2517:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2517:6:8"
																			},
																			"nativeSrc": "2517:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2517:15:8"
																		},
																		"nativeSrc": "2517:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2517:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2387:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2387:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2410:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2410:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2418:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2418:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2407:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2407:2:8"
																		},
																		"nativeSrc": "2407:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2407:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2384:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2384:2:8"
																},
																"nativeSrc": "2384:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2384:38:8"
															},
															"nativeSrc": "2381:161:8",
															"nodeType": "YulIf",
															"src": "2381:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2168:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2203:4:8",
														"nodeType": "YulTypedName",
														"src": "2203:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2212:6:8",
														"nodeType": "YulTypedName",
														"src": "2212:6:8",
														"type": ""
													}
												],
												"src": "2168:380:8"
											},
											{
												"body": {
													"nativeSrc": "2609:65:8",
													"nodeType": "YulBlock",
													"src": "2609:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2626:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2626:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2629:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2629:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2619:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:8"
																},
																"nativeSrc": "2619:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2619:14:8"
															},
															"nativeSrc": "2619:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2619:14:8"
														},
														{
															"nativeSrc": "2642:26:8",
															"nodeType": "YulAssignment",
															"src": "2642:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2660:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2660:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2663:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2663:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2650:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2650:9:8"
																},
																"nativeSrc": "2650:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2650:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2642:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2642:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2553:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2592:3:8",
														"nodeType": "YulTypedName",
														"src": "2592:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2600:4:8",
														"nodeType": "YulTypedName",
														"src": "2600:4:8",
														"type": ""
													}
												],
												"src": "2553:121:8"
											},
											{
												"body": {
													"nativeSrc": "2760:437:8",
													"nodeType": "YulBlock",
													"src": "2760:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2793:398:8",
																"nodeType": "YulBlock",
																"src": "2793:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2814:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2814:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2817:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2817:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2807:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2807:6:8"
																			},
																			"nativeSrc": "2807:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2807:16:8"
																		},
																		"nativeSrc": "2807:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2807:16:8"
																	},
																	{
																		"nativeSrc": "2836:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2836:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2858:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2858:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2861:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2861:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2848:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2848:9:8"
																			},
																			"nativeSrc": "2848:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2848:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2840:4:8",
																				"nodeType": "YulTypedName",
																				"src": "2840:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2879:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2879:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2902:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2902:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2912:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2912:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2919:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "2919:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2931:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2931:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2915:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2915:3:8"
																							},
																							"nativeSrc": "2915:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2915:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2908:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2908:3:8"
																					},
																					"nativeSrc": "2908:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2908:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2898:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2898:3:8"
																			},
																			"nativeSrc": "2898:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2898:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2883:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2883:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2973:23:8",
																			"nodeType": "YulBlock",
																			"src": "2973:23:8",
																			"statements": [
																				{
																					"nativeSrc": "2975:19:8",
																					"nodeType": "YulAssignment",
																					"src": "2975:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2990:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2990:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2975:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "2975:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2955:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "2955:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2967:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2967:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2952:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2952:2:8"
																			},
																			"nativeSrc": "2952:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2952:20:8"
																		},
																		"nativeSrc": "2949:47:8",
																		"nodeType": "YulIf",
																		"src": "2949:47:8"
																	},
																	{
																		"nativeSrc": "3009:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3009:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3023:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3023:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3033:1:8",
																							"nodeType": "YulLiteral",
																							"src": "3033:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3040:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3040:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3045:2:8",
																									"nodeType": "YulLiteral",
																									"src": "3045:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3036:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3036:3:8"
																							},
																							"nativeSrc": "3036:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3036:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3029:3:8"
																					},
																					"nativeSrc": "3029:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3029:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3019:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3019:3:8"
																			},
																			"nativeSrc": "3019:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3019:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3013:2:8",
																				"nodeType": "YulTypedName",
																				"src": "3013:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3063:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3063:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3076:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "3076:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "3067:5:8",
																				"nodeType": "YulTypedName",
																				"src": "3067:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3161:20:8",
																			"nodeType": "YulBlock",
																			"src": "3161:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3170:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3177:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3177:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3163:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:8"
																						},
																						"nativeSrc": "3163:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3163:16:8"
																					},
																					"nativeSrc": "3163:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "3163:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3111:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3111:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3118:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3118:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3108:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3108:2:8"
																			},
																			"nativeSrc": "3108:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3108:13:8"
																		},
																		"nativeSrc": "3100:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3122:26:8",
																			"nodeType": "YulBlock",
																			"src": "3122:26:8",
																			"statements": [
																				{
																					"nativeSrc": "3124:22:8",
																					"nodeType": "YulAssignment",
																					"src": "3124:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3137:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3137:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3144:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3144:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3133:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3133:3:8"
																						},
																						"nativeSrc": "3133:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3133:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3124:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "3124:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3104:3:8",
																			"nodeType": "YulBlock",
																			"src": "3104:3:8",
																			"statements": []
																		},
																		"src": "3100:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2776:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2776:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2781:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2781:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2773:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2773:2:8"
																},
																"nativeSrc": "2773:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2773:11:8"
															},
															"nativeSrc": "2770:421:8",
															"nodeType": "YulIf",
															"src": "2770:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2679:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2732:5:8",
														"nodeType": "YulTypedName",
														"src": "2732:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2739:3:8",
														"nodeType": "YulTypedName",
														"src": "2739:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2744:10:8",
														"nodeType": "YulTypedName",
														"src": "2744:10:8",
														"type": ""
													}
												],
												"src": "2679:518:8"
											},
											{
												"body": {
													"nativeSrc": "3287:81:8",
													"nodeType": "YulBlock",
													"src": "3287:81:8",
													"statements": [
														{
															"nativeSrc": "3297:65:8",
															"nodeType": "YulAssignment",
															"src": "3297:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3312:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3330:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3330:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3333:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "3333:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3326:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3326:3:8"
																								},
																								"nativeSrc": "3326:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3326:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3343:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3343:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3339:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3339:3:8"
																								},
																								"nativeSrc": "3339:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3339:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3322:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3322:3:8"
																						},
																						"nativeSrc": "3322:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3322:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3318:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3318:3:8"
																				},
																				"nativeSrc": "3318:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3318:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3354:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3357:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3357:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3350:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:8"
																		},
																		"nativeSrc": "3350:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3305:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3305:2:8"
																},
																"nativeSrc": "3305:57:8",
																"nodeType": "YulFunctionCall",
																"src": "3305:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3297:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3297:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3202:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3264:4:8",
														"nodeType": "YulTypedName",
														"src": "3264:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3270:3:8",
														"nodeType": "YulTypedName",
														"src": "3270:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3278:4:8",
														"nodeType": "YulTypedName",
														"src": "3278:4:8",
														"type": ""
													}
												],
												"src": "3202:166:8"
											},
											{
												"body": {
													"nativeSrc": "3469:1203:8",
													"nodeType": "YulBlock",
													"src": "3469:1203:8",
													"statements": [
														{
															"nativeSrc": "3479:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3479:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3499:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3499:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3493:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3493:5:8"
																},
																"nativeSrc": "3493:10:8",
																"nodeType": "YulFunctionCall",
																"src": "3493:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3483:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3483:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3546:22:8",
																"nodeType": "YulBlock",
																"src": "3546:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3548:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3548:16:8"
																			},
																			"nativeSrc": "3548:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3548:18:8"
																		},
																		"nativeSrc": "3548:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3548:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3534:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3534:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3538:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3538:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3530:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3530:3:8"
																				},
																				"nativeSrc": "3530:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3530:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3542:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3526:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3526:3:8"
																		},
																		"nativeSrc": "3526:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3526:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3515:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3515:2:8"
																},
																"nativeSrc": "3515:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3515:30:8"
															},
															"nativeSrc": "3512:56:8",
															"nodeType": "YulIf",
															"src": "3512:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3621:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3621:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3659:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3659:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3653:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3653:5:8"
																				},
																				"nativeSrc": "3653:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3653:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3627:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "3627:25:8"
																		},
																		"nativeSrc": "3627:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3627:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3667:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3667:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3577:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3577:43:8"
																},
																"nativeSrc": "3577:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3577:97:8"
															},
															"nativeSrc": "3577:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "3577:97:8"
														},
														{
															"nativeSrc": "3683:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3683:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3700:1:8",
																"nodeType": "YulLiteral",
																"src": "3700:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3687:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3687:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3710:17:8",
															"nodeType": "YulAssignment",
															"src": "3710:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3723:4:8",
																"nodeType": "YulLiteral",
																"src": "3723:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3710:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3710:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3773:642:8",
																		"nodeType": "YulBlock",
																		"src": "3773:642:8",
																		"statements": [
																			{
																				"nativeSrc": "3787:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3787:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3806:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3806:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3818:2:8",
																									"nodeType": "YulLiteral",
																									"src": "3818:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3814:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3814:3:8"
																							},
																							"nativeSrc": "3814:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3814:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3802:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3802:3:8"
																					},
																					"nativeSrc": "3802:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3802:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3791:7:8",
																						"nodeType": "YulTypedName",
																						"src": "3791:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3835:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3835:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3879:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3879:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3849:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "3849:29:8"
																					},
																					"nativeSrc": "3849:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3849:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3839:6:8",
																						"nodeType": "YulTypedName",
																						"src": "3839:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3897:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3897:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3906:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3906:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3901:1:8",
																						"nodeType": "YulTypedName",
																						"src": "3901:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3977:165:8",
																					"nodeType": "YulBlock",
																					"src": "3977:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4002:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4002:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4020:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "4020:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4025:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "4025:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4016:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4016:3:8"
																												},
																												"nativeSrc": "4016:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4016:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4010:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "4010:5:8"
																										},
																										"nativeSrc": "4010:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4010:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3995:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3995:6:8"
																								},
																								"nativeSrc": "3995:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3995:42:8"
																							},
																							"nativeSrc": "3995:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3995:42:8"
																						},
																						{
																							"nativeSrc": "4054:24:8",
																							"nodeType": "YulAssignment",
																							"src": "4054:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4068:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4068:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4076:1:8",
																										"nodeType": "YulLiteral",
																										"src": "4076:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4064:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4064:3:8"
																								},
																								"nativeSrc": "4064:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4064:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4054:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4054:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4095:33:8",
																							"nodeType": "YulAssignment",
																							"src": "4095:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4112:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "4112:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4123:4:8",
																										"nodeType": "YulLiteral",
																										"src": "4123:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4108:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4108:3:8"
																								},
																								"nativeSrc": "4108:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4108:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4095:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "4095:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3931:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "3931:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3934:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3934:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3928:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3928:2:8"
																					},
																					"nativeSrc": "3928:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3928:14:8"
																				},
																				"nativeSrc": "3920:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3943:21:8",
																					"nodeType": "YulBlock",
																					"src": "3943:21:8",
																					"statements": [
																						{
																							"nativeSrc": "3945:17:8",
																							"nodeType": "YulAssignment",
																							"src": "3945:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3954:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "3954:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3957:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3957:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3950:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3950:3:8"
																								},
																								"nativeSrc": "3950:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3950:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3945:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "3945:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3924:3:8",
																					"nodeType": "YulBlock",
																					"src": "3924:3:8",
																					"statements": []
																				},
																				"src": "3920:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "4190:166:8",
																					"nodeType": "YulBlock",
																					"src": "4190:166:8",
																					"statements": [
																						{
																							"nativeSrc": "4208:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4208:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4235:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4235:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4240:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4240:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4231:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4231:3:8"
																										},
																										"nativeSrc": "4231:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4231:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4225:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4225:5:8"
																								},
																								"nativeSrc": "4225:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4225:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4212:9:8",
																									"nodeType": "YulTypedName",
																									"src": "4212:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4275:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4275:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4287:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4287:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4314:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "4314:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4317:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "4317:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4310:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "4310:3:8"
																																		},
																																		"nativeSrc": "4310:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4310:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4326:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "4326:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4306:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "4306:3:8"
																																},
																																"nativeSrc": "4306:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "4306:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4336:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "4336:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4332:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "4332:3:8"
																																},
																																"nativeSrc": "4332:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "4332:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4302:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "4302:3:8"
																														},
																														"nativeSrc": "4302:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "4302:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4298:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4298:3:8"
																												},
																												"nativeSrc": "4298:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4298:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4283:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4283:3:8"
																										},
																										"nativeSrc": "4283:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4283:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4268:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4268:6:8"
																								},
																								"nativeSrc": "4268:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4268:74:8"
																							},
																							"nativeSrc": "4268:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4268:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4161:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4161:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4170:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4170:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4158:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4158:2:8"
																					},
																					"nativeSrc": "4158:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4158:19:8"
																				},
																				"nativeSrc": "4155:201:8",
																				"nodeType": "YulIf",
																				"src": "4155:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4376:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4376:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4390:1:8",
																											"nodeType": "YulLiteral",
																											"src": "4390:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4393:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "4393:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4386:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "4386:3:8"
																									},
																									"nativeSrc": "4386:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4386:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4402:1:8",
																									"nodeType": "YulLiteral",
																									"src": "4402:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4382:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4382:3:8"
																							},
																							"nativeSrc": "4382:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4382:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4369:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4369:6:8"
																					},
																					"nativeSrc": "4369:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4369:36:8"
																				},
																				"nativeSrc": "4369:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4369:36:8"
																			}
																		]
																	},
																	"nativeSrc": "3766:649:8",
																	"nodeType": "YulCase",
																	"src": "3766:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3771:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3771:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4432:234:8",
																		"nodeType": "YulBlock",
																		"src": "4432:234:8",
																		"statements": [
																			{
																				"nativeSrc": "4446:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4446:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4459:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4459:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4450:5:8",
																						"nodeType": "YulTypedName",
																						"src": "4450:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4495:67:8",
																					"nodeType": "YulBlock",
																					"src": "4495:67:8",
																					"statements": [
																						{
																							"nativeSrc": "4513:35:8",
																							"nodeType": "YulAssignment",
																							"src": "4513:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4532:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4532:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4537:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4537:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4528:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4528:3:8"
																										},
																										"nativeSrc": "4528:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4528:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4522:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4522:5:8"
																								},
																								"nativeSrc": "4522:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4522:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4513:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4513:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4476:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4476:6:8"
																				},
																				"nativeSrc": "4473:89:8",
																				"nodeType": "YulIf",
																				"src": "4473:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4582:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4582:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4641:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4641:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4648:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4648:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4588:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "4588:52:8"
																							},
																							"nativeSrc": "4588:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4588:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4575:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4575:6:8"
																					},
																					"nativeSrc": "4575:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4575:81:8"
																				},
																				"nativeSrc": "4575:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4575:81:8"
																			}
																		]
																	},
																	"nativeSrc": "4424:242:8",
																	"nodeType": "YulCase",
																	"src": "4424:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3746:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3746:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3754:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3754:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3743:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3743:2:8"
																},
																"nativeSrc": "3743:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3743:14:8"
															},
															"nativeSrc": "3736:930:8",
															"nodeType": "YulSwitch",
															"src": "3736:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3373:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3454:4:8",
														"nodeType": "YulTypedName",
														"src": "3454:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3460:3:8",
														"nodeType": "YulTypedName",
														"src": "3460:3:8",
														"type": ""
													}
												],
												"src": "3373:1299:8"
											},
											{
												"body": {
													"nativeSrc": "4778:102:8",
													"nodeType": "YulBlock",
													"src": "4778:102:8",
													"statements": [
														{
															"nativeSrc": "4788:26:8",
															"nodeType": "YulAssignment",
															"src": "4788:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4800:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4800:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4811:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4796:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4796:3:8"
																},
																"nativeSrc": "4796:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4796:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4788:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4788:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4830:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4830:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4845:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4845:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4861:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4861:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4866:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4866:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4857:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4857:3:8"
																						},
																						"nativeSrc": "4857:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4857:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4870:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4870:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4853:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4853:3:8"
																				},
																				"nativeSrc": "4853:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4853:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4841:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:8"
																		},
																		"nativeSrc": "4841:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4841:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:8"
																},
																"nativeSrc": "4823:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4823:51:8"
															},
															"nativeSrc": "4823:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4823:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4677:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4747:9:8",
														"nodeType": "YulTypedName",
														"src": "4747:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4758:6:8",
														"nodeType": "YulTypedName",
														"src": "4758:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4769:4:8",
														"nodeType": "YulTypedName",
														"src": "4769:4:8",
														"type": ""
													}
												],
												"src": "4677:203:8"
											},
											{
												"body": {
													"nativeSrc": "5087:246:8",
													"nodeType": "YulBlock",
													"src": "5087:246:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5104:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5104:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5119:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5119:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5135:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5135:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5140:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5140:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5131:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5131:3:8"
																						},
																						"nativeSrc": "5131:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5131:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5144:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5144:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5127:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5127:3:8"
																				},
																				"nativeSrc": "5127:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5127:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5115:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:8"
																		},
																		"nativeSrc": "5115:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:8"
																},
																"nativeSrc": "5097:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5097:51:8"
															},
															"nativeSrc": "5097:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5097:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5168:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5179:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5179:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5184:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5184:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5157:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5157:6:8"
																},
																"nativeSrc": "5157:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5157:30:8"
															},
															"nativeSrc": "5157:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5157:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5207:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5207:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5218:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5218:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5203:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5203:3:8"
																		},
																		"nativeSrc": "5203:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5203:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5223:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5223:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5196:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:8"
																},
																"nativeSrc": "5196:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5196:30:8"
															},
															"nativeSrc": "5196:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5196:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5246:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5257:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5257:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5242:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:8"
																		},
																		"nativeSrc": "5242:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5242:18:8"
																	},
																	{
																		"hexValue": "546f6b656e206e616d652063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "5262:28:8",
																		"nodeType": "YulLiteral",
																		"src": "5262:28:8",
																		"type": "",
																		"value": "Token name cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5235:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:8"
																},
																"nativeSrc": "5235:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5235:56:8"
															},
															"nativeSrc": "5235:56:8",
															"nodeType": "YulExpressionStatement",
															"src": "5235:56:8"
														},
														{
															"nativeSrc": "5300:27:8",
															"nodeType": "YulAssignment",
															"src": "5300:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5312:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5323:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5323:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5308:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:8"
																},
																"nativeSrc": "5308:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5308:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5300:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4885:448:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5056:9:8",
														"nodeType": "YulTypedName",
														"src": "5056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5067:6:8",
														"nodeType": "YulTypedName",
														"src": "5067:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5078:4:8",
														"nodeType": "YulTypedName",
														"src": "5078:4:8",
														"type": ""
													}
												],
												"src": "4885:448:8"
											},
											{
												"body": {
													"nativeSrc": "5540:248:8",
													"nodeType": "YulBlock",
													"src": "5540:248:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5557:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5572:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5572:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5588:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5588:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5593:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5593:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5584:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5584:3:8"
																						},
																						"nativeSrc": "5584:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5584:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5597:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5597:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5580:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:8"
																				},
																				"nativeSrc": "5580:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5580:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5568:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:8"
																		},
																		"nativeSrc": "5568:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5568:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:8"
																},
																"nativeSrc": "5550:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5550:51:8"
															},
															"nativeSrc": "5550:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5550:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5621:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5632:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5617:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:8"
																		},
																		"nativeSrc": "5617:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5637:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5610:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:8"
																},
																"nativeSrc": "5610:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5610:30:8"
															},
															"nativeSrc": "5610:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5610:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5660:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5660:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5671:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5671:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5656:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:8"
																		},
																		"nativeSrc": "5656:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5656:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5676:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5676:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5649:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:8"
																},
																"nativeSrc": "5649:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5649:30:8"
															},
															"nativeSrc": "5649:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5649:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5699:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5699:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5710:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5710:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5695:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5695:3:8"
																		},
																		"nativeSrc": "5695:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5695:18:8"
																	},
																	{
																		"hexValue": "546f6b656e2073796d626f6c2063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "5715:30:8",
																		"nodeType": "YulLiteral",
																		"src": "5715:30:8",
																		"type": "",
																		"value": "Token symbol cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5688:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5688:6:8"
																},
																"nativeSrc": "5688:58:8",
																"nodeType": "YulFunctionCall",
																"src": "5688:58:8"
															},
															"nativeSrc": "5688:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "5688:58:8"
														},
														{
															"nativeSrc": "5755:27:8",
															"nodeType": "YulAssignment",
															"src": "5755:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5767:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5778:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5778:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5763:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:8"
																},
																"nativeSrc": "5763:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5763:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5755:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6__to_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5338:450:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5509:9:8",
														"nodeType": "YulTypedName",
														"src": "5509:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5520:6:8",
														"nodeType": "YulTypedName",
														"src": "5520:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5531:4:8",
														"nodeType": "YulTypedName",
														"src": "5531:4:8",
														"type": ""
													}
												],
												"src": "5338:450:8"
											},
											{
												"body": {
													"nativeSrc": "5965:173:8",
													"nodeType": "YulBlock",
													"src": "5965:173:8",
													"statements": [
														{
															"nativeSrc": "5975:26:8",
															"nodeType": "YulAssignment",
															"src": "5975:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5987:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5987:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5998:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:8"
																},
																"nativeSrc": "5983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5983:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5975:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5975:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6017:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6017:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6032:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6032:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6040:4:8",
																				"nodeType": "YulLiteral",
																				"src": "6040:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6028:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:8"
																		},
																		"nativeSrc": "6028:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6028:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6010:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6010:6:8"
																},
																"nativeSrc": "6010:36:8",
																"nodeType": "YulFunctionCall",
																"src": "6010:36:8"
															},
															"nativeSrc": "6010:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "6010:36:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6066:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6066:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6077:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6077:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6062:3:8"
																		},
																		"nativeSrc": "6062:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6062:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6082:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6082:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:8"
																},
																"nativeSrc": "6055:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6055:34:8"
															},
															"nativeSrc": "6055:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6055:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6109:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6109:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6120:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6120:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6105:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:8"
																		},
																		"nativeSrc": "6105:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6105:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6125:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6125:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6098:6:8"
																},
																"nativeSrc": "6098:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6098:34:8"
															},
															"nativeSrc": "6098:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6098:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_rational_0_by_1_t_rational_18_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5793:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5918:9:8",
														"nodeType": "YulTypedName",
														"src": "5918:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5929:6:8",
														"nodeType": "YulTypedName",
														"src": "5929:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5937:6:8",
														"nodeType": "YulTypedName",
														"src": "5937:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5945:6:8",
														"nodeType": "YulTypedName",
														"src": "5945:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5956:4:8",
														"nodeType": "YulTypedName",
														"src": "5956:4:8",
														"type": ""
													}
												],
												"src": "5793:345:8"
											},
											{
												"body": {
													"nativeSrc": "6317:226:8",
													"nodeType": "YulBlock",
													"src": "6317:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6327:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:8"
																},
																"nativeSrc": "6327:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6327:21:8"
															},
															"nativeSrc": "6327:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6327:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6368:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6368:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6379:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6379:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6364:3:8"
																		},
																		"nativeSrc": "6364:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6364:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6357:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:8"
																},
																"nativeSrc": "6357:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6357:30:8"
															},
															"nativeSrc": "6357:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6357:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6407:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6418:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6418:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6403:3:8"
																		},
																		"nativeSrc": "6403:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6403:18:8"
																	},
																	{
																		"hexValue": "4f776e657220616e6420666163746f72792063616e6e6f742062652074686520",
																		"kind": "string",
																		"nativeSrc": "6423:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6423:34:8",
																		"type": "",
																		"value": "Owner and factory cannot be the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6396:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:8"
																},
																"nativeSrc": "6396:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6396:62:8"
															},
															"nativeSrc": "6396:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6396:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6478:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6478:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6489:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6489:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6474:3:8"
																		},
																		"nativeSrc": "6474:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6474:18:8"
																	},
																	{
																		"hexValue": "73616d65",
																		"kind": "string",
																		"nativeSrc": "6494:6:8",
																		"nodeType": "YulLiteral",
																		"src": "6494:6:8",
																		"type": "",
																		"value": "same"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6467:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:8"
																},
																"nativeSrc": "6467:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6467:34:8"
															},
															"nativeSrc": "6467:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6467:34:8"
														},
														{
															"nativeSrc": "6510:27:8",
															"nodeType": "YulAssignment",
															"src": "6510:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6522:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6522:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6533:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6533:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:8"
																},
																"nativeSrc": "6518:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6518:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6510:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6510:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6143:400:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6294:9:8",
														"nodeType": "YulTypedName",
														"src": "6294:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6308:4:8",
														"nodeType": "YulTypedName",
														"src": "6308:4:8",
														"type": ""
													}
												],
												"src": "6143:400:8"
											},
											{
												"body": {
													"nativeSrc": "6596:174:8",
													"nodeType": "YulBlock",
													"src": "6596:174:8",
													"statements": [
														{
															"nativeSrc": "6606:16:8",
															"nodeType": "YulAssignment",
															"src": "6606:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6617:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6617:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6620:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6620:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6613:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6613:3:8"
																},
																"nativeSrc": "6613:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6613:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6606:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6606:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6653:111:8",
																"nodeType": "YulBlock",
																"src": "6653:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6674:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6674:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6681:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6681:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6686:10:8",
																							"nodeType": "YulLiteral",
																							"src": "6686:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6677:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6677:3:8"
																					},
																					"nativeSrc": "6677:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6677:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6667:6:8"
																			},
																			"nativeSrc": "6667:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6667:31:8"
																		},
																		"nativeSrc": "6667:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6667:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6718:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6718:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6721:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6721:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6711:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6711:6:8"
																			},
																			"nativeSrc": "6711:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6711:15:8"
																		},
																		"nativeSrc": "6711:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6711:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6746:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6746:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6749:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6749:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6739:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6739:6:8"
																			},
																			"nativeSrc": "6739:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6739:15:8"
																		},
																		"nativeSrc": "6739:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6739:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6637:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6637:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6640:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6640:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6634:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6634:2:8"
																},
																"nativeSrc": "6634:10:8",
																"nodeType": "YulFunctionCall",
																"src": "6634:10:8"
															},
															"nativeSrc": "6631:133:8",
															"nodeType": "YulIf",
															"src": "6631:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6548:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6579:1:8",
														"nodeType": "YulTypedName",
														"src": "6579:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6582:1:8",
														"nodeType": "YulTypedName",
														"src": "6582:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6588:3:8",
														"nodeType": "YulTypedName",
														"src": "6588:3:8",
														"type": ""
													}
												],
												"src": "6548:222:8"
											},
											{
												"body": {
													"nativeSrc": "6932:188:8",
													"nodeType": "YulBlock",
													"src": "6932:188:8",
													"statements": [
														{
															"nativeSrc": "6942:26:8",
															"nodeType": "YulAssignment",
															"src": "6942:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6954:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6954:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6965:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6950:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:8"
																},
																"nativeSrc": "6950:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6950:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6942:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6942:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6984:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6984:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6999:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6999:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7015:3:8",
																								"nodeType": "YulLiteral",
																								"src": "7015:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7020:1:8",
																								"nodeType": "YulLiteral",
																								"src": "7020:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7011:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7011:3:8"
																						},
																						"nativeSrc": "7011:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7011:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7024:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7024:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7007:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7007:3:8"
																				},
																				"nativeSrc": "7007:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7007:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:8"
																		},
																		"nativeSrc": "6995:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6977:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6977:6:8"
																},
																"nativeSrc": "6977:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6977:51:8"
															},
															"nativeSrc": "6977:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6977:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7048:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7048:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7059:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7059:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7044:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7044:3:8"
																		},
																		"nativeSrc": "7044:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7044:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7064:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7064:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7037:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7037:6:8"
																},
																"nativeSrc": "7037:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7037:34:8"
															},
															"nativeSrc": "7037:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7037:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7091:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7102:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7087:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:8"
																		},
																		"nativeSrc": "7087:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7087:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7107:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7107:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7080:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:8"
																},
																"nativeSrc": "7080:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7080:34:8"
															},
															"nativeSrc": "7080:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7080:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6885:9:8",
														"nodeType": "YulTypedName",
														"src": "6885:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6896:6:8",
														"nodeType": "YulTypedName",
														"src": "6896:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6904:6:8",
														"nodeType": "YulTypedName",
														"src": "6904:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6912:6:8",
														"nodeType": "YulTypedName",
														"src": "6912:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6923:4:8",
														"nodeType": "YulTypedName",
														"src": "6923:4:8",
														"type": ""
													}
												],
												"src": "6775:345:8"
											},
											{
												"body": {
													"nativeSrc": "7226:76:8",
													"nodeType": "YulBlock",
													"src": "7226:76:8",
													"statements": [
														{
															"nativeSrc": "7236:26:8",
															"nodeType": "YulAssignment",
															"src": "7236:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7248:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7248:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7259:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7244:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7244:3:8"
																},
																"nativeSrc": "7244:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7244:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7236:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7236:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7278:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7278:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7289:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7289:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:8"
																},
																"nativeSrc": "7271:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7271:25:8"
															},
															"nativeSrc": "7271:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "7271:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7125:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7195:9:8",
														"nodeType": "YulTypedName",
														"src": "7195:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7206:6:8",
														"nodeType": "YulTypedName",
														"src": "7206:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7217:4:8",
														"nodeType": "YulTypedName",
														"src": "7217:4:8",
														"type": ""
													}
												],
												"src": "7125:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        let value_2 := 0\n        value_2 := mload(add(headStart, 192))\n        value6 := value_2\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 26)\n        mstore(add(headStart, 96), \"Token name cannot be empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 28)\n        mstore(add(headStart, 96), \"Token symbol cannot be empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8_t_rational_0_by_1_t_rational_18_by_1__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Owner and factory cannot be the \")\n        mstore(add(headStart, 96), \"same\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040526008805460ff1916600117905534801561001c575f5ffd5b50604051611b2e380380611b2e83398101604081905261003b91610502565b828787600361004a838261063a565b506004610057828261063a565b5050506001600160a01b03811661008857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100918161029b565b50600160065586515f036100f0576040805163f7693c3d60e01b81525f60048201526024810191909152601a60448201527f546f6b656e206e616d652063616e6e6f7420626520656d707479000000000000606482015260840161007f565b85515f03610149576040805163f7693c3d60e01b81525f60048201526024810191909152601c60448201527f546f6b656e2073796d626f6c2063616e6e6f7420626520656d70747900000000606482015260840161007f565b6001600160a01b0383166101705760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166101975760405163d92e233d60e01b815260040160405180910390fd5b60128560ff1611156101ce576040516346f4384b60e01b815260ff861660048201525f60248201526012604482015260640161007f565b835f036101ee57604051631f2a200560e01b815260040160405180910390fd5b816001600160a01b0316836001600160a01b03160361025c5760405163313b9aa160e21b8152602060048201526024808201527f4f776e657220616e6420666163746f72792063616e6e6f74206265207468652060448201526373616d6560e01b606482015260840161007f565b60ff85166080526001600160a01b03821660a05260c081905261027f83856102ec565b50506008805461ff001916610100179055506107199350505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166103155760405163ec442f0560e01b81525f600482015260240161007f565b6103205f8383610324565b5050565b6001600160a01b03831661034e578060025f82825461034391906106f4565b909155506103be9050565b6001600160a01b0383165f90815260208190526040902054818110156103a05760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161007f565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103da576002805482900390556103f8565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161043d91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261046d575f5ffd5b81516001600160401b038111156104865761048661044a565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104b4576104b461044a565b6040528181528382016020018510156104cb575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b80516001600160a01b03811681146104fd575f5ffd5b919050565b5f5f5f5f5f5f5f60e0888a031215610518575f5ffd5b87516001600160401b0381111561052d575f5ffd5b6105398a828b0161045e565b60208a015190985090506001600160401b03811115610556575f5ffd5b6105628a828b0161045e565b965050604088015160ff81168114610578575f5ffd5b6060890151909550935061058e608089016104e7565b925061059c60a089016104e7565b91505f60c089015190508091505092959891949750929550565b600181811c908216806105ca57607f821691505b6020821081036105e857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561063557805f5260205f20601f840160051c810160208510156106135750805b601f840160051c820191505b81811015610632575f815560010161061f565b50505b505050565b81516001600160401b038111156106535761065361044a565b6106678161066184546105b6565b846105ee565b6020601f821160018114610699575f83156106825750848201515b5f19600385901b1c1916600184901b178455610632565b5f84815260208120601f198516915b828110156106c857878501518255602094850194600190920191016106a8565b50848210156106e557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561071357634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05160c0516113dd6107515f395f61030001525f81816102d9015281816106bf0152610a5301525f6101b901526113dd5ff3fe608060405234801561000f575f5ffd5b5060043610610148575f3560e01c80637b2c835f116100bf578063c45a015511610079578063c45a0155146102d4578063d7c81b55146102fb578063d89135cd14610322578063dd62ed3e1461032b578063f2fde38b14610363578063f658f32a14610376575f5ffd5b80637b2c835f1461025b5780638da5cb5b1461026e57806395d89b4114610293578063a4f0ecd31461029b578063a9059cbb146102ae578063ad1329d1146102c1575f5ffd5b806342966c681161011057806342966c68146101e35780635dc96d16146101f85780636a6278421461020557806370a0823114610218578063715018a61461024057806379cc679014610248575f5ffd5b806306fdde031461014c578063095ea7b31461016a57806318160ddd1461018d57806323b872dd1461019f578063313ce567146101b2575b5f5ffd5b610154610389565b6040516101619190611073565b60405180910390f35b61017d6101783660046110a7565b610419565b6040519015158152602001610161565b6002545b604051908152602001610161565b61017d6101ad3660046110cf565b610432565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610161565b6101f66101f1366004611109565b610455565b005b60085461017d9060ff1681565b6101f6610213366004611120565b61064b565b610191610226366004611120565b6001600160a01b03165f9081526020819052604090205490565b6101f66106a1565b6101f66102563660046110a7565b6106b4565b6101f6610269366004611146565b6109ea565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610161565b610154610a39565b6101f66102a93660046110a7565b610a48565b61017d6102bc3660046110a7565b610a9d565b6101f66102cf3660046110cf565b610aaa565b61027b7f000000000000000000000000000000000000000000000000000000000000000081565b6101917f000000000000000000000000000000000000000000000000000000000000000081565b61019160075481565b610191610339366004611161565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101f6610371366004611120565b610bf7565b6101f66103843660046110a7565b610c31565b60606003805461039890611192565b80601f01602080910402602001604051908101604052809291908181526020018280546103c490611192565b801561040f5780601f106103e65761010080835404028352916020019161040f565b820191905f5260205f20905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b5f33610426818585610c83565b60019150505b92915050565b5f3361043f858285610c90565b61044a858585610cf3565b506001949350505050565b60085460ff166104a357604051630eb8953f60e01b8152602060048201526013602482015272109d5c9b9a5b99c81a5cc8191a5cd8589b1959606a1b60448201526064015b60405180910390fd5b6104ab610d50565b805f036104cb57604051631f2a200560e01b815260040160405180910390fd5b335f90815260208190526040902054818110156105015733828260405163db42144d60e01b815260040161049a939291906111ca565b8160075f82825461051291906111ff565b9091555050604051637b2c799560e11b815233600482015260248101839052309063f658f32a906044015f604051808303815f87803b158015610553575f5ffd5b505af1925050508015610564575060015b6105f957610570611212565b806308c379a0036105c45750610584611264565b8061058f57506105c6565b8260075f8282546105a091906112e8565b9091555050604051631e764bc560e31b815261049a903390859084906004016112fb565b505b8160075f8282546105d791906112e8565b9091555050604051631e764bc560e31b815261049a903390849060040161132a565b60075460405133917fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba009161063591868252602082015260400190565b60405180910390a2506106486001600655565b50565b60405162461bcd60e51b815260206004820152602560248201527f4d696e742064697361626c65643a2075736520666163746f727920746f206c6f6044820152640636b2058560dc1b606482015260840161049a565b6106a9610d7a565b6106b25f610da7565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106ff57604051635936416f60e01b815233600482015260240161049a565b60085460ff1661074857604051630eb8953f60e01b8152602060048201526013602482015272109d5c9b9a5b99c81a5cc8191a5cd8589b1959606a1b604482015260640161049a565b610750610d50565b6001600160a01b0382166107775760405163d92e233d60e01b815260040160405180910390fd5b805f0361079757604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0382165f90815260208190526040902054818110156107d65782828260405163db42144d60e01b815260040161049a939291906111ca565b60025482111561080c57816107ea60025490565b604051631ee970cd60e31b81526004810192909252602482015260440161049a565b5f600a61081860025490565b610822919061136d565b90508083111561088b57826040516333be48f560e21b815260040161049a9181526040602082018190526024908201527f45786365656473206d6178696d756d206275726e20706572207472616e7361636060820152633a34b7b760e11b608082015260a00190565b8260075f82825461089c91906111ff565b9091555050604051637b2c799560e11b81526001600160a01b038516600482015260248101849052309063f658f32a906044015f604051808303815f87803b1580156108e6575f5ffd5b505af19250505080156108f7575060015b61098c57610903611212565b806308c379a0036109575750610917611264565b806109225750610959565b8360075f82825461093391906112e8565b9091555050604051631e764bc560e31b815261049a908690869084906004016112fb565b505b8260075f82825461096a91906112e8565b9091555050604051631e764bc560e31b815261049a908590859060040161132a565b836001600160a01b03167fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00846007546040516109d2929190918252602082015260400190565b60405180910390a250506109e66001600655565b5050565b6109f2610d7a565b6008805460ff19168215159081179091556040519081527f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd9060200160405180910390a150565b60606004805461039890611192565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a9357604051635936416f60e01b815233600482015260240161049a565b6109e68282610df8565b5f33610426818585610cf3565b610ab2610d7a565b6001600160a01b038216610ad95760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038316610b82575f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610b30576040519150601f19603f3d011682016040523d82523d5f602084013e610b35565b606091505b5050905080610b7c5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b604482015260640161049a565b50505050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af1158015610bce573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7c919061138c565b505050565b610bff610d7a565b6001600160a01b038116610c2857604051631e4fbdf760e01b81525f600482015260240161049a565b61064881610da7565b333014610c795760405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b198b58d85b1b08185b1b1bddd95960521b604482015260640161049a565b6109e68282610e2c565b610bf28383836001610e60565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610b7c5781811015610ce557828183604051637dc7a0d960e11b815260040161049a939291906111ca565b610b7c84848484035f610e60565b6001600160a01b038316610d1c57604051634b637e8f60e11b81525f600482015260240161049a565b6001600160a01b038216610d455760405163ec442f0560e01b81525f600482015260240161049a565b610bf2838383610f32565b600260065403610d7357604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6005546001600160a01b031633146106b25760405163118cdaa760e01b815233600482015260240161049a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610e215760405163ec442f0560e01b81525f600482015260240161049a565b6109e65f8383610f32565b6001600160a01b038216610e5557604051634b637e8f60e11b81525f600482015260240161049a565b6109e6825f83610f32565b6001600160a01b038416610e895760405163e602df0560e01b81525f600482015260240161049a565b6001600160a01b038316610eb257604051634a1406b160e11b81525f600482015260240161049a565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610b7c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f2491815260200190565b60405180910390a350505050565b6001600160a01b038316610f5c578060025f828254610f5191906111ff565b90915550610fb99050565b6001600160a01b0383165f9081526020819052604090205481811015610f9b5783818360405163391434e360e21b815260040161049a939291906111ca565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610fd557600280548290039055610ff3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161103891815260200190565b60405180910390a3505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6110856020830184611045565b9392505050565b80356001600160a01b03811681146110a2575f5ffd5b919050565b5f5f604083850312156110b8575f5ffd5b6110c18361108c565b946020939093013593505050565b5f5f5f606084860312156110e1575f5ffd5b6110ea8461108c565b92506110f86020850161108c565b929592945050506040919091013590565b5f60208284031215611119575f5ffd5b5035919050565b5f60208284031215611130575f5ffd5b6110858261108c565b8015158114610648575f5ffd5b5f60208284031215611156575f5ffd5b813561108581611139565b5f5f60408385031215611172575f5ffd5b61117b8361108c565b91506111896020840161108c565b90509250929050565b600181811c908216806111a657607f821691505b6020821081036111c457634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561042c5761042c6111eb565b5f60033d11156112285760045f5f3e505f5160e01c5b90565b601f8201601f1916810167ffffffffffffffff8111828210171561125d57634e487b7160e01b5f52604160045260245ffd5b6040525050565b5f60443d10156112715790565b6040513d600319016004823e80513d602482011167ffffffffffffffff8211171561129b57505090565b808201805167ffffffffffffffff8111156112b7575050505090565b3d84016003190182820160200111156112d1575050505090565b6112e06020828501018561122b565b509392505050565b8181038181111561042c5761042c6111eb565b60018060a01b0384168152826020820152606060408201525f6113216060830184611045565b95945050505050565b6001600160a01b039290921682526020820152606060408201819052601290820152712ab735b737bbb710313ab9371032b93937b960711b608082015260a00190565b5f8261138757634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561139c575f5ffd5b81516110858161113956fea2646970667358221220c9c7ae96297410fef143e8be3c9db06b71d4b72f344f43926a1b795f4ae75be264736f6c634300081e0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B2E CODESIZE SUB DUP1 PUSH2 0x1B2E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3B SWAP2 PUSH2 0x502 JUMP JUMPDEST DUP3 DUP8 DUP8 PUSH1 0x3 PUSH2 0x4A DUP4 DUP3 PUSH2 0x63A JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x57 DUP3 DUP3 PUSH2 0x63A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x88 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91 DUP2 PUSH2 0x29B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE DUP7 MLOAD PUSH0 SUB PUSH2 0xF0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7693C3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E616D652063616E6E6F7420626520656D707479000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F JUMP JUMPDEST DUP6 MLOAD PUSH0 SUB PUSH2 0x149 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xF7693C3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F6B656E2073796D626F6C2063616E6E6F7420626520656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x170 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP6 PUSH1 0xFF AND GT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x46F4384B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F JUMP JUMPDEST DUP4 PUSH0 SUB PUSH2 0x1EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH4 0x313B9AA1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F776E657220616E6420666163746F72792063616E6E6F742062652074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x73616D65 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0xA0 MSTORE PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH2 0x27F DUP4 DUP6 PUSH2 0x2EC JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP PUSH2 0x719 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7F JUMP JUMPDEST PUSH2 0x320 PUSH0 DUP4 DUP4 PUSH2 0x324 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x34E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3BE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3DA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x486 JUMPI PUSH2 0x486 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B4 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x4CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x518 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x539 DUP11 DUP3 DUP12 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MLOAD SWAP1 SWAP9 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x556 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x562 DUP11 DUP3 DUP12 ADD PUSH2 0x45E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x578 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x58E PUSH1 0x80 DUP10 ADD PUSH2 0x4E7 JUMP JUMPDEST SWAP3 POP PUSH2 0x59C PUSH1 0xA0 DUP10 ADD PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x5CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x635 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x613 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x61F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x661 DUP5 SLOAD PUSH2 0x5B6 JUMP JUMPDEST DUP5 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x699 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x682 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x632 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6C8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x6A8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x6E5 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x713 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x13DD PUSH2 0x751 PUSH0 CODECOPY PUSH0 PUSH2 0x300 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2D9 ADD MSTORE DUP2 DUP2 PUSH2 0x6BF ADD MSTORE PUSH2 0xA53 ADD MSTORE PUSH0 PUSH2 0x1B9 ADD MSTORE PUSH2 0x13DD PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B2C835F GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF658F32A EQ PUSH2 0x376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA4F0ECD3 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x248 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x17D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH2 0x191 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x154 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x27B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x1192 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C4 SWAP1 PUSH2 0x1192 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x426 DUP2 DUP6 DUP6 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0xCF3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AB PUSH2 0xD50 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x501 JUMPI CALLER DUP3 DUP3 PUSH1 0x40 MLOAD PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xF658F32A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x564 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x5F9 JUMPI PUSH2 0x570 PUSH2 0x1212 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x5C4 JUMPI POP PUSH2 0x584 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH2 0x58F JUMPI POP PUSH2 0x5C6 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12FB JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x132A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP2 PUSH2 0x635 SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x648 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E742064697361626C65643A2075736520666163746F727920746F206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B20585 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x6B2 PUSH0 PUSH2 0xDA7 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x750 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP3 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x80C JUMPI DUP2 PUSH2 0x7EA PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1EE970CD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x49A JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH2 0x818 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x88B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x33BE48F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206275726E20706572207472616E736163 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xF658F32A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x98C JUMPI PUSH2 0x903 PUSH2 0x1212 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x957 JUMPI POP PUSH2 0x917 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH2 0x922 JUMPI POP PUSH2 0x959 JUMP JUMPDEST DUP4 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12FB JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x132A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 DUP5 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x9D2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9E6 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x1192 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 DUP3 PUSH2 0xDF8 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x426 DUP2 DUP6 DUP6 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB82 JUMPI PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBFF PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x648 DUP2 PUSH2 0xDA7 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xBF2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCE5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0xB7C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0xBF2 DUP4 DUP4 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 PUSH0 DUP4 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 PUSH0 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB7C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF24 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF5C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFB9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF9B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1038 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1085 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10C1 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10EA DUP5 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP PUSH2 0x10F8 PUSH1 0x20 DUP6 ADD PUSH2 0x108C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1085 DUP3 PUSH2 0x108C JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1085 DUP2 PUSH2 0x1139 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x117B DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 PUSH1 0x20 DUP5 ADD PUSH2 0x108C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x11EB JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x4 PUSH0 PUSH0 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x125D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1271 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x129B JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0x12D1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12E0 PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0x122B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1321 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB710313AB9371032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1387 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1085 DUP2 PUSH2 0x1139 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xC7 0xAE SWAP7 0x29 PUSH21 0x10FEF143E8BE3C9DB06B71D4B72F344F43926A1B79 PUSH0 BLOBBASEFEE SWAPN 0x5B 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "483:9107:7:-:0;;;919:30;;;-1:-1:-1;;919:30:7;945:4;919:30;;;3226:1262;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3460:5;3438:4;3444:6;1648:5:2;:13;3438:4:7;1648:5:2;:13;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4823:51:8;4796:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:6;2061:7;:21;3523:18:7;;3545:1:::2;3523:23:::0;3519:117:::2;;3569:56;::::0;;-1:-1:-1;;;3569:56:7;;3592:1:::2;3569:56;::::0;::::2;5097:51:8::0;5164:18;;;5157:30;;;;5223:2;5203:18;;;5196:30;5262:28;5242:18;;;5235:56;5308:19;;3569:56:7::2;4885:448:8::0;3519:117:7::2;3655:6;3649:20;3673:1;3649:25:::0;3645:121:::2;;3697:58;::::0;;-1:-1:-1;;;3697:58:7;;3720:1:::2;3697:58;::::0;::::2;5550:51:8::0;5617:18;;;5610:30;;;;5676:2;5656:18;;;5649:30;5715;5695:18;;;5688:58;5763:19;;3697:58:7::2;5338:450:8::0;3645:121:7::2;-1:-1:-1::0;;;;;3779:19:7;::::2;3775:70;;3821:13;;-1:-1:-1::0;;;3821:13:7::2;;;;;;;;;;;3775:70;-1:-1:-1::0;;;;;3858:22:7;::::2;3854:73;;3903:13;;-1:-1:-1::0;;;3903:13:7::2;;;;;;;;;;;3854:73;3952:2;3940:9;:14;;;3936:83;;;3977:31;::::0;-1:-1:-1;;;3977:31:7;;6040:4:8;6028:17;;3977:31:7::2;::::0;::::2;6010:36:8::0;4002:1:7::2;6062:18:8::0;;;6055:34;4005:2:7::2;6105:18:8::0;;;6098:34;5983:18;;3977:31:7::2;5793:345:8::0;3936:83:7::2;4032:13;4049:1;4032:18:::0;4028:68:::2;;4073:12;;-1:-1:-1::0;;;4073:12:7::2;;;;;;;;;;;4028:68;4118:8;-1:-1:-1::0;;;;;4109:17:7::2;:5;-1:-1:-1::0;;;;;4109:17:7::2;::::0;4105:115:::2;;4149:60;::::0;-1:-1:-1;;;4149:60:7;;6345:2:8;4149:60:7::2;::::0;::::2;6327:21:8::0;6384:2;6364:18;;;6357:30;6423:34;6403:18;;;6396:62;-1:-1:-1;;;6474:18:8;;;6467:34;6518:19;;4149:60:7::2;6143:400:8::0;4105:115:7::2;4238:21;::::0;::::2;;::::0;-1:-1:-1;;;;;4269:18:7;::::2;;::::0;4297:16:::2;::::0;;;4417:27:::2;4423:5:::0;4430:13;4417:5:::2;:27::i;:::-;-1:-1:-1::0;;4454:20:7::2;:27:::0;;-1:-1:-1;;4454:27:7::2;;;::::0;;-1:-1:-1;483:9107:7;;-1:-1:-1;;;;483:9107:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;4823:51:8;4796:18;;7553:32:2;4677:203:8;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;6995:32:8;;6367:50:2;;;6977:51:8;7044:18;;;7037:34;;;7087:18;;;7080:34;;;6950:18;;6367:50:2;6775:345:8;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;7271::8;;7259:2;7244:18;;7125:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:8:o;874:177::-;953:13;;-1:-1:-1;;;;;995:31:8;;985:42;;975:70;;1041:1;1038;1031:12;975:70;874:177;;;:::o;1056:1107::-;1198:6;1206;1214;1222;1230;1238;1246;1299:3;1287:9;1278:7;1274:23;1270:33;1267:53;;;1316:1;1313;1306:12;1267:53;1343:16;;-1:-1:-1;;;;;1371:30:8;;1368:50;;;1414:1;1411;1404:12;1368:50;1437:61;1490:7;1481:6;1470:9;1466:22;1437:61;:::i;:::-;1544:2;1529:18;;1523:25;1427:71;;-1:-1:-1;1523:25:8;-1:-1:-1;;;;;;1560:32:8;;1557:52;;;1605:1;1602;1595:12;1557:52;1628:63;1683:7;1672:8;1661:9;1657:24;1628:63;:::i;:::-;1618:73;;;1734:2;1723:9;1719:18;1713:25;1778:4;1771:5;1767:16;1760:5;1757:27;1747:55;;1798:1;1795;1788:12;1747:55;1892:2;1877:18;;1871:25;1821:5;;-1:-1:-1;1871:25:8;-1:-1:-1;1941:50:8;1986:3;1971:19;;1941:50;:::i;:::-;1931:60;;2010:50;2055:3;2044:9;2040:19;2010:50;:::i;:::-;2000:60;;2084:1;2126:3;2115:9;2111:19;2105:26;2094:37;;2150:7;2140:17;;;1056:1107;;;;;;;;;;:::o;2168:380::-;2247:1;2243:12;;;;2290;;;2311:61;;2365:4;2357:6;2353:17;2343:27;;2311:61;2418:2;2410:6;2407:14;2387:18;2384:38;2381:161;;2464:10;2459:3;2455:20;2452:1;2445:31;2499:4;2496:1;2489:15;2527:4;2524:1;2517:15;2381:161;;2168:380;;;:::o;2679:518::-;2781:2;2776:3;2773:11;2770:421;;;2817:5;2814:1;2807:16;2861:4;2858:1;2848:18;2931:2;2919:10;2915:19;2912:1;2908:27;2902:4;2898:38;2967:4;2955:10;2952:20;2949:47;;;-1:-1:-1;2990:4:8;2949:47;3045:2;3040:3;3036:12;3033:1;3029:20;3023:4;3019:31;3009:41;;3100:81;3118:2;3111:5;3108:13;3100:81;;;3177:1;3163:16;;3144:1;3133:13;3100:81;;;3104:3;;2770:421;2679:518;;;:::o;3373:1299::-;3493:10;;-1:-1:-1;;;;;3515:30:8;;3512:56;;;3548:18;;:::i;:::-;3577:97;3667:6;3627:38;3659:4;3653:11;3627:38;:::i;:::-;3621:4;3577:97;:::i;:::-;3723:4;3754:2;3743:14;;3771:1;3766:649;;;;4459:1;4476:6;4473:89;;;-1:-1:-1;4528:19:8;;;4522:26;4473:89;-1:-1:-1;;3330:1:8;3326:11;;;3322:24;3318:29;3308:40;3354:1;3350:11;;;3305:57;4575:81;;3736:930;;3766:649;2626:1;2619:14;;;2663:4;2650:18;;-1:-1:-1;;3802:20:8;;;3920:222;3934:7;3931:1;3928:14;3920:222;;;4016:19;;;4010:26;3995:42;;4123:4;4108:20;;;;4076:1;4064:14;;;;3950:12;3920:222;;;3924:3;4170:6;4161:7;4158:19;4155:201;;;4231:19;;;4225:26;-1:-1:-1;;4314:1:8;4310:14;;;4326:3;4306:24;4302:37;4298:42;4283:58;4268:74;;4155:201;-1:-1:-1;;;;4402:1:8;4386:14;;;4382:22;4369:36;;-1:-1:-1;3373:1299:8:o;6548:222::-;6613:9;;;6634:10;;;6631:133;;;6686:10;6681:3;6677:20;6674:1;6667:31;6721:4;6718:1;6711:15;6749:4;6746:1;6739:15;6631:133;6548:222;;;;:::o;7125:177::-;483:9107:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3203,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3680,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3628,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3450,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3576,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_982": {
									"entryPoint": 3408,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_performBurn_1472": {
									"entryPoint": 3121,
									"id": 1472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 3216,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3495,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3315,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3890,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1049,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnEnabled_1026": {
									"entryPoint": null,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_1447": {
									"entryPoint": 1716,
									"id": 1447,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1559": {
									"entryPoint": 1109,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1322": {
									"entryPoint": null,
									"id": 1322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@emergencyRecover_1633": {
									"entryPoint": 2730,
									"id": 1633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@factoryMint_1649": {
									"entryPoint": 2632,
									"id": 1649,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@factory_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameId_1021": {
									"entryPoint": null,
									"id": 1021,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1660": {
									"entryPoint": 1611,
									"id": 1660,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 905,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1697,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnEnabled_1576": {
									"entryPoint": 2538,
									"id": 1576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2617,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalBurned_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1074,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3063,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2717,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bool": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9571:8",
										"nodeType": "YulBlock",
										"src": "0:9571:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:239:8",
													"nodeType": "YulBlock",
													"src": "64:239:8",
													"statements": [
														{
															"nativeSrc": "74:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:8"
																},
																"nativeSrc": "88:12:8",
																"nodeType": "YulFunctionCall",
																"src": "88:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:8",
																	"nodeType": "YulTypedName",
																	"src": "78:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:8"
																},
																"nativeSrc": "109:19:8",
																"nodeType": "YulFunctionCall",
																"src": "109:19:8"
															},
															"nativeSrc": "109:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "147:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "147:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "152:4:8",
																				"nodeType": "YulLiteral",
																				"src": "152:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:8"
																		},
																		"nativeSrc": "143:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "143:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "163:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "163:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "170:4:8",
																				"nodeType": "YulLiteral",
																				"src": "170:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "159:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "159:3:8"
																		},
																		"nativeSrc": "159:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "159:16:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "177:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "177:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "137:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "137:5:8"
																},
																"nativeSrc": "137:47:8",
																"nodeType": "YulFunctionCall",
																"src": "137:47:8"
															},
															"nativeSrc": "137:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "137:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "208:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "208:3:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "213:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "213:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "204:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:8"
																				},
																				"nativeSrc": "204:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "204:16:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "222:4:8",
																				"nodeType": "YulLiteral",
																				"src": "222:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:8"
																		},
																		"nativeSrc": "200:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "200:27:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "229:1:8",
																		"nodeType": "YulLiteral",
																		"src": "229:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "193:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:8"
																},
																"nativeSrc": "193:38:8",
																"nodeType": "YulFunctionCall",
																"src": "193:38:8"
															},
															"nativeSrc": "193:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "193:38:8"
														},
														{
															"nativeSrc": "240:57:8",
															"nodeType": "YulAssignment",
															"src": "240:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "255:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "268:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "268:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "276:2:8",
																								"nodeType": "YulLiteral",
																								"src": "276:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "264:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "264:3:8"
																						},
																						"nativeSrc": "264:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "264:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:2:8",
																								"nodeType": "YulLiteral",
																								"src": "285:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "281:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:8"
																						},
																						"nativeSrc": "281:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "281:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "260:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:8"
																				},
																				"nativeSrc": "260:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "260:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "251:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:8"
																		},
																		"nativeSrc": "251:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "251:39:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "292:4:8",
																		"nodeType": "YulLiteral",
																		"src": "292:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:8"
																},
																"nativeSrc": "247:50:8",
																"nodeType": "YulFunctionCall",
																"src": "247:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "240:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "240:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:289:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:8",
														"nodeType": "YulTypedName",
														"src": "41:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:8",
														"nodeType": "YulTypedName",
														"src": "48:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:8",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"src": "14:289:8"
											},
											{
												"body": {
													"nativeSrc": "429:99:8",
													"nodeType": "YulBlock",
													"src": "429:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "457:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "439:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:8"
																},
																"nativeSrc": "439:21:8",
																"nodeType": "YulFunctionCall",
																"src": "439:21:8"
															},
															"nativeSrc": "439:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "439:21:8"
														},
														{
															"nativeSrc": "469:53:8",
															"nodeType": "YulAssignment",
															"src": "469:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "495:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:8",
																				"nodeType": "YulLiteral",
																				"src": "518:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:8"
																		},
																		"nativeSrc": "503:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "477:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "477:17:8"
																},
																"nativeSrc": "477:45:8",
																"nodeType": "YulFunctionCall",
																"src": "477:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "469:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "469:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "308:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:8",
														"nodeType": "YulTypedName",
														"src": "398:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:8",
														"nodeType": "YulTypedName",
														"src": "409:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:8",
														"nodeType": "YulTypedName",
														"src": "420:4:8",
														"type": ""
													}
												],
												"src": "308:220:8"
											},
											{
												"body": {
													"nativeSrc": "582:124:8",
													"nodeType": "YulBlock",
													"src": "582:124:8",
													"statements": [
														{
															"nativeSrc": "592:29:8",
															"nodeType": "YulAssignment",
															"src": "592:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "614:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "614:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "601:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "601:12:8"
																},
																"nativeSrc": "601:20:8",
																"nodeType": "YulFunctionCall",
																"src": "601:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "592:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "684:16:8",
																"nodeType": "YulBlock",
																"src": "684:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "693:1:8",
																					"nodeType": "YulLiteral",
																					"src": "693:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:8",
																					"nodeType": "YulLiteral",
																					"src": "696:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "686:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "686:6:8"
																			},
																			"nativeSrc": "686:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "686:12:8"
																		},
																		"nativeSrc": "686:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "686:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "643:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "643:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "654:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "654:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "669:3:8",
																										"nodeType": "YulLiteral",
																										"src": "669:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "674:1:8",
																										"nodeType": "YulLiteral",
																										"src": "674:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "665:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "665:3:8"
																								},
																								"nativeSrc": "665:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "665:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "678:1:8",
																								"nodeType": "YulLiteral",
																								"src": "678:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "661:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "661:3:8"
																						},
																						"nativeSrc": "661:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "661:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "650:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "650:3:8"
																				},
																				"nativeSrc": "650:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "650:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "640:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:8"
																		},
																		"nativeSrc": "640:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "640:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "633:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:8"
																},
																"nativeSrc": "633:50:8",
																"nodeType": "YulFunctionCall",
																"src": "633:50:8"
															},
															"nativeSrc": "630:70:8",
															"nodeType": "YulIf",
															"src": "630:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "533:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "561:6:8",
														"nodeType": "YulTypedName",
														"src": "561:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "572:5:8",
														"nodeType": "YulTypedName",
														"src": "572:5:8",
														"type": ""
													}
												],
												"src": "533:173:8"
											},
											{
												"body": {
													"nativeSrc": "798:213:8",
													"nodeType": "YulBlock",
													"src": "798:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "844:16:8",
																"nodeType": "YulBlock",
																"src": "844:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "853:1:8",
																					"nodeType": "YulLiteral",
																					"src": "853:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "856:1:8",
																					"nodeType": "YulLiteral",
																					"src": "856:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "846:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "846:6:8"
																			},
																			"nativeSrc": "846:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "846:12:8"
																		},
																		"nativeSrc": "846:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "846:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "819:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "828:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "828:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "815:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:8"
																		},
																		"nativeSrc": "815:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "815:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:2:8",
																		"nodeType": "YulLiteral",
																		"src": "840:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "811:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																},
																"nativeSrc": "811:32:8",
																"nodeType": "YulFunctionCall",
																"src": "811:32:8"
															},
															"nativeSrc": "808:52:8",
															"nodeType": "YulIf",
															"src": "808:52:8"
														},
														{
															"nativeSrc": "869:39:8",
															"nodeType": "YulAssignment",
															"src": "869:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "898:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "898:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "879:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "879:18:8"
																},
																"nativeSrc": "879:29:8",
																"nodeType": "YulFunctionCall",
																"src": "879:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "869:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:8"
																}
															]
														},
														{
															"nativeSrc": "917:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "917:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "930:1:8",
																"nodeType": "YulLiteral",
																"src": "930:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "921:5:8",
																	"nodeType": "YulTypedName",
																	"src": "921:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "940:41:8",
															"nodeType": "YulAssignment",
															"src": "940:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:8",
																				"nodeType": "YulLiteral",
																				"src": "977:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:8"
																		},
																		"nativeSrc": "962:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "949:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "949:12:8"
																},
																"nativeSrc": "949:32:8",
																"nodeType": "YulFunctionCall",
																"src": "949:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "940:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:8"
																}
															]
														},
														{
															"nativeSrc": "990:15:8",
															"nodeType": "YulAssignment",
															"src": "990:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1000:5:8",
																"nodeType": "YulIdentifier",
																"src": "1000:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "711:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:8",
														"nodeType": "YulTypedName",
														"src": "756:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "767:7:8",
														"nodeType": "YulTypedName",
														"src": "767:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "779:6:8",
														"nodeType": "YulTypedName",
														"src": "779:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "787:6:8",
														"nodeType": "YulTypedName",
														"src": "787:6:8",
														"type": ""
													}
												],
												"src": "711:300:8"
											},
											{
												"body": {
													"nativeSrc": "1111:92:8",
													"nodeType": "YulBlock",
													"src": "1111:92:8",
													"statements": [
														{
															"nativeSrc": "1121:26:8",
															"nodeType": "YulAssignment",
															"src": "1121:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1133:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1129:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:8"
																},
																"nativeSrc": "1129:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1129:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1121:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1121:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1163:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1188:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1188:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1181:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1181:6:8"
																				},
																				"nativeSrc": "1181:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1174:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:8"
																		},
																		"nativeSrc": "1174:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:8"
																},
																"nativeSrc": "1156:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1156:41:8"
															},
															"nativeSrc": "1156:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1156:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1016:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1080:9:8",
														"nodeType": "YulTypedName",
														"src": "1080:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1091:6:8",
														"nodeType": "YulTypedName",
														"src": "1091:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1102:4:8",
														"nodeType": "YulTypedName",
														"src": "1102:4:8",
														"type": ""
													}
												],
												"src": "1016:187:8"
											},
											{
												"body": {
													"nativeSrc": "1309:76:8",
													"nodeType": "YulBlock",
													"src": "1309:76:8",
													"statements": [
														{
															"nativeSrc": "1319:26:8",
															"nodeType": "YulAssignment",
															"src": "1319:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1327:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:8"
																},
																"nativeSrc": "1327:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1327:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1319:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1319:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1361:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1372:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:8"
																},
																"nativeSrc": "1354:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1354:25:8"
															},
															"nativeSrc": "1354:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1354:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1208:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1278:9:8",
														"nodeType": "YulTypedName",
														"src": "1278:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1289:6:8",
														"nodeType": "YulTypedName",
														"src": "1289:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1300:4:8",
														"nodeType": "YulTypedName",
														"src": "1300:4:8",
														"type": ""
													}
												],
												"src": "1208:177:8"
											},
											{
												"body": {
													"nativeSrc": "1494:270:8",
													"nodeType": "YulBlock",
													"src": "1494:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1540:16:8",
																"nodeType": "YulBlock",
																"src": "1540:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1549:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1552:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1542:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:8"
																			},
																			"nativeSrc": "1542:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1542:12:8"
																		},
																		"nativeSrc": "1542:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1515:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1515:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1524:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1511:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:8"
																		},
																		"nativeSrc": "1511:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1511:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1536:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:8"
																},
																"nativeSrc": "1507:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1507:32:8"
															},
															"nativeSrc": "1504:52:8",
															"nodeType": "YulIf",
															"src": "1504:52:8"
														},
														{
															"nativeSrc": "1565:39:8",
															"nodeType": "YulAssignment",
															"src": "1565:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1594:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1594:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1575:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1575:18:8"
																},
																"nativeSrc": "1575:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1575:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:8"
																}
															]
														},
														{
															"nativeSrc": "1613:48:8",
															"nodeType": "YulAssignment",
															"src": "1613:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1657:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:8"
																		},
																		"nativeSrc": "1642:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1623:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1623:18:8"
																},
																"nativeSrc": "1623:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1623:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1613:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:8"
																}
															]
														},
														{
															"nativeSrc": "1670:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1670:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1683:1:8",
																"nodeType": "YulLiteral",
																"src": "1683:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1674:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1674:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1693:41:8",
															"nodeType": "YulAssignment",
															"src": "1693:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1730:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1730:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1715:3:8"
																		},
																		"nativeSrc": "1715:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1715:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1702:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1702:12:8"
																},
																"nativeSrc": "1702:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1702:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1693:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:5:8"
																}
															]
														},
														{
															"nativeSrc": "1743:15:8",
															"nodeType": "YulAssignment",
															"src": "1743:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1753:5:8",
																"nodeType": "YulIdentifier",
																"src": "1753:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1743:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1390:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1444:9:8",
														"nodeType": "YulTypedName",
														"src": "1444:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1455:7:8",
														"nodeType": "YulTypedName",
														"src": "1455:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1467:6:8",
														"nodeType": "YulTypedName",
														"src": "1467:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1475:6:8",
														"nodeType": "YulTypedName",
														"src": "1475:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1483:6:8",
														"nodeType": "YulTypedName",
														"src": "1483:6:8",
														"type": ""
													}
												],
												"src": "1390:374:8"
											},
											{
												"body": {
													"nativeSrc": "1866:87:8",
													"nodeType": "YulBlock",
													"src": "1866:87:8",
													"statements": [
														{
															"nativeSrc": "1876:26:8",
															"nodeType": "YulAssignment",
															"src": "1876:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1888:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1888:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1899:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1899:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1884:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:8"
																},
																"nativeSrc": "1884:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1884:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1876:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1876:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1918:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1933:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1941:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1941:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:8"
																		},
																		"nativeSrc": "1929:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1929:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1911:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:8"
																},
																"nativeSrc": "1911:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1911:36:8"
															},
															"nativeSrc": "1911:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1911:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1769:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1835:9:8",
														"nodeType": "YulTypedName",
														"src": "1835:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1846:6:8",
														"nodeType": "YulTypedName",
														"src": "1846:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1857:4:8",
														"nodeType": "YulTypedName",
														"src": "1857:4:8",
														"type": ""
													}
												],
												"src": "1769:184:8"
											},
											{
												"body": {
													"nativeSrc": "2028:156:8",
													"nodeType": "YulBlock",
													"src": "2028:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2074:16:8",
																"nodeType": "YulBlock",
																"src": "2074:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2083:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2086:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2076:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:8"
																			},
																			"nativeSrc": "2076:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:8"
																		},
																		"nativeSrc": "2076:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2049:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2049:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2058:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2058:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2045:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:8"
																		},
																		"nativeSrc": "2045:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2045:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2070:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2041:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:8"
																},
																"nativeSrc": "2041:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2041:32:8"
															},
															"nativeSrc": "2038:52:8",
															"nodeType": "YulIf",
															"src": "2038:52:8"
														},
														{
															"nativeSrc": "2099:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2099:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2112:1:8",
																"nodeType": "YulLiteral",
																"src": "2112:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2103:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2103:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2122:32:8",
															"nodeType": "YulAssignment",
															"src": "2122:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2144:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2144:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2131:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:12:8"
																},
																"nativeSrc": "2131:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2131:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2122:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2122:5:8"
																}
															]
														},
														{
															"nativeSrc": "2163:15:8",
															"nodeType": "YulAssignment",
															"src": "2163:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2173:5:8",
																"nodeType": "YulIdentifier",
																"src": "2173:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1958:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1994:9:8",
														"nodeType": "YulTypedName",
														"src": "1994:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2005:7:8",
														"nodeType": "YulTypedName",
														"src": "2005:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2017:6:8",
														"nodeType": "YulTypedName",
														"src": "2017:6:8",
														"type": ""
													}
												],
												"src": "1958:226:8"
											},
											{
												"body": {
													"nativeSrc": "2259:116:8",
													"nodeType": "YulBlock",
													"src": "2259:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2305:16:8",
																"nodeType": "YulBlock",
																"src": "2305:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2314:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2314:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2317:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2317:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2307:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2307:6:8"
																			},
																			"nativeSrc": "2307:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2307:12:8"
																		},
																		"nativeSrc": "2307:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2307:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2280:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2280:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2289:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2289:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2276:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:8"
																		},
																		"nativeSrc": "2276:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2301:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2301:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2272:3:8"
																},
																"nativeSrc": "2272:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2272:32:8"
															},
															"nativeSrc": "2269:52:8",
															"nodeType": "YulIf",
															"src": "2269:52:8"
														},
														{
															"nativeSrc": "2330:39:8",
															"nodeType": "YulAssignment",
															"src": "2330:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2359:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2359:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2340:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2340:18:8"
																},
																"nativeSrc": "2340:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2340:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2330:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2189:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2225:9:8",
														"nodeType": "YulTypedName",
														"src": "2225:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2236:7:8",
														"nodeType": "YulTypedName",
														"src": "2236:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2248:6:8",
														"nodeType": "YulTypedName",
														"src": "2248:6:8",
														"type": ""
													}
												],
												"src": "2189:186:8"
											},
											{
												"body": {
													"nativeSrc": "2422:76:8",
													"nodeType": "YulBlock",
													"src": "2422:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:16:8",
																"nodeType": "YulBlock",
																"src": "2476:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2485:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2485:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2488:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2488:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2478:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2478:6:8"
																			},
																			"nativeSrc": "2478:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:12:8"
																		},
																		"nativeSrc": "2478:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2445:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2445:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2466:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2466:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2459:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2459:6:8"
																						},
																						"nativeSrc": "2459:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2459:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2452:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2452:6:8"
																				},
																				"nativeSrc": "2452:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2452:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2442:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2442:2:8"
																		},
																		"nativeSrc": "2442:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2442:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2435:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:8"
																},
																"nativeSrc": "2435:40:8",
																"nodeType": "YulFunctionCall",
																"src": "2435:40:8"
															},
															"nativeSrc": "2432:60:8",
															"nodeType": "YulIf",
															"src": "2432:60:8"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "2380:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2411:5:8",
														"nodeType": "YulTypedName",
														"src": "2411:5:8",
														"type": ""
													}
												],
												"src": "2380:118:8"
											},
											{
												"body": {
													"nativeSrc": "2570:174:8",
													"nodeType": "YulBlock",
													"src": "2570:174:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2616:16:8",
																"nodeType": "YulBlock",
																"src": "2616:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2625:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2625:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2628:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2628:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2618:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2618:6:8"
																			},
																			"nativeSrc": "2618:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2618:12:8"
																		},
																		"nativeSrc": "2618:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2618:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2591:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2591:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2600:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2600:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2587:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:8"
																		},
																		"nativeSrc": "2587:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2612:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2583:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:8"
																},
																"nativeSrc": "2583:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2583:32:8"
															},
															"nativeSrc": "2580:52:8",
															"nodeType": "YulIf",
															"src": "2580:52:8"
														},
														{
															"nativeSrc": "2641:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2641:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2654:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2654:12:8"
																},
																"nativeSrc": "2654:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2654:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2645:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2645:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2708:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2708:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "2686:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "2686:21:8"
																},
																"nativeSrc": "2686:28:8",
																"nodeType": "YulFunctionCall",
																"src": "2686:28:8"
															},
															"nativeSrc": "2686:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "2686:28:8"
														},
														{
															"nativeSrc": "2723:15:8",
															"nodeType": "YulAssignment",
															"src": "2723:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2733:5:8",
																"nodeType": "YulIdentifier",
																"src": "2733:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2723:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2503:241:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2536:9:8",
														"nodeType": "YulTypedName",
														"src": "2536:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2547:7:8",
														"nodeType": "YulTypedName",
														"src": "2547:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2559:6:8",
														"nodeType": "YulTypedName",
														"src": "2559:6:8",
														"type": ""
													}
												],
												"src": "2503:241:8"
											},
											{
												"body": {
													"nativeSrc": "2850:102:8",
													"nodeType": "YulBlock",
													"src": "2850:102:8",
													"statements": [
														{
															"nativeSrc": "2860:26:8",
															"nodeType": "YulAssignment",
															"src": "2860:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2872:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2872:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2883:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2883:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2868:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2868:3:8"
																},
																"nativeSrc": "2868:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2868:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2860:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2860:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2902:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2902:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2917:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2917:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2933:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2933:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2938:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2938:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2929:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2929:3:8"
																						},
																						"nativeSrc": "2929:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2929:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2942:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2942:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2925:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:8"
																				},
																				"nativeSrc": "2925:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2925:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2913:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:8"
																		},
																		"nativeSrc": "2913:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2913:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:8"
																},
																"nativeSrc": "2895:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2895:51:8"
															},
															"nativeSrc": "2895:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2895:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2749:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2819:9:8",
														"nodeType": "YulTypedName",
														"src": "2819:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2830:6:8",
														"nodeType": "YulTypedName",
														"src": "2830:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2841:4:8",
														"nodeType": "YulTypedName",
														"src": "2841:4:8",
														"type": ""
													}
												],
												"src": "2749:203:8"
											},
											{
												"body": {
													"nativeSrc": "3044:173:8",
													"nodeType": "YulBlock",
													"src": "3044:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3090:16:8",
																"nodeType": "YulBlock",
																"src": "3090:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3102:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3092:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3092:6:8"
																			},
																			"nativeSrc": "3092:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3092:12:8"
																		},
																		"nativeSrc": "3092:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3092:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3065:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3065:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3074:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3074:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3061:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3061:3:8"
																		},
																		"nativeSrc": "3061:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3061:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3057:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3057:3:8"
																},
																"nativeSrc": "3057:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3057:32:8"
															},
															"nativeSrc": "3054:52:8",
															"nodeType": "YulIf",
															"src": "3054:52:8"
														},
														{
															"nativeSrc": "3115:39:8",
															"nodeType": "YulAssignment",
															"src": "3115:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3144:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3125:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3125:18:8"
																},
																"nativeSrc": "3125:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3125:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3115:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:8"
																}
															]
														},
														{
															"nativeSrc": "3163:48:8",
															"nodeType": "YulAssignment",
															"src": "3163:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3196:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3196:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3207:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3207:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3192:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:8"
																		},
																		"nativeSrc": "3192:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3173:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:18:8"
																},
																"nativeSrc": "3173:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2957:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3002:9:8",
														"nodeType": "YulTypedName",
														"src": "3002:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3013:7:8",
														"nodeType": "YulTypedName",
														"src": "3013:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3025:6:8",
														"nodeType": "YulTypedName",
														"src": "3025:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3033:6:8",
														"nodeType": "YulTypedName",
														"src": "3033:6:8",
														"type": ""
													}
												],
												"src": "2957:260:8"
											},
											{
												"body": {
													"nativeSrc": "3277:325:8",
													"nodeType": "YulBlock",
													"src": "3277:325:8",
													"statements": [
														{
															"nativeSrc": "3287:22:8",
															"nodeType": "YulAssignment",
															"src": "3287:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3301:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3301:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3304:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3304:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3297:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:8"
																},
																"nativeSrc": "3297:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3297:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3287:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:8"
																}
															]
														},
														{
															"nativeSrc": "3318:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3318:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3348:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3348:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3354:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3354:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3344:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:8"
																},
																"nativeSrc": "3344:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3344:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3322:18:8",
																	"nodeType": "YulTypedName",
																	"src": "3322:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3395:31:8",
																"nodeType": "YulBlock",
																"src": "3395:31:8",
																"statements": [
																	{
																		"nativeSrc": "3397:27:8",
																		"nodeType": "YulAssignment",
																		"src": "3397:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3411:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3411:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3419:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3419:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3407:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:3:8"
																			},
																			"nativeSrc": "3407:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3407:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3397:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3375:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3375:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3368:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:8"
																},
																"nativeSrc": "3368:26:8",
																"nodeType": "YulFunctionCall",
																"src": "3368:26:8"
															},
															"nativeSrc": "3365:61:8",
															"nodeType": "YulIf",
															"src": "3365:61:8"
														},
														{
															"body": {
																"nativeSrc": "3485:111:8",
																"nodeType": "YulBlock",
																"src": "3485:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3506:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3506:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3513:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3513:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3518:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3518:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3509:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3509:3:8"
																					},
																					"nativeSrc": "3509:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3509:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3499:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:8"
																			},
																			"nativeSrc": "3499:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3499:31:8"
																		},
																		"nativeSrc": "3499:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3499:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3550:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3550:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3553:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3553:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3543:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3543:6:8"
																			},
																			"nativeSrc": "3543:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3543:15:8"
																		},
																		"nativeSrc": "3543:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3543:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3578:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3578:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3581:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3581:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3571:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3571:6:8"
																			},
																			"nativeSrc": "3571:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3571:15:8"
																		},
																		"nativeSrc": "3571:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3571:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3441:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3441:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3464:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3464:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3472:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3472:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3461:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3461:2:8"
																		},
																		"nativeSrc": "3461:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3461:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3438:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3438:2:8"
																},
																"nativeSrc": "3438:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3438:38:8"
															},
															"nativeSrc": "3435:161:8",
															"nodeType": "YulIf",
															"src": "3435:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3222:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3257:4:8",
														"nodeType": "YulTypedName",
														"src": "3257:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3266:6:8",
														"nodeType": "YulTypedName",
														"src": "3266:6:8",
														"type": ""
													}
												],
												"src": "3222:380:8"
											},
											{
												"body": {
													"nativeSrc": "3781:169:8",
													"nodeType": "YulBlock",
													"src": "3781:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3798:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3798:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3809:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3809:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3791:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3791:6:8"
																},
																"nativeSrc": "3791:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3791:21:8"
															},
															"nativeSrc": "3791:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3791:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3832:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3843:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3843:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3828:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:8"
																		},
																		"nativeSrc": "3828:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3828:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3821:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:8"
																},
																"nativeSrc": "3821:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3821:30:8"
															},
															"nativeSrc": "3821:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3821:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3871:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3871:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3882:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3882:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3867:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3867:3:8"
																		},
																		"nativeSrc": "3867:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3867:18:8"
																	},
																	{
																		"hexValue": "4275726e696e672069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "3887:21:8",
																		"nodeType": "YulLiteral",
																		"src": "3887:21:8",
																		"type": "",
																		"value": "Burning is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:8"
																},
																"nativeSrc": "3860:49:8",
																"nodeType": "YulFunctionCall",
																"src": "3860:49:8"
															},
															"nativeSrc": "3860:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "3860:49:8"
														},
														{
															"nativeSrc": "3918:26:8",
															"nodeType": "YulAssignment",
															"src": "3918:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3930:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3930:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3941:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3941:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3926:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:8"
																},
																"nativeSrc": "3926:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3926:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3918:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3918:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3607:343:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3758:9:8",
														"nodeType": "YulTypedName",
														"src": "3758:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3772:4:8",
														"nodeType": "YulTypedName",
														"src": "3772:4:8",
														"type": ""
													}
												],
												"src": "3607:343:8"
											},
											{
												"body": {
													"nativeSrc": "4112:188:8",
													"nodeType": "YulBlock",
													"src": "4112:188:8",
													"statements": [
														{
															"nativeSrc": "4122:26:8",
															"nodeType": "YulAssignment",
															"src": "4122:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4134:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4145:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4145:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4130:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:8"
																},
																"nativeSrc": "4130:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4130:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4122:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4122:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4164:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4164:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4179:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4179:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4195:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4195:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4200:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4200:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4191:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4191:3:8"
																						},
																						"nativeSrc": "4191:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4191:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4204:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4204:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4187:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4187:3:8"
																				},
																				"nativeSrc": "4187:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4187:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4175:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:8"
																		},
																		"nativeSrc": "4175:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4157:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:8"
																},
																"nativeSrc": "4157:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4157:51:8"
															},
															"nativeSrc": "4157:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4157:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4228:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4228:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4239:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4239:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4224:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4224:3:8"
																		},
																		"nativeSrc": "4224:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4244:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4244:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4217:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:8"
																},
																"nativeSrc": "4217:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4217:34:8"
															},
															"nativeSrc": "4217:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4217:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4271:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4282:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4282:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:8"
																		},
																		"nativeSrc": "4267:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4287:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4287:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4260:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:8"
																},
																"nativeSrc": "4260:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4260:34:8"
															},
															"nativeSrc": "4260:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4260:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3955:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4065:9:8",
														"nodeType": "YulTypedName",
														"src": "4065:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4076:6:8",
														"nodeType": "YulTypedName",
														"src": "4076:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4084:6:8",
														"nodeType": "YulTypedName",
														"src": "4084:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4092:6:8",
														"nodeType": "YulTypedName",
														"src": "4092:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4103:4:8",
														"nodeType": "YulTypedName",
														"src": "4103:4:8",
														"type": ""
													}
												],
												"src": "3955:345:8"
											},
											{
												"body": {
													"nativeSrc": "4337:95:8",
													"nodeType": "YulBlock",
													"src": "4337:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4354:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4354:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4361:3:8",
																				"nodeType": "YulLiteral",
																				"src": "4361:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4366:10:8",
																				"nodeType": "YulLiteral",
																				"src": "4366:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4357:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:8"
																		},
																		"nativeSrc": "4357:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4357:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4347:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:8"
																},
																"nativeSrc": "4347:31:8",
																"nodeType": "YulFunctionCall",
																"src": "4347:31:8"
															},
															"nativeSrc": "4347:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "4347:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4394:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4394:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4397:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4397:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4387:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:8"
																},
																"nativeSrc": "4387:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4387:15:8"
															},
															"nativeSrc": "4387:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4387:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4418:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4418:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4421:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4411:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4411:6:8"
																},
																"nativeSrc": "4411:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4411:15:8"
															},
															"nativeSrc": "4411:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4411:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4305:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4305:127:8"
											},
											{
												"body": {
													"nativeSrc": "4485:77:8",
													"nodeType": "YulBlock",
													"src": "4485:77:8",
													"statements": [
														{
															"nativeSrc": "4495:16:8",
															"nodeType": "YulAssignment",
															"src": "4495:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4506:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4506:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4509:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4509:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:8"
																},
																"nativeSrc": "4502:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4502:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4495:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4495:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4534:22:8",
																"nodeType": "YulBlock",
																"src": "4534:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4536:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4536:16:8"
																			},
																			"nativeSrc": "4536:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4536:18:8"
																		},
																		"nativeSrc": "4536:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4536:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4526:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4526:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4529:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4529:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4523:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4523:2:8"
																},
																"nativeSrc": "4523:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4523:10:8"
															},
															"nativeSrc": "4520:36:8",
															"nodeType": "YulIf",
															"src": "4520:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4437:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4468:1:8",
														"nodeType": "YulTypedName",
														"src": "4468:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4471:1:8",
														"nodeType": "YulTypedName",
														"src": "4471:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4477:3:8",
														"nodeType": "YulTypedName",
														"src": "4477:3:8",
														"type": ""
													}
												],
												"src": "4437:125:8"
											},
											{
												"body": {
													"nativeSrc": "4696:145:8",
													"nodeType": "YulBlock",
													"src": "4696:145:8",
													"statements": [
														{
															"nativeSrc": "4706:26:8",
															"nodeType": "YulAssignment",
															"src": "4706:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4718:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4718:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4729:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4714:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4714:3:8"
																},
																"nativeSrc": "4714:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4714:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4706:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4706:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4748:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4748:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4763:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4763:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4779:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4779:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4784:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4784:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4775:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4775:3:8"
																						},
																						"nativeSrc": "4775:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4775:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4788:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4788:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4771:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4771:3:8"
																				},
																				"nativeSrc": "4771:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4771:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4759:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4759:3:8"
																		},
																		"nativeSrc": "4759:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4759:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:8"
																},
																"nativeSrc": "4741:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4741:51:8"
															},
															"nativeSrc": "4741:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4741:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4823:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4823:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:8"
																		},
																		"nativeSrc": "4808:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4808:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:8"
																},
																"nativeSrc": "4801:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4801:34:8"
															},
															"nativeSrc": "4801:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4801:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4567:274:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4657:9:8",
														"nodeType": "YulTypedName",
														"src": "4657:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4668:6:8",
														"nodeType": "YulTypedName",
														"src": "4668:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4676:6:8",
														"nodeType": "YulTypedName",
														"src": "4676:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4687:4:8",
														"nodeType": "YulTypedName",
														"src": "4687:4:8",
														"type": ""
													}
												],
												"src": "4567:274:8"
											},
											{
												"body": {
													"nativeSrc": "4889:136:8",
													"nodeType": "YulBlock",
													"src": "4889:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4934:85:8",
																"nodeType": "YulBlock",
																"src": "4934:85:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4963:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4963:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4966:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4966:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4969:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4969:1:8",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "4948:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "4948:14:8"
																			},
																			"nativeSrc": "4948:23:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4948:23:8"
																		},
																		"nativeSrc": "4948:23:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4948:23:8"
																	},
																	{
																		"nativeSrc": "4984:25:8",
																		"nodeType": "YulAssignment",
																		"src": "4984:25:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4995:3:8",
																					"nodeType": "YulLiteral",
																					"src": "4995:3:8",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5006:1:8",
																							"nodeType": "YulLiteral",
																							"src": "5006:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5000:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5000:5:8"
																					},
																					"nativeSrc": "5000:8:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5000:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4991:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4991:3:8"
																			},
																			"nativeSrc": "4991:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4991:18:8"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nativeSrc": "4984:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4984:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "4905:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "4905:14:8"
																		},
																		"nativeSrc": "4905:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4905:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4923:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4923:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4902:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4902:2:8"
																},
																"nativeSrc": "4902:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4902:23:8"
															},
															"nativeSrc": "4899:120:8",
															"nodeType": "YulIf",
															"src": "4899:120:8"
														}
													]
												},
												"name": "return_data_selector",
												"nativeSrc": "4846:179:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nativeSrc": "4881:3:8",
														"nodeType": "YulTypedName",
														"src": "4881:3:8",
														"type": ""
													}
												],
												"src": "4846:179:8"
											},
											{
												"body": {
													"nativeSrc": "5077:299:8",
													"nodeType": "YulBlock",
													"src": "5077:299:8",
													"statements": [
														{
															"nativeSrc": "5087:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5087:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5109:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5109:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "5125:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5125:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5131:2:8",
																						"nodeType": "YulLiteral",
																						"src": "5131:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5121:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5121:3:8"
																				},
																				"nativeSrc": "5121:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5121:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5140:2:8",
																						"nodeType": "YulLiteral",
																						"src": "5140:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5136:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5136:3:8"
																				},
																				"nativeSrc": "5136:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5117:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5117:3:8"
																		},
																		"nativeSrc": "5117:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5117:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5105:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5105:3:8"
																},
																"nativeSrc": "5105:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5105:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5091:10:8",
																	"nodeType": "YulTypedName",
																	"src": "5091:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5228:111:8",
																"nodeType": "YulBlock",
																"src": "5228:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5249:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5249:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5256:3:8",
																							"nodeType": "YulLiteral",
																							"src": "5256:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5261:10:8",
																							"nodeType": "YulLiteral",
																							"src": "5261:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5252:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5252:3:8"
																					},
																					"nativeSrc": "5252:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5252:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:8"
																			},
																			"nativeSrc": "5242:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5242:31:8"
																		},
																		"nativeSrc": "5242:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5242:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5293:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5293:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5296:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5296:4:8",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5286:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5286:6:8"
																			},
																			"nativeSrc": "5286:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5286:15:8"
																		},
																		"nativeSrc": "5286:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5286:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5321:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5321:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5324:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5324:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5314:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5314:6:8"
																			},
																			"nativeSrc": "5314:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5314:15:8"
																		},
																		"nativeSrc": "5314:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5314:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5163:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5163:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5175:18:8",
																				"nodeType": "YulLiteral",
																				"src": "5175:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5160:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:8"
																		},
																		"nativeSrc": "5160:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5199:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5199:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5211:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5211:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5196:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5196:2:8"
																		},
																		"nativeSrc": "5196:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5196:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5157:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5157:2:8"
																},
																"nativeSrc": "5157:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5157:62:8"
															},
															"nativeSrc": "5154:185:8",
															"nodeType": "YulIf",
															"src": "5154:185:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5355:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5355:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5359:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5359:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5348:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:8"
																},
																"nativeSrc": "5348:22:8",
																"nodeType": "YulFunctionCall",
																"src": "5348:22:8"
															},
															"nativeSrc": "5348:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "5348:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5030:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5059:6:8",
														"nodeType": "YulTypedName",
														"src": "5059:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5067:4:8",
														"nodeType": "YulTypedName",
														"src": "5067:4:8",
														"type": ""
													}
												],
												"src": "5030:346:8"
											},
											{
												"body": {
													"nativeSrc": "5428:581:8",
													"nodeType": "YulBlock",
													"src": "5428:581:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5468:9:8",
																"nodeType": "YulBlock",
																"src": "5468:9:8",
																"statements": [
																	{
																		"nativeSrc": "5470:5:8",
																		"nodeType": "YulLeave",
																		"src": "5470:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "5444:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "5444:14:8"
																		},
																		"nativeSrc": "5444:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5462:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5462:4:8",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5441:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5441:2:8"
																},
																"nativeSrc": "5441:26:8",
																"nodeType": "YulFunctionCall",
																"src": "5441:26:8"
															},
															"nativeSrc": "5438:39:8",
															"nodeType": "YulIf",
															"src": "5438:39:8"
														},
														{
															"nativeSrc": "5486:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5486:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5504:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5504:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5498:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5498:5:8"
																},
																"nativeSrc": "5498:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5498:9:8"
															},
															"variables": [
																{
																	"name": "data",
																	"nativeSrc": "5490:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5490:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5531:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5531:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5537:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nativeSrc": "5544:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5544:14:8"
																				},
																				"nativeSrc": "5544:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5544:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5566:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5566:1:8",
																						"type": "",
																						"value": "3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5562:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5562:3:8"
																				},
																				"nativeSrc": "5562:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5562:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5540:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:8"
																		},
																		"nativeSrc": "5540:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5540:29:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "5516:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "5516:14:8"
																},
																"nativeSrc": "5516:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5516:54:8"
															},
															"nativeSrc": "5516:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "5516:54:8"
														},
														{
															"nativeSrc": "5579:25:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5579:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5599:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5599:4:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5593:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5593:5:8"
																},
																"nativeSrc": "5593:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5593:11:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5583:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5583:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5692:9:8",
																"nodeType": "YulBlock",
																"src": "5692:9:8",
																"statements": [
																	{
																		"nativeSrc": "5694:5:8",
																		"nodeType": "YulLeave",
																		"src": "5694:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5622:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5622:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5630:18:8",
																				"nodeType": "YulLiteral",
																				"src": "5630:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5619:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5619:2:8"
																		},
																		"nativeSrc": "5619:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:30:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5658:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5658:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5666:4:8",
																						"nodeType": "YulLiteral",
																						"src": "5666:4:8",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5654:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5654:3:8"
																				},
																				"nativeSrc": "5654:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5654:17:8"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nativeSrc": "5673:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5673:14:8"
																				},
																				"nativeSrc": "5673:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5673:16:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5651:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5651:2:8"
																		},
																		"nativeSrc": "5651:39:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5651:39:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5616:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5616:2:8"
																},
																"nativeSrc": "5616:75:8",
																"nodeType": "YulFunctionCall",
																"src": "5616:75:8"
															},
															"nativeSrc": "5613:88:8",
															"nodeType": "YulIf",
															"src": "5613:88:8"
														},
														{
															"nativeSrc": "5710:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5710:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5725:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5725:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5731:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5731:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5721:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:8"
																},
																"nativeSrc": "5721:17:8",
																"nodeType": "YulFunctionCall",
																"src": "5721:17:8"
															},
															"variables": [
																{
																	"name": "msg",
																	"nativeSrc": "5714:3:8",
																	"nodeType": "YulTypedName",
																	"src": "5714:3:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5747:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5747:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nativeSrc": "5767:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5761:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5761:5:8"
																},
																"nativeSrc": "5761:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5761:10:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5751:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5751:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5814:9:8",
																"nodeType": "YulBlock",
																"src": "5814:9:8",
																"statements": [
																	{
																		"nativeSrc": "5816:5:8",
																		"nodeType": "YulLeave",
																		"src": "5816:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5786:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5786:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5794:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5794:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5783:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5783:2:8"
																},
																"nativeSrc": "5783:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5783:30:8"
															},
															"nativeSrc": "5780:43:8",
															"nodeType": "YulIf",
															"src": "5780:43:8"
														},
														{
															"body": {
																"nativeSrc": "5909:9:8",
																"nodeType": "YulBlock",
																"src": "5909:9:8",
																"statements": [
																	{
																		"nativeSrc": "5911:5:8",
																		"nodeType": "YulLeave",
																		"src": "5911:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nativeSrc": "5846:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5846:3:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5851:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5842:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5842:3:8"
																				},
																				"nativeSrc": "5842:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5842:16:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5860:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5860:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5838:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:8"
																		},
																		"nativeSrc": "5838:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5838:27:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nativeSrc": "5875:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5875:4:8"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "5881:14:8",
																							"nodeType": "YulIdentifier",
																							"src": "5881:14:8"
																						},
																						"nativeSrc": "5881:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5881:16:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5871:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5871:3:8"
																				},
																				"nativeSrc": "5871:27:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5871:27:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5904:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5904:1:8",
																						"type": "",
																						"value": "3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5900:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5900:3:8"
																				},
																				"nativeSrc": "5900:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5900:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5867:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5867:3:8"
																		},
																		"nativeSrc": "5867:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5867:40:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5835:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5835:2:8"
																},
																"nativeSrc": "5835:73:8",
																"nodeType": "YulFunctionCall",
																"src": "5835:73:8"
															},
															"nativeSrc": "5832:86:8",
															"nodeType": "YulIf",
															"src": "5832:86:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5947:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5947:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5961:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5961:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5969:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5969:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5957:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5957:3:8"
																				},
																				"nativeSrc": "5957:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5957:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5978:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5978:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5953:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:8"
																		},
																		"nativeSrc": "5953:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5953:30:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5927:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "5927:19:8"
																},
																"nativeSrc": "5927:57:8",
																"nodeType": "YulFunctionCall",
																"src": "5927:57:8"
															},
															"nativeSrc": "5927:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "5927:57:8"
														},
														{
															"nativeSrc": "5993:10:8",
															"nodeType": "YulAssignment",
															"src": "5993:10:8",
															"value": {
																"name": "msg",
																"nativeSrc": "6000:3:8",
																"nodeType": "YulIdentifier",
																"src": "6000:3:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5993:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5993:3:8"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nativeSrc": "5381:628:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5420:3:8",
														"nodeType": "YulTypedName",
														"src": "5420:3:8",
														"type": ""
													}
												],
												"src": "5381:628:8"
											},
											{
												"body": {
													"nativeSrc": "6063:79:8",
													"nodeType": "YulBlock",
													"src": "6063:79:8",
													"statements": [
														{
															"nativeSrc": "6073:17:8",
															"nodeType": "YulAssignment",
															"src": "6073:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6085:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6085:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6088:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6088:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6081:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:8"
																},
																"nativeSrc": "6081:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6081:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6073:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6073:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6114:22:8",
																"nodeType": "YulBlock",
																"src": "6114:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6116:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6116:16:8"
																			},
																			"nativeSrc": "6116:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6116:18:8"
																		},
																		"nativeSrc": "6116:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6116:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6105:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6105:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6111:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6111:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6102:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6102:2:8"
																},
																"nativeSrc": "6102:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6102:11:8"
															},
															"nativeSrc": "6099:37:8",
															"nodeType": "YulIf",
															"src": "6099:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6014:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6045:1:8",
														"nodeType": "YulTypedName",
														"src": "6045:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6048:1:8",
														"nodeType": "YulTypedName",
														"src": "6048:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6054:4:8",
														"nodeType": "YulTypedName",
														"src": "6054:4:8",
														"type": ""
													}
												],
												"src": "6014:128:8"
											},
											{
												"body": {
													"nativeSrc": "6324:211:8",
													"nodeType": "YulBlock",
													"src": "6324:211:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6341:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6341:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6356:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6356:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6372:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6372:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6377:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6377:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6368:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6368:3:8"
																						},
																						"nativeSrc": "6368:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6368:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6381:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6381:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6364:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6364:3:8"
																				},
																				"nativeSrc": "6364:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6364:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6352:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6352:3:8"
																		},
																		"nativeSrc": "6352:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6352:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6334:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:8"
																},
																"nativeSrc": "6334:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6334:51:8"
															},
															"nativeSrc": "6334:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6334:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6405:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6405:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6416:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6416:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6401:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6401:3:8"
																		},
																		"nativeSrc": "6401:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6401:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6421:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6421:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6394:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:8"
																},
																"nativeSrc": "6394:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6394:34:8"
															},
															"nativeSrc": "6394:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6394:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6459:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6444:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:8"
																		},
																		"nativeSrc": "6444:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6464:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6464:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:8"
																},
																"nativeSrc": "6437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6437:30:8"
															},
															"nativeSrc": "6437:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6437:30:8"
														},
														{
															"nativeSrc": "6476:53:8",
															"nodeType": "YulAssignment",
															"src": "6476:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6502:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6502:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6514:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6514:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6525:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6525:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:8"
																		},
																		"nativeSrc": "6510:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6484:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6484:17:8"
																},
																"nativeSrc": "6484:45:8",
																"nodeType": "YulFunctionCall",
																"src": "6484:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6476:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6476:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6147:388:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6277:9:8",
														"nodeType": "YulTypedName",
														"src": "6277:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6288:6:8",
														"nodeType": "YulTypedName",
														"src": "6288:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6296:6:8",
														"nodeType": "YulTypedName",
														"src": "6296:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6304:6:8",
														"nodeType": "YulTypedName",
														"src": "6304:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6315:4:8",
														"nodeType": "YulTypedName",
														"src": "6315:4:8",
														"type": ""
													}
												],
												"src": "6147:388:8"
											},
											{
												"body": {
													"nativeSrc": "6770:282:8",
													"nodeType": "YulBlock",
													"src": "6770:282:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6787:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6787:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6802:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6802:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6818:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6818:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6823:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6823:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6814:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6814:3:8"
																						},
																						"nativeSrc": "6814:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6814:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6810:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:8"
																				},
																				"nativeSrc": "6810:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6810:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6798:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:8"
																		},
																		"nativeSrc": "6798:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6798:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6780:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:8"
																},
																"nativeSrc": "6780:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6780:51:8"
															},
															"nativeSrc": "6780:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6780:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6851:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6851:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6862:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6862:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6847:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:8"
																		},
																		"nativeSrc": "6847:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6847:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6867:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6867:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6840:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:8"
																},
																"nativeSrc": "6840:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6840:34:8"
															},
															"nativeSrc": "6840:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6840:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6894:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6894:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6905:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6905:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6890:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6890:3:8"
																		},
																		"nativeSrc": "6890:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6890:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6910:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6910:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6883:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6883:6:8"
																},
																"nativeSrc": "6883:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6883:30:8"
															},
															"nativeSrc": "6883:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6883:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6933:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6944:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6944:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:8"
																		},
																		"nativeSrc": "6929:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6929:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6949:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6949:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6922:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6922:6:8"
																},
																"nativeSrc": "6922:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6922:30:8"
															},
															"nativeSrc": "6922:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6922:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6972:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6972:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6983:3:8",
																				"nodeType": "YulLiteral",
																				"src": "6983:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6968:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6968:3:8"
																		},
																		"nativeSrc": "6968:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6968:19:8"
																	},
																	{
																		"hexValue": "556e6b6e6f776e206275726e206572726f72",
																		"kind": "string",
																		"nativeSrc": "6989:20:8",
																		"nodeType": "YulLiteral",
																		"src": "6989:20:8",
																		"type": "",
																		"value": "Unknown burn error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6961:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6961:6:8"
																},
																"nativeSrc": "6961:49:8",
																"nodeType": "YulFunctionCall",
																"src": "6961:49:8"
															},
															"nativeSrc": "6961:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "6961:49:8"
														},
														{
															"nativeSrc": "7019:27:8",
															"nodeType": "YulAssignment",
															"src": "7019:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7031:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7031:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7042:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7027:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:8"
																},
																"nativeSrc": "7027:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7027:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7019:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7019:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6540:512:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6731:9:8",
														"nodeType": "YulTypedName",
														"src": "6731:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6742:6:8",
														"nodeType": "YulTypedName",
														"src": "6742:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6750:6:8",
														"nodeType": "YulTypedName",
														"src": "6750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6761:4:8",
														"nodeType": "YulTypedName",
														"src": "6761:4:8",
														"type": ""
													}
												],
												"src": "6540:512:8"
											},
											{
												"body": {
													"nativeSrc": "7186:119:8",
													"nodeType": "YulBlock",
													"src": "7186:119:8",
													"statements": [
														{
															"nativeSrc": "7196:26:8",
															"nodeType": "YulAssignment",
															"src": "7196:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7208:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7208:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7219:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7219:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7204:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:8"
																},
																"nativeSrc": "7204:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7204:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7196:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7196:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7238:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7238:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7249:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7249:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7231:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7231:6:8"
																},
																"nativeSrc": "7231:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7231:25:8"
															},
															"nativeSrc": "7231:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "7231:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7276:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7276:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7287:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7287:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7272:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:8"
																		},
																		"nativeSrc": "7272:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7292:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7292:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7265:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7265:6:8"
																},
																"nativeSrc": "7265:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7265:34:8"
															},
															"nativeSrc": "7265:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7265:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7057:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:8",
														"nodeType": "YulTypedName",
														"src": "7147:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7158:6:8",
														"nodeType": "YulTypedName",
														"src": "7158:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7166:6:8",
														"nodeType": "YulTypedName",
														"src": "7166:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7177:4:8",
														"nodeType": "YulTypedName",
														"src": "7177:4:8",
														"type": ""
													}
												],
												"src": "7057:248:8"
											},
											{
												"body": {
													"nativeSrc": "7484:227:8",
													"nodeType": "YulBlock",
													"src": "7484:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7501:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7501:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7512:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7512:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7494:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7494:6:8"
																},
																"nativeSrc": "7494:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7494:21:8"
															},
															"nativeSrc": "7494:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7494:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7535:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7546:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:8"
																		},
																		"nativeSrc": "7531:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7551:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7551:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7524:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:8"
																},
																"nativeSrc": "7524:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7524:30:8"
															},
															"nativeSrc": "7524:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7524:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7574:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7574:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7585:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7570:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7570:3:8"
																		},
																		"nativeSrc": "7570:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7570:18:8"
																	},
																	{
																		"hexValue": "4d696e742064697361626c65643a2075736520666163746f727920746f206c6f",
																		"kind": "string",
																		"nativeSrc": "7590:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7590:34:8",
																		"type": "",
																		"value": "Mint disabled: use factory to lo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7563:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7563:6:8"
																},
																"nativeSrc": "7563:62:8",
																"nodeType": "YulFunctionCall",
																"src": "7563:62:8"
															},
															"nativeSrc": "7563:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "7563:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7645:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7645:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7656:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7656:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7641:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7641:3:8"
																		},
																		"nativeSrc": "7641:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7641:18:8"
																	},
																	{
																		"hexValue": "636b205850",
																		"kind": "string",
																		"nativeSrc": "7661:7:8",
																		"nodeType": "YulLiteral",
																		"src": "7661:7:8",
																		"type": "",
																		"value": "ck XP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7634:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:8"
																},
																"nativeSrc": "7634:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7634:35:8"
															},
															"nativeSrc": "7634:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "7634:35:8"
														},
														{
															"nativeSrc": "7678:27:8",
															"nodeType": "YulAssignment",
															"src": "7678:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7690:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7690:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7701:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7701:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7686:3:8"
																},
																"nativeSrc": "7686:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7686:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7678:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7678:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7310:401:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7461:9:8",
														"nodeType": "YulTypedName",
														"src": "7461:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7475:4:8",
														"nodeType": "YulTypedName",
														"src": "7475:4:8",
														"type": ""
													}
												],
												"src": "7310:401:8"
											},
											{
												"body": {
													"nativeSrc": "7762:171:8",
													"nodeType": "YulBlock",
													"src": "7762:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7793:111:8",
																"nodeType": "YulBlock",
																"src": "7793:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7814:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7814:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7821:3:8",
																							"nodeType": "YulLiteral",
																							"src": "7821:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7826:10:8",
																							"nodeType": "YulLiteral",
																							"src": "7826:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7817:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7817:3:8"
																					},
																					"nativeSrc": "7817:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7817:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7807:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7807:6:8"
																			},
																			"nativeSrc": "7807:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7807:31:8"
																		},
																		"nativeSrc": "7807:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7807:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7858:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7858:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7861:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7861:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7851:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7851:6:8"
																			},
																			"nativeSrc": "7851:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7851:15:8"
																		},
																		"nativeSrc": "7851:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7851:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7886:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7886:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7889:4:8",
																					"nodeType": "YulLiteral",
																					"src": "7889:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7879:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7879:6:8"
																			},
																			"nativeSrc": "7879:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7879:15:8"
																		},
																		"nativeSrc": "7879:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7879:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7782:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7782:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7775:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:8"
																},
																"nativeSrc": "7775:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7775:9:8"
															},
															"nativeSrc": "7772:132:8",
															"nodeType": "YulIf",
															"src": "7772:132:8"
														},
														{
															"nativeSrc": "7913:14:8",
															"nodeType": "YulAssignment",
															"src": "7913:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7922:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7922:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7925:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7918:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																},
																"nativeSrc": "7918:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7918:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7913:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7913:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7716:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7747:1:8",
														"nodeType": "YulTypedName",
														"src": "7747:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7750:1:8",
														"nodeType": "YulTypedName",
														"src": "7750:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7756:1:8",
														"nodeType": "YulTypedName",
														"src": "7756:1:8",
														"type": ""
													}
												],
												"src": "7716:217:8"
											},
											{
												"body": {
													"nativeSrc": "8140:270:8",
													"nodeType": "YulBlock",
													"src": "8140:270:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8157:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8157:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8168:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8168:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8150:6:8"
																},
																"nativeSrc": "8150:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8150:25:8"
															},
															"nativeSrc": "8150:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "8150:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8195:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8206:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8206:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8191:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:8"
																		},
																		"nativeSrc": "8191:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8191:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8211:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8211:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8184:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:8"
																},
																"nativeSrc": "8184:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8184:30:8"
															},
															"nativeSrc": "8184:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8184:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8234:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8234:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8245:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8245:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:8"
																		},
																		"nativeSrc": "8230:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8230:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8250:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8250:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:8"
																},
																"nativeSrc": "8223:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8223:30:8"
															},
															"nativeSrc": "8223:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8223:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8273:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8273:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8284:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8284:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8269:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8269:3:8"
																		},
																		"nativeSrc": "8269:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:18:8"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d206275726e20706572207472616e736163",
																		"kind": "string",
																		"nativeSrc": "8289:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8289:34:8",
																		"type": "",
																		"value": "Exceeds maximum burn per transac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8262:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8262:6:8"
																},
																"nativeSrc": "8262:62:8",
																"nodeType": "YulFunctionCall",
																"src": "8262:62:8"
															},
															"nativeSrc": "8262:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "8262:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8344:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8355:3:8",
																				"nodeType": "YulLiteral",
																				"src": "8355:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8340:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:8"
																		},
																		"nativeSrc": "8340:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8340:19:8"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nativeSrc": "8361:6:8",
																		"nodeType": "YulLiteral",
																		"src": "8361:6:8",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8333:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:8"
																},
																"nativeSrc": "8333:35:8",
																"nodeType": "YulFunctionCall",
																"src": "8333:35:8"
															},
															"nativeSrc": "8333:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "8333:35:8"
														},
														{
															"nativeSrc": "8377:27:8",
															"nodeType": "YulAssignment",
															"src": "8377:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8389:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8389:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8400:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8400:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8385:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8385:3:8"
																},
																"nativeSrc": "8385:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8385:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8377:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8377:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7938:472:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8109:9:8",
														"nodeType": "YulTypedName",
														"src": "8109:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8120:6:8",
														"nodeType": "YulTypedName",
														"src": "8120:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8131:4:8",
														"nodeType": "YulTypedName",
														"src": "8131:4:8",
														"type": ""
													}
												],
												"src": "7938:472:8"
											},
											{
												"body": {
													"nativeSrc": "8606:14:8",
													"nodeType": "YulBlock",
													"src": "8606:14:8",
													"statements": [
														{
															"nativeSrc": "8608:10:8",
															"nodeType": "YulAssignment",
															"src": "8608:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "8615:3:8",
																"nodeType": "YulIdentifier",
																"src": "8615:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8608:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8415:205:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8590:3:8",
														"nodeType": "YulTypedName",
														"src": "8590:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8598:3:8",
														"nodeType": "YulTypedName",
														"src": "8598:3:8",
														"type": ""
													}
												],
												"src": "8415:205:8"
											},
											{
												"body": {
													"nativeSrc": "8799:169:8",
													"nodeType": "YulBlock",
													"src": "8799:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8816:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8816:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8827:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8827:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8809:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8809:6:8"
																},
																"nativeSrc": "8809:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8809:21:8"
															},
															"nativeSrc": "8809:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8809:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8850:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8850:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8861:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8861:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8846:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8846:3:8"
																		},
																		"nativeSrc": "8846:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8846:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8866:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8866:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8839:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:8"
																},
																"nativeSrc": "8839:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8839:30:8"
															},
															"nativeSrc": "8839:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8839:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8889:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8889:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8900:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8900:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8885:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8885:3:8"
																		},
																		"nativeSrc": "8885:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8885:18:8"
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8905:21:8",
																		"nodeType": "YulLiteral",
																		"src": "8905:21:8",
																		"type": "",
																		"value": "ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8878:6:8"
																},
																"nativeSrc": "8878:49:8",
																"nodeType": "YulFunctionCall",
																"src": "8878:49:8"
															},
															"nativeSrc": "8878:49:8",
															"nodeType": "YulExpressionStatement",
															"src": "8878:49:8"
														},
														{
															"nativeSrc": "8936:26:8",
															"nodeType": "YulAssignment",
															"src": "8936:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8948:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8948:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8944:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:8"
																},
																"nativeSrc": "8944:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8944:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8936:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8936:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8625:343:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8776:9:8",
														"nodeType": "YulTypedName",
														"src": "8776:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8790:4:8",
														"nodeType": "YulTypedName",
														"src": "8790:4:8",
														"type": ""
													}
												],
												"src": "8625:343:8"
											},
											{
												"body": {
													"nativeSrc": "9051:167:8",
													"nodeType": "YulBlock",
													"src": "9051:167:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9097:16:8",
																"nodeType": "YulBlock",
																"src": "9097:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9106:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9109:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9109:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9099:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9099:6:8"
																			},
																			"nativeSrc": "9099:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9099:12:8"
																		},
																		"nativeSrc": "9099:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9099:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9072:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9072:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9081:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9081:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9068:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:8"
																		},
																		"nativeSrc": "9068:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9093:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9064:3:8"
																},
																"nativeSrc": "9064:32:8",
																"nodeType": "YulFunctionCall",
																"src": "9064:32:8"
															},
															"nativeSrc": "9061:52:8",
															"nodeType": "YulIf",
															"src": "9061:52:8"
														},
														{
															"nativeSrc": "9122:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9122:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9141:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9141:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9135:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9135:5:8"
																},
																"nativeSrc": "9135:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9135:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9126:5:8",
																	"nodeType": "YulTypedName",
																	"src": "9126:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9182:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9182:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "9160:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "9160:21:8"
																},
																"nativeSrc": "9160:28:8",
																"nodeType": "YulFunctionCall",
																"src": "9160:28:8"
															},
															"nativeSrc": "9160:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "9160:28:8"
														},
														{
															"nativeSrc": "9197:15:8",
															"nodeType": "YulAssignment",
															"src": "9197:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "9207:5:8",
																"nodeType": "YulIdentifier",
																"src": "9207:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8973:245:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9017:9:8",
														"nodeType": "YulTypedName",
														"src": "9017:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9028:7:8",
														"nodeType": "YulTypedName",
														"src": "9028:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9040:6:8",
														"nodeType": "YulTypedName",
														"src": "9040:6:8",
														"type": ""
													}
												],
												"src": "8973:245:8"
											},
											{
												"body": {
													"nativeSrc": "9397:172:8",
													"nodeType": "YulBlock",
													"src": "9397:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9414:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9414:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9425:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9425:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:8"
																},
																"nativeSrc": "9407:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9407:21:8"
															},
															"nativeSrc": "9407:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9407:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9448:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9448:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9459:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9459:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9444:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:8"
																		},
																		"nativeSrc": "9444:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9464:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:8"
																},
																"nativeSrc": "9437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9437:30:8"
															},
															"nativeSrc": "9437:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9437:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9487:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9487:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9498:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9498:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9483:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9483:3:8"
																		},
																		"nativeSrc": "9483:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9483:18:8"
																	},
																	{
																		"hexValue": "4f6e6c792073656c662d63616c6c20616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "9503:24:8",
																		"nodeType": "YulLiteral",
																		"src": "9503:24:8",
																		"type": "",
																		"value": "Only self-call allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9476:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:8"
																},
																"nativeSrc": "9476:52:8",
																"nodeType": "YulFunctionCall",
																"src": "9476:52:8"
															},
															"nativeSrc": "9476:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "9476:52:8"
														},
														{
															"nativeSrc": "9537:26:8",
															"nodeType": "YulAssignment",
															"src": "9537:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9549:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9549:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9560:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9560:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9545:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:8"
																},
																"nativeSrc": "9545:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9545:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9537:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9537:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9223:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9374:9:8",
														"nodeType": "YulTypedName",
														"src": "9374:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9388:4:8",
														"nodeType": "YulTypedName",
														"src": "9388:4:8",
														"type": ""
													}
												],
												"src": "9223:346:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Burning is disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), not(3)))\n        let offset := mload(data)\n        if or(gt(offset, 0xffffffffffffffff), gt(add(offset, 0x24), returndatasize())) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), not(3))) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 18)\n        mstore(add(headStart, 128), \"Unknown burn error\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Mint disabled: use factory to lo\")\n        mstore(add(headStart, 96), \"ck XP\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 36)\n        mstore(add(headStart, 96), \"Exceeds maximum burn per transac\")\n        mstore(add(headStart, 128), \"tion\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only self-call allowed\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1017": [
									{
										"length": 32,
										"start": 441
									}
								],
								"1019": [
									{
										"length": 32,
										"start": 729
									},
									{
										"length": 32,
										"start": 1727
									},
									{
										"length": 32,
										"start": 2643
									}
								],
								"1021": [
									{
										"length": 32,
										"start": 768
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B2C835F GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF658F32A EQ PUSH2 0x376 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xA4F0ECD3 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x2C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x248 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x17D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH2 0x191 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x154 PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x27B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x1192 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C4 SWAP1 PUSH2 0x1192 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x426 DUP2 DUP6 DUP6 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0xCF3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AB PUSH2 0xD50 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x4CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x501 JUMPI CALLER DUP3 DUP3 PUSH1 0x40 MLOAD PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xF658F32A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x564 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x5F9 JUMPI PUSH2 0x570 PUSH2 0x1212 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x5C4 JUMPI POP PUSH2 0x584 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH2 0x58F JUMPI POP PUSH2 0x5C6 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 CALLER SWAP1 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12FB JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x132A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP2 PUSH2 0x635 SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x648 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E742064697361626C65643A2075736520666163746F727920746F206C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x636B20585 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x6B2 PUSH0 PUSH2 0xDA7 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x748 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB8953F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109D5C9B9A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x750 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7D6 JUMPI DUP3 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH4 0xDB42144D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x80C JUMPI DUP2 PUSH2 0x7EA PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1EE970CD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x49A JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH2 0x818 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x136D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x88B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x33BE48F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP2 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206275726E20706572207472616E736163 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x7B2C7995 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xF658F32A SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x98C JUMPI PUSH2 0x903 PUSH2 0x1212 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x957 JUMPI POP PUSH2 0x917 PUSH2 0x1264 JUMP JUMPDEST DUP1 PUSH2 0x922 JUMPI POP PUSH2 0x959 JUMP JUMPDEST DUP4 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x12FB JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1E764BC5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH2 0x49A SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x132A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 DUP5 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x9D2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9E6 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x1192 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5936416F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 DUP3 PUSH2 0xDF8 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x426 DUP2 DUP6 DUP6 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB82 JUMPI PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x138C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBFF PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x648 DUP2 PUSH2 0xDA7 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xBF2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCE5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0xB7C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0xBF2 DUP4 DUP4 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 PUSH0 DUP4 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH2 0x9E6 DUP3 PUSH0 DUP4 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB7C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF24 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF5C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFB9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF9B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFD5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1038 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1085 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10C1 DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10EA DUP5 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP PUSH2 0x10F8 PUSH1 0x20 DUP6 ADD PUSH2 0x108C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1085 DUP3 PUSH2 0x108C JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x648 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1085 DUP2 PUSH2 0x1139 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x117B DUP4 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 PUSH1 0x20 DUP5 ADD PUSH2 0x108C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x11EB JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x4 PUSH0 PUSH0 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x125D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1271 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x129B JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP3 DUP3 ADD PUSH1 0x20 ADD GT ISZERO PUSH2 0x12D1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12E0 PUSH1 0x20 DUP3 DUP6 ADD ADD DUP6 PUSH2 0x122B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42C PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1321 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1045 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB710313AB9371032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1387 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1085 DUP2 PUSH2 0x1139 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xC7 0xAE SWAP7 0x29 PUSH21 0x10FEF143E8BE3C9DB06B71D4B72F344F43926A1B79 PUSH0 BLOBBASEFEE SWAPN 0x5B 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "483:9107:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1181:14:8;;1174:22;1156:41;;1144:2;1129:18;3979:186:2;1016:187:8;2830:97:2;2908:12;;2830:97;;;1354:25:8;;;1342:2;1327:18;2830:97:2;1208:177:8;4757:244:2;;;;;;:::i;:::-;;:::i;4546:90:7:-;;;1941:4:8;4620:9:7;1929:17:8;1911:36;;1899:2;1884:18;4546:90:7;1769:184:8;6905:984:7;;;;;;:::i;:::-;;:::i;:::-;;919:30;;;;;;;;;9487:101;;;;;;:::i;:::-;;:::i;2985:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;4871:1644:7:-;;;;;;:::i;:::-;;:::i;8075:136::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2913:32:8;;;2895:51;;2883:2;2868:18;1638:85:0;2749:203:8;1962:93:2;;;:::i;9094:233:7:-;;;;;;:::i;:::-;;:::i;3296:178:2:-;;;;;;:::i;:::-;;:::i;8450:480:7:-;;;;;;:::i;:::-;;:::i;651:32::-;;;;;734:31;;;;;851:26;;;;;;3532:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:0;;;;;;:::i;:::-;;:::i;6606:169:7:-;;;;;;:::i;:::-;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;6905:984:7:-;3098:11;;;;3093:60;;3118:35;;-1:-1:-1;;;3118:35:7;;3809:2:8;3118:35:7;;;3791:21:8;3848:2;3828:18;;;3821:30;-1:-1:-1;;;3867:18:8;;;3860:49;3926:18;;3118:35:7;;;;;;;;3093:60;2500:21:6::1;:19;:21::i;:::-;7020:6:7::2;7030:1;7020:11:::0;7016:61:::2;;7054:12;;-1:-1:-1::0;;;7054:12:7::2;;;;;;;;;;;7016:61;7127:10;7095:19;3076:18:2::0;;;;;;;;;;;7152:20:7;;::::2;7148:110;;;7215:10;7227:6;7235:11;7195:52;;-1:-1:-1::0;;;7195:52:7::2;;;;;;;;;;:::i;7148:110::-;7339:6;7324:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7368:37:7::2;::::0;-1:-1:-1;;;7368:37:7;;7386:10:::2;7368:37;::::0;::::2;4741:51:8::0;4808:18;;;4801:34;;;7368:4:7::2;::::0;:17:::2;::::0;4714:18:8;;7368:37:7::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7364:519;;;;:::i;:::-;;;::::0;::::2;;;;;:::i;:::-;;;;;;;;7601:6;7586:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7628:50:7::2;::::0;-1:-1:-1;;;7628:50:7;;::::2;::::0;7651:10:::2;::::0;7663:6;;7671;;7628:50:::2;;;:::i;7364:519::-;;;7781:6;7766:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7808:64:7::2;::::0;-1:-1:-1;;;7808:64:7;;::::2;::::0;7831:10:::2;::::0;7843:6;;7808:64:::2;;;:::i;7364:519::-;7458:11;::::0;7425:45:::2;::::0;7438:10:::2;::::0;7425:45:::2;::::0;::::2;::::0;7450:6;7231:25:8;;7287:2;7272:18;;7265:34;7219:2;7204:18;;7057:248;7425:45:7::2;;;;;;;;6969:920;2542:20:6::1;1857:1:::0;3068:7;:21;2888:208;2542:20:::1;6905:984:7::0;:::o;9487:101::-;9534:47;;-1:-1:-1;;;9534:47:7;;7512:2:8;9534:47:7;;;7494:21:8;7551:2;7531:18;;;7524:30;7590:34;7570:18;;;7563:62;-1:-1:-1;;;7641:18:8;;;7634:35;7686:19;;9534:47:7;7310:401:8;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4871:1644:7:-;2972:10;-1:-1:-1;;;;;2986:7:7;2972:21;;2968:64;;3002:30;;-1:-1:-1;;;3002:30:7;;3021:10;3002:30;;;2895:51:8;2868:18;;3002:30:7;2749:203:8;2968:64:7;3098:11:::1;::::0;::::1;;3093:60;;3118:35;::::0;-1:-1:-1;;;3118:35:7;;3809:2:8;3118:35:7::1;::::0;::::1;3791:21:8::0;3848:2;3828:18;;;3821:30;-1:-1:-1;;;3867:18:8;;;3860:49;3926:18;;3118:35:7::1;3607:343:8::0;3093:60:7::1;2500:21:6::2;:19;:21::i;:::-;-1:-1:-1::0;;;;;5057:18:7;::::3;5053:69;;5098:13;;-1:-1:-1::0;;;5098:13:7::3;;;;;;;;;;;5053:69;5135:6;5145:1;5135:11:::0;5131:61:::3;;5169:12;;-1:-1:-1::0;;;5169:12:7::3;;;;;;;;;;;5131:61;-1:-1:-1::0;;;;;3076:18:2;;5210:19:7::3;3076:18:2::0;;;;;;;;;;;5261:20:7;;::::3;5257:104;;;5324:4;5330:6;5338:11;5304:46;;-1:-1:-1::0;;;5304:46:7::3;;;;;;;;;;:::i;5257:104::-;2908:12:2::0;;5459:6:7::3;:22;5455:103;;;5525:6;5533:13;2908:12:2::0;;;2830:97;5533:13:7::3;5504:43;::::0;-1:-1:-1;;;5504:43:7;;::::3;::::0;::::3;7231:25:8::0;;;;7272:18;;;7265:34;7204:18;;5504:43:7::3;7057:248:8::0;5455:103:7::3;5674:20;5713:2;5697:13;2908:12:2::0;;;2830:97;5697:13:7::3;:18;;;;:::i;:::-;5674:41;;5775:12;5766:6;:21;5762:124;;;5828:6;5810:65;;-1:-1:-1::0;;;5810:65:7::3;;;;;;8150:25:8::0;;8211:2;8206;8191:18;;8184:30;;;8250:2;8230:18;;;8223:30;8289:34;8284:2;8269:18;;8262:62;-1:-1:-1;;;8355:3:8;8340:19;;8333:35;8400:3;8385:19;;7938:472;5762:124:7::3;5989:6;5974:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6018:31:7::3;::::0;-1:-1:-1;;;6018:31:7;;-1:-1:-1;;;;;4759:32:8;;6018:31:7::3;::::0;::::3;4741:51:8::0;4808:18;;;4801:34;;;6018:4:7::3;::::0;:17:::3;::::0;4714:18:8;;6018:31:7::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6014:495;;;;:::i;:::-;;;::::0;::::3;;;;;:::i;:::-;;;;;;;;6239:6;6224:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6266:44:7::3;::::0;-1:-1:-1;;;6266:44:7;;::::3;::::0;6289:4;;6295:6;;6303;;6266:44:::3;;;:::i;6014:495::-;;;6413:6;6398:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6440:58:7::3;::::0;-1:-1:-1;;;6440:58:7;;::::3;::::0;6463:4;;6469:6;;6440:58:::3;;;:::i;6014:495::-;6082:4;-1:-1:-1::0;;;;;6069:39:7::3;;6088:6;6096:11;;6069:39;;;;;;7231:25:8::0;;;7287:2;7272:18;;7265:34;7219:2;7204:18;;7057:248;6069:39:7::3;;;;;;;;5006:1509;;2542:20:6::2;1857:1:::0;3068:7;:21;2888:208;2542:20:::2;4871:1644:7::0;;:::o;8075:136::-;1531:13:0;:11;:13::i;:::-;8142:11:7::1;:21:::0;;-1:-1:-1;;8142:21:7::1;::::0;::::1;;::::0;;::::1;::::0;;;8178:26:::1;::::0;1156:41:8;;;8178:26:7::1;::::0;1144:2:8;1129:18;8178:26:7::1;;;;;;;8075:136:::0;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;9094:233:7:-;2972:10;-1:-1:-1;;;;;2986:7:7;2972:21;;2968:64;;3002:30;;-1:-1:-1;;;3002:30:7;;3021:10;3002:30;;;2895:51:8;2868:18;;3002:30:7;2749:203:8;2968:64:7;9303:17:::1;9309:2;9313:6;9303:5;:17::i;3296:178:2:-:0;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;8450:480:7:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8582:16:7;::::1;8578:42;;8607:13;;-1:-1:-1::0;;;8607:13:7::1;;;;;;;;;;;8578:42;-1:-1:-1::0;;;;;8643:19:7;::::1;8639:285;;8706:12;8732:2;-1:-1:-1::0;;;;;8724:16:7::1;8748:6;8724:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8705:54;;;8781:7;8773:39;;;::::0;-1:-1:-1;;;8773:39:7;;8827:2:8;8773:39:7::1;::::0;::::1;8809:21:8::0;8866:2;8846:18;;;8839:30;-1:-1:-1;;;8885:18:8;;;8878:49;8944:18;;8773:39:7::1;8625:343:8::0;8773:39:7::1;8664:159;8450:480:::0;;;:::o;8639:285::-:1;8879:34;::::0;-1:-1:-1;;;8879:34:7;;-1:-1:-1;;;;;4759:32:8;;;8879:34:7::1;::::0;::::1;4741:51:8::0;4808:18;;;4801:34;;;8879:22:7;::::1;::::0;::::1;::::0;4714:18:8;;8879:34:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8639:285::-;8450:480:::0;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2895:51:8::0;2868:18;;2672:31:0::1;2749:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;6606:169:7:-:0;6685:10;6707:4;6685:27;6677:62;;;;-1:-1:-1;;;6677:62:7;;9425:2:8;6677:62:7;;;9407:21:8;9464:2;9444:18;;;9437:30;-1:-1:-1;;;9483:18:8;;;9476:52;9545:18;;6677:62:7;9223:346:8;6677:62:7;6749:19;6755:4;6761:6;6749:5;:19::i;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;-1:-1:-1;;;10668:60:2;;;;;;;;;;:::i;10613:130::-;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;2895:51:8;2868:18;;5498:30:2;2749:203:8;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;2895:51:8;2868:18;;5591:32:2;2749:203:8;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;2575:307:6:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:6;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2895:51:8;2868:18;;1901:40:0;2749:203:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;2895:51:8;2868:18;;7553:32:2;2749:203:8;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:2;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:2;;8106:1;8079:30;;;2895:51:8;2868:18;;8079:30:2;2749:203:8;8031:89:2;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;9682:432::-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;2895:51:8;2868:18;;9836:32:2;2749:203:8;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;2895:51:8;2868:18;;9936:31:2;2749:203:8;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1354:25:8;;1342:2;1327:18;;1208:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6392:4;6398:11;6411:5;6367:50;;-1:-1:-1;;;6367:50:2;;;;;;;;;;:::i;6317:115::-;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1354::8;;1342:2;1327:18;;1208:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:289:8:-;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;:::-;469:53;308:220;-1:-1:-1;;;308:220:8:o;533:173::-;601:20;;-1:-1:-1;;;;;650:31:8;;640:42;;630:70;;696:1;693;686:12;630:70;533:173;;;:::o;711:300::-;779:6;787;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;879:29;898:9;879:29;:::i;:::-;869:39;977:2;962:18;;;;949:32;;-1:-1:-1;;;711:300:8:o;1390:374::-;1467:6;1475;1483;1536:2;1524:9;1515:7;1511:23;1507:32;1504:52;;;1552:1;1549;1542:12;1504:52;1575:29;1594:9;1575:29;:::i;:::-;1565:39;;1623:38;1657:2;1646:9;1642:18;1623:38;:::i;:::-;1390:374;;1613:48;;-1:-1:-1;;;1730:2:8;1715:18;;;;1702:32;;1390:374::o;1958:226::-;2017:6;2070:2;2058:9;2049:7;2045:23;2041:32;2038:52;;;2086:1;2083;2076:12;2038:52;-1:-1:-1;2131:23:8;;1958:226;-1:-1:-1;1958:226:8:o;2189:186::-;2248:6;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;2340:29;2359:9;2340:29;:::i;2380:118::-;2466:5;2459:13;2452:21;2445:5;2442:32;2432:60;;2488:1;2485;2478:12;2503:241;2559:6;2612:2;2600:9;2591:7;2587:23;2583:32;2580:52;;;2628:1;2625;2618:12;2580:52;2667:9;2654:23;2686:28;2708:5;2686:28;:::i;2957:260::-;3025:6;3033;3086:2;3074:9;3065:7;3061:23;3057:32;3054:52;;;3102:1;3099;3092:12;3054:52;3125:29;3144:9;3125:29;:::i;:::-;3115:39;;3173:38;3207:2;3196:9;3192:18;3173:38;:::i;:::-;3163:48;;2957:260;;;;;:::o;3222:380::-;3301:1;3297:12;;;;3344;;;3365:61;;3419:4;3411:6;3407:17;3397:27;;3365:61;3472:2;3464:6;3461:14;3441:18;3438:38;3435:161;;3518:10;3513:3;3509:20;3506:1;3499:31;3553:4;3550:1;3543:15;3581:4;3578:1;3571:15;3435:161;;3222:380;;;:::o;3955:345::-;-1:-1:-1;;;;;4175:32:8;;;;4157:51;;4239:2;4224:18;;4217:34;;;;4282:2;4267:18;;4260:34;4145:2;4130:18;;3955:345::o;4305:127::-;4366:10;4361:3;4357:20;4354:1;4347:31;4397:4;4394:1;4387:15;4421:4;4418:1;4411:15;4437:125;4502:9;;;4523:10;;;4520:36;;;4536:18;;:::i;4846:179::-;4881:3;4923:1;4905:16;4902:23;4899:120;;;4969:1;4966;4963;4948:23;-1:-1:-1;5006:1:8;5000:8;4995:3;4991:18;4899:120;4846:179;:::o;5030:346::-;5140:2;5121:13;;-1:-1:-1;;5117:27:8;5105:40;;5175:18;5160:34;;5196:22;;;5157:62;5154:185;;;5261:10;5256:3;5252:20;5249:1;5242:31;5296:4;5293:1;5286:15;5324:4;5321:1;5314:15;5154:185;5355:2;5348:22;-1:-1:-1;;5030:346:8:o;5381:628::-;5420:3;5462:4;5444:16;5441:26;5438:39;;;5381:628;:::o;5438:39::-;5504:2;5498:9;5544:16;-1:-1:-1;;5540:29:8;5537:1;5498:9;5516:54;5599:4;5593:11;5673:16;5666:4;5658:6;5654:17;5651:39;5630:18;5622:6;5619:30;5616:75;5613:88;;;5694:5;;5381:628;:::o;5613:88::-;5731:6;5725:4;5721:17;5767:3;5761:10;5794:18;5786:6;5783:30;5780:43;;;5816:5;;;;5381:628;:::o;5780:43::-;5881:16;5871:27;;-1:-1:-1;;5867:40:8;5842:16;;;5860:4;5838:27;5835:73;5832:86;;;5911:5;;;;5381:628;:::o;5832:86::-;5927:57;5978:4;5969:6;5961;5957:19;5953:30;5947:4;5927:57;:::i;:::-;-1:-1:-1;6000:3:8;5381:628;-1:-1:-1;;;5381:628:8:o;6014:128::-;6081:9;;;6102:11;;;6099:37;;;6116:18;;:::i;6147:388::-;6381:1;6377;6372:3;6368:11;6364:19;6356:6;6352:32;6341:9;6334:51;6421:6;6416:2;6405:9;6401:18;6394:34;6464:2;6459;6448:9;6444:18;6437:30;6315:4;6484:45;6525:2;6514:9;6510:18;6502:6;6484:45;:::i;:::-;6476:53;6147:388;-1:-1:-1;;;;;6147:388:8:o;6540:512::-;-1:-1:-1;;;;;6798:32:8;;;;6780:51;;6862:2;6847:18;;6840:34;6910:2;6905;6890:18;;6883:30;;;6949:2;6929:18;;;6922:30;-1:-1:-1;;;6983:3:8;6968:19;;6961:49;6818:3;7027:19;;6540:512::o;7716:217::-;7756:1;7782;7772:132;;7826:10;7821:3;7817:20;7814:1;7807:31;7861:4;7858:1;7851:15;7889:4;7886:1;7879:15;7772:132;-1:-1:-1;7918:9:8;;7716:217::o;8973:245::-;9040:6;9093:2;9081:9;9072:7;9068:23;9064:32;9061:52;;;9109:1;9106;9099:12;9061:52;9141:9;9135:16;9160:28;9182:5;9160:28;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1017000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_performBurn(address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24757",
								"balanceOf(address)": "2626",
								"burn(uint256)": "infinite",
								"burnEnabled()": "2354",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "infinite",
								"emergencyRecover(address,address,uint256)": "infinite",
								"factory()": "infinite",
								"factoryMint(address,uint256)": "infinite",
								"gameId()": "infinite",
								"mint(address)": "499",
								"name()": "infinite",
								"owner()": "2364",
								"renounceOwnership()": "infinite",
								"setBurnEnabled(bool)": "27767",
								"symbol()": "infinite",
								"totalBurned()": "2360",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51326",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 919,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 919,
									"end": 949,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 919,
									"end": 949,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 919,
									"end": 949,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 919,
									"end": 949,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 919,
									"end": 949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 919,
									"end": 949,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3226,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3226,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3438,
									"end": 3442,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3444,
									"end": 3450,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3438,
									"end": 3442,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4823,
									"end": 4874,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4796,
									"end": 4814,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4796,
									"end": 4814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3523,
									"end": 3541,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3541,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3545,
									"end": 3546,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3523,
									"end": 3546,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3519,
									"end": 3636,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3636,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F7693C3D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3593,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3569,
									"end": 3625,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3569,
									"end": 3625,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3569,
									"end": 3625,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5097,
									"end": 5148,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5164,
									"end": 5182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5164,
									"end": 5182,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5164,
									"end": 5182,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5157,
									"end": 5187,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5223,
									"end": 5225,
									"name": "PUSH",
									"source": 8,
									"value": "1A"
								},
								{
									"begin": 5203,
									"end": 5221,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5203,
									"end": 5221,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5203,
									"end": 5221,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5196,
									"end": 5226,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5262,
									"end": 5290,
									"name": "PUSH",
									"source": 8,
									"value": "546F6B656E206E616D652063616E6E6F7420626520656D707479000000000000"
								},
								{
									"begin": 5242,
									"end": 5260,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5242,
									"end": 5260,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5242,
									"end": 5260,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5308,
									"end": 5327,
									"name": "PUSH",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 5308,
									"end": 5327,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3569,
									"end": 3625,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4885,
									"end": 5333,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3636,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3519,
									"end": 3636,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3655,
									"end": 3661,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3669,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3674,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3649,
									"end": 3674,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3766,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3645,
									"end": 3766,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F7693C3D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3720,
									"end": 3721,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3697,
									"end": 3755,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3697,
									"end": 3755,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3755,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5601,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 5635,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5617,
									"end": 5635,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5617,
									"end": 5635,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5610,
									"end": 5640,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5610,
									"end": 5640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5610,
									"end": 5640,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5610,
									"end": 5640,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 5656,
									"end": 5674,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5656,
									"end": 5674,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5656,
									"end": 5674,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5649,
									"end": 5679,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5715,
									"end": 5745,
									"name": "PUSH",
									"source": 8,
									"value": "546F6B656E2073796D626F6C2063616E6E6F7420626520656D70747900000000"
								},
								{
									"begin": 5695,
									"end": 5713,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5695,
									"end": 5713,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5695,
									"end": 5713,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5688,
									"end": 5746,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5782,
									"name": "PUSH",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 5763,
									"end": 5782,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3697,
									"end": 3755,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 5338,
									"end": 5788,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3645,
									"end": 3766,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3645,
									"end": 3766,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3779,
									"end": 3798,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3798,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3845,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3775,
									"end": 3845,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3821,
									"end": 3834,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3845,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3775,
									"end": 3845,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3880,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3927,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3854,
									"end": 3927,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 3916,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3927,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3854,
									"end": 3927,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 3954,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3940,
									"end": 3949,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3940,
									"end": 3954,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 3940,
									"end": 3954,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3940,
									"end": 3954,
									"modifierDepth": 2,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 4019,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 4019,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3936,
									"end": 4019,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4008,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "46F4384B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6040,
									"end": 6044,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 6028,
									"end": 6045,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6028,
									"end": 6045,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4008,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3977,
									"end": 4008,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4008,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6010,
									"end": 6046,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4002,
									"end": 4003,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6055,
									"end": 6089,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4007,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6105,
									"end": 6123,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6098,
									"end": 6132,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5983,
									"end": 6001,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5983,
									"end": 6001,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3977,
									"end": 4008,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 5793,
									"end": 6138,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3936,
									"end": 4019,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3936,
									"end": 4019,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4045,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4049,
									"end": 4050,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4032,
									"end": 4050,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4096,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4028,
									"end": 4096,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F2A2005"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4085,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4096,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4028,
									"end": 4096,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4126,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4109,
									"end": 4126,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4109,
									"end": 4114,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4109,
									"end": 4126,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4109,
									"end": 4126,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4220,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4105,
									"end": 4220,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313B9AA1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6347,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4149,
									"end": 4209,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4149,
									"end": 4209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4149,
									"end": 4209,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6348,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6384,
									"end": 6386,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6364,
									"end": 6382,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6364,
									"end": 6382,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6364,
									"end": 6382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6357,
									"end": 6387,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6423,
									"end": 6457,
									"name": "PUSH",
									"source": 8,
									"value": "4F776E657220616E6420666163746F72792063616E6E6F742062652074686520"
								},
								{
									"begin": 6403,
									"end": 6421,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6403,
									"end": 6421,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6403,
									"end": 6421,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6458,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73616D65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6474,
									"end": 6492,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6474,
									"end": 6492,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6492,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6467,
									"end": 6501,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6518,
									"end": 6537,
									"name": "PUSH",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 6518,
									"end": 6537,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4149,
									"end": 4209,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6143,
									"end": 6543,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4105,
									"end": 4220,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4105,
									"end": 4220,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4259,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4238,
									"end": 4259,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4259,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4259,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4238,
									"end": 4259,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4287,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4287,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4313,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 4297,
									"end": 4313,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4313,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4444,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4423,
									"end": 4428,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4430,
									"end": 4443,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4422,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4417,
									"end": 4444,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4444,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4417,
									"end": 4444,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4454,
									"end": 4474,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4454,
									"end": 4481,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4454,
									"end": 4481,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4454,
									"end": 4481,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4454,
									"end": 4481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4454,
									"end": 4481,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4454,
									"end": 4481,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4454,
									"end": 4481,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4823,
									"end": 4874,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4796,
									"end": 4814,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4796,
									"end": 4814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 4677,
									"end": 4880,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6995,
									"end": 7027,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6995,
									"end": 7027,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 7028,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7044,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7044,
									"end": 7062,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7044,
									"end": 7062,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7037,
									"end": 7071,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7037,
									"end": 7071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7037,
									"end": 7071,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7087,
									"end": 7105,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7087,
									"end": 7105,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7087,
									"end": 7105,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7080,
									"end": 7114,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7080,
									"end": 7114,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7080,
									"end": 7114,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6950,
									"end": 6968,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6950,
									"end": 6968,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 6775,
									"end": 7120,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7271,
									"end": 7296,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7271,
									"end": 7296,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7259,
									"end": 7261,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7244,
									"end": 7262,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7244,
									"end": 7262,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7125,
									"end": 7302,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 953,
									"end": 966,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 953,
									"end": 966,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1026,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 995,
									"end": 1026,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1027,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1027,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1043,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1204,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1206,
									"end": 1212,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1228,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 1252,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1299,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1287,
									"end": 1296,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1285,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1274,
									"end": 1297,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1270,
									"end": 1303,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1320,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1320,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1267,
									"end": 1320,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1313,
									"end": 1314,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1318,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1320,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1267,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1359,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1359,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1371,
									"end": 1401,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1371,
									"end": 1401,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1368,
									"end": 1418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1368,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1368,
									"end": 1418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1416,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1368,
									"end": 1418,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1368,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1490,
									"end": 1497,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1481,
									"end": 1487,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1479,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 1466,
									"end": 1488,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1437,
									"end": 1498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1498,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1437,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1547,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1547,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1523,
									"end": 1548,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1427,
									"end": 1498,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1427,
									"end": 1498,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1523,
									"end": 1548,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1560,
									"end": 1592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1560,
									"end": 1592,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1557,
									"end": 1609,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1557,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1557,
									"end": 1609,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1603,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1607,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1557,
									"end": 1609,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1557,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1628,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1683,
									"end": 1690,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1680,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1661,
									"end": 1670,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 1657,
									"end": 1681,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1628,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1628,
									"end": 1691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1628,
									"end": 1691,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1628,
									"end": 1691,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1618,
									"end": 1691,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 1618,
									"end": 1691,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1618,
									"end": 1691,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1734,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1723,
									"end": 1732,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1719,
									"end": 1737,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1713,
									"end": 1738,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1782,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1771,
									"end": 1776,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1783,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1760,
									"end": 1765,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1757,
									"end": 1784,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1747,
									"end": 1802,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1747,
									"end": 1802,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1799,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1795,
									"end": 1796,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1788,
									"end": 1800,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1747,
									"end": 1802,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1747,
									"end": 1802,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1892,
									"end": 1894,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1877,
									"end": 1895,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1877,
									"end": 1895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1896,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1826,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1826,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1871,
									"end": 1896,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1941,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1986,
									"end": 1989,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1971,
									"end": 1990,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1971,
									"end": 1990,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1941,
									"end": 1991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 1991,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1941,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 1991,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 1991,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 2055,
									"end": 2058,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2044,
									"end": 2053,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 2040,
									"end": 2059,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2010,
									"end": 2060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2060,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 2010,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2000,
									"end": 2060,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2000,
									"end": 2060,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2084,
									"end": 2085,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2129,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 2115,
									"end": 2124,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2130,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2105,
									"end": 2131,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2094,
									"end": 2131,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2094,
									"end": 2131,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2157,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2157,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2157,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 2163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2548,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2168,
									"end": 2548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2247,
									"end": 2248,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2243,
									"end": 2255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2255,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2243,
									"end": 2255,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2302,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2311,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2311,
									"end": 2372,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2365,
									"end": 2369,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2357,
									"end": 2363,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2370,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2370,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2370,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2311,
									"end": 2372,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2311,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2420,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2410,
									"end": 2416,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2421,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2422,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2542,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2381,
									"end": 2542,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2464,
									"end": 2474,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2459,
									"end": 2462,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2455,
									"end": 2475,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2452,
									"end": 2453,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2445,
									"end": 2476,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2499,
									"end": 2503,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2496,
									"end": 2497,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2489,
									"end": 2504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2527,
									"end": 2531,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 2532,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2542,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2381,
									"end": 2542,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2548,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2168,
									"end": 2548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3197,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2679,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2783,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2776,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2773,
									"end": 2784,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2770,
									"end": 3191,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2770,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2770,
									"end": 3191,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2823,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2861,
									"end": 2865,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2858,
									"end": 2859,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2848,
									"end": 2866,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2931,
									"end": 2933,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2919,
									"end": 2929,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2915,
									"end": 2934,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 2913,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2908,
									"end": 2935,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2902,
									"end": 2906,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2898,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2952,
									"end": 2972,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2996,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2996,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2949,
									"end": 2996,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2990,
									"end": 2994,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2996,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2949,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3045,
									"end": 3047,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3040,
									"end": 3043,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3029,
									"end": 3049,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3027,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3019,
									"end": 3050,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3009,
									"end": 3050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3009,
									"end": 3050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3118,
									"end": 3120,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3111,
									"end": 3116,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3108,
									"end": 3121,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3178,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3163,
									"end": 3179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3163,
									"end": 3179,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3145,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3133,
									"end": 3146,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3100,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3104,
									"end": 3107,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3104,
									"end": 3107,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2770,
									"end": 3191,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2770,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3197,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3373,
									"end": 4672,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3373,
									"end": 4672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3503,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3503,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3515,
									"end": 3545,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3515,
									"end": 3545,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3512,
									"end": 3568,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3512,
									"end": 3568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3512,
									"end": 3568,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3548,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3548,
									"end": 3566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3566,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3548,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3577,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3627,
									"end": 3665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3659,
									"end": 3663,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3653,
									"end": 3664,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3627,
									"end": 3665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3627,
									"end": 3665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3627,
									"end": 3665,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3627,
									"end": 3665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3621,
									"end": 3625,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3577,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3577,
									"end": 3674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3577,
									"end": 3674,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3577,
									"end": 3674,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3723,
									"end": 3727,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3754,
									"end": 3756,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3743,
									"end": 3757,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3757,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4459,
									"end": 4460,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4476,
									"end": 4482,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4562,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4473,
									"end": 4562,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4528,
									"end": 4547,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4528,
									"end": 4547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4528,
									"end": 4547,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4522,
									"end": 4548,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4562,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4473,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3330,
									"end": 3331,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3326,
									"end": 3337,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3326,
									"end": 3337,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3326,
									"end": 3337,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3322,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3318,
									"end": 3347,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3308,
									"end": 3348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3354,
									"end": 3355,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3350,
									"end": 3361,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3361,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3361,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3305,
									"end": 3362,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4575,
									"end": 4656,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4575,
									"end": 4656,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3736,
									"end": 4666,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3736,
									"end": 4666,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3766,
									"end": 4415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2619,
									"end": 2633,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2619,
									"end": 2633,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2619,
									"end": 2633,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2663,
									"end": 2667,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2668,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3802,
									"end": 3822,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3802,
									"end": 3822,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3802,
									"end": 3822,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3934,
									"end": 3941,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3931,
									"end": 3932,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 3942,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4016,
									"end": 4035,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4016,
									"end": 4035,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4016,
									"end": 4035,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4010,
									"end": 4036,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3995,
									"end": 4037,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3995,
									"end": 4037,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4127,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4108,
									"end": 4128,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4108,
									"end": 4128,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4108,
									"end": 4128,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4108,
									"end": 4128,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4076,
									"end": 4077,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4064,
									"end": 4078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4078,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4078,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4064,
									"end": 4078,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3962,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3920,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3924,
									"end": 3927,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4170,
									"end": 4176,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4158,
									"end": 4177,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4155,
									"end": 4356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4231,
									"end": 4250,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4231,
									"end": 4250,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4231,
									"end": 4250,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4225,
									"end": 4251,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4314,
									"end": 4315,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4310,
									"end": 4324,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4310,
									"end": 4324,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4310,
									"end": 4324,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4326,
									"end": 4329,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 4306,
									"end": 4330,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4339,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4298,
									"end": 4340,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4283,
									"end": 4341,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4268,
									"end": 4342,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4268,
									"end": 4342,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4356,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4155,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4402,
									"end": 4403,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4386,
									"end": 4400,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4386,
									"end": 4400,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4386,
									"end": 4400,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4382,
									"end": 4404,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4369,
									"end": 4405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4369,
									"end": 4405,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3373,
									"end": 4672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6613,
									"end": 6622,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6613,
									"end": 6622,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6613,
									"end": 6622,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6644,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6644,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6644,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6631,
									"end": 6764,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6631,
									"end": 6764,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 6631,
									"end": 6764,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6686,
									"end": 6696,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 6681,
									"end": 6684,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6677,
									"end": 6697,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 6674,
									"end": 6675,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6667,
									"end": 6698,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6725,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 6718,
									"end": 6719,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6711,
									"end": 6726,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6749,
									"end": 6753,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 6746,
									"end": 6747,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6739,
									"end": 6754,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6631,
									"end": 6764,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 6631,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6548,
									"end": 6770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7125,
									"end": 7302,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 7125,
									"end": 7302,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1021"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1019"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1017"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 9590,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9c7ae96297410fef143e8be3c9db06b71d4b72f344f43926a1b795f4ae75be264736f6c634300081e0033",
									".code": [
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "7B2C835F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "C45A0155"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "C45A0155"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "D7C81B55"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "D89135CD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "F658F32A"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "7B2C835F"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A4F0ECD3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "AD1329D1"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "5DC96D16"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "6A627842"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 9590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1016,
											"end": 1203,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4546,
											"end": 4636,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4546,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4636,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4636,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1017"
										},
										{
											"begin": 1929,
											"end": 1946,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1901,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1769,
											"end": 1953,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 6905,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6905,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 919,
											"end": 949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 919,
											"end": 949,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 919,
											"end": 949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 919,
											"end": 949,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 919,
											"end": 949,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 9487,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 9487,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4871,
											"end": 6515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4871,
											"end": 6515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8075,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8075,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2913,
											"end": 2945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9094,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9094,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 8450,
											"end": 8930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8450,
											"end": 8930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 651,
											"end": 683,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 651,
											"end": 683,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 734,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 734,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 734,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 734,
											"end": 765,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1021"
										},
										{
											"begin": 734,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 734,
											"end": 765,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 851,
											"end": 877,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 851,
											"end": 877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 851,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 851,
											"end": 877,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 851,
											"end": 877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 851,
											"end": 877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 851,
											"end": 877,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 6606,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 6606,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EB8953F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3812,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109D5C9B9A5B99C81A5CC8191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3093,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7020,
											"end": 7026,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7077,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7016,
											"end": 7077,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7066,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7077,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7016,
											"end": 7077,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7137,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7114,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7258,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7148,
											"end": 7258,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7225,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7246,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DB42144D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7247,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7195,
											"end": 7247,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7148,
											"end": 7258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7345,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7335,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7324,
											"end": 7335,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7324,
											"end": 7345,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7324,
											"end": 7345,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B2C7995"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7386,
											"end": 7396,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7372,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "F658F32A"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7368,
											"end": 7405,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7364,
											"end": 7883,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A0"
										},
										{
											"begin": 7364,
											"end": 7883,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7364,
											"end": 7883,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7607,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7586,
											"end": 7597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7586,
											"end": 7607,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7586,
											"end": 7607,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7607,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7628,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7628,
											"end": 7678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7661,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7669,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7628,
											"end": 7678,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7628,
											"end": 7678,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7781,
											"end": 7787,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7766,
											"end": 7777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7766,
											"end": 7787,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7766,
											"end": 7787,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7787,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7808,
											"end": 7872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7841,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7808,
											"end": 7872,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7872,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7808,
											"end": 7872,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7364,
											"end": 7883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7458,
											"end": 7469,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7448,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "CCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00"
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7425,
											"end": 7470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7305,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7470,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 7889,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 7889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 7889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 9487,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 7553,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7524,
											"end": 7554,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7624,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E742064697361626C65643A2075736520666163746F727920746F206C6F"
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7625,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636B20585"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7686,
											"end": 7705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7310,
											"end": 7711,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5936416F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3031,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3098,
											"end": 3109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3093,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EB8953F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3809,
											"end": 3811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3153,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3812,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3821,
											"end": 3851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109D5C9B9A5B99C81A5CC8191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3607,
											"end": 3950,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3093,
											"end": 3153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5075,
											"modifierDepth": 3,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5122,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5053,
											"end": 5122,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5111,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5122,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5053,
											"end": 5122,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5141,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5145,
											"end": 5146,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5146,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5192,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5131,
											"end": 5192,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5192,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5131,
											"end": 5192,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5210,
											"end": 5229,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5281,
											"modifierDepth": 3,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5361,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5361,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5257,
											"end": 5361,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5328,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5336,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5349,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DB42144D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5304,
											"end": 5350,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5361,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5257,
											"end": 5361,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5459,
											"end": 5465,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5481,
											"modifierDepth": 3,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5558,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5558,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5455,
											"end": 5558,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5531,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5546,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5533,
											"end": 5546,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5533,
											"end": 5546,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1EE970CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5547,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5547,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7057,
											"end": 7305,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5455,
											"end": 5558,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5455,
											"end": 5558,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5694,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5715,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5697,
											"end": 5710,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5710,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5697,
											"end": 5710,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5697,
											"end": 5715,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5697,
											"end": 5715,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5715,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5715,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5775,
											"end": 5787,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5772,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5787,
											"modifierDepth": 3,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5886,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5886,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5762,
											"end": 5886,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5828,
											"end": 5834,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33BE48F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5810,
											"end": 5875,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8150,
											"end": 8175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8213,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8206,
											"end": 8208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8214,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8230,
											"end": 8248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8323,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D6178696D756D206275726E20706572207472616E736163"
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8269,
											"end": 8287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8262,
											"end": 8324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8355,
											"end": 8358,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8340,
											"end": 8359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8368,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8400,
											"end": 8403,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8385,
											"end": 8404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 8404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8410,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5762,
											"end": 5886,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5762,
											"end": 5886,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 5995,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5985,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5974,
											"end": 5985,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5974,
											"end": 5995,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5974,
											"end": 5995,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5995,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B2C7995"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6022,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6035,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "F658F32A"
										},
										{
											"begin": 6018,
											"end": 6035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6018,
											"end": 6049,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6014,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A0"
										},
										{
											"begin": 6014,
											"end": 6509,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6014,
											"end": 6509,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6245,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6224,
											"end": 6235,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6224,
											"end": 6245,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6224,
											"end": 6245,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6245,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6310,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6266,
											"end": 6310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6301,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6309,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6310,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6310,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6266,
											"end": 6310,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6419,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6409,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6398,
											"end": 6409,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6398,
											"end": 6419,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6398,
											"end": 6419,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6419,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6440,
											"end": 6498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E764BC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6440,
											"end": 6498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6440,
											"end": 6498,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 6498,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6440,
											"end": 6498,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6014,
											"end": 6509,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "CCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00"
										},
										{
											"begin": 6088,
											"end": 6094,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6107,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6096,
											"end": 6107,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7231,
											"end": 7256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7057,
											"end": 7305,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6108,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5006,
											"end": 6515,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5006,
											"end": 6515,
											"modifierDepth": 3,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 6515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8142,
											"end": 8153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8142,
											"end": 8163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8163,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8204,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD"
										},
										{
											"begin": 8178,
											"end": 8204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8204,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9094,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2982,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1019"
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5936416F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3031,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2968,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9309,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9319,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 9303,
											"end": 9320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8582,
											"end": 8598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8578,
											"end": 8620,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8620,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8578,
											"end": 8620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8643,
											"end": 8662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8724,
											"end": 8740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8748,
											"end": 8754,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8773,
											"end": 8812,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8773,
											"end": 8812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8812,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8773,
											"end": 8812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8846,
											"end": 8864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8839,
											"end": 8869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8878,
											"end": 8927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8944,
											"end": 8962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8625,
											"end": 8968,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8773,
											"end": 8812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8879,
											"end": 8913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4801,
											"end": 4835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8879,
											"end": 8901,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 8879,
											"end": 8901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4714,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8879,
											"end": 8913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8639,
											"end": 8924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6711,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6712,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E481CD95B198B58D85B1B08185B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9476,
											"end": 9528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 9223,
											"end": 9569,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 6749,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2868,
											"end": 2886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2749,
											"end": 2952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1385,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 177,
											"end": 183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 168,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 159,
											"end": 175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 150,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 143,
											"end": 157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 137,
											"end": 184,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 208,
											"end": 211,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 204,
											"end": 220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 200,
											"end": 227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 193,
											"end": 231,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 288,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 264,
											"end": 279,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 260,
											"end": 289,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 251,
											"end": 290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 247,
											"end": 297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 240,
											"end": 297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 308,
											"end": 528,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 308,
											"end": 528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 477,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 477,
											"end": 522,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 469,
											"end": 522,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 308,
											"end": 528,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 308,
											"end": 528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 533,
											"end": 706,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 533,
											"end": 706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 601,
											"end": 621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 601,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 650,
											"end": 681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 640,
											"end": 682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 640,
											"end": 682,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 630,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 698,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 630,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 533,
											"end": 706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 533,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 779,
											"end": 785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 815,
											"end": 838,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 811,
											"end": 843,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 808,
											"end": 860,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 879,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 879,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 879,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 869,
											"end": 908,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 981,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 711,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1534,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1504,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1594,
											"end": 1603,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1575,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1575,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1623,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 1623,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1764,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1613,
											"end": 1661,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 2184,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1958,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2058,
											"end": 2067,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2056,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2068,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2073,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2038,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 2184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 2184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2375,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2189,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2299,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2272,
											"end": 2304,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2319,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2269,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2340,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2498,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2380,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2472,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2473,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2474,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2432,
											"end": 2492,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2744,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2503,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2610,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2583,
											"end": 2615,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2632,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2580,
											"end": 2632,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2632,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2580,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 2708,
											"end": 2713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2686,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3072,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3061,
											"end": 3084,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3125,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3207,
											"end": 3209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3173,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3173,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3602,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3222,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3423,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3407,
											"end": 3424,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3365,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3474,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3476,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3435,
											"end": 3596,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3528,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3509,
											"end": 3529,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3543,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3586,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3596,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3435,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3602,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 4300,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3955,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4208,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4251,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4432,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4305,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4357,
											"end": 4377,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4354,
											"end": 4355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4387,
											"end": 4402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4426,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4562,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4437,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4533,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4520,
											"end": 4556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4536,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4536,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4846,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4905,
											"end": 4921,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 5019,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4899,
											"end": 5019,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5008,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 4998,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 5019,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4899,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 5025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5376,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5030,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5121,
											"end": 5134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5193,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5160,
											"end": 5194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5194,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5219,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 5154,
											"end": 5339,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5271,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5256,
											"end": 5259,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5300,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5293,
											"end": 5294,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5286,
											"end": 5301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5154,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 5154,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5348,
											"end": 5370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5420,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5444,
											"end": 5460,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5467,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 5438,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5506,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5560,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5538,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5570,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5603,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 5604,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5689,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5690,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5619,
											"end": 5649,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5691,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5701,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5613,
											"end": 5701,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5701,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 5613,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5731,
											"end": 5737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5725,
											"end": 5729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5721,
											"end": 5738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5767,
											"end": 5770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5771,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5786,
											"end": 5792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5780,
											"end": 5823,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5823,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5780,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5898,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5838,
											"end": 5865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5908,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 5832,
											"end": 5918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5918,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 5832,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5961,
											"end": 5967,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 5983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5947,
											"end": 5951,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5927,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5927,
											"end": 5984,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 5927,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 6009,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5381,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6014,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6113,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6136,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6099,
											"end": 6136,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6116,
											"end": 6134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6535,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6147,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6372,
											"end": 6375,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6383,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6352,
											"end": 6384,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6334,
											"end": 6385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6416,
											"end": 6418,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6401,
											"end": 6419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6394,
											"end": 6428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6464,
											"end": 6466,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6459,
											"end": 6461,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 6525,
											"end": 6527,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6508,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6484,
											"end": 6529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6529,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 6484,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6476,
											"end": 6529,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6535,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6147,
											"end": 6535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7052,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 6540,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6798,
											"end": 6830,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6798,
											"end": 6830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6798,
											"end": 6830,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6798,
											"end": 6830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6949,
											"end": 6951,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 6952,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB735B737BBB710313AB9371032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 7010,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6821,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7027,
											"end": 7046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7027,
											"end": 7046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6540,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7716,
											"end": 7933,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7716,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 7757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7772,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 7772,
											"end": 7904,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7817,
											"end": 7837,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7838,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7866,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 7893,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7894,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7772,
											"end": 7904,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 7772,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7716,
											"end": 7933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8973,
											"end": 9218,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 8973,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9081,
											"end": 9090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9072,
											"end": 9079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9096,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9111,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 9182,
											"end": 9187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 9160,
											"end": 9188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"GameToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_performBurn(address,uint256)": "f658f32a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnEnabled()": "5dc96d16",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"emergencyRecover(address,address,uint256)": "ad1329d1",
							"factory()": "c45a0155",
							"factoryMint(address,uint256)": "a4f0ecd3",
							"gameId()": "d7c81b55",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBurnEnabled(bool)": "7b2c835f",
							"symbol()": "95d89b41",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BurnDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BurningOperationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllowed\",\"type\":\"uint256\"}],\"name\":\"ExcessiveBurnRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameTokenInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provided\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidBurnAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidContractState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidGameOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"InvalidRecoveryTarget\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"MathOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"operation\",\"type\":\"string\"}],\"name\":\"MathUnderflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"MintingDisabledAfterInit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RecoveryFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"RecoveryNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyDetected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferOperationFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"UnauthorizedBurner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedFactory\",\"type\":\"address\"}],\"name\":\"UnauthorizedFactory\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedOwner\",\"type\":\"address\"}],\"name\":\"UnauthorizedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BurnStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBurned\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_performBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRecover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"factoryMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setBurnEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optimized ERC-20 game token with enhanced security Each game gets its own instance of this contract Optimized for gas efficiency while maintaining security\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_performBurn(address,uint256)\":{\"details\":\"Internal burn function for error handling separation\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Allow users to burn their own tokens directly\",\"params\":{\"amount\":\"Amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burn tokens from a specific account (called by factory)\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyRecover(address,address,uint256)\":{\"details\":\"Emergency function to recover stuck tokens\",\"params\":{\"amount\":\"Amount to recover\",\"to\":\"Address to send recovered tokens\",\"token\":\"Address of token to recover (address(0) for ETH)\"}},\"factoryMint(address,uint256)\":{\"details\":\"Restricted mint function - only callable by factory This ensures tokens can only be created when XP is properly locked\"},\"mint(address)\":{\"details\":\"Block any attempts to call mint functions directly Prevents manual token creation outside the XP locking mechanism\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBurnEnabled(bool)\":{\"details\":\"Enable/disable burning (emergency control)\",\"params\":{\"enabled\":\"Whether burning should be enabled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GameToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GameToken.sol\":\"GameToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"GameToken.sol\":{\"keccak256\":\"0xe371f18de6e87ce61b0be308231db4010946854d6348d027e0ade10ae9fc610c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7987e640f7f674e858935fe5923d92473cf594db753c755b0f108977eac0894e\",\"dweb:/ipfs/QmSxWoLU2MdF8aRKAxuZQQ8269qywUkJocwnDuqAhCvKxA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "GameToken.sol:GameToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "GameToken.sol:GameToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "GameToken.sol:GameToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "GameToken.sol:GameToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "GameToken.sol:GameToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "GameToken.sol:GameToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "GameToken.sol:GameToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1023,
								"contract": "GameToken.sol:GameToken",
								"label": "totalBurned",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1026,
								"contract": "GameToken.sol:GameToken",
								"label": "burnEnabled",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 1028,
								"contract": "GameToken.sol:GameToken",
								"label": "_initialMintComplete",
								"offset": 1,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 939,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1818:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1864:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 944,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1002,
									"src": "1907:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 947,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"src": "1994:37:6"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "2051:38:6",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "2071:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:6"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:6"
									},
									"scope": 1002,
									"src": "2037:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2490:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2500:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:6"
											},
											{
												"id": 961,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 962,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2542:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 966,
									"name": "nonReentrant",
									"nameLocation": "2475:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:6"
									},
									"src": "2466:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2614:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2702:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 970,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "2698:86:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "2722:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 972,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2743:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "2736:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:6"
									},
									"scope": 1002,
									"src": "2575:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2926:170:6",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "3078:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:6"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:6"
									},
									"scope": 1002,
									"src": "2888:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3339:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 997,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 995,
												"id": 999,
												"nodeType": "Return",
												"src": "3349:25:6"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3333:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:6"
									},
									"scope": 1002,
									"src": "3275:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1003,
							"src": "1030:2353:6",
							"usedErrors": [
								947
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:6"
				},
				"id": 6
			},
			"GameToken.sol": {
				"ast": {
					"absolutePath": "GameToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"GameToken": [
							1661
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1002
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 878,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 148,
							"src": "171:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1008,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 1003,
							"src": "224:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1010,
										"name": "ERC20",
										"nameLocations": [
											"505:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "505:5:7"
									},
									"id": 1011,
									"nodeType": "InheritanceSpecifier",
									"src": "505:5:7"
								},
								{
									"baseName": {
										"id": 1012,
										"name": "Ownable",
										"nameLocations": [
											"512:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "512:7:7"
									},
									"id": 1013,
									"nodeType": "InheritanceSpecifier",
									"src": "512:7:7"
								},
								{
									"baseName": {
										"id": 1014,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"521:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "521:15:7"
									},
									"id": 1015,
									"nodeType": "InheritanceSpecifier",
									"src": "521:15:7"
								}
							],
							"canonicalName": "GameToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1009,
								"nodeType": "StructuredDocumentation",
								"src": "285:197:7",
								"text": " @title GameToken\n @dev Optimized ERC-20 game token with enhanced security\n Each game gets its own instance of this contract\n Optimized for gas efficiency while maintaining security"
							},
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661,
								1002,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "GameToken",
							"nameLocation": "492:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1017,
									"mutability": "immutable",
									"name": "_decimals",
									"nameLocation": "636:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "612:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1016,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "612:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 1019,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "676:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "651:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7c81b55",
									"id": 1021,
									"mutability": "immutable",
									"name": "gameId",
									"nameLocation": "759:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "734:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 1023,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "866:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "851:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dc96d16",
									"id": 1026,
									"mutability": "mutable",
									"name": "burnEnabled",
									"nameLocation": "931:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "919:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1024,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "919:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "945:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1028,
									"mutability": "mutable",
									"name": "_initialMintComplete",
									"nameLocation": "1112:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "1099:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1027,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1099:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00",
									"id": 1036,
									"name": "TokensBurned",
									"nameLocation": "1189:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1218:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1202:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1224:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalBurned",
												"nameLocation": "1248:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1240:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:59:7"
									},
									"src": "1183:78:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd",
									"id": 1040,
									"name": "BurnStatusChanged",
									"nameLocation": "1272:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1295:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1290:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:14:7"
									},
									"src": "1266:38:7"
								},
								{
									"errorSelector": "1f2a2005",
									"id": 1042,
									"name": "ZeroAmount",
									"nameLocation": "1416:10:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1426:2:7"
									},
									"src": "1410:19:7"
								},
								{
									"errorSelector": "d92e233d",
									"id": 1044,
									"name": "ZeroAddress",
									"nameLocation": "1440:11:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:2:7"
									},
									"src": "1434:20:7"
								},
								{
									"errorSelector": "f7693c3d",
									"id": 1050,
									"name": "InvalidAddress",
									"nameLocation": "1465:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "provided",
												"nameLocation": "1488:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1505:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1498:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1498:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:33:7"
									},
									"src": "1459:54:7"
								},
								{
									"errorSelector": "46f4384b",
									"id": 1058,
									"name": "InvalidAmount",
									"nameLocation": "1524:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "provided",
												"nameLocation": "1546:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1538:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "1564:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1556:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "1577:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "1569:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:44:7"
									},
									"src": "1518:64:7"
								},
								{
									"errorSelector": "81ca561d",
									"id": 1064,
									"name": "UnauthorizedFactory",
									"nameLocation": "1627:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1655:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1647:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "expectedFactory",
												"nameLocation": "1671:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1663:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:41:7"
									},
									"src": "1621:67:7"
								},
								{
									"errorSelector": "ccc65e39",
									"id": 1070,
									"name": "UnauthorizedOwner",
									"nameLocation": "1699:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1725:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1717:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "expectedOwner",
												"nameLocation": "1741:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1733:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:39:7"
									},
									"src": "1693:63:7"
								},
								{
									"errorSelector": "5936416f",
									"id": 1074,
									"name": "UnauthorizedBurner",
									"nameLocation": "1767:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:16:7"
									},
									"src": "1761:41:7"
								},
								{
									"errorSelector": "0eb8953f",
									"id": 1078,
									"name": "BurnDisabled",
									"nameLocation": "1847:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1867:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1860:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1860:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:15:7"
									},
									"src": "1841:34:7"
								},
								{
									"errorSelector": "ab35696f",
									"id": 1080,
									"name": "ContractPaused",
									"nameLocation": "1886:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:2:7"
									},
									"src": "1880:23:7"
								},
								{
									"errorSelector": "c4ee6a84",
									"id": 1084,
									"name": "InvalidContractState",
									"nameLocation": "1914:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1942:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1935:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1081,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1935:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:15:7"
									},
									"src": "1908:42:7"
								},
								{
									"errorSelector": "c5f2be51",
									"id": 1086,
									"name": "ReentrancyDetected",
									"nameLocation": "1961:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1979:2:7"
									},
									"src": "1955:27:7"
								},
								{
									"errorSelector": "db42144d",
									"id": 1094,
									"name": "InsufficientBalance",
									"nameLocation": "2031:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2059:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2051:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2051:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "required",
												"nameLocation": "2076:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2068:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "2094:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2086:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:54:7"
									},
									"src": "2025:80:7"
								},
								{
									"errorSelector": "f74b8668",
									"id": 1100,
									"name": "ExcessiveBurnRequest",
									"nameLocation": "2116:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "2145:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2137:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "maxAllowed",
												"nameLocation": "2164:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2156:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:39:7"
									},
									"src": "2110:66:7"
								},
								{
									"errorSelector": "cef923d4",
									"id": 1106,
									"name": "InvalidBurnAmount",
									"nameLocation": "2187:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2228:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2221:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2221:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:31:7"
									},
									"src": "2181:55:7"
								},
								{
									"errorSelector": "07d020c3",
									"id": 1110,
									"name": "MintingDisabledAfterInit",
									"nameLocation": "2281:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2313:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2306:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2305:15:7"
									},
									"src": "2275:46:7"
								},
								{
									"errorSelector": "f3b25e28",
									"id": 1118,
									"name": "BurningOperationFailed",
									"nameLocation": "2332:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2363:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2355:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2377:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2369:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2392:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2385:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:45:7"
									},
									"src": "2326:74:7"
								},
								{
									"errorSelector": "b2288a63",
									"id": 1126,
									"name": "TransferOperationFailed",
									"nameLocation": "2411:23:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2443:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2435:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2457:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2449:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2469:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2461:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:42:7"
									},
									"src": "2405:72:7"
								},
								{
									"errorSelector": "1678774c",
									"id": 1130,
									"name": "GameTokenInactive",
									"nameLocation": "2488:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:16:7"
									},
									"src": "2482:40:7"
								},
								{
									"errorSelector": "80059ab4",
									"id": 1136,
									"name": "InvalidGameOperation",
									"nameLocation": "2533:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2561:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2554:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2554:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2579:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2572:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2572:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2553:33:7"
									},
									"src": "2527:60:7"
								},
								{
									"errorSelector": "01f0b138",
									"id": 1140,
									"name": "MathOverflow",
									"nameLocation": "2630:12:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2650:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2643:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2643:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2642:18:7"
									},
									"src": "2624:37:7"
								},
								{
									"errorSelector": "7d752677",
									"id": 1144,
									"name": "MathUnderflow",
									"nameLocation": "2672:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2686:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2686:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:18:7"
									},
									"src": "2666:38:7"
								},
								{
									"errorSelector": "5a9443cc",
									"id": 1150,
									"name": "RecoveryFailed",
									"nameLocation": "2743:14:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2766:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2758:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2780:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2773:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2773:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:30:7"
									},
									"src": "2737:51:7"
								},
								{
									"errorSelector": "eb169525",
									"id": 1154,
									"name": "InvalidRecoveryTarget",
									"nameLocation": "2799:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2829:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2821:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:16:7"
									},
									"src": "2793:44:7"
								},
								{
									"errorSelector": "409dfd75",
									"id": 1158,
									"name": "RecoveryNotAllowed",
									"nameLocation": "2848:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2874:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2867:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2867:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2866:15:7"
									},
									"src": "2842:40:7"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "2958:92:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1160,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2972:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2976:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2972:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1162,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2972:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "2968:64:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1165,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3021:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3025:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3021:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1164,
															"name": "UnauthorizedBurner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "3002:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3002:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1168,
													"nodeType": "RevertStatement",
													"src": "2995:37:7"
												}
											},
											{
												"id": 1170,
												"nodeType": "PlaceholderStatement",
												"src": "3042:1:7"
											}
										]
									},
									"id": 1172,
									"name": "onlyFactory",
									"nameLocation": "2944:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2955:2:7"
									},
									"src": "2935:115:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "3083:88:7",
										"statements": [
											{
												"condition": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3097:12:7",
													"subExpression": {
														"id": 1174,
														"name": "burnEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3098:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "3093:60:7",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"hexValue": "4275726e696e672069732064697361626c6564",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3131:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01",
																	"typeString": "literal_string \"Burning is disabled\""
																},
																"value": "Burning is disabled"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_86064265d5763d304edaafa817aef2fa82b83991ed3938ed38700de88d9e3c01",
																	"typeString": "literal_string \"Burning is disabled\""
																}
															],
															"id": 1176,
															"name": "BurnDisabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "3118:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																"typeString": "function (string memory) pure returns (error)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3118:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1179,
													"nodeType": "RevertStatement",
													"src": "3111:42:7"
												}
											},
											{
												"id": 1181,
												"nodeType": "PlaceholderStatement",
												"src": "3163:1:7"
											}
										]
									},
									"id": 1183,
									"name": "burnAllowed",
									"nameLocation": "3069:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3080:2:7"
									},
									"src": "3060:111:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "3467:1021:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "3529:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3523:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3523:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3535:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3523:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3545:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3523:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "3519:117:7",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "3548:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3592:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3584:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3584:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3584:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "546f6b656e206e616d652063616e6e6f7420626520656d707479",
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3596:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9",
																			"typeString": "literal_string \"Token name cannot be empty\""
																		},
																		"value": "Token name cannot be empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b77b0f33eded65d9b0a0d899300043137cfceb0094d8cc1a47d96701936113a9",
																			"typeString": "literal_string \"Token name cannot be empty\""
																		}
																	],
																	"id": 1214,
																	"name": "InvalidAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "3569:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (address,string memory) pure returns (error)"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3569:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1221,
															"nodeType": "RevertStatement",
															"src": "3562:63:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1226,
																	"name": "symbol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "3655:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3649:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3649:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3649:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3663:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3649:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3673:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3649:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "3645:121:7",
												"trueBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "3676:90:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3720:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3712:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1232,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3712:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3712:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "546f6b656e2073796d626f6c2063616e6e6f7420626520656d707479",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3724:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6",
																			"typeString": "literal_string \"Token symbol cannot be empty\""
																		},
																		"value": "Token symbol cannot be empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_24b5e1bd765b1cbac9a76fb3de9b99d10df37c7317022ef5a48831438e59bbf6",
																			"typeString": "literal_string \"Token symbol cannot be empty\""
																		}
																	],
																	"id": 1231,
																	"name": "InvalidAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "3697:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (address,string memory) pure returns (error)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3697:58:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1238,
															"nodeType": "RevertStatement",
															"src": "3690:65:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3779:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3796:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3788:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3788:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3779:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "3775:70:7",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "3800:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1247,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3821:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3821:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1249,
															"nodeType": "RevertStatement",
															"src": "3814:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1252,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3858:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3878:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3870:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1253,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3870:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3870:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3858:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "3854:73:7",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "3882:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1258,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "3903:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3903:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1260,
															"nodeType": "RevertStatement",
															"src": "3896:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1263,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "3940:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3952:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3940:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "3936:83:7",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "3956:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1267,
																		"name": "decimals_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "3991:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4002:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "3138",
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4005:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		}
																	],
																	"id": 1266,
																	"name": "InvalidAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "3977:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3977:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1271,
															"nodeType": "RevertStatement",
															"src": "3970:38:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1274,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4032:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4049:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4032:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "4028:68:7",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "4052:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1277,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "4073:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4073:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1279,
															"nodeType": "RevertStatement",
															"src": "4066:19:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4109:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1283,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4118:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4109:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "4105:115:7",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "4128:92:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "4f776e657220616e6420666163746f72792063616e6e6f74206265207468652073616d65",
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4170:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6",
																			"typeString": "literal_string \"Owner and factory cannot be the same\""
																		},
																		"value": "Owner and factory cannot be the same"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_fa84bbd75d29b27af2d7f44fb6369066840196a4274d33a923c75372d8c3f3e6",
																			"typeString": "literal_string \"Owner and factory cannot be the same\""
																		}
																	],
																	"id": 1285,
																	"name": "InvalidContractState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "4149:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4149:60:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "4142:67:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1291,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "4238:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1292,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "4250:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4238:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "4238:21:7"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1295,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4269:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1296,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4279:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4269:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "4269:18:7"
											},
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1299,
														"name": "gameId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "4297:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1300,
														"name": "gameId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "4306:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4297:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "4297:16:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "4423:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "4430:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4417:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4417:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "4417:27:7"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_initialMintComplete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4454:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4477:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4454:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "4454:27:7"
											}
										]
									},
									"id": 1313,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1200,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1185,
													"src": "3438:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1201,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1187,
													"src": "3444:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1202,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1199,
												"name": "ERC20",
												"nameLocations": [
													"3432:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "3432:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3432:19:7"
										},
										{
											"arguments": [
												{
													"id": 1204,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1193,
													"src": "3460:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1205,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1203,
												"name": "Ownable",
												"nameLocations": [
													"3452:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3452:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3452:14:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3261:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3247:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3247:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "3289:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3275:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "3311:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3305:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3305:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "3338:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3330:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3369:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3361:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "factory_",
												"nameLocation": "3392:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3384:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "gameId_",
												"nameLocation": "3418:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "3410:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3237:194:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:7"
									},
									"scope": 1661,
									"src": "3226:1262:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "4603:33:7",
										"statements": [
											{
												"expression": {
													"id": 1319,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "4620:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1320,
												"nodeType": "Return",
												"src": "4613:16:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4555:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4578:8:7"
									},
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4563:2:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "4596:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1316,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4596:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:7:7"
									},
									"scope": 1661,
									"src": "4546:90:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "5006:1509:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1336,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5057:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5073:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1337,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5065:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5065:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5057:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "5053:69:7",
												"trueBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "5077:45:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1342,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "5098:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1344,
															"nodeType": "RevertStatement",
															"src": "5091:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5135:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5145:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5135:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "5131:61:7",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "5148:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1350,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5169:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5169:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1352,
															"nodeType": "RevertStatement",
															"src": "5162:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "5218:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "5210:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5210:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"arguments": [
														{
															"id": 1358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5242:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1357,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5232:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5210:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1361,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "5261:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1362,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5275:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5261:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"nodeType": "IfStatement",
												"src": "5257:104:7",
												"trueBody": {
													"id": 1370,
													"nodeType": "Block",
													"src": "5283:78:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "5324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1366,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5330:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1367,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "5338:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1364,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "5304:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5304:46:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1369,
															"nodeType": "RevertStatement",
															"src": "5297:53:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5459:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1373,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5468:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5468:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5459:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "5455:103:7",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "5483:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1377,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5525:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1378,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "5533:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5533:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1376,
																	"name": "ExcessiveBurnRequest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "5504:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5504:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1381,
															"nodeType": "RevertStatement",
															"src": "5497:50:7"
														}
													]
												}
											},
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "maxBurnPerTx",
														"nameLocation": "5682:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "5674:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5674:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1386,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5697:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5697:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5713:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "5697:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5674:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5766:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1392,
														"name": "maxBurnPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "5775:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5766:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "5762:124:7",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "5789:97:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1395,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1327,
																		"src": "5828:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d206275726e20706572207472616e73616374696f6e",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5836:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab",
																			"typeString": "literal_string \"Exceeds maximum burn per transaction\""
																		},
																		"value": "Exceeds maximum burn per transaction"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3acd3785dbeeec1f88efdf60bda1be4596d9630d1e9fdc07a77dd675706184ab",
																			"typeString": "literal_string \"Exceeds maximum burn per transaction\""
																		}
																	],
																	"id": 1394,
																	"name": "InvalidBurnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "5810:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (uint256,string memory) pure returns (error)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5810:65:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1398,
															"nodeType": "RevertStatement",
															"src": "5803:72:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1401,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5974:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1402,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "5989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5974:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "5974:21:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1416,
															"nodeType": "Block",
															"src": "6050:69:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"id": 1411,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6082:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1412,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6088:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1413,
																				"name": "totalBurned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "6096:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1410,
																			"name": "TokensBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1036,
																			"src": "6069:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256)"
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6069:39:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1415,
																	"nodeType": "EmitStatement",
																	"src": "6064:44:7"
																}
															]
														},
														"errorName": "",
														"id": 1417,
														"nodeType": "TryCatchClause",
														"src": "6050:69:7"
													},
													{
														"block": {
															"id": 1431,
															"nodeType": "Block",
															"src": "6154:167:7",
															"statements": [
																{
																	"expression": {
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1421,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6224:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1422,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "6239:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6224:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1424,
																	"nodeType": "ExpressionStatement",
																	"src": "6224:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1426,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6289:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1427,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6295:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1428,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "6303:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1425,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "6266:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6266:44:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1430,
																	"nodeType": "RevertStatement",
																	"src": "6259:51:7"
																}
															]
														},
														"errorName": "Error",
														"id": 1432,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1420,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1419,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "6146:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1432,
																	"src": "6132:20:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "6132:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6131:22:7"
														},
														"src": "6120:201:7"
													},
													{
														"block": {
															"id": 1443,
															"nodeType": "Block",
															"src": "6328:181:7",
															"statements": [
																{
																	"expression": {
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6398:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1434,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "6413:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6398:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1436,
																	"nodeType": "ExpressionStatement",
																	"src": "6398:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1438,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "6463:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1439,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "6469:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "556e6b6e6f776e206275726e206572726f72",
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6477:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				},
																				"value": "Unknown burn error"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				}
																			],
																			"id": 1437,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "6440:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6440:58:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1442,
																	"nodeType": "RevertStatement",
																	"src": "6433:65:7"
																}
															]
														},
														"errorName": "",
														"id": 1444,
														"nodeType": "TryCatchClause",
														"src": "6322:187:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 1407,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "6036:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "6042:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1405,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "6018:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GameToken_$1661",
																"typeString": "contract GameToken"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6023:12:7",
														"memberName": "_performBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "6018:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:31:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "TryStatement",
												"src": "6014:495:7"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "4694:172:7",
										"text": " @dev Burn tokens from a specific account (called by factory)\n @param from Address to burn tokens from\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "79cc6790",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1329,
												"name": "onlyFactory",
												"nameLocations": [
													"4946:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1172,
												"src": "4946:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4946:11:7"
										},
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "burnAllowed",
												"nameLocations": [
													"4967:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1183,
												"src": "4967:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4967:11:7"
										},
										{
											"id": 1334,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1333,
												"name": "nonReentrant",
												"nameLocations": [
													"4988:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "4988:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4988:12:7"
										}
									],
									"name": "burnFrom",
									"nameLocation": "4880:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4897:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4889:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4911:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "4903:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:30:7"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5006:0:7"
									},
									"scope": 1661,
									"src": "4871:1644:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "6667:108:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1456,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6685:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6689:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6685:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1460,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6707:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GameToken_$1661",
																			"typeString": "contract GameToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GameToken_$1661",
																			"typeString": "contract GameToken"
																		}
																	],
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6699:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6699:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6685:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792073656c662d63616c6c20616c6c6f776564",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6714:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4",
																"typeString": "literal_string \"Only self-call allowed\""
															},
															"value": "Only self-call allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78dd6c5956b0c6bc9ee24fc501f5a07adba5c60505e5809806cf4bee6f4578b4",
																"typeString": "literal_string \"Only self-call allowed\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6677:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6677:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "6677:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "6755:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "6761:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1466,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "6749:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "6749:19:7"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "6525:76:7",
										"text": " @dev Internal burn function for error handling separation"
									},
									"functionSelector": "f658f32a",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performBurn",
									"nameLocation": "6615:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6636:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6628:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6650:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6642:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6627:30:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6667:0:7"
									},
									"scope": 1661,
									"src": "6606:169:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6969:920:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1482,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7020:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7030:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7020:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "IfStatement",
												"src": "7016:61:7",
												"trueBody": {
													"id": 1488,
													"nodeType": "Block",
													"src": "7033:44:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1485,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7054:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7054:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1487,
															"nodeType": "RevertStatement",
															"src": "7047:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "7103:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "7095:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7095:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7127:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7131:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7127:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1492,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7117:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7117:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7095:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "7152:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1498,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7166:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7152:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "IfStatement",
												"src": "7148:110:7",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "7174:84:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1501,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7215:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7219:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7215:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "7227:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1504,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "7235:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1500,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "7195:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7195:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1506,
															"nodeType": "RevertStatement",
															"src": "7188:59:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1509,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "7324:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "7339:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7324:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "7324:21:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1526,
															"nodeType": "Block",
															"src": "7406:75:7",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1520,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7438:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7442:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7438:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1522,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7450:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1523,
																				"name": "totalBurned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1023,
																				"src": "7458:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1519,
																			"name": "TokensBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1036,
																			"src": "7425:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256)"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7425:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1525,
																	"nodeType": "EmitStatement",
																	"src": "7420:50:7"
																}
															]
														},
														"errorName": "",
														"id": 1527,
														"nodeType": "TryCatchClause",
														"src": "7406:75:7"
													},
													{
														"block": {
															"id": 1542,
															"nodeType": "Block",
															"src": "7516:173:7",
															"statements": [
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "7586:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1532,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "7601:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7586:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "7586:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1536,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7651:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7655:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7651:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1538,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7663:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1539,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1529,
																				"src": "7671:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1535,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "7628:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7628:50:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1541,
																	"nodeType": "RevertStatement",
																	"src": "7621:57:7"
																}
															]
														},
														"errorName": "Error",
														"id": 1543,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1530,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1529,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "7508:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1543,
																	"src": "7494:20:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1528,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "7494:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "7493:22:7"
														},
														"src": "7482:207:7"
													},
													{
														"block": {
															"id": 1555,
															"nodeType": "Block",
															"src": "7696:187:7",
															"statements": [
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1544,
																			"name": "totalBurned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "7766:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "7781:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7766:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "7766:21:7"
																},
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1549,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7831:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7835:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7831:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1551,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1475,
																				"src": "7843:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "556e6b6e6f776e206275726e206572726f72",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7851:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				},
																				"value": "Unknown burn error"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8a0d1df7e80ce3059e3210a4084c75792be1aa2f2600cd6c59230ddd1b4df45d",
																					"typeString": "literal_string \"Unknown burn error\""
																				}
																			],
																			"id": 1548,
																			"name": "BurningOperationFailed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "7808:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_error_$",
																				"typeString": "function (address,uint256,string memory) pure returns (error)"
																			}
																		},
																		"id": 1553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7808:64:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1554,
																	"nodeType": "RevertStatement",
																	"src": "7801:71:7"
																}
															]
														},
														"errorName": "",
														"id": 1556,
														"nodeType": "TryCatchClause",
														"src": "7690:193:7"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"expression": {
																"id": 1515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7386:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7390:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7386:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "7398:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1513,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7368:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GameToken_$1661",
																"typeString": "contract GameToken"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7373:12:7",
														"memberName": "_performBurn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "7368:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7368:37:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "TryStatement",
												"src": "7364:519:7"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "6785:115:7",
										"text": " @dev Allow users to burn their own tokens directly\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "42966c68",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1477,
												"name": "burnAllowed",
												"nameLocations": [
													"6944:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1183,
												"src": "6944:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6944:11:7"
										},
										{
											"id": 1480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1479,
												"name": "nonReentrant",
												"nameLocations": [
													"6956:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "6956:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6956:12:7"
										}
									],
									"name": "burn",
									"nameLocation": "6914:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6927:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6919:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6919:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6918:16:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6969:0:7"
									},
									"scope": 1661,
									"src": "6905:984:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "8132:79:7",
										"statements": [
											{
												"expression": {
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1567,
														"name": "burnEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "8142:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1568,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "8156:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8142:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "8142:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1572,
															"name": "enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "8196:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1571,
														"name": "BurnStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "8178:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "EmitStatement",
												"src": "8173:31:7"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "7948:122:7",
										"text": " @dev Enable/disable burning (emergency control)\n @param enabled Whether burning should be enabled"
									},
									"functionSelector": "7b2c835f",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1564,
												"name": "onlyOwner",
												"nameLocations": [
													"8122:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8122:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8122:9:7"
										}
									],
									"name": "setBurnEnabled",
									"nameLocation": "8084:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "8104:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "8099:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8099:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8098:14:7"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8132:0:7"
									},
									"scope": 1661,
									"src": "8075:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "8568:362:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "8582:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8596:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8588:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1589,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8588:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8588:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8582:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "8578:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1594,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "8607:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8607:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1596,
													"nodeType": "RevertStatement",
													"src": "8600:20:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1598,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "8643:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8660:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8652:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1599,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8652:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8652:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8643:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1630,
													"nodeType": "Block",
													"src": "8829:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1626,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "8902:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1627,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "8906:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1623,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1579,
																				"src": "8886:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1622,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "8879:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8879:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8893:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "8879:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8879:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1629,
															"nodeType": "ExpressionStatement",
															"src": "8879:34:7"
														}
													]
												},
												"id": 1631,
												"nodeType": "IfStatement",
												"src": "8639:285:7",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "8664:159:7",
													"statements": [
														{
															"assignments": [
																1605,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1605,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "8711:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1621,
																	"src": "8706:12:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1604,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8706:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1615,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8756:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1581,
																					"src": "8732:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:8:7",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8736:4:7",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "8724:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1611,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "8748:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "8724:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8724:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8705:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1617,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "8781:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8790:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		},
																		"value": "ETH transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8773:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8773:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "8773:39:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "8221:224:7",
										"text": " @dev Emergency function to recover stuck tokens\n @param token Address of token to recover (address(0) for ETH)\n @param to Address to send recovered tokens\n @param amount Amount to recover"
									},
									"functionSelector": "ad1329d1",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1585,
												"name": "onlyOwner",
												"nameLocations": [
													"8558:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8558:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8558:9:7"
										}
									],
									"name": "emergencyRecover",
									"nameLocation": "8459:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8493:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8485:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8485:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8516:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8508:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8536:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "8528:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8475:73:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8568:0:7"
									},
									"scope": 1661,
									"src": "8450:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "9164:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1644,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "9309:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "9313:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "9303:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9303:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "9303:17:7"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "8940:149:7",
										"text": " @dev Restricted mint function - only callable by factory\n This ensures tokens can only be created when XP is properly locked"
									},
									"functionSelector": "a4f0ecd3",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1640,
												"name": "onlyFactory",
												"nameLocations": [
													"9152:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1172,
												"src": "9152:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9152:11:7"
										}
									],
									"name": "factoryMint",
									"nameLocation": "9103:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9123:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "9115:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9135:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "9127:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9114:28:7"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9164:0:7"
									},
									"scope": 1661,
									"src": "9094:233:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "9524:64:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d696e742064697361626c65643a2075736520666163746f727920746f206c6f636b205850",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9541:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751",
																"typeString": "literal_string \"Mint disabled: use factory to lock XP\""
															},
															"value": "Mint disabled: use factory to lock XP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_fe8a425e8bedde75bba912ded89368d8e4a3c357395ab287316163a8a5dd9751",
																"typeString": "literal_string \"Mint disabled: use factory to lock XP\""
															}
														],
														"id": 1655,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "9534:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9534:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "9534:47:7"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "9337:145:7",
										"text": " @dev Block any attempts to call mint functions directly\n Prevents manual token creation outside the XP locking mechanism"
									},
									"functionSelector": "6a627842",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "9496:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "9501:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9500:9:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9524:0:7"
									},
									"scope": 1661,
									"src": "9487:101:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1662,
							"src": "483:9107:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								947,
								1042,
								1044,
								1050,
								1058,
								1064,
								1070,
								1074,
								1078,
								1080,
								1084,
								1086,
								1094,
								1100,
								1106,
								1110,
								1118,
								1126,
								1130,
								1136,
								1140,
								1144,
								1150,
								1154,
								1158
							],
							"usedEvents": [
								24,
								811,
								820,
								1036,
								1040
							]
						}
					],
					"src": "32:9559:7"
				},
				"id": 7
			}
		}
	}
}