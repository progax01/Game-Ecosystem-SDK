{"id":"fea21d79d2de9aa5b894c93fd404bc1b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/GameEcosystem.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n\n/**\n * @title GameEcosystem\n * @dev Improved contract architecture using ERC-1155 for game tokens\n * Key improvements:\n * - Uses ERC-1155 instead of deploying separate ERC-20 contracts (massive gas savings)\n * - Enhanced security with proper access controls and reentrancy protection\n * - Optimized data structures and gas-efficient operations\n * - Simplified flow with better reserve management\n */\ncontract GameEcosystem is ERC1155, AccessControl, Pausable, ReentrancyGuard {\n    using Math for uint256;\n\n    // ============ Constants ============\n    bytes32 public constant RATE_MANAGER_ROLE = keccak256(\"RATE_MANAGER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\"EMERGENCY_ROLE\");\n    \n    uint256 public constant MIN_XP_LOCK_AMOUNT = 1000 * 1e18; // Minimum 1000 XP to create game token\n    uint256 public constant MAX_GAME_TOKEN_DECIMALS = 18;\n    uint256 public constant PRECISION_FACTOR = 1e18; // For precise calculations\n    \n    // ============ State Variables ============\n    IERC20 public immutable cridaToken;\n    IERC20 public immutable xpToken;\n    \n    uint256 public cridaToXpRate = 1e18; // 1 CRIDA = 1 XP (with 18 decimal precision)\n    uint256 public nextGameId = 1;\n    \n    // Track user's locked CRIDA for potential future unlocking features\n    mapping(address => uint256) public userLockedCrida;\n    uint256 public totalLockedCrida;\n    \n    // Game token metadata and conversion info\n    struct GameTokenInfo {\n        address creator;\n        string name;\n        string symbol;\n        uint8 decimals;\n        uint256 initialSupply;\n        uint256 xpLocked;\n        uint256 currentSupply;\n        bool active;\n    }\n    \n    mapping(uint256 => GameTokenInfo) public gameTokens;\n    mapping(address => uint256[]) public userGameTokens; // Track user's created tokens\n    \n    // XP reserves management\n    uint256 public xpReserves; // XP held for game token redemptions\n    \n    // ============ Events ============\n    event CridaLocked(address indexed user, uint256 cridaAmount, uint256 xpMinted);\n    event GameTokenCreated(\n        uint256 indexed gameId,\n        address indexed creator,\n        string name,\n        string symbol,\n        uint256 xpLocked,\n        uint256 initialSupply\n    );\n    event GameTokenBurned(\n        uint256 indexed gameId,\n        address indexed user,\n        uint256 burnAmount,\n        uint256 xpReturned\n    );\n    event RateUpdated(uint256 oldRate, uint256 newRate);\n    event EmergencyWithdraw(address indexed token, address indexed to, uint256 amount);\n    \n    // ============ Errors ============\n    error ZeroAmount();\n    error ZeroRate();\n    error InvalidGameId();\n    error GameTokenNotActive();\n    error InsufficientXpReserves();\n    error InvalidDecimals();\n    error NameTooLong();\n    error SymbolTooLong();\n    error InsufficientAmount();\n    error TransferFailed();\n    \n    // ============ Constructor ============\n    constructor(\n        address _cridaToken,\n        address _xpToken,\n        string memory _uri\n    ) ERC1155(_uri) {\n        if (_cridaToken == address(0) || _xpToken == address(0)) {\n            revert ZeroAmount();\n        }\n        \n        cridaToken = IERC20(_cridaToken);\n        xpToken = IERC20(_xpToken);\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(RATE_MANAGER_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(EMERGENCY_ROLE, msg.sender);\n    }\n    \n    // ============ CRIDA → XP Locking ============\n    /**\n     * @dev Lock CRIDA tokens and mint XP tokens\n     * @param amountCrida Amount of CRIDA tokens to lock\n     */\n    function lockCrida(uint256 amountCrida) \n        external \n        whenNotPaused \n        nonReentrant \n    {\n        if (amountCrida == 0) revert ZeroAmount();\n        \n        // Calculate XP to mint with precision\n        uint256 xpAmount = (amountCrida * cridaToXpRate) / PRECISION_FACTOR;\n        \n        // Transfer CRIDA from user\n        if (!cridaToken.transferFrom(msg.sender, address(this), amountCrida)) {\n            revert TransferFailed();\n        }\n        \n        // Update user's locked CRIDA\n        userLockedCrida[msg.sender] += amountCrida;\n        totalLockedCrida += amountCrida;\n        \n        // Transfer XP to user\n        if (!xpToken.transfer(msg.sender, xpAmount)) {\n            revert TransferFailed();\n        }\n        \n        emit CridaLocked(msg.sender, amountCrida, xpAmount);\n    }\n    \n    // ============ XP → Game Token Factory ============\n    /**\n     * @dev Create a new game token by locking XP tokens\n     * @param xpAmount Amount of XP tokens to lock\n     * @param name Name of the game token\n     * @param symbol Symbol of the game token\n     * @param decimals Decimals for the game token\n     */\n    function createGameToken(\n        uint256 xpAmount,\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals\n    ) \n        external \n        whenNotPaused \n        nonReentrant \n        returns (uint256 gameId)\n    {\n        if (xpAmount < MIN_XP_LOCK_AMOUNT) revert InsufficientAmount();\n        if (decimals > MAX_GAME_TOKEN_DECIMALS) revert InvalidDecimals();\n        if (bytes(name).length > 50) revert NameTooLong();\n        if (bytes(symbol).length > 10) revert SymbolTooLong();\n        \n        // Transfer XP from user to contract\n        if (!xpToken.transferFrom(msg.sender, address(this), xpAmount)) {\n            revert TransferFailed();\n        }\n        \n        // Update XP reserves\n        xpReserves += xpAmount;\n        \n        gameId = nextGameId++;\n        \n        // Calculate initial supply based on XP amount and decimals\n        uint256 initialSupply = xpAmount * (10 ** decimals) / PRECISION_FACTOR;\n        \n        // Store game token info\n        gameTokens[gameId] = GameTokenInfo({\n            creator: msg.sender,\n            name: name,\n            symbol: symbol,\n            decimals: decimals,\n            initialSupply: initialSupply,\n            xpLocked: xpAmount,\n            currentSupply: initialSupply,\n            active: true\n        });\n        \n        // Track user's game tokens\n        userGameTokens[msg.sender].push(gameId);\n        \n        // Mint game tokens to creator (using ERC-1155)\n        _mint(msg.sender, gameId, initialSupply, \"\");\n        \n        emit GameTokenCreated(gameId, msg.sender, name, symbol, xpAmount, initialSupply);\n    }\n    \n    // ============ Game Token Burning → XP Unlocking ============\n    /**\n     * @dev Burn game tokens to reclaim XP tokens\n     * @param gameId ID of the game token to burn\n     * @param burnAmount Amount of game tokens to burn\n     */\n    function burnGameToken(uint256 gameId, uint256 burnAmount) \n        external \n        whenNotPaused \n        nonReentrant \n    {\n        if (burnAmount == 0) revert ZeroAmount();\n        \n        GameTokenInfo storage gameInfo = gameTokens[gameId];\n        if (!gameInfo.active) revert GameTokenNotActive();\n        if (gameId == 0 || gameId >= nextGameId) revert InvalidGameId();\n        \n        // Check user has enough game tokens\n        if (balanceOf(msg.sender, gameId) < burnAmount) revert InsufficientAmount();\n        \n        // Calculate XP to return with precision\n        uint256 xpToReturn = (burnAmount * gameInfo.xpLocked) / gameInfo.initialSupply;\n        \n        if (xpReserves < xpToReturn) revert InsufficientXpReserves();\n        \n        // Burn game tokens\n        _burn(msg.sender, gameId, burnAmount);\n        \n        // Update state\n        gameInfo.currentSupply -= burnAmount;\n        xpReserves -= xpToReturn;\n        \n        // Transfer XP back to user\n        if (!xpToken.transfer(msg.sender, xpToReturn)) {\n            revert TransferFailed();\n        }\n        \n        emit GameTokenBurned(gameId, msg.sender, burnAmount, xpToReturn);\n    }\n    \n    // ============ Admin Functions ============\n    /**\n     * @dev Update CRIDA to XP conversion rate\n     * @param newRate New rate (with PRECISION_FACTOR scaling)\n     */\n    function setRate(uint256 newRate) external onlyRole(RATE_MANAGER_ROLE) {\n        if (newRate == 0) revert ZeroRate();\n        \n        uint256 oldRate = cridaToXpRate;\n        cridaToXpRate = newRate;\n        \n        emit RateUpdated(oldRate, newRate);\n    }\n    \n    /**\n     * @dev Pause contract operations\n     */\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n    \n    /**\n     * @dev Unpause contract operations\n     */\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n    \n    /**\n     * @dev Emergency withdraw function for stuck tokens\n     * @param token Address of token to withdraw\n     * @param to Address to send tokens to\n     * @param amount Amount to withdraw\n     */\n    function emergencyWithdraw(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyRole(EMERGENCY_ROLE) {\n        if (to == address(0)) revert ZeroAmount();\n        \n        if (token == address(0)) {\n            // Withdraw ETH\n            (bool success, ) = payable(to).call{value: amount}(\"\");\n            if (!success) revert TransferFailed();\n        } else {\n            // Withdraw ERC20 token\n            if (!IERC20(token).transfer(to, amount)) {\n                revert TransferFailed();\n            }\n        }\n        \n        emit EmergencyWithdraw(token, to, amount);\n    }\n    \n    // ============ View Functions ============\n    /**\n     * @dev Get game token information\n     * @param gameId ID of the game token\n     */\n    function getGameTokenInfo(uint256 gameId) \n        external \n        view \n        returns (GameTokenInfo memory) \n    {\n        return gameTokens[gameId];\n    }\n    \n    /**\n     * @dev Get user's created game tokens\n     * @param user Address of the user\n     */\n    function getUserGameTokens(address user) \n        external \n        view \n        returns (uint256[] memory) \n    {\n        return userGameTokens[user];\n    }\n    \n    /**\n     * @dev Calculate XP amount for given CRIDA amount\n     * @param cridaAmount Amount of CRIDA tokens\n     */\n    function calculateXpAmount(uint256 cridaAmount) \n        external \n        view \n        returns (uint256) \n    {\n        return (cridaAmount * cridaToXpRate) / PRECISION_FACTOR;\n    }\n    \n    /**\n     * @dev Calculate XP return for burning game tokens\n     * @param gameId ID of the game token\n     * @param burnAmount Amount to burn\n     */\n    function calculateXpReturn(uint256 gameId, uint256 burnAmount) \n        external \n        view \n        returns (uint256) \n    {\n        GameTokenInfo storage gameInfo = gameTokens[gameId];\n        if (!gameInfo.active || gameInfo.initialSupply == 0) return 0;\n        \n        return (burnAmount * gameInfo.xpLocked) / gameInfo.initialSupply;\n    }\n    \n    // ============ Required Overrides ============\n    function supportsInterface(bytes4 interfaceId) \n        public \n        view \n        override(ERC1155, AccessControl) \n        returns (bool) \n    {\n        return super.supportsInterface(interfaceId);\n    }\n    \n    /**\n     * @dev Override URI function to provide metadata for game tokens\n     */\n    function uri(uint256 gameId) public view override returns (string memory) {\n        if (gameId == 0 || gameId >= nextGameId) return \"\";\n        \n        GameTokenInfo memory gameInfo = gameTokens[gameId];\n        if (!gameInfo.active) return \"\";\n        \n        // Return basic token info - could be enhanced with proper metadata URI\n        return string(abi.encodePacked(\n            '{\"name\":\"', gameInfo.name, \n            '\",\"symbol\":\"', gameInfo.symbol,\n            '\",\"decimals\":', uint2str(gameInfo.decimals), '}'\n        ));\n    }\n    \n    // ============ Utility Functions ============\n    function uint2str(uint256 _i) internal pure returns (string memory) {\n        if (_i == 0) return \"0\";\n        \n        uint256 j = _i;\n        uint256 len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        \n        bytes memory bstr = new bytes(len);\n        uint256 k = len;\n        while (_i != 0) {\n            k = k - 1;\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\n            bytes1 b1 = bytes1(temp);\n            bstr[k] = b1;\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n} "},"contracts/GameToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title GameToken\n * @dev Optimized ERC-20 game token with enhanced security\n * Each game gets its own instance of this contract\n * Optimized for gas efficiency while maintaining security\n */\ncontract GameToken is ERC20, Ownable, ReentrancyGuard {\n    // ============ Immutable Variables (Gas Optimized) ============\n    uint8 private immutable _decimals;\n    address public immutable factory; // Factory contract that deployed this token\n    uint256 public immutable gameId; // Unique game identifier\n    \n    // ============ State Variables ============\n    uint256 public totalBurned; // Track total burned for analytics\n    bool public burnEnabled = true; // Emergency disable burning\n    \n    // ============ Events ============\n    event TokensBurned(address indexed user, uint256 amount, uint256 totalBurned);\n    event BurnStatusChanged(bool enabled);\n    \n    // ============ Errors ============\n    error UnauthorizedBurner();\n    error BurnDisabled();\n    error ZeroAmount();\n    error InsufficientBalance();\n    \n    // ============ Modifiers ============\n    modifier onlyFactory() {\n        if (msg.sender != factory) revert UnauthorizedBurner();\n        _;\n    }\n    \n    modifier burnAllowed() {\n        if (!burnEnabled) revert BurnDisabled();\n        _;\n    }\n    \n    // ============ Constructor ============\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals_,\n        uint256 initialSupply,\n        address owner,\n        address factory_,\n        uint256 gameId_\n    ) ERC20(name, symbol) Ownable(owner) {\n        _decimals = decimals_;\n        factory = factory_;\n        gameId = gameId_;\n        \n        // Mint initial supply to owner\n        _mint(owner, initialSupply);\n    }\n    \n    // ============ View Functions ============\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n    \n    // ============ Burn Functions ============\n    /**\n     * @dev Burn tokens from a specific account (called by factory)\n     * @param from Address to burn tokens from\n     * @param amount Amount of tokens to burn\n     */\n    function burnFrom(address from, uint256 amount) \n        external \n        onlyFactory \n        burnAllowed \n        nonReentrant \n    {\n        if (amount == 0) revert ZeroAmount();\n        if (balanceOf(from) < amount) revert InsufficientBalance();\n        \n        // Update total burned before burning (for reentrancy safety)\n        totalBurned += amount;\n        \n        // Burn tokens\n        _burn(from, amount);\n        \n        emit TokensBurned(from, amount, totalBurned);\n    }\n    \n    /**\n     * @dev Allow users to burn their own tokens directly\n     * @param amount Amount of tokens to burn\n     */\n    function burn(uint256 amount) external burnAllowed nonReentrant {\n        if (amount == 0) revert ZeroAmount();\n        \n        totalBurned += amount;\n        _burn(msg.sender, amount);\n        \n        emit TokensBurned(msg.sender, amount, totalBurned);\n    }\n    \n    // ============ Admin Functions ============\n    /**\n     * @dev Enable/disable burning (emergency control)\n     * @param enabled Whether burning should be enabled\n     */\n    function setBurnEnabled(bool enabled) external onlyOwner {\n        burnEnabled = enabled;\n        emit BurnStatusChanged(enabled);\n    }\n    \n    /**\n     * @dev Emergency function to recover stuck tokens\n     * @param token Address of token to recover (address(0) for ETH)\n     * @param to Address to send recovered tokens\n     * @param amount Amount to recover\n     */\n    function emergencyRecover(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyOwner {\n        if (to == address(0)) revert ZeroAmount();\n        \n        if (token == address(0)) {\n            // Recover ETH\n            (bool success, ) = payable(to).call{value: amount}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            // Recover ERC20 tokens\n            IERC20(token).transfer(to, amount);\n        }\n    }\n} "},"contracts/GameTokenFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./GameToken.sol\";\n\n/**\n * @title GameTokenFactory\n * @dev Enhanced factory contract maintaining original flow with improved security\n * Key improvements:\n * - Enhanced security with reentrancy protection and access controls\n * - Gas optimizations through packed structs and efficient operations\n * - Comprehensive input validation and error handling\n * - Emergency controls and reserve management\n * - Maintains original flow: CREDA → XP → Deploy GameToken → Burn → XP\n */\ncontract GameTokenFactory is AccessControl, Pausable, ReentrancyGuard {\n    using Math for uint256;\n\n    // ============ Constants ============\n    bytes32 public constant RATE_MANAGER_ROLE = keccak256(\"RATE_MANAGER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\"EMERGENCY_ROLE\");\n    \n    uint256 public constant MIN_XP_LOCK_AMOUNT = 1000 * 1e18; // Minimum 1000 XP to create game token\n    uint256 public constant MAX_GAME_TOKEN_DECIMALS = 18;\n    uint256 public constant PRECISION_FACTOR = 1e18; // For precise calculations\n    uint256 public constant MAX_NAME_LENGTH = 50;\n    uint256 public constant MAX_SYMBOL_LENGTH = 10;\n    \n    // ============ State Variables ============\n    IERC20 public immutable credaToken;\n    IERC20 public immutable xpToken;\n    \n    uint256 public credaToXpRate = 1e18; // 1 CREDA = 1 XP (with 18 decimal precision)\n    uint256 public nextGameId = 1;\n    \n    // Track user's locked CREDA for potential future unlocking features\n    mapping(address => uint256) public userLockedCreda;\n    uint256 public totalLockedCreda;\n    \n    // Gas-optimized packed struct for game token info\n    struct GameTokenInfo {\n        address tokenAddress;    // 20 bytes\n        address creator;         // 20 bytes\n        uint88 xpLocked;        // 11 bytes (up to ~77M XP tokens)\n        uint8 decimals;         // 1 byte\n        bool active;            // 1 byte\n        // Total: 53 bytes (fits in 2 storage slots)\n    }\n    \n    // Additional metadata stored separately to optimize gas\n    struct GameTokenMetadata {\n        string name;\n        string symbol;\n        uint256 initialSupply;\n        uint256 creationTime;\n    }\n    \n    mapping(uint256 => GameTokenInfo) public gameTokens;\n    mapping(uint256 => GameTokenMetadata) public gameTokenMetadata;\n    mapping(address => uint256[]) public userGameTokens; // Track user's created tokens\n    mapping(address => mapping(string => bool)) public userGameNames; // Prevent duplicate names per user\n    \n    // XP reserves management\n    uint256 public xpReserves; // XP held for game token redemptions\n    \n    // ============ Events ============\n    event CredaLocked(address indexed user, uint256 credaAmount, uint256 xpMinted);\n    event GameTokenCreated(\n        uint256 indexed gameId,\n        address indexed creator,\n        address indexed tokenAddress,\n        string name,\n        string symbol,\n        uint256 xpLocked,\n        uint256 initialSupply\n    );\n    event GameTokenBurned(\n        uint256 indexed gameId,\n        address indexed user,\n        uint256 burnAmount,\n        uint256 xpReturned\n    );\n    event RateUpdated(uint256 oldRate, uint256 newRate);\n    event EmergencyWithdraw(address indexed token, address indexed to, uint256 amount);\n    \n    // ============ Errors ============\n    error ZeroAmount();\n    error ZeroRate();\n    error InvalidGameId();\n    error GameTokenNotActive();\n    error InsufficientXpReserves();\n    error InvalidDecimals();\n    error NameTooLong();\n    error SymbolTooLong();\n    error InsufficientAmount();\n    error TransferFailed();\n    error DuplicateGameName();\n    error GameTokenDeploymentFailed();\n    error InvalidAddress();\n    \n    // ============ Constructor ============\n    constructor(\n        address _credaToken,\n        address _xpToken\n    ) {\n        if (_credaToken == address(0) || _xpToken == address(0)) {\n            revert InvalidAddress();\n        }\n        \n        credaToken = IERC20(_credaToken);\n        xpToken = IERC20(_xpToken);\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(RATE_MANAGER_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(EMERGENCY_ROLE, msg.sender);\n    }\n    \n    // ============ CREDA → XP Locking ============\n    /**\n     * @dev Lock CREDA tokens and receive XP tokens\n     * @param amountCreda Amount of CREDA tokens to lock\n     */\n    function lockCreda(uint256 amountCreda) \n        external \n        whenNotPaused \n        nonReentrant \n    {\n        if (amountCreda == 0) revert ZeroAmount();\n        \n        // Calculate XP to mint with precision\n        uint256 xpAmount = (amountCreda * credaToXpRate) / PRECISION_FACTOR;\n        \n        // Transfer CREDA from user\n        if (!credaToken.transferFrom(msg.sender, address(this), amountCreda)) {\n            revert TransferFailed();\n        }\n        \n        // Update user's locked CREDA\n        userLockedCreda[msg.sender] += amountCreda;\n        totalLockedCreda += amountCreda;\n        \n        // Transfer XP to user\n        if (!xpToken.transfer(msg.sender, xpAmount)) {\n            revert TransferFailed();\n        }\n        \n        emit CredaLocked(msg.sender, amountCreda, xpAmount);\n    }\n    \n    // ============ XP → Game Token Factory ============\n    /**\n     * @dev Create a new ERC-20 game token by locking XP tokens\n     * @param xpAmount Amount of XP tokens to lock\n     * @param name Name of the game token\n     * @param symbol Symbol of the game token\n     * @param decimals Decimals for the game token\n     */\n    function createGameToken(\n        uint256 xpAmount,\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals\n    ) \n        external \n        whenNotPaused \n        nonReentrant \n        returns (uint256 gameId, address tokenAddress)\n    {\n        // Input validation\n        if (xpAmount < MIN_XP_LOCK_AMOUNT) revert InsufficientAmount();\n        if (decimals > MAX_GAME_TOKEN_DECIMALS) revert InvalidDecimals();\n        if (bytes(name).length == 0 || bytes(name).length > MAX_NAME_LENGTH) revert NameTooLong();\n        if (bytes(symbol).length == 0 || bytes(symbol).length > MAX_SYMBOL_LENGTH) revert SymbolTooLong();\n        if (userGameNames[msg.sender][name]) revert DuplicateGameName();\n        \n        // Transfer XP from user to contract\n        if (!xpToken.transferFrom(msg.sender, address(this), xpAmount)) {\n            revert TransferFailed();\n        }\n        \n        // Update XP reserves\n        xpReserves += xpAmount;\n        \n        gameId = nextGameId++;\n        \n        // Calculate initial supply based on XP amount and decimals\n        uint256 initialSupply = xpAmount * (10 ** decimals) / PRECISION_FACTOR;\n        \n        // Deploy new GameToken contract\n        try new GameToken(\n            name,\n            symbol,\n            decimals,\n            initialSupply,\n            msg.sender, // owner\n            address(this), // factory\n            gameId\n        ) returns (GameToken newToken) {\n            tokenAddress = address(newToken);\n        } catch {\n            // Revert XP transfer if deployment fails\n            xpReserves -= xpAmount;\n            if (!xpToken.transfer(msg.sender, xpAmount)) {\n                revert TransferFailed();\n            }\n            revert GameTokenDeploymentFailed();\n        }\n        \n        // Store game token info (gas-optimized)\n        gameTokens[gameId] = GameTokenInfo({\n            tokenAddress: tokenAddress,\n            creator: msg.sender,\n            xpLocked: uint88(xpAmount), // Safe cast due to validation\n            decimals: decimals,\n            active: true\n        });\n        \n        // Store metadata separately\n        gameTokenMetadata[gameId] = GameTokenMetadata({\n            name: name,\n            symbol: symbol,\n            initialSupply: initialSupply,\n            creationTime: block.timestamp\n        });\n        \n        // Track user's game tokens and names\n        userGameTokens[msg.sender].push(gameId);\n        userGameNames[msg.sender][name] = true;\n        \n        emit GameTokenCreated(gameId, msg.sender, tokenAddress, name, symbol, xpAmount, initialSupply);\n    }\n    \n    // ============ Game Token Burning → XP Unlocking ============\n    /**\n     * @dev Burn game tokens to reclaim XP tokens\n     * @param gameId ID of the game token to burn\n     * @param burnAmount Amount of game tokens to burn\n     */\n    function burnGameToken(uint256 gameId, uint256 burnAmount) \n        external \n        whenNotPaused \n        nonReentrant \n    {\n        if (burnAmount == 0) revert ZeroAmount();\n        if (gameId == 0 || gameId >= nextGameId) revert InvalidGameId();\n        \n        GameTokenInfo storage gameInfo = gameTokens[gameId];\n        if (!gameInfo.active) revert GameTokenNotActive();\n        \n        GameTokenMetadata memory metadata = gameTokenMetadata[gameId];\n        \n        // Calculate XP to return with precision\n        uint256 xpToReturn = (burnAmount * uint256(gameInfo.xpLocked)) / metadata.initialSupply;\n        \n        if (xpReserves < xpToReturn) revert InsufficientXpReserves();\n        \n        // Burn tokens from the game token contract\n        GameToken gameToken = GameToken(gameInfo.tokenAddress);\n        gameToken.burnFrom(msg.sender, burnAmount);\n        \n        // Update state\n        xpReserves -= xpToReturn;\n        \n        // Transfer XP back to user\n        if (!xpToken.transfer(msg.sender, xpToReturn)) {\n            revert TransferFailed();\n        }\n        \n        emit GameTokenBurned(gameId, msg.sender, burnAmount, xpToReturn);\n    }\n    \n    // ============ Admin Functions ============\n    /**\n     * @dev Update CREDA to XP conversion rate\n     * @param newRate New rate (with PRECISION_FACTOR scaling)\n     */\n    function setRate(uint256 newRate) external onlyRole(RATE_MANAGER_ROLE) {\n        if (newRate == 0) revert ZeroRate();\n        \n        uint256 oldRate = credaToXpRate;\n        credaToXpRate = newRate;\n        \n        emit RateUpdated(oldRate, newRate);\n    }\n    \n    /**\n     * @dev Pause contract operations\n     */\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n    \n    /**\n     * @dev Unpause contract operations\n     */\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n    \n    /**\n     * @dev Emergency withdraw function for stuck tokens\n     * @param token Address of token to withdraw\n     * @param to Address to send tokens to\n     * @param amount Amount to withdraw\n     */\n    function emergencyWithdraw(\n        address token,\n        address to,\n        uint256 amount\n    ) external onlyRole(EMERGENCY_ROLE) {\n        if (to == address(0)) revert InvalidAddress();\n        \n        if (token == address(0)) {\n            // Withdraw ETH\n            (bool success, ) = payable(to).call{value: amount}(\"\");\n            if (!success) revert TransferFailed();\n        } else {\n            // Withdraw ERC20 token\n            if (!IERC20(token).transfer(to, amount)) {\n                revert TransferFailed();\n            }\n        }\n        \n        emit EmergencyWithdraw(token, to, amount);\n    }\n    \n    // ============ View Functions ============\n    /**\n     * @dev Get complete game token information\n     * @param gameId ID of the game token\n     */\n    function getGameTokenInfo(uint256 gameId) \n        external \n        view \n        returns (\n            GameTokenInfo memory info,\n            GameTokenMetadata memory metadata\n        ) \n    {\n        info = gameTokens[gameId];\n        metadata = gameTokenMetadata[gameId];\n    }\n    \n    /**\n     * @dev Get user's created game tokens\n     * @param user Address of the user\n     */\n    function getUserGameTokens(address user) \n        external \n        view \n        returns (uint256[] memory) \n    {\n        return userGameTokens[user];\n    }\n    \n    /**\n     * @dev Calculate XP amount for given CREDA amount\n     * @param credaAmount Amount of CREDA tokens\n     */\n    function calculateXpAmount(uint256 credaAmount) \n        external \n        view \n        returns (uint256) \n    {\n        return (credaAmount * credaToXpRate) / PRECISION_FACTOR;\n    }\n    \n    /**\n     * @dev Calculate XP return for burning game tokens\n     * @param gameId ID of the game token\n     * @param burnAmount Amount to burn\n     */\n    function calculateXpReturn(uint256 gameId, uint256 burnAmount) \n        external \n        view \n        returns (uint256) \n    {\n        if (gameId == 0 || gameId >= nextGameId) return 0;\n        \n        GameTokenInfo memory gameInfo = gameTokens[gameId];\n        if (!gameInfo.active) return 0;\n        \n        GameTokenMetadata memory metadata = gameTokenMetadata[gameId];\n        if (metadata.initialSupply == 0) return 0;\n        \n        return (burnAmount * uint256(gameInfo.xpLocked)) / metadata.initialSupply;\n    }\n    \n    /**\n     * @dev Check if user has already used a game name\n     * @param user Address of the user\n     * @param name Name to check\n     */\n    function isGameNameUsed(address user, string calldata name) \n        external \n        view \n        returns (bool) \n    {\n        return userGameNames[user][name];\n    }\n} "},"contracts/mocks/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title MockERC20\n * @dev Mock ERC20 token for testing purposes\n */\ncontract MockERC20 is ERC20 {\n    uint8 private _decimals;\n    \n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 tokenDecimals,\n        uint256 initialSupply\n    ) ERC20(name, symbol) {\n        _decimals = tokenDecimals;\n        _mint(msg.sender, initialSupply);\n    }\n    \n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n    \n    function mint(address to, uint256 amount) external {\n        _mint(to, amount);\n    }\n    \n    function burn(address from, uint256 amount) external {\n        _burn(from, amount);\n    }\n} "},"contracts/Token.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract MyToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl, ERC20Permit {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address recipient, address defaultAdmin, address pauser, address minter)\n        ERC20(\"MyToken\", \"MTK\")\n        ERC20Permit(\"MyToken\")\n    {\n        _mint(recipient, 10000000 * 10 ** decimals());\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[3769],"ERC165":[6624],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3770,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":6625,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":6624,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,6624,6636,378,3769],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[6623],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6623,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3769],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":3770,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,3769],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[551]},"id":552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":551,"linearizedBaseContracts":[551],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":531,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":550,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":550,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":534,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":550,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":536,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":550,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":538,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":550,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":550,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":550,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":550,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":551,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":552,"src":"133:605:3","usedErrors":[],"usedEvents":[531]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[688],"IERC20Errors":[593],"IERC721Errors":[641]},"id":689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":593,"linearizedBaseContracts":[593],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":563,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":563,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":563,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":563,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":568,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":568,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":573,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":573,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":582,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":582,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":582,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":582,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":587,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":587,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":592,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":592,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":689,"src":"280:1764:4","usedErrors":[563,568,573,582,587,592],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":641,"linearizedBaseContracts":[641],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":599,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":599,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":604,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":604,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":613,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":613,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":613,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":613,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":618,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":618,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":623,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":623,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":630,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":630,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":630,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":635,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":635,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":640,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":640,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":689,"src":"2190:2092:4","usedErrors":[599,604,613,618,623,630,635,640],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":688,"linearizedBaseContracts":[688],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":653,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":658,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":658,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":663,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":663,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":670,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":670,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":670,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":675,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":675,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":680,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":680,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":687,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":687,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":687,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":689,"src":"4430:2107:4","usedErrors":[653,658,663,670,675,680,687],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3707],"Context":[3769],"ERC1155":[1605],"ERC1155Utils":[1940],"ERC165":[6624],"IERC1155":[1728],"IERC1155Errors":[688],"IERC1155MetadataURI":[1786],"IERC165":[6636]},"id":1606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":1729,"src":"135:40:5","symbolAliases":[{"foreign":{"id":691,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"143:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":1787,"src":"176:73:5","symbolAliases":[{"foreign":{"id":693,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"184:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":1941,"src":"250:54:5","symbolAliases":[{"foreign":{"id":695,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"258:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":3770,"src":"305:48:5","symbolAliases":[{"foreign":{"id":697,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"313:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":6625,"src":"354:69:5","symbolAliases":[{"foreign":{"id":699,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"362:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":700,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"371:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":3708,"src":"424:46:5","symbolAliases":[{"foreign":{"id":702,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"432:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1606,"sourceUnit":689,"src":"471:67:5","symbolAliases":[{"foreign":{"id":704,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"479:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":707,"name":"Context","nameLocations":["754:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"754:7:5"},"id":708,"nodeType":"InheritanceSpecifier","src":"754:7:5"},{"baseName":{"id":709,"name":"ERC165","nameLocations":["763:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":6624,"src":"763:6:5"},"id":710,"nodeType":"InheritanceSpecifier","src":"763:6:5"},{"baseName":{"id":711,"name":"IERC1155","nameLocations":["771:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"771:8:5"},"id":712,"nodeType":"InheritanceSpecifier","src":"771:8:5"},{"baseName":{"id":713,"name":"IERC1155MetadataURI","nameLocations":["781:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1786,"src":"781:19:5"},"id":714,"nodeType":"InheritanceSpecifier","src":"781:19:5"},{"baseName":{"id":715,"name":"IERC1155Errors","nameLocations":["802:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":688,"src":"802:14:5"},"id":716,"nodeType":"InheritanceSpecifier","src":"802:14:5"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"540:184:5","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1605,"linearizedBaseContracts":[1605,688,1786,1728,6624,6636,3769],"name":"ERC1155","nameLocation":"743:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":720,"libraryName":{"id":717,"name":"Arrays","nameLocations":["829:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3707,"src":"829:6:5"},"nodeType":"UsingForDirective","src":"823:27:5","typeName":{"baseType":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":719,"nodeType":"ArrayTypeName","src":"840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":724,"libraryName":{"id":721,"name":"Arrays","nameLocations":["861:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3707,"src":"861:6:5"},"nodeType":"UsingForDirective","src":"855:27:5","typeName":{"baseType":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"nodeType":"ArrayTypeName","src":"872:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":730,"mutability":"mutable","name":"_balances","nameLocation":"955:9:5","nodeType":"VariableDeclaration","scope":1605,"src":"888:76:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":729,"keyName":"id","keyNameLocation":"904:2:5","keyType":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":728,"keyName":"account","keyNameLocation":"926:7:5","keyType":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":736,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:5","nodeType":"VariableDeclaration","scope":1605,"src":"971:88:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":735,"keyName":"account","keyNameLocation":"987:7:5","keyType":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":734,"keyName":"operator","keyNameLocation":"1014:8:5","keyType":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":738,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:5","nodeType":"VariableDeclaration","scope":1605,"src":"1180:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":737,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":748,"nodeType":"Block","src":"1281:30:5","statements":[{"expression":{"arguments":[{"id":745,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1299:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":744,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1291:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"1291:13:5"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"1206:38:5","text":" @dev See {_setURI}."},"id":749,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:5","nodeType":"VariableDeclaration","scope":749,"src":"1261:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":740,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:5"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"1281:0:5"},"scope":1605,"src":"1249:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6623,6635],"body":{"id":779,"nodeType":"Block","src":"1486:197:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":760,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1515:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":762,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"1535:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1728_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1728_$","typeString":"type(contract IERC1155)"}],"id":761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1728","typeString":"type(contract IERC1155)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1572:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":768,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"1592:19:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1786_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1786_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1786","typeString":"type(contract IERC1155MetadataURI)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":775,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1664:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":773,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1605_$","typeString":"type(contract super ERC1155)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6623,"src":"1640:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":759,"id":778,"nodeType":"Return","src":"1496:180:5"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1317:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":780,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:5","nodeType":"FunctionDefinition","overrides":{"id":756,"nodeType":"OverrideSpecifier","overrides":[{"id":754,"name":"ERC165","nameLocations":["1454:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":6624,"src":"1454:6:5"},{"id":755,"name":"IERC165","nameLocations":["1462:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":6636,"src":"1462:7:5"}],"src":"1445:25:5"},"parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:5","nodeType":"VariableDeclaration","scope":780,"src":"1405:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":751,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:5"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"1480:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:5"},"scope":1605,"src":"1378:305:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1785],"body":{"id":790,"nodeType":"Block","src":"2157:28:5","statements":[{"expression":{"id":788,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2174:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":787,"id":789,"nodeType":"Return","src":"2167:11:5"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1689:388:5","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:5","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"2095:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:5"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"2142:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:5"},"scope":1605,"src":"2082:103:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1666],"body":{"id":807,"nodeType":"Block","src":"2331:46:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":801,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2348:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":803,"indexExpression":{"id":802,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"2358:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":805,"indexExpression":{"id":804,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2362:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":806,"nodeType":"Return","src":"2341:29:5"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"2191:49:5","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:5","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"account","nameLocation":"2272:7:5","nodeType":"VariableDeclaration","scope":808,"src":"2264:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"id","nameLocation":"2289:2:5","nodeType":"VariableDeclaration","scope":808,"src":"2281:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:5"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"2322:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:5"},"scope":1605,"src":"2245:132:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1679],"body":{"id":877,"nodeType":"Block","src":"2676:410:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2690:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:5","memberName":"length","nodeType":"MemberAccess","src":"2690:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":823,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2709:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:5","memberName":"length","nodeType":"MemberAccess","src":"2709:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"2686:121:5","trueBody":{"id":833,"nodeType":"Block","src":"2721:86:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":827,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2768:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:5","memberName":"length","nodeType":"MemberAccess","src":"2768:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":829,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2780:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:5","memberName":"length","nodeType":"MemberAccess","src":"2780:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":826,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2742:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"RevertStatement","src":"2735:61:5"}]}},{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:5","nodeType":"VariableDeclaration","scope":877,"src":"2817:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"2817:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"expression":{"id":843,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2864:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:5","memberName":"length","nodeType":"MemberAccess","src":"2864:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ArrayTypeName","src":"2854:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:5"},{"body":{"id":873,"nodeType":"Block","src":"2937:112:5","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":858,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2951:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":860,"indexExpression":{"id":859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2965:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3008:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":862,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2980:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3647,"src":"2980:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3035:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3012:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"3012:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":861,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2970:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2951:87:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2911:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":852,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2915:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:5","memberName":"length","nodeType":"MemberAccess","src":"2915:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"initializationExpression":{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"i","nameLocation":"2904:1:5","nodeType":"VariableDeclaration","scope":874,"src":"2896:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":850,"initialValue":{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:5"},"loopExpression":{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:5","subExpression":{"id":855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2934:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"2932:3:5"},"nodeType":"ForStatement","src":"2891:158:5"},{"expression":{"id":875,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3066:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":820,"id":876,"nodeType":"Return","src":"3059:20:5"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"2383:146:5","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":878,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:5","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:5","nodeType":"VariableDeclaration","scope":878,"src":"2567:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":811,"nodeType":"ArrayTypeName","src":"2567:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"ids","nameLocation":"2619:3:5","nodeType":"VariableDeclaration","scope":878,"src":"2602:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"2602:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"2658:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ArrayTypeName","src":"2658:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:5"},"scope":1605,"src":"2534:552:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1687],"body":{"id":893,"nodeType":"Block","src":"3229:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":887,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3258:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3272:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3282:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":886,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3239:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"3239:52:5"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"3092:57:5","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":894,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:5","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"operator","nameLocation":"3189:8:5","nodeType":"VariableDeclaration","scope":894,"src":"3181:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"approved","nameLocation":"3204:8:5","nodeType":"VariableDeclaration","scope":894,"src":"3199:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":882,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:5"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"3229:0:5"},"scope":1605,"src":"3154:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1697],"body":{"id":910,"nodeType":"Block","src":"3461:61:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":904,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"3478:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":906,"indexExpression":{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3497:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":908,"indexExpression":{"id":907,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"3506:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":903,"id":909,"nodeType":"Return","src":"3471:44:5"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"3304:56:5","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":911,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:5","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"account","nameLocation":"3399:7:5","nodeType":"VariableDeclaration","scope":911,"src":"3391:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"operator","nameLocation":"3416:8:5","nodeType":"VariableDeclaration","scope":911,"src":"3408:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:5"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"3455:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":901,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:5"},"scope":1605,"src":"3365:157:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1711],"body":{"id":954,"nodeType":"Block","src":"3702:238:5","statements":[{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"sender","nameLocation":"3720:6:5","nodeType":"VariableDeclaration","scope":954,"src":"3712:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":927,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3729:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3755:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":931,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3763:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:5","subExpression":{"arguments":[{"id":934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3791:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3797:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"3774:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"3751:129:5","trueBody":{"id":944,"nodeType":"Block","src":"3806:74:5","statements":[{"errorCall":{"arguments":[{"id":940,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3856:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3864:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":939,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3827:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"RevertStatement","src":"3820:49:5"}]}},{"expression":{"arguments":[{"id":947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3907:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3913:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3917:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3921:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":951,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3928:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":946,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3889:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"3889:44:5"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"3528:56:5","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"from","nameLocation":"3623:4:5","nodeType":"VariableDeclaration","scope":955,"src":"3615:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"to","nameLocation":"3637:2:5","nodeType":"VariableDeclaration","scope":955,"src":"3629:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"id","nameLocation":"3649:2:5","nodeType":"VariableDeclaration","scope":955,"src":"3641:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"3661:5:5","nodeType":"VariableDeclaration","scope":955,"src":"3653:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"3681:4:5","nodeType":"VariableDeclaration","scope":955,"src":"3668:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:5"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"3702:0:5"},"scope":1605,"src":"3589:351:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1727],"body":{"id":1000,"nodeType":"Block","src":"4196:245:5","statements":[{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"sender","nameLocation":"4214:6:5","nodeType":"VariableDeclaration","scope":1000,"src":"4206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":975,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":973,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4223:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4249:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":977,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4257:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:5","subExpression":{"arguments":[{"id":980,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4285:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4291:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4268:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"4245:129:5","trueBody":{"id":990,"nodeType":"Block","src":"4300:74:5","statements":[{"errorCall":{"arguments":[{"id":986,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4350:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4358:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":985,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"4321:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"RevertStatement","src":"4314:49:5"}]}},{"expression":{"arguments":[{"id":993,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4406:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4412:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4416:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":996,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4421:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4429:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":992,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"4383:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"4383:51:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"3946:61:5","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:5","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"from","nameLocation":"4060:4:5","nodeType":"VariableDeclaration","scope":1001,"src":"4052:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"to","nameLocation":"4082:2:5","nodeType":"VariableDeclaration","scope":1001,"src":"4074:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"ids","nameLocation":"4111:3:5","nodeType":"VariableDeclaration","scope":1001,"src":"4094:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ArrayTypeName","src":"4094:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"values","nameLocation":"4141:6:5","nodeType":"VariableDeclaration","scope":1001,"src":"4124:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ArrayTypeName","src":"4124:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"data","nameLocation":"4170:4:5","nodeType":"VariableDeclaration","scope":1001,"src":"4157:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:5"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"4196:0:5"},"scope":1605,"src":"4012:429:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1153,"nodeType":"Block","src":"5249:1174:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5263:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:5","memberName":"length","nodeType":"MemberAccess","src":"5263:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1017,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5277:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:5","memberName":"length","nodeType":"MemberAccess","src":"5277:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"5259:117:5","trueBody":{"id":1027,"nodeType":"Block","src":"5292:84:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":1021,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5339:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:5","memberName":"length","nodeType":"MemberAccess","src":"5339:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1023,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5351:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:5","memberName":"length","nodeType":"MemberAccess","src":"5351:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1020,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5313:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"RevertStatement","src":"5306:59:5"}]}},{"assignments":[1030],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"5394:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"5386:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1033,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1031,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5405:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:5"},{"body":{"id":1114,"nodeType":"Block","src":"5469:650:5","statements":[{"assignments":[1046],"declarations":[{"constant":false,"id":1046,"mutability":"mutable","name":"id","nameLocation":"5491:2:5","nodeType":"VariableDeclaration","scope":1114,"src":"5483:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"id":1049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5519:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1047,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5496:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"5496:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:5"},{"assignments":[1053],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"value","nameLocation":"5543:5:5","nodeType":"VariableDeclaration","scope":1114,"src":"5535:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1058,"initialValue":{"arguments":[{"id":1056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5577:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1054,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5551:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"5551:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5598:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:5","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"5594:420:5","trueBody":{"id":1096,"nodeType":"Block","src":"5618:396:5","statements":[{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:5","nodeType":"VariableDeclaration","scope":1096,"src":"5636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1072,"initialValue":{"baseExpression":{"baseExpression":{"id":1067,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5658:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1069,"indexExpression":{"id":1068,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5668:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1071,"indexExpression":{"id":1070,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5672:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5699:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5713:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"IfStatement","src":"5695:129:5","trueBody":{"id":1083,"nodeType":"Block","src":"5720:104:5","statements":[{"errorCall":{"arguments":[{"id":1077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5776:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5782:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5795:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1080,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5802:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5749:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"RevertStatement","src":"5742:63:5"}]}},{"id":1095,"nodeType":"UncheckedBlock","src":"5841:159:5","statements":[{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1085,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5940:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1088,"indexExpression":{"id":1086,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5950:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1089,"indexExpression":{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5954:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5962:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5976:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"5940:41:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6032:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:5","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"IfStatement","src":"6028:81:5","trueBody":{"id":1112,"nodeType":"Block","src":"6050:59:5","statements":[{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1104,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6068:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1107,"indexExpression":{"id":1105,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6078:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1108,"indexExpression":{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6082:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6089:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"6068:26:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1039,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5452:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:5","memberName":"length","nodeType":"MemberAccess","src":"5452:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"initializationExpression":{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"i","nameLocation":"5441:1:5","nodeType":"VariableDeclaration","scope":1115,"src":"5433:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"initialValue":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:5"},"loopExpression":{"expression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:5","subExpression":{"id":1042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5466:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"nodeType":"ExpressionStatement","src":"5464:3:5"},"nodeType":"ForStatement","src":"5428:691:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1116,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6133:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:5","memberName":"length","nodeType":"MemberAccess","src":"6133:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1151,"nodeType":"Block","src":"6341:76:5","statements":[{"eventCall":{"arguments":[{"id":1144,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6374:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1145,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6384:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6390:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6394:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1148,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6399:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1143,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6360:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"EmitStatement","src":"6355:51:5"}]},"id":1152,"nodeType":"IfStatement","src":"6129:288:5","trueBody":{"id":1142,"nodeType":"Block","src":"6150:185:5","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"id","nameLocation":"6172:2:5","nodeType":"VariableDeclaration","scope":1142,"src":"6164:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1126,"initialValue":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1122,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6177:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"6177:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:5"},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"6224:5:5","nodeType":"VariableDeclaration","scope":1142,"src":"6216:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1129,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6232:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"6232:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:5"},{"eventCall":{"arguments":[{"id":1135,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6294:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6304:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6310:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6314:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6318:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1134,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6279:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"EmitStatement","src":"6274:50:5"}]}}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"4447:690:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:5","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"from","nameLocation":"5167:4:5","nodeType":"VariableDeclaration","scope":1154,"src":"5159:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"to","nameLocation":"5181:2:5","nodeType":"VariableDeclaration","scope":1154,"src":"5173:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"ids","nameLocation":"5202:3:5","nodeType":"VariableDeclaration","scope":1154,"src":"5185:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ArrayTypeName","src":"5185:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"values","nameLocation":"5224:6:5","nodeType":"VariableDeclaration","scope":1154,"src":"5207:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ArrayTypeName","src":"5207:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:5"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"5249:0:5"},"scope":1605,"src":"5142:1281:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"7193:509:5","statements":[{"expression":{"arguments":[{"id":1171,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7211:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7217:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1173,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7221:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1174,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7226:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1170,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"7203:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"7203:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7247:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:5","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"7243:453:5","trueBody":{"id":1231,"nodeType":"Block","src":"7265:431:5","statements":[{"assignments":[1184],"declarations":[{"constant":false,"id":1184,"mutability":"mutable","name":"operator","nameLocation":"7287:8:5","nodeType":"VariableDeclaration","scope":1231,"src":"7279:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1185,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"7298:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1188,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7328:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:5","memberName":"length","nodeType":"MemberAccess","src":"7328:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1229,"nodeType":"Block","src":"7574:112:5","statements":[{"expression":{"arguments":[{"id":1221,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7633:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1222,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7643:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7649:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7653:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1225,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7658:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1226,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7666:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1218,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7592:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1940_$","typeString":"type(library ERC1155Utils)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:5","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"7592:40:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"7592:79:5"}]},"id":1230,"nodeType":"IfStatement","src":"7324:362:5","trueBody":{"id":1217,"nodeType":"Block","src":"7345:223:5","statements":[{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"id","nameLocation":"7371:2:5","nodeType":"VariableDeclaration","scope":1217,"src":"7363:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1198,"initialValue":{"arguments":[{"hexValue":"30","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1194,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7376:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"7376:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:5"},{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"7427:5:5","nodeType":"VariableDeclaration","scope":1217,"src":"7419:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1205,"initialValue":{"arguments":[{"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1201,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7435:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"7435:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:5"},{"expression":{"arguments":[{"id":1209,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7517:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7527:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7533:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7537:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7541:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7548:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1206,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7481:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1940_$","typeString":"type(library ERC1155Utils)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:5","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"7481:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"7481:72:5"}]}}]}}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"6429:568:5","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:5","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"from","nameLocation":"7055:4:5","nodeType":"VariableDeclaration","scope":1234,"src":"7047:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"to","nameLocation":"7077:2:5","nodeType":"VariableDeclaration","scope":1234,"src":"7069:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"ids","nameLocation":"7106:3:5","nodeType":"VariableDeclaration","scope":1234,"src":"7089:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ArrayTypeName","src":"7089:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"values","nameLocation":"7136:6:5","nodeType":"VariableDeclaration","scope":1234,"src":"7119:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ArrayTypeName","src":"7119:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"data","nameLocation":"7165:4:5","nodeType":"VariableDeclaration","scope":1234,"src":"7152:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"7193:0:5"},"scope":1605,"src":"7002:700:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"8267:355:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8281:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:5","typeDescriptions":{}}},"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1262,"nodeType":"IfStatement","src":"8277:88:5","trueBody":{"id":1261,"nodeType":"Block","src":"8299:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:5","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1254,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8320:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"RevertStatement","src":"8313:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8378:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:5","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1277,"nodeType":"IfStatement","src":"8374:88:5","trueBody":{"id":1276,"nodeType":"Block","src":"8398:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:5","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1269,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8419:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"RevertStatement","src":"8412:39:5"}]}},{"assignments":[1282,1285],"declarations":[{"constant":false,"id":1282,"mutability":"mutable","name":"ids","nameLocation":"8489:3:5","nodeType":"VariableDeclaration","scope":1299,"src":"8472:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1281,"nodeType":"ArrayTypeName","src":"8472:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"values","nameLocation":"8511:6:5","nodeType":"VariableDeclaration","scope":1299,"src":"8494:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1284,"nodeType":"ArrayTypeName","src":"8494:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1287,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"8540:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"8544:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"8521:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:5"},{"expression":{"arguments":[{"id":1292,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8587:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8593:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"8597:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1295,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"8602:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1296,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"8610:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1291,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"8560:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"8560:55:5"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"7708:446:5","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:5","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"from","nameLocation":"8194:4:5","nodeType":"VariableDeclaration","scope":1300,"src":"8186:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"to","nameLocation":"8208:2:5","nodeType":"VariableDeclaration","scope":1300,"src":"8200:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"id","nameLocation":"8220:2:5","nodeType":"VariableDeclaration","scope":1300,"src":"8212:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"8232:5:5","nodeType":"VariableDeclaration","scope":1300,"src":"8224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"data","nameLocation":"8252:4:5","nodeType":"VariableDeclaration","scope":1300,"src":"8239:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1244,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:5"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[],"src":"8267:0:5"},"scope":1605,"src":"8159:463:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"9202:266:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9216:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:5","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"IfStatement","src":"9212:88:5","trueBody":{"id":1329,"nodeType":"Block","src":"9234:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:5","typeDescriptions":{}}},"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1322,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"9255:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"RevertStatement","src":"9248:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1331,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"9313:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:5","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"nodeType":"IfStatement","src":"9309:88:5","trueBody":{"id":1344,"nodeType":"Block","src":"9333:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:5","typeDescriptions":{}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1337,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"9354:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"RevertStatement","src":"9347:39:5"}]}},{"expression":{"arguments":[{"id":1347,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"9433:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9439:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9443:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1350,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"9448:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1351,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"9456:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1346,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9406:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"9406:55:5"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"8628:390:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:5","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"from","nameLocation":"9072:4:5","nodeType":"VariableDeclaration","scope":1355,"src":"9064:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"to","nameLocation":"9094:2:5","nodeType":"VariableDeclaration","scope":1355,"src":"9086:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"ids","nameLocation":"9123:3:5","nodeType":"VariableDeclaration","scope":1355,"src":"9106:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"nodeType":"ArrayTypeName","src":"9106:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"values","nameLocation":"9153:6:5","nodeType":"VariableDeclaration","scope":1355,"src":"9136:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1310,"nodeType":"ArrayTypeName","src":"9136:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"data","nameLocation":"9182:4:5","nodeType":"VariableDeclaration","scope":1355,"src":"9169:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1312,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:5"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[],"src":"9202:0:5"},"scope":1605,"src":"9023:445:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1365,"nodeType":"Block","src":"10346:30:5","statements":[{"expression":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1361,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"10356:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1362,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"10363:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1364,"nodeType":"ExpressionStatement","src":"10356:13:5"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"9474:811:5","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:5","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:5","nodeType":"VariableDeclaration","scope":1366,"src":"10307:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1357,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:5"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"10346:0:5"},"scope":1605,"src":"10290:86:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1417,"nodeType":"Block","src":"10836:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:5","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"10846:88:5","trueBody":{"id":1391,"nodeType":"Block","src":"10868:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:5","typeDescriptions":{}}},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1384,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"10889:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"RevertStatement","src":"10882:41:5"}]}},{"assignments":[1397,1400],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"ids","nameLocation":"10961:3:5","nodeType":"VariableDeclaration","scope":1417,"src":"10944:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1396,"nodeType":"ArrayTypeName","src":"10944:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"values","nameLocation":"10983:6:5","nodeType":"VariableDeclaration","scope":1417,"src":"10966:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ArrayTypeName","src":"10966:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[{"id":1402,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"11012:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"11016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1401,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10993:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:5","typeDescriptions":{}}},"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11071:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1412,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"11075:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1413,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"11080:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1414,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"11088:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1406,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"11032:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"ExpressionStatement","src":"11032:61:5"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"10382:367:5","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1418,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:5","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"to","nameLocation":"10777:2:5","nodeType":"VariableDeclaration","scope":1418,"src":"10769:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"id","nameLocation":"10789:2:5","nodeType":"VariableDeclaration","scope":1418,"src":"10781:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"value","nameLocation":"10801:5:5","nodeType":"VariableDeclaration","scope":1418,"src":"10793:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"data","nameLocation":"10821:4:5","nodeType":"VariableDeclaration","scope":1418,"src":"10808:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1374,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:5"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"10836:0:5"},"scope":1605,"src":"10754:346:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1458,"nodeType":"Block","src":"11638:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"11652:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:5","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"11648:88:5","trueBody":{"id":1445,"nodeType":"Block","src":"11670:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:5","typeDescriptions":{}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1438,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"11691:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"RevertStatement","src":"11684:41:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:5","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"11784:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"11788:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1454,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11793:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"11801:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1447,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"11745:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"11745:61:5"}]},"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"11106:420:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:5","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"to","nameLocation":"11559:2:5","nodeType":"VariableDeclaration","scope":1459,"src":"11551:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"ids","nameLocation":"11580:3:5","nodeType":"VariableDeclaration","scope":1459,"src":"11563:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ArrayTypeName","src":"11563:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"values","nameLocation":"11602:6:5","nodeType":"VariableDeclaration","scope":1459,"src":"11585:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ArrayTypeName","src":"11585:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"data","nameLocation":"11623:4:5","nodeType":"VariableDeclaration","scope":1459,"src":"11610:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1428,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:5"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"11638:0:5"},"scope":1605,"src":"11531:282:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"12172:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"12186:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:5","typeDescriptions":{}}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1483,"nodeType":"IfStatement","src":"12182:88:5","trueBody":{"id":1482,"nodeType":"Block","src":"12206:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:5","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1475,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"12227:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1481,"nodeType":"RevertStatement","src":"12220:39:5"}]}},{"assignments":[1488,1491],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"ids","nameLocation":"12297:3:5","nodeType":"VariableDeclaration","scope":1508,"src":"12280:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ArrayTypeName","src":"12280:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"values","nameLocation":"12319:6:5","nodeType":"VariableDeclaration","scope":1508,"src":"12302:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ArrayTypeName","src":"12302:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1496,"initialValue":{"arguments":[{"id":1493,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"12348:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"12352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1492,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"12329:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:5"},{"expression":{"arguments":[{"id":1498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"12395:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:5","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1503,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"12413:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1504,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"12418:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1497,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"12368:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"12368:61:5"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"11819:283:5","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:5","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"from","nameLocation":"12130:4:5","nodeType":"VariableDeclaration","scope":1509,"src":"12122:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"id","nameLocation":"12144:2:5","nodeType":"VariableDeclaration","scope":1509,"src":"12136:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"value","nameLocation":"12156:5:5","nodeType":"VariableDeclaration","scope":1509,"src":"12148:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:5"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"12172:0:5"},"scope":1605,"src":"12107:329:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1547,"nodeType":"Block","src":"12882:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"12896:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:5","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"12892:88:5","trueBody":{"id":1534,"nodeType":"Block","src":"12916:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:5","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1527,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"12937:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"RevertStatement","src":"12930:39:5"}]}},{"expression":{"arguments":[{"id":1537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"13016:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:5","typeDescriptions":{}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"13034:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1543,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"13039:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1536,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"12989:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"ExpressionStatement","src":"12989:61:5"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"12442:345:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1548,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:5","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"from","nameLocation":"12820:4:5","nodeType":"VariableDeclaration","scope":1548,"src":"12812:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"ids","nameLocation":"12843:3:5","nodeType":"VariableDeclaration","scope":1548,"src":"12826:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"nodeType":"ArrayTypeName","src":"12826:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"values","nameLocation":"12865:6:5","nodeType":"VariableDeclaration","scope":1548,"src":"12848:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"nodeType":"ArrayTypeName","src":"12848:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:5"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"12882:0:5"},"scope":1605,"src":"12792:265:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"13369:222:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"13383:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:5","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"13379:94:5","trueBody":{"id":1571,"nodeType":"Block","src":"13407:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:5","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1564,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"13428:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"RevertStatement","src":"13421:41:5"}]}},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1573,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"13482:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1576,"indexExpression":{"id":1574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"13501:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1577,"indexExpression":{"id":1575,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"13508:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1578,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"13520:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1580,"nodeType":"ExpressionStatement","src":"13482:46:5"},{"eventCall":{"arguments":[{"id":1582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"13558:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"13565:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"13575:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1581,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"13543:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"EmitStatement","src":"13538:46:5"}]},"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"13063:208:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:5","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"owner","nameLocation":"13312:5:5","nodeType":"VariableDeclaration","scope":1588,"src":"13304:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"operator","nameLocation":"13327:8:5","nodeType":"VariableDeclaration","scope":1588,"src":"13319:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"approved","nameLocation":"13342:8:5","nodeType":"VariableDeclaration","scope":1588,"src":"13337:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1554,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:5"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[],"src":"13369:0:5"},"scope":1605,"src":"13276:315:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"13865:664:5","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:5","statements":[{"nodeType":"YulAssignment","src":"13958:21:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:5"},"nodeType":"YulFunctionCall","src":"13968:11:5"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:5"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:5"},"nodeType":"YulFunctionCall","src":"14029:17:5"},"nodeType":"YulExpressionStatement","src":"14029:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:5"},"nodeType":"YulFunctionCall","src":"14163:17:5"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:5"},"nodeType":"YulFunctionCall","src":"14156:35:5"},"nodeType":"YulExpressionStatement","src":"14156:35:5"},{"nodeType":"YulAssignment","src":"14282:27:5","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:5"},"nodeType":"YulFunctionCall","src":"14292:17:5"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:5"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:5"},"nodeType":"YulFunctionCall","src":"14322:17:5"},"nodeType":"YulExpressionStatement","src":"14322:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:5"},"nodeType":"YulFunctionCall","src":"14359:17:5"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:5"},"nodeType":"YulFunctionCall","src":"14352:35:5"},"nodeType":"YulExpressionStatement","src":"14352:35:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:5","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:5"},"nodeType":"YulFunctionCall","src":"14495:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:5"},"nodeType":"YulFunctionCall","src":"14482:31:5"},"nodeType":"YulExpressionStatement","src":"14482:31:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1597,"isOffset":false,"isSlot":false,"src":"13958:6:5","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"14036:6:5","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"14167:6:5","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"14296:6:5","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":false,"src":"14282:6:5","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":false,"src":"14329:6:5","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":false,"src":"14363:6:5","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":false,"src":"14499:6:5","valueSize":1},{"declaration":1591,"isOffset":false,"isSlot":false,"src":"14182:8:5","valueSize":1},{"declaration":1593,"isOffset":false,"isSlot":false,"src":"14378:8:5","valueSize":1}],"flags":["memory-safe"],"id":1602,"nodeType":"InlineAssembly","src":"13875:648:5"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"13597:105:5","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:5","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"element1","nameLocation":"13752:8:5","nodeType":"VariableDeclaration","scope":1604,"src":"13744:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"element2","nameLocation":"13778:8:5","nodeType":"VariableDeclaration","scope":1604,"src":"13770:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:5"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"array1","nameLocation":"13832:6:5","nodeType":"VariableDeclaration","scope":1604,"src":"13815:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1596,"nodeType":"ArrayTypeName","src":"13815:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"array2","nameLocation":"13857:6:5","nodeType":"VariableDeclaration","scope":1604,"src":"13840:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ArrayTypeName","src":"13840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:5"},"scope":1605,"src":"13707:822:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1606,"src":"725:13806:5","usedErrors":[653,658,663,670,675,680,687],"usedEvents":[1625,1640,1649,1656]}],"src":"109:14423:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1728],"IERC165":[6636]},"id":1729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1607,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1729,"sourceUnit":6637,"src":"136:62:6","symbolAliases":[{"foreign":{"id":1608,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"144:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1611,"name":"IERC165","nameLocations":["359:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":6636,"src":"359:7:6"},"id":1612,"nodeType":"InheritanceSpecifier","src":"359:7:6"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"200:136:6","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1728,"linearizedBaseContracts":[1728,6636],"name":"IERC1155","nameLocation":"347:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"373:125:6","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1625,"name":"TransferSingle","nameLocation":"509:14:6","nodeType":"EventDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:6","nodeType":"VariableDeclaration","scope":1625,"src":"524:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1617,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:6","nodeType":"VariableDeclaration","scope":1625,"src":"550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:6","nodeType":"VariableDeclaration","scope":1625,"src":"572:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:6","nodeType":"VariableDeclaration","scope":1625,"src":"592:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1623,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":1625,"src":"604:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:6"},"src":"503:116:6"},{"anonymous":false,"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"625:144:6","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1640,"name":"TransferBatch","nameLocation":"780:13:6","nodeType":"EventDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:6","nodeType":"VariableDeclaration","scope":1640,"src":"803:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1630,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:6","nodeType":"VariableDeclaration","scope":1640,"src":"837:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:6","nodeType":"VariableDeclaration","scope":1640,"src":"867:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:6","nodeType":"VariableDeclaration","scope":1640,"src":"895:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ArrayTypeName","src":"895:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1638,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:6","nodeType":"VariableDeclaration","scope":1640,"src":"918:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1637,"nodeType":"ArrayTypeName","src":"918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:6"},"src":"774:167:6"},{"anonymous":false,"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"947:147:6","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1649,"name":"ApprovalForAll","nameLocation":"1105:14:6","nodeType":"EventDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:6","nodeType":"VariableDeclaration","scope":1649,"src":"1120:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:6","nodeType":"VariableDeclaration","scope":1649,"src":"1145:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1647,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:6","nodeType":"VariableDeclaration","scope":1649,"src":"1171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1646,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:6"},"src":"1099:87:6"},{"anonymous":false,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1192:343:6","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1656,"name":"URI","nameLocation":"1546:3:6","nodeType":"EventDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:6","nodeType":"VariableDeclaration","scope":1656,"src":"1550:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1651,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1654,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:6","nodeType":"VariableDeclaration","scope":1656,"src":"1564:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:6"},"src":"1540:44:6"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"1590:90:6","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1666,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:6","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"account","nameLocation":"1712:7:6","nodeType":"VariableDeclaration","scope":1666,"src":"1704:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"id","nameLocation":"1729:2:6","nodeType":"VariableDeclaration","scope":1666,"src":"1721:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:6"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"1756:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:6"},"scope":1728,"src":"1685:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"1771:188:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1679,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:6","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:6","nodeType":"VariableDeclaration","scope":1679,"src":"1997:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1669,"nodeType":"ArrayTypeName","src":"1997:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"ids","nameLocation":"2053:3:6","nodeType":"VariableDeclaration","scope":1679,"src":"2034:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"nodeType":"ArrayTypeName","src":"2034:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:6"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1679,"src":"2086:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1676,"nodeType":"ArrayTypeName","src":"2086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:6"},"scope":1728,"src":"1964:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"2110:254:6","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1687,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:6","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"operator","nameLocation":"2404:8:6","nodeType":"VariableDeclaration","scope":1687,"src":"2396:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"approved","nameLocation":"2419:8:6","nodeType":"VariableDeclaration","scope":1687,"src":"2414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:6"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"2437:0:6"},"scope":1728,"src":"2369:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2444:135:6","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1697,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:6","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"account","nameLocation":"2618:7:6","nodeType":"VariableDeclaration","scope":1697,"src":"2610:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"operator","nameLocation":"2635:8:6","nodeType":"VariableDeclaration","scope":1697,"src":"2627:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:6"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"2668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1694,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:6"},"scope":1728,"src":"2584:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"2680:927:6","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1711,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:6","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"from","nameLocation":"3646:4:6","nodeType":"VariableDeclaration","scope":1711,"src":"3638:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"to","nameLocation":"3660:2:6","nodeType":"VariableDeclaration","scope":1711,"src":"3652:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"id","nameLocation":"3672:2:6","nodeType":"VariableDeclaration","scope":1711,"src":"3664:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"value","nameLocation":"3684:5:6","nodeType":"VariableDeclaration","scope":1711,"src":"3676:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"data","nameLocation":"3706:4:6","nodeType":"VariableDeclaration","scope":1711,"src":"3691:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:6"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"3720:0:6"},"scope":1728,"src":"3612:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"3727:831:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1727,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:6","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"from","nameLocation":"4611:4:6","nodeType":"VariableDeclaration","scope":1727,"src":"4603:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"to","nameLocation":"4633:2:6","nodeType":"VariableDeclaration","scope":1727,"src":"4625:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"ids","nameLocation":"4664:3:6","nodeType":"VariableDeclaration","scope":1727,"src":"4645:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1718,"nodeType":"ArrayTypeName","src":"4645:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"values","nameLocation":"4696:6:6","nodeType":"VariableDeclaration","scope":1727,"src":"4677:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1721,"nodeType":"ArrayTypeName","src":"4677:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"data","nameLocation":"4727:4:6","nodeType":"VariableDeclaration","scope":1727,"src":"4712:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:6"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"4746:0:6"},"scope":1728,"src":"4563:184:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1729,"src":"337:4412:6","usedErrors":[],"usedEvents":[1625,1640,1649,1656]}],"src":"110:4640:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1770],"IERC165":[6636]},"id":1771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1730,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1771,"sourceUnit":6637,"src":"144:62:7","symbolAliases":[{"foreign":{"id":1731,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"152:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1734,"name":"IERC165","nameLocations":["357:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":6636,"src":"357:7:7"},"id":1735,"nodeType":"InheritanceSpecifier","src":"357:7:7"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"208:118:7","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1770,"linearizedBaseContracts":[1770,6636],"name":"IERC1155Receiver","nameLocation":"337:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"371:827:7","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:7","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"operator","nameLocation":"1247:8:7","nodeType":"VariableDeclaration","scope":1751,"src":"1239:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"from","nameLocation":"1273:4:7","nodeType":"VariableDeclaration","scope":1751,"src":"1265:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"id","nameLocation":"1295:2:7","nodeType":"VariableDeclaration","scope":1751,"src":"1287:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"1315:5:7","nodeType":"VariableDeclaration","scope":1751,"src":"1307:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"data","nameLocation":"1345:4:7","nodeType":"VariableDeclaration","scope":1751,"src":"1330:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:7"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"1374:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1748,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:7"},"scope":1770,"src":"1203:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"1388:995:7","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1769,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:7","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"operator","nameLocation":"2437:8:7","nodeType":"VariableDeclaration","scope":1769,"src":"2429:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"from","nameLocation":"2463:4:7","nodeType":"VariableDeclaration","scope":1769,"src":"2455:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"ids","nameLocation":"2496:3:7","nodeType":"VariableDeclaration","scope":1769,"src":"2477:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ArrayTypeName","src":"2477:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"values","nameLocation":"2528:6:7","nodeType":"VariableDeclaration","scope":1769,"src":"2509:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1761,"nodeType":"ArrayTypeName","src":"2509:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"data","nameLocation":"2559:4:7","nodeType":"VariableDeclaration","scope":1769,"src":"2544:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:7"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1769,"src":"2588:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1766,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:7"},"scope":1770,"src":"2388:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1771,"src":"327:2271:7","usedErrors":[],"usedEvents":[]}],"src":"118:2481:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1728],"IERC1155MetadataURI":[1786]},"id":1787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1774,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1787,"sourceUnit":1729,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1773,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1776,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1728,"src":"399:8:8"},"id":1777,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1786,"linearizedBaseContracts":[1786,1728,6636],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1785,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1782,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1786,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1787,"src":"366:310:8","usedErrors":[],"usedEvents":[1625,1640,1649,1656]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1940],"IERC1155Errors":[688],"IERC1155Receiver":[1770]},"id":1941,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1788,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1941,"sourceUnit":1771,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1789,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1941,"sourceUnit":689,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1791,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1940,"linearizedBaseContracts":[1940],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1864,"nodeType":"Block","src":"1191:774:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1205:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:9","memberName":"code","nodeType":"MemberAccess","src":"1205:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:9","memberName":"length","nodeType":"MemberAccess","src":"1205:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"1201:758:9","trueBody":{"id":1862,"nodeType":"Block","src":"1225:734:9","statements":[{"clauses":[{"block":{"id":1840,"nodeType":"Block","src":"1341:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1827,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"1363:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1828,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1375:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1770_$","typeString":"type(contract IERC1155Receiver)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1751,"src":"1375:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"IfStatement","src":"1359:189:9","trueBody":{"id":1838,"nodeType":"Block","src":"1420:128:9","statements":[{"errorCall":{"arguments":[{"id":1835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1526:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1832,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1488:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$688_$","typeString":"type(contract IERC1155Errors)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":663,"src":"1488:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1837,"nodeType":"RevertStatement","src":"1481:48:9"}]}}]},"errorName":"","id":1841,"nodeType":"TryCatchClause","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"response","nameLocation":"1331:8:9","nodeType":"VariableDeclaration","scope":1841,"src":"1324:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1824,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:9"},"src":"1315:247:9"},{"block":{"id":1859,"nodeType":"Block","src":"1591:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1845,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:9","memberName":"length","nodeType":"MemberAccess","src":"1613:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1857,"nodeType":"Block","src":"1784:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1872:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:9"},"nodeType":"YulFunctionCall","src":"1864:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1887:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1881:5:9"},"nodeType":"YulFunctionCall","src":"1881:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:9"},"nodeType":"YulFunctionCall","src":"1857:38:9"},"nodeType":"YulExpressionStatement","src":"1857:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1843,"isOffset":false,"isSlot":false,"src":"1872:6:9","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"1887:6:9","valueSize":1}],"flags":["memory-safe"],"id":1856,"nodeType":"InlineAssembly","src":"1806:111:9"}]},"id":1858,"nodeType":"IfStatement","src":"1609:326:9","trueBody":{"id":1855,"nodeType":"Block","src":"1633:145:9","statements":[{"errorCall":{"arguments":[{"id":1852,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1756:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1849,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"1718:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$688_$","typeString":"type(contract IERC1155Errors)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":663,"src":"1718:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"1711:48:9"}]}}]},"errorName":"","id":1860,"nodeType":"TryCatchClause","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"reason","nameLocation":"1583:6:9","nodeType":"VariableDeclaration","scope":1860,"src":"1570:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1842,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:9"},"src":"1563:386:9"}],"externalCall":{"arguments":[{"id":1818,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1282:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1819,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"1292:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1820,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1298:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1309:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1260:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1814,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"1243:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1770_$","typeString":"type(contract IERC1155Receiver)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1770","typeString":"contract IERC1155Receiver"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1751,"src":"1243:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1861,"nodeType":"TryStatement","src":"1239:710:9"}]}}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"466:535:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:9","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"operator","nameLocation":"1055:8:9","nodeType":"VariableDeclaration","scope":1865,"src":"1047:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"from","nameLocation":"1081:4:9","nodeType":"VariableDeclaration","scope":1865,"src":"1073:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"to","nameLocation":"1103:2:9","nodeType":"VariableDeclaration","scope":1865,"src":"1095:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"id","nameLocation":"1123:2:9","nodeType":"VariableDeclaration","scope":1865,"src":"1115:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"value","nameLocation":"1143:5:9","nodeType":"VariableDeclaration","scope":1865,"src":"1135:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"data","nameLocation":"1171:4:9","nodeType":"VariableDeclaration","scope":1865,"src":"1158:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1805,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:9"},"returnParameters":{"id":1808,"nodeType":"ParameterList","parameters":[],"src":"1191:0:9"},"scope":1940,"src":"1006:959:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"2731:816:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2745:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:4:9","memberName":"code","nodeType":"MemberAccess","src":"2745:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:9","memberName":"length","nodeType":"MemberAccess","src":"2745:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1937,"nodeType":"IfStatement","src":"2741:800:9","trueBody":{"id":1936,"nodeType":"Block","src":"2765:776:9","statements":[{"clauses":[{"block":{"id":1914,"nodeType":"Block","src":"2918:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"2940:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1902,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2952:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1770_$","typeString":"type(contract IERC1155Receiver)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2969:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1769,"src":"2952:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2992:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2952:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2940:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"2936:194:9","trueBody":{"id":1912,"nodeType":"Block","src":"3002:128:9","statements":[{"errorCall":{"arguments":[{"id":1909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3108:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1906,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3070:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$688_$","typeString":"type(contract IERC1155Errors)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":663,"src":"3070:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"RevertStatement","src":"3063:48:9"}]}}]},"errorName":"","id":1915,"nodeType":"TryCatchClause","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"response","nameLocation":"2895:8:9","nodeType":"VariableDeclaration","scope":1915,"src":"2888:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1898,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2888:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2870:47:9"},"src":"2862:282:9"},{"block":{"id":1933,"nodeType":"Block","src":"3173:358:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1919,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"3195:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:9","memberName":"length","nodeType":"MemberAccess","src":"3195:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3195:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1931,"nodeType":"Block","src":"3366:151:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3413:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3450:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3454:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:9"},"nodeType":"YulFunctionCall","src":"3446:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3469:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3463:5:9"},"nodeType":"YulFunctionCall","src":"3463:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3439:6:9"},"nodeType":"YulFunctionCall","src":"3439:38:9"},"nodeType":"YulExpressionStatement","src":"3439:38:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1917,"isOffset":false,"isSlot":false,"src":"3454:6:9","valueSize":1},{"declaration":1917,"isOffset":false,"isSlot":false,"src":"3469:6:9","valueSize":1}],"flags":["memory-safe"],"id":1930,"nodeType":"InlineAssembly","src":"3388:111:9"}]},"id":1932,"nodeType":"IfStatement","src":"3191:326:9","trueBody":{"id":1929,"nodeType":"Block","src":"3215:145:9","statements":[{"errorCall":{"arguments":[{"id":1926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3338:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1923,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3300:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$688_$","typeString":"type(contract IERC1155Errors)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":663,"src":"3300:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"RevertStatement","src":"3293:48:9"}]}}]},"errorName":"","id":1934,"nodeType":"TryCatchClause","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"reason","nameLocation":"3165:6:9","nodeType":"VariableDeclaration","scope":1934,"src":"3152:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"3152:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3151:21:9"},"src":"3145:386:9"}],"externalCall":{"arguments":[{"id":1892,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2827:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"2837:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2843:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1895,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"2848:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2856:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2800:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1888,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2783:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1770_$","typeString":"type(contract IERC1155Receiver)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1770","typeString":"contract IERC1155Receiver"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1769,"src":"2783:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1935,"nodeType":"TryStatement","src":"2779:752:9"}]}}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"1971:545:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2530:27:9","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"operator","nameLocation":"2575:8:9","nodeType":"VariableDeclaration","scope":1939,"src":"2567:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"from","nameLocation":"2601:4:9","nodeType":"VariableDeclaration","scope":1939,"src":"2593:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"to","nameLocation":"2623:2:9","nodeType":"VariableDeclaration","scope":1939,"src":"2615:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"ids","nameLocation":"2652:3:9","nodeType":"VariableDeclaration","scope":1939,"src":"2635:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ArrayTypeName","src":"2635:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"values","nameLocation":"2682:6:9","nodeType":"VariableDeclaration","scope":1939,"src":"2665:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1877,"nodeType":"ArrayTypeName","src":"2665:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"2711:4:9","nodeType":"VariableDeclaration","scope":1939,"src":"2698:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2557:164:9"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"2731:0:9"},"scope":1940,"src":"2521:1026:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1941,"src":"439:3110:9","usedErrors":[],"usedEvents":[]}],"src":"120:3430:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3769],"ERC20":[2455],"IERC20":[2533],"IERC20Errors":[593],"IERC20Metadata":[2793]},"id":2456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1942,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2534,"src":"131:36:10","symbolAliases":[{"foreign":{"id":1943,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2794,"src":"168:63:10","symbolAliases":[{"foreign":{"id":1945,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":3770,"src":"232:48:10","symbolAliases":[{"foreign":{"id":1947,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":689,"src":"281:65:10","symbolAliases":[{"foreign":{"id":1949,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1952,"name":"Context","nameLocations":["1133:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"1133:7:10"},"id":1953,"nodeType":"InheritanceSpecifier","src":"1133:7:10"},{"baseName":{"id":1954,"name":"IERC20","nameLocations":["1142:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"1142:6:10"},"id":1955,"nodeType":"InheritanceSpecifier","src":"1142:6:10"},{"baseName":{"id":1956,"name":"IERC20Metadata","nameLocations":["1150:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2793,"src":"1150:14:10"},"id":1957,"nodeType":"InheritanceSpecifier","src":"1150:14:10"},{"baseName":{"id":1958,"name":"IERC20Errors","nameLocations":["1166:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":593,"src":"1166:12:10"},"id":1959,"nodeType":"InheritanceSpecifier","src":"1166:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"348:757:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2455,"linearizedBaseContracts":[2455,593,2793,2533,3769],"name":"ERC20","nameLocation":"1124:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1963,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:10","nodeType":"VariableDeclaration","scope":2455,"src":"1185:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1962,"keyName":"account","keyNameLocation":"1201:7:10","keyType":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1969,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:10","nodeType":"VariableDeclaration","scope":2455,"src":"1245:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1968,"keyName":"account","keyNameLocation":"1261:7:10","keyType":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1967,"keyName":"spender","keyNameLocation":"1288:7:10","keyType":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1971,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:10","nodeType":"VariableDeclaration","scope":2455,"src":"1335:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1973,"mutability":"mutable","name":"_name","nameLocation":"1385:5:10","nodeType":"VariableDeclaration","scope":2455,"src":"1370:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1972,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1975,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:10","nodeType":"VariableDeclaration","scope":2455,"src":"1396:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1974,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1991,"nodeType":"Block","src":"1638:57:10","statements":[{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1983,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1984,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1986,"nodeType":"ExpressionStatement","src":"1648:13:10"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"1671:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1988,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"1681:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1990,"nodeType":"ExpressionStatement","src":"1671:17:10"}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"1425:152:10","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1992,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"name_","nameLocation":"1608:5:10","nodeType":"VariableDeclaration","scope":1992,"src":"1594:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1977,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:10","nodeType":"VariableDeclaration","scope":1992,"src":"1615:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:10"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[],"src":"1638:0:10"},"scope":2455,"src":"1582:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2780],"body":{"id":2000,"nodeType":"Block","src":"1820:29:10","statements":[{"expression":{"id":1998,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"1837:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1997,"id":1999,"nodeType":"Return","src":"1830:12:10"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"1701:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:10","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"1773:2:10"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"1805:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1995,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:10"},"scope":2455,"src":"1760:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2786],"body":{"id":2009,"nodeType":"Block","src":"2024:31:10","statements":[{"expression":{"id":2007,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2006,"id":2008,"nodeType":"Return","src":"2034:14:10"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"1855:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:10","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[],"src":"1977:2:10"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"2009:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2004,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:10"},"scope":2455,"src":"1962:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2792],"body":{"id":2018,"nodeType":"Block","src":"2744:26:10","statements":[{"expression":{"hexValue":"3138","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2015,"id":2017,"nodeType":"Return","src":"2754:9:10"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"2061:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:10","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"2705:2:10"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2019,"src":"2737:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2013,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:10"},"scope":2455,"src":"2688:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2482],"body":{"id":2027,"nodeType":"Block","src":"2891:36:10","statements":[{"expression":{"id":2025,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2908:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2024,"id":2026,"nodeType":"Return","src":"2901:19:10"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"2776:49:10","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:10","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"2850:2:10"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"2882:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:10"},"scope":2455,"src":"2830:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2490],"body":{"id":2040,"nodeType":"Block","src":"3059:42:10","statements":[{"expression":{"baseExpression":{"id":2036,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3076:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2038,"indexExpression":{"id":2037,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3086:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2035,"id":2039,"nodeType":"Return","src":"3069:25:10"}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"2933:47:10","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:10","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"account","nameLocation":"3012:7:10","nodeType":"VariableDeclaration","scope":2041,"src":"3004:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:10"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"3050:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:10"},"scope":2455,"src":"2985:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2500],"body":{"id":2064,"nodeType":"Block","src":"3371:103:10","statements":[{"assignments":[2052],"declarations":[{"constant":false,"id":2052,"mutability":"mutable","name":"owner","nameLocation":"3389:5:10","nodeType":"VariableDeclaration","scope":2064,"src":"3381:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2053,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3397:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:10"},{"expression":{"arguments":[{"id":2057,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"3429:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"3436:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"3440:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2056,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3419:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"ExpressionStatement","src":"3419:27:10"},{"expression":{"hexValue":"74727565","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2050,"id":2063,"nodeType":"Return","src":"3456:11:10"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"3107:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:10","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"to","nameLocation":"3322:2:10","nodeType":"VariableDeclaration","scope":2065,"src":"3314:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"3334:5:10","nodeType":"VariableDeclaration","scope":2065,"src":"3326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:10"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"3365:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:10"},"scope":2455,"src":"3296:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2510],"body":{"id":2081,"nodeType":"Block","src":"3621:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2075,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"3638:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2077,"indexExpression":{"id":2076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"3650:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2079,"indexExpression":{"id":2078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"3657:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2074,"id":2080,"nodeType":"Return","src":"3631:34:10"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"3480:47:10","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:10","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"owner","nameLocation":"3559:5:10","nodeType":"VariableDeclaration","scope":2082,"src":"3551:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"spender","nameLocation":"3574:7:10","nodeType":"VariableDeclaration","scope":2082,"src":"3566:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:10"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"3612:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:10"},"scope":2455,"src":"3532:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2520],"body":{"id":2105,"nodeType":"Block","src":"4058:107:10","statements":[{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"owner","nameLocation":"4076:5:10","nodeType":"VariableDeclaration","scope":2105,"src":"4068:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2096,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2094,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4084:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:10"},{"expression":{"arguments":[{"id":2098,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"4115:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4122:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4131:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2097,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2346,2406],"referencedDeclaration":2346,"src":"4106:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"ExpressionStatement","src":"4106:31:10"},{"expression":{"hexValue":"74727565","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2091,"id":2104,"nodeType":"Return","src":"4147:11:10"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"3678:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:10","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"spender","nameLocation":"4004:7:10","nodeType":"VariableDeclaration","scope":2106,"src":"3996:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"value","nameLocation":"4021:5:10","nodeType":"VariableDeclaration","scope":2106,"src":"4013:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:10"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"4052:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2089,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:10"},"scope":2455,"src":"3979:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2532],"body":{"id":2137,"nodeType":"Block","src":"4850:151:10","statements":[{"assignments":[2119],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"spender","nameLocation":"4868:7:10","nodeType":"VariableDeclaration","scope":2137,"src":"4860:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2122,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2120,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4878:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:10"},{"expression":{"arguments":[{"id":2124,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4916:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2125,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4922:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2123,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"4900:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2128,"nodeType":"ExpressionStatement","src":"4900:37:10"},{"expression":{"arguments":[{"id":2130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4957:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"4963:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2129,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4947:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"4947:26:10"},{"expression":{"hexValue":"74727565","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2117,"id":2136,"nodeType":"Return","src":"4983:11:10"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"4171:581:10","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:10","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"from","nameLocation":"4787:4:10","nodeType":"VariableDeclaration","scope":2138,"src":"4779:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"to","nameLocation":"4801:2:10","nodeType":"VariableDeclaration","scope":2138,"src":"4793:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"value","nameLocation":"4813:5:10","nodeType":"VariableDeclaration","scope":2138,"src":"4805:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:10"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"4844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2115,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:10"},"scope":2455,"src":"4757:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2184,"nodeType":"Block","src":"5443:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"5457:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:10","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"5453:86:10","trueBody":{"id":2161,"nodeType":"Block","src":"5477:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:10","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2154,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5498:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"RevertStatement","src":"5491:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"5552:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:10","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2177,"nodeType":"IfStatement","src":"5548:86:10","trueBody":{"id":2176,"nodeType":"Block","src":"5570:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:10","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2169,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5591:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2175,"nodeType":"RevertStatement","src":"5584:39:10"}]}},{"expression":{"arguments":[{"id":2179,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"5651:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"5657:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"5661:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2178,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"5643:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"ExpressionStatement","src":"5643:24:10"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"5007:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:10","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"from","nameLocation":"5401:4:10","nodeType":"VariableDeclaration","scope":2185,"src":"5393:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"to","nameLocation":"5415:2:10","nodeType":"VariableDeclaration","scope":2185,"src":"5407:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"value","nameLocation":"5427:5:10","nodeType":"VariableDeclaration","scope":2185,"src":"5419:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:10"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[],"src":"5443:0:10"},"scope":2455,"src":"5374:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2261,"nodeType":"Block","src":"6064:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"6078:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:10","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2232,"nodeType":"Block","src":"6252:362:10","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:10","nodeType":"VariableDeclaration","scope":2232,"src":"6266:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2211,"initialValue":{"baseExpression":{"id":2208,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6288:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2210,"indexExpression":{"id":2209,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"6298:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"6321:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6335:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2222,"nodeType":"IfStatement","src":"6317:115:10","trueBody":{"id":2221,"nodeType":"Block","src":"6342:90:10","statements":[{"errorCall":{"arguments":[{"id":2216,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"6392:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2217,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"6398:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6411:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2215,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6367:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"RevertStatement","src":"6360:57:10"}]}},{"id":2231,"nodeType":"UncheckedBlock","src":"6445:159:10","statements":[{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2223,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"6552:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2225,"indexExpression":{"id":2224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"6562:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"6570:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6584:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ExpressionStatement","src":"6552:37:10"}]}]},"id":2233,"nodeType":"IfStatement","src":"6074:540:10","trueBody":{"id":2205,"nodeType":"Block","src":"6098:148:10","statements":[{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6214:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6230:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"6214:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"6628:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:10","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2253,"nodeType":"Block","src":"6843:206:10","statements":[{"id":2252,"nodeType":"UncheckedBlock","src":"6857:182:10","statements":[{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2246,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7002:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2248,"indexExpression":{"id":2247,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"7012:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"7019:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"7002:22:10"}]}]},"id":2254,"nodeType":"IfStatement","src":"6624:425:10","trueBody":{"id":2245,"nodeType":"Block","src":"6646:191:10","statements":[{"id":2244,"nodeType":"UncheckedBlock","src":"6660:167:10","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2240,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6791:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6807:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"6791:21:10"}]}]}},{"eventCall":{"arguments":[{"id":2256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"7073:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"7079:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"7083:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2255,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"7064:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2260,"nodeType":"EmitStatement","src":"7059:30:10"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"5680:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:10","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"from","nameLocation":"6014:4:10","nodeType":"VariableDeclaration","scope":2262,"src":"6006:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"to","nameLocation":"6028:2:10","nodeType":"VariableDeclaration","scope":2262,"src":"6020:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"value","nameLocation":"6040:5:10","nodeType":"VariableDeclaration","scope":2262,"src":"6032:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:10"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"6064:0:10"},"scope":2455,"src":"5989:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"7495:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"7509:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"7505:91:10","trueBody":{"id":2283,"nodeType":"Block","src":"7532:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:10","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2276,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7553:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2282,"nodeType":"RevertStatement","src":"7546:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:10","typeDescriptions":{}}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"7625:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"7634:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2285,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"7605:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2293,"nodeType":"ExpressionStatement","src":"7605:35:10"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"7102:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:10","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"account","nameLocation":"7462:7:10","nodeType":"VariableDeclaration","scope":2295,"src":"7454:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"value","nameLocation":"7479:5:10","nodeType":"VariableDeclaration","scope":2295,"src":"7471:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:10"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[],"src":"7495:0:10"},"scope":2455,"src":"7439:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"8021:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"8035:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:10","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2317,"nodeType":"IfStatement","src":"8031:89:10","trueBody":{"id":2316,"nodeType":"Block","src":"8058:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:10","typeDescriptions":{}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2309,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"8079:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"RevertStatement","src":"8072:37:10"}]}},{"expression":{"arguments":[{"id":2319,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"8137:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:10","typeDescriptions":{}}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"8158:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2318,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"8129:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"ExpressionStatement","src":"8129:35:10"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"7653:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:10","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"account","nameLocation":"7988:7:10","nodeType":"VariableDeclaration","scope":2328,"src":"7980:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"value","nameLocation":"8005:5:10","nodeType":"VariableDeclaration","scope":2328,"src":"7997:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"8021:0:10"},"scope":2455,"src":"7965:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"8781:54:10","statements":[{"expression":{"arguments":[{"id":2339,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"8800:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2340,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"8807:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"8816:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2338,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2346,2406],"referencedDeclaration":2406,"src":"8791:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2344,"nodeType":"ExpressionStatement","src":"8791:37:10"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"8177:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:10","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"owner","nameLocation":"8733:5:10","nodeType":"VariableDeclaration","scope":2346,"src":"8725:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"spender","nameLocation":"8748:7:10","nodeType":"VariableDeclaration","scope":2346,"src":"8740:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"value","nameLocation":"8765:5:10","nodeType":"VariableDeclaration","scope":2346,"src":"8757:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2334,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:10"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"8781:0:10"},"scope":2455,"src":"8707:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"9780:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9794:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:10","typeDescriptions":{}}},"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2372,"nodeType":"IfStatement","src":"9790:89:10","trueBody":{"id":2371,"nodeType":"Block","src":"9815:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:10","typeDescriptions":{}}},"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2364,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"9836:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"RevertStatement","src":"9829:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"9892:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:10","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2387,"nodeType":"IfStatement","src":"9888:90:10","trueBody":{"id":2386,"nodeType":"Block","src":"9915:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:10","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2379,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"9936:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"RevertStatement","src":"9929:38:10"}]}},{"expression":{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2388,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"9987:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2391,"indexExpression":{"id":2389,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9999:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2392,"indexExpression":{"id":2390,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"10006:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10017:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2395,"nodeType":"ExpressionStatement","src":"9987:35:10"},{"condition":{"id":2396,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"10036:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2404,"nodeType":"IfStatement","src":"10032:76:10","trueBody":{"id":2403,"nodeType":"Block","src":"10047:61:10","statements":[{"eventCall":{"arguments":[{"id":2398,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"10075:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2399,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"10082:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10091:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2397,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"10066:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2402,"nodeType":"EmitStatement","src":"10061:36:10"}]}}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"8841:836:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:10","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"owner","nameLocation":"9708:5:10","nodeType":"VariableDeclaration","scope":2406,"src":"9700:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"spender","nameLocation":"9723:7:10","nodeType":"VariableDeclaration","scope":2406,"src":"9715:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"value","nameLocation":"9740:5:10","nodeType":"VariableDeclaration","scope":2406,"src":"9732:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:10","nodeType":"VariableDeclaration","scope":2406,"src":"9747:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2354,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:10"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"9780:0:10"},"scope":2455,"src":"9682:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2453,"nodeType":"Block","src":"10485:387:10","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:10","nodeType":"VariableDeclaration","scope":2453,"src":"10495:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2422,"initialValue":{"arguments":[{"id":2419,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"10532:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2420,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"10539:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2418,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"10522:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"10561:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:10","memberName":"max","nodeType":"MemberAccess","src":"10580:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2452,"nodeType":"IfStatement","src":"10557:309:10","trueBody":{"id":2451,"nodeType":"Block","src":"10599:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2430,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"10617:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10636:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"10613:130:10","trueBody":{"id":2439,"nodeType":"Block","src":"10643:100:10","statements":[{"errorCall":{"arguments":[{"id":2434,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"10695:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2435,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"10704:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10722:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"10668:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2438,"nodeType":"RevertStatement","src":"10661:67:10"}]}},{"id":2450,"nodeType":"UncheckedBlock","src":"10756:100:10","statements":[{"expression":{"arguments":[{"id":2442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"10793:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"10800:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"10809:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10828:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2346,2406],"referencedDeclaration":2406,"src":"10784:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"10784:57:10"}]}]}}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"10120:271:10","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:10","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"owner","nameLocation":"10429:5:10","nodeType":"VariableDeclaration","scope":2454,"src":"10421:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"spender","nameLocation":"10444:7:10","nodeType":"VariableDeclaration","scope":2454,"src":"10436:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"value","nameLocation":"10461:5:10","nodeType":"VariableDeclaration","scope":2454,"src":"10453:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:10"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"10485:0:10"},"scope":2455,"src":"10396:476:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2456,"src":"1106:9768:10","usedErrors":[563,568,573,582,587,592],"usedEvents":[2467,2476]}],"src":"105:10770:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2533]},"id":2534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2457,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"132:71:11","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2533,"linearizedBaseContracts":[2533],"name":"IERC20","nameLocation":"214:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"227:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2467,"name":"Transfer","nameLocation":"396:8:11","nodeType":"EventDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:11","nodeType":"VariableDeclaration","scope":2467,"src":"405:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2463,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:11","nodeType":"VariableDeclaration","scope":2467,"src":"427:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:11","nodeType":"VariableDeclaration","scope":2467,"src":"447:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:11"},"src":"390:72:11"},{"anonymous":false,"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"468:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2476,"name":"Approval","nameLocation":"627:8:11","nodeType":"EventDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:11","nodeType":"VariableDeclaration","scope":2476,"src":"636:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2472,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:11","nodeType":"VariableDeclaration","scope":2476,"src":"659:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2474,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:11","nodeType":"VariableDeclaration","scope":2476,"src":"684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:11"},"src":"621:78:11"},{"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"705:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2482,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:11","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"795:2:11"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"821:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:11"},"scope":2533,"src":"775:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"836:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2490,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:11","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"account","nameLocation":"939:7:11","nodeType":"VariableDeclaration","scope":2490,"src":"931:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:11"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:11"},"scope":2533,"src":"912:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"986:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2500,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:11","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"to","nameLocation":"1230:2:11","nodeType":"VariableDeclaration","scope":2500,"src":"1222:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"value","nameLocation":"1242:5:11","nodeType":"VariableDeclaration","scope":2500,"src":"1234:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:11"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"1267:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2497,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:11"},"scope":2533,"src":"1204:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"1279:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2510,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:11","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"owner","nameLocation":"1575:5:11","nodeType":"VariableDeclaration","scope":2510,"src":"1567:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"spender","nameLocation":"1590:7:11","nodeType":"VariableDeclaration","scope":2510,"src":"1582:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:11"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"1622:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:11"},"scope":2533,"src":"1548:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"1637:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2520,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:11","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"spender","nameLocation":"2334:7:11","nodeType":"VariableDeclaration","scope":2520,"src":"2326:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"value","nameLocation":"2351:5:11","nodeType":"VariableDeclaration","scope":2520,"src":"2343:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:11"},"returnParameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2520,"src":"2376:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2517,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:11"},"scope":2533,"src":"2309:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"2388:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2532,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:11","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"from","nameLocation":"2720:4:11","nodeType":"VariableDeclaration","scope":2532,"src":"2712:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"to","nameLocation":"2734:2:11","nodeType":"VariableDeclaration","scope":2532,"src":"2726:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"value","nameLocation":"2746:5:11","nodeType":"VariableDeclaration","scope":2532,"src":"2738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:11"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"2771:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2529,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:11"},"scope":2533,"src":"2690:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2534,"src":"204:2575:11","usedErrors":[],"usedEvents":[2467,2476]}],"src":"106:2674:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[3769],"ERC20":[2455],"ERC20Burnable":[2579]},"id":2580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2535,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2580,"sourceUnit":2456,"src":"150:35:12","symbolAliases":[{"foreign":{"id":2536,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"158:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2580,"sourceUnit":3770,"src":"186:51:12","symbolAliases":[{"foreign":{"id":2538,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"194:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2541,"name":"Context","nameLocations":["483:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"483:7:12"},"id":2542,"nodeType":"InheritanceSpecifier","src":"483:7:12"},{"baseName":{"id":2543,"name":"ERC20","nameLocations":["492:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"492:5:12"},"id":2544,"nodeType":"InheritanceSpecifier","src":"492:5:12"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"239:208:12","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":2579,"linearizedBaseContracts":[2579,2455,593,2793,2533,3769],"name":"ERC20Burnable","nameLocation":"466:13:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2556,"nodeType":"Block","src":"662:43:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2551,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"678:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"692:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2550,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"672:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2555,"nodeType":"ExpressionStatement","src":"672:26:12"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"504:109:12","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:12","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"value","nameLocation":"640:5:12","nodeType":"VariableDeclaration","scope":2557,"src":"632:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:12"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"662:0:12"},"scope":2579,"src":"618:87:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2577,"nodeType":"Block","src":"1086:93:12","statements":[{"expression":{"arguments":[{"id":2566,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1112:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2567,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"1121:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1135:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2565,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1096:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2571,"nodeType":"ExpressionStatement","src":"1096:45:12"},{"expression":{"arguments":[{"id":2573,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"1157:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"1166:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1151:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"1151:21:12"}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"711:305:12","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:12","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"account","nameLocation":"1047:7:12","nodeType":"VariableDeclaration","scope":2578,"src":"1039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"value","nameLocation":"1064:5:12","nodeType":"VariableDeclaration","scope":2578,"src":"1056:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:12"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"1086:0:12"},"scope":2579,"src":"1021:158:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2580,"src":"448:733:12","usedErrors":[563,568,573,582,587,592],"usedEvents":[2467,2476]}],"src":"124:1058:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[2455],"ERC20Pausable":[2613],"Pausable":[3997]},"id":2614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2581,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":2456,"src":"150:35:13","symbolAliases":[{"foreign":{"id":2582,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"158:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":2585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2614,"sourceUnit":3998,"src":"186:53:13","symbolAliases":[{"foreign":{"id":2584,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"194:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2587,"name":"ERC20","nameLocations":["965:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"965:5:13"},"id":2588,"nodeType":"InheritanceSpecifier","src":"965:5:13"},{"baseName":{"id":2589,"name":"Pausable","nameLocations":["972:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"972:8:13"},"id":2590,"nodeType":"InheritanceSpecifier","src":"972:8:13"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"241:688:13","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":2613,"linearizedBaseContracts":[2613,3997,2455,593,2793,2533,3769],"name":"ERC20Pausable","nameLocation":"948:13:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2262],"body":{"id":2611,"nodeType":"Block","src":"1211:47:13","statements":[{"expression":{"arguments":[{"id":2606,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1235:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"1241:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1245:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2603,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$2613_$","typeString":"type(contract super ERC20Pausable)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:13","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2262,"src":"1221:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2610,"nodeType":"ExpressionStatement","src":"1221:30:13"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"987:121:13","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":2612,"implemented":true,"kind":"function","modifiers":[{"id":2601,"kind":"modifierInvocation","modifierName":{"id":2600,"name":"whenNotPaused","nameLocations":["1197:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"1197:13:13"},"nodeType":"ModifierInvocation","src":"1197:13:13"}],"name":"_update","nameLocation":"1122:7:13","nodeType":"FunctionDefinition","overrides":{"id":2599,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:13"},"parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"from","nameLocation":"1138:4:13","nodeType":"VariableDeclaration","scope":2612,"src":"1130:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"to","nameLocation":"1152:2:13","nodeType":"VariableDeclaration","scope":2612,"src":"1144:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"value","nameLocation":"1164:5:13","nodeType":"VariableDeclaration","scope":2612,"src":"1156:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:13"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"1211:0:13"},"scope":2613,"src":"1113:145:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2614,"src":"930:330:13","usedErrors":[563,568,573,582,587,592,3911,3914],"usedEvents":[2467,2476,3903,3908]}],"src":"124:1137:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[6287],"EIP712":[6514],"ERC20":[2455],"ERC20Permit":[2767],"IERC20Permit":[2829],"Nonces":[3837]},"id":2768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2615,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":2617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2768,"sourceUnit":2830,"src":"148:48:14","symbolAliases":[{"foreign":{"id":2616,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"156:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2768,"sourceUnit":2456,"src":"197:35:14","symbolAliases":[{"foreign":{"id":2618,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"205:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":2621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2768,"sourceUnit":6288,"src":"233:60:14","symbolAliases":[{"foreign":{"id":2620,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"241:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":2623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2768,"sourceUnit":6515,"src":"294:62:14","symbolAliases":[{"foreign":{"id":2622,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"302:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":2625,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2768,"sourceUnit":3838,"src":"357:49:14","symbolAliases":[{"foreign":{"id":2624,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"365:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2627,"name":"ERC20","nameLocations":["931:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"931:5:14"},"id":2628,"nodeType":"InheritanceSpecifier","src":"931:5:14"},{"baseName":{"id":2629,"name":"IERC20Permit","nameLocations":["938:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2829,"src":"938:12:14"},"id":2630,"nodeType":"InheritanceSpecifier","src":"938:12:14"},{"baseName":{"id":2631,"name":"EIP712","nameLocations":["952:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6514,"src":"952:6:14"},"id":2632,"nodeType":"InheritanceSpecifier","src":"952:6:14"},{"baseName":{"id":2633,"name":"Nonces","nameLocations":["960:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":3837,"src":"960:6:14"},"id":2634,"nodeType":"InheritanceSpecifier","src":"960:6:14"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"408:489:14","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2767,"linearizedBaseContracts":[2767,3837,6514,551,2829,2455,593,2793,2533,3769],"name":"ERC20Permit","nameLocation":"916:11:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2639,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:14","nodeType":"VariableDeclaration","scope":2767,"src":"973:146:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2636,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"1126:52:14","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":2644,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:14","nodeType":"ErrorDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:14","nodeType":"VariableDeclaration","scope":2644,"src":"1213:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:14"},"src":"1183:48:14"},{"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"1237:45:14","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":2651,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:14","nodeType":"ErrorDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"signer","nameLocation":"1322:6:14","nodeType":"VariableDeclaration","scope":2651,"src":"1314:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"owner","nameLocation":"1338:5:14","nodeType":"VariableDeclaration","scope":2651,"src":"1330:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:14"},"src":"1287:58:14"},{"body":{"id":2661,"nodeType":"Block","src":"1627:2:14","statements":[]},"documentation":{"id":2652,"nodeType":"StructuredDocumentation","src":"1351:221:14","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":2662,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2657,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"1616:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":2659,"kind":"baseConstructorSpecifier","modifierName":{"id":2656,"name":"EIP712","nameLocations":["1609:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6514,"src":"1609:6:14"},"nodeType":"ModifierInvocation","src":"1609:17:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"name","nameLocation":"1603:4:14","nodeType":"VariableDeclaration","scope":2662,"src":"1589:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2653,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:14"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[],"src":"1627:0:14"},"scope":2767,"src":"1577:52:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2814],"body":{"id":2738,"nodeType":"Block","src":"1872:483:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2680,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2682,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1904:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"1882:97:14","trueBody":{"id":2688,"nodeType":"Block","src":"1914:65:14","statements":[{"errorCall":{"arguments":[{"id":2685,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1959:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1935:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"RevertStatement","src":"1928:40:14"}]}},{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:14","nodeType":"VariableDeclaration","scope":2738,"src":"1989:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2705,"initialValue":{"arguments":[{"arguments":[{"id":2695,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2031:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2696,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2048:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2697,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2055:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"2064:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2081:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2699,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"2071:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2702,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"2089:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2693,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:14","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2692,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:14"},{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"hash","nameLocation":"2118:4:14","nodeType":"VariableDeclaration","scope":2738,"src":"2110:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2711,"initialValue":{"arguments":[{"id":2709,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2142:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2708,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"2125:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:14"},{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"signer","nameLocation":"2172:6:14","nodeType":"VariableDeclaration","scope":2738,"src":"2164:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2721,"initialValue":{"arguments":[{"id":2716,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"2195:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2717,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"2201:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2718,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2204:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2719,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2207:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2714,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"2181:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$6287_$","typeString":"type(library ECDSA)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:14","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":6237,"src":"2181:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2223:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2723,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2233:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2731,"nodeType":"IfStatement","src":"2219:88:14","trueBody":{"id":2730,"nodeType":"Block","src":"2240:67:14","statements":[{"errorCall":{"arguments":[{"id":2726,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2282:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2290:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2725,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"2261:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"RevertStatement","src":"2254:42:14"}]}},{"expression":{"arguments":[{"id":2733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2326:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2333:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"2342:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2346,2406],"referencedDeclaration":2346,"src":"2317:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"2317:31:14"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"1635:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:14","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"owner","nameLocation":"1716:5:14","nodeType":"VariableDeclaration","scope":2739,"src":"1708:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"spender","nameLocation":"1739:7:14","nodeType":"VariableDeclaration","scope":2739,"src":"1731:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"value","nameLocation":"1764:5:14","nodeType":"VariableDeclaration","scope":2739,"src":"1756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:14","nodeType":"VariableDeclaration","scope":2739,"src":"1779:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"v","nameLocation":"1811:1:14","nodeType":"VariableDeclaration","scope":2739,"src":"1805:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2672,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"r","nameLocation":"1830:1:14","nodeType":"VariableDeclaration","scope":2739,"src":"1822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"s","nameLocation":"1849:1:14","nodeType":"VariableDeclaration","scope":2739,"src":"1841:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:14"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"1872:0:14"},"scope":2767,"src":"1683:672:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2822,3796],"body":{"id":2755,"nodeType":"Block","src":"2509:43:14","statements":[{"expression":{"arguments":[{"id":2752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"2539:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2750,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2767_$","typeString":"type(contract super ERC20Permit)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:14","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"2526:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2749,"id":2754,"nodeType":"Return","src":"2519:26:14"}]},"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"2361:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:14","nodeType":"FunctionDefinition","overrides":{"id":2746,"nodeType":"OverrideSpecifier","overrides":[{"id":2744,"name":"IERC20Permit","nameLocations":["2469:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2829,"src":"2469:12:14"},{"id":2745,"name":"Nonces","nameLocations":["2483:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":3837,"src":"2483:6:14"}],"src":"2460:30:14"},"parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"owner","nameLocation":"2433:5:14","nodeType":"VariableDeclaration","scope":2756,"src":"2425:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:14"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"2500:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:14"},"scope":2767,"src":"2409:143:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2828],"body":{"id":2765,"nodeType":"Block","src":"2727:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2762,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"2744:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2761,"id":2764,"nodeType":"Return","src":"2737:27:14"}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"2558:43:14","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:14","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[],"src":"2684:2:14"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"2718:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:14"},"scope":2767,"src":"2659:112:14","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2768,"src":"898:1875:14","usedErrors":[563,568,573,582,587,592,2644,2651,3779,4080,4082,5950,5955,5960],"usedEvents":[531,2467,2476]}],"src":"122:2652:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2533],"IERC20Metadata":[2793]},"id":2794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2769,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2794,"sourceUnit":2534,"src":"151:37:15","symbolAliases":[{"foreign":{"id":2770,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"159:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2773,"name":"IERC20","nameLocations":["306:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"306:6:15"},"id":2774,"nodeType":"InheritanceSpecifier","src":"306:6:15"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"190:87:15","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2793,"linearizedBaseContracts":[2793,2533],"name":"IERC20Metadata","nameLocation":"288:14:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"319:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2780,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:15","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[],"src":"391:2:15"},"returnParameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2780,"src":"417:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2777,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:15"},"scope":2793,"src":"378:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"438:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2786,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:15","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"514:2:15"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"540:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2783,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:15"},"scope":2793,"src":"499:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"561:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2792,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:15","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"648:2:15"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"674:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2789,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:15"},"scope":2793,"src":"631:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2794,"src":"278:405:15","usedErrors":[],"usedEvents":[2467,2476]}],"src":"125:559:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2829]},"id":2830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2795,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"149:1965:16","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2829,"linearizedBaseContracts":[2829],"name":"IERC20Permit","nameLocation":"2125:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"2144:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2814,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:16","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"owner","nameLocation":"3032:5:16","nodeType":"VariableDeclaration","scope":2814,"src":"3024:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"spender","nameLocation":"3055:7:16","nodeType":"VariableDeclaration","scope":2814,"src":"3047:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"value","nameLocation":"3080:5:16","nodeType":"VariableDeclaration","scope":2814,"src":"3072:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:16","nodeType":"VariableDeclaration","scope":2814,"src":"3095:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"v","nameLocation":"3127:1:16","nodeType":"VariableDeclaration","scope":2814,"src":"3121:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2806,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"r","nameLocation":"3146:1:16","nodeType":"VariableDeclaration","scope":2814,"src":"3138:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"s","nameLocation":"3165:1:16","nodeType":"VariableDeclaration","scope":2814,"src":"3157:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:16"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[],"src":"3181:0:16"},"scope":2829,"src":"2999:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"3188:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2822,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:16","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"owner","nameLocation":"3511:5:16","nodeType":"VariableDeclaration","scope":2822,"src":"3503:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:16"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"3541:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:16"},"scope":2829,"src":"3487:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"3556:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2828,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:16","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"3767:2:16"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"3793:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:16"},"scope":2829,"src":"3742:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2830,"src":"2115:1689:16","usedErrors":[],"usedEvents":[]}],"src":"123:3682:16"},"id":16},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3707],"Comparators":[3739],"Math":[8257],"SlotDerivation":[4413],"StorageSlot":[4537]},"id":3708,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2831,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3708,"sourceUnit":3740,"src":"209:46:17","symbolAliases":[{"foreign":{"id":2832,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"217:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3708,"sourceUnit":4414,"src":"256:52:17","symbolAliases":[{"foreign":{"id":2834,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"264:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3708,"sourceUnit":4538,"src":"309:46:17","symbolAliases":[{"foreign":{"id":2836,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"317:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3708,"sourceUnit":8258,"src":"356:37:17","symbolAliases":[{"foreign":{"id":2838,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"364:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"395:63:17","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3707,"linearizedBaseContracts":[3707],"name":"Arrays","nameLocation":"467:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2843,"libraryName":{"id":2841,"name":"SlotDerivation","nameLocations":["486:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":4413,"src":"486:14:17"},"nodeType":"UsingForDirective","src":"480:33:17","typeName":{"id":2842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2846,"libraryName":{"id":2844,"name":"StorageSlot","nameLocations":["524:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"524:11:17"},"nodeType":"UsingForDirective","src":"518:30:17","typeName":{"id":2845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2878,"nodeType":"Block","src":"1628:83:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2868,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1656:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2867,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"1649:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2871,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1669:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2870,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"1664:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2873,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1677:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2866,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"1638:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"ExpressionStatement","src":"1638:44:17"},{"expression":{"id":2876,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1699:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2865,"id":2877,"nodeType":"Return","src":"1692:12:17"}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"554:915:17","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2879,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:17","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"array","nameLocation":"1514:5:17","nodeType":"VariableDeclaration","scope":2879,"src":"1497:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2849,"nodeType":"ArrayTypeName","src":"1497:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"comp","nameLocation":"1576:4:17","nodeType":"VariableDeclaration","scope":2879,"src":"1529:51:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2859,"nodeType":"FunctionTypeName","parameterTypes":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"1538:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"1547:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:17"},"returnParameterTypes":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"1570:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2856,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:17"},"src":"1529:51:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:17"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2879,"src":"1610:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ArrayTypeName","src":"1610:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:17"},"scope":3707,"src":"1474:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"1894:66:17","statements":[{"expression":{"arguments":[{"id":2890,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1909:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2891,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"1916:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3739_$","typeString":"type(library Comparators)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:17","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"1916:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2889,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2879,2898,2930,2951,2983,3004],"referencedDeclaration":2879,"src":"1904:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2894,"nodeType":"ExpressionStatement","src":"1904:27:17"},{"expression":{"id":2895,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1948:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2888,"id":2896,"nodeType":"Return","src":"1941:12:17"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"1717:93:17","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:17","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"array","nameLocation":"1846:5:17","nodeType":"VariableDeclaration","scope":2898,"src":"1829:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ArrayTypeName","src":"1829:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:17"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"1876:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ArrayTypeName","src":"1876:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:17"},"scope":3707,"src":"1815:145:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"3040:97:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2920,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"3075:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2919,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3155,3167],"referencedDeclaration":3155,"src":"3055:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2923,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3102:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2922,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3193,3219],"referencedDeclaration":3193,"src":"3083:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2918,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2879,2898,2930,2951,2983,3004],"referencedDeclaration":2879,"src":"3050:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2926,"nodeType":"ExpressionStatement","src":"3050:58:17"},{"expression":{"id":2927,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"3125:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2917,"id":2928,"nodeType":"Return","src":"3118:12:17"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"1966:915:17","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:17","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"array","nameLocation":"2926:5:17","nodeType":"VariableDeclaration","scope":2930,"src":"2909:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2901,"nodeType":"ArrayTypeName","src":"2909:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"comp","nameLocation":"2988:4:17","nodeType":"VariableDeclaration","scope":2930,"src":"2941:51:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2911,"nodeType":"FunctionTypeName","parameterTypes":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"2950:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"2959:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:17"},"returnParameterTypes":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"2982:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:17"},"src":"2941:51:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:17"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"3022:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2915,"nodeType":"ArrayTypeName","src":"3022:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:17"},"scope":3707,"src":"2886:251:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2950,"nodeType":"Block","src":"3320:87:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2942,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3355:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2941,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3155,3167],"referencedDeclaration":3155,"src":"3335:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2944,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"3363:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3739_$","typeString":"type(library Comparators)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:17","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"3363:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2940,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2879,2898,2930,2951,2983,3004],"referencedDeclaration":2879,"src":"3330:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2947,"nodeType":"ExpressionStatement","src":"3330:48:17"},{"expression":{"id":2948,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3395:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2939,"id":2949,"nodeType":"Return","src":"3388:12:17"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"3143:93:17","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:17","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"array","nameLocation":"3272:5:17","nodeType":"VariableDeclaration","scope":2951,"src":"3255:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2933,"nodeType":"ArrayTypeName","src":"3255:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:17"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2951,"src":"3302:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2937,"nodeType":"ArrayTypeName","src":"3302:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:17"},"scope":3707,"src":"3241:166:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2982,"nodeType":"Block","src":"4487:97:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2973,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"4522:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2972,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3155,3167],"referencedDeclaration":3167,"src":"4502:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2976,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"4549:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2975,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3193,3219],"referencedDeclaration":3219,"src":"4530:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2971,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2879,2898,2930,2951,2983,3004],"referencedDeclaration":2879,"src":"4497:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2979,"nodeType":"ExpressionStatement","src":"4497:58:17"},{"expression":{"id":2980,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"4572:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2970,"id":2981,"nodeType":"Return","src":"4565:12:17"}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"3413:915:17","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2983,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:17","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"array","nameLocation":"4373:5:17","nodeType":"VariableDeclaration","scope":2983,"src":"4356:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2954,"nodeType":"ArrayTypeName","src":"4356:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"comp","nameLocation":"4435:4:17","nodeType":"VariableDeclaration","scope":2983,"src":"4388:51:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2964,"nodeType":"FunctionTypeName","parameterTypes":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"4397:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"4406:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:17"},"returnParameterTypes":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"4429:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2961,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:17"},"src":"4388:51:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:17"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2983,"src":"4469:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2968,"nodeType":"ArrayTypeName","src":"4469:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:17"},"scope":3707,"src":"4333:251:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"4767:87:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2995,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4802:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2994,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3155,3167],"referencedDeclaration":3167,"src":"4782:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2997,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"4810:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3739_$","typeString":"type(library Comparators)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:17","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"4810:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2993,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2879,2898,2930,2951,2983,3004],"referencedDeclaration":2879,"src":"4777:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3000,"nodeType":"ExpressionStatement","src":"4777:48:17"},{"expression":{"id":3001,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4842:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2992,"id":3002,"nodeType":"Return","src":"4835:12:17"}]},"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"4590:93:17","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:17","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"array","nameLocation":"4719:5:17","nodeType":"VariableDeclaration","scope":3004,"src":"4702:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2986,"nodeType":"ArrayTypeName","src":"4702:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:17"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"4749:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2990,"nodeType":"ArrayTypeName","src":"4749:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:17"},"scope":3707,"src":"4688:166:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"5470:889:17","statements":[{"id":3090,"nodeType":"UncheckedBlock","src":"5480:873:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"5508:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3023,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"5514:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3028,"nodeType":"IfStatement","src":"5504:31:17","trueBody":{"functionReturnParameters":3021,"id":3027,"nodeType":"Return","src":"5528:7:17"}},{"assignments":[3030],"declarations":[{"constant":false,"id":3030,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:17","nodeType":"VariableDeclaration","scope":3090,"src":"5591:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3034,"initialValue":{"arguments":[{"id":3032,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"5614:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"5607:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:17"},{"assignments":[3036],"declarations":[{"constant":false,"id":3036,"mutability":"mutable","name":"pos","nameLocation":"5715:3:17","nodeType":"VariableDeclaration","scope":3090,"src":"5707:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3038,"initialValue":{"id":3037,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"5721:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:17"},{"body":{"id":3069,"nodeType":"Block","src":"5795:331:17","statements":[{"condition":{"arguments":[{"arguments":[{"id":3054,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5829:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"5822:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3056,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"5834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"5817:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"nodeType":"IfStatement","src":"5813:299:17","trueBody":{"id":3067,"nodeType":"Block","src":"5842:270:17","statements":[{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6046:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"6046:11:17"},{"expression":{"arguments":[{"id":3063,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6085:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3064,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"6090:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3062,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"6079:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3066,"nodeType":"ExpressionStatement","src":"6079:14:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5773:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"5778:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3070,"initializationExpression":{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"it","nameLocation":"5754:2:17","nodeType":"VariableDeclaration","scope":3070,"src":"5746:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"5759:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:17"},"loopExpression":{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"5783:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ExpressionStatement","src":"5783:10:17"},"nodeType":"ForStatement","src":"5741:385:17"},{"expression":{"arguments":[{"id":3072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6146:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3073,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6153:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3071,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"6140:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3075,"nodeType":"ExpressionStatement","src":"6140:17:17"},{"expression":{"arguments":[{"id":3077,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6207:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3078,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6214:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3079,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6219:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3076,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"6196:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"6196:28:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6284:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3086,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"6296:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3087,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6301:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3082,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"6273:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3089,"nodeType":"ExpressionStatement","src":"6273:33:17"}]}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"4860:491:17","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:17","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"begin","nameLocation":"5384:5:17","nodeType":"VariableDeclaration","scope":3092,"src":"5376:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"end","nameLocation":"5399:3:17","nodeType":"VariableDeclaration","scope":3092,"src":"5391:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"comp","nameLocation":"5451:4:17","nodeType":"VariableDeclaration","scope":3092,"src":"5404:51:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3018,"nodeType":"FunctionTypeName","parameterTypes":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"5413:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"5422:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:17"},"returnParameterTypes":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"5445:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:17"},"src":"5404:51:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:17"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[],"src":"5470:0:17"},"scope":3707,"src":"5356:1003:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3102,"nodeType":"Block","src":"6532:88:17","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:17","statements":[{"nodeType":"YulAssignment","src":"6581:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:17"},"nodeType":"YulFunctionCall","src":"6588:16:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3096,"isOffset":false,"isSlot":false,"src":"6592:5:17","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"6581:3:17","valueSize":1}],"flags":["memory-safe"],"id":3101,"nodeType":"InlineAssembly","src":"6542:72:17"}]},"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"6365:87:17","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:17","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"array","nameLocation":"6490:5:17","nodeType":"VariableDeclaration","scope":3103,"src":"6473:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ArrayTypeName","src":"6473:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:17"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:17","nodeType":"VariableDeclaration","scope":3103,"src":"6519:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:17"},"scope":3707,"src":"6457:163:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3122,"nodeType":"Block","src":"6892:93:17","statements":[{"id":3121,"nodeType":"UncheckedBlock","src":"6902:77:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3113,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"6940:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3112,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"6933:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3115,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"6949:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:17","memberName":"length","nodeType":"MemberAccess","src":"6949:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3120,"nodeType":"Return","src":"6926:42:17"}]}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"6626:188:17","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:17","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"array","nameLocation":"6850:5:17","nodeType":"VariableDeclaration","scope":3123,"src":"6833:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ArrayTypeName","src":"6833:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:17"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:17","nodeType":"VariableDeclaration","scope":3123,"src":"6879:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:17"},"scope":3707,"src":"6819:166:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3132,"nodeType":"Block","src":"7136:68:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:17","statements":[{"nodeType":"YulAssignment","src":"7169:19:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:17"},"nodeType":"YulFunctionCall","src":"7178:10:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3126,"isOffset":false,"isSlot":false,"src":"7184:3:17","valueSize":1},{"declaration":3129,"isOffset":false,"isSlot":false,"src":"7169:5:17","valueSize":1}],"id":3131,"nodeType":"InlineAssembly","src":"7146:52:17"}]},"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"6991:74:17","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:17","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:17","nodeType":"VariableDeclaration","scope":3133,"src":"7086:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:17"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"value","nameLocation":"7129:5:17","nodeType":"VariableDeclaration","scope":3133,"src":"7121:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:17"},"scope":3707,"src":"7070:134:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3142,"nodeType":"Block","src":"7348:178:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:17","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:17"},"nodeType":"YulFunctionCall","src":"7395:11:17"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:17","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:17"},"nodeType":"YulFunctionCall","src":"7433:11:17"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:17","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:17"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:17"},"nodeType":"YulFunctionCall","src":"7457:20:17"},"nodeType":"YulExpressionStatement","src":"7457:20:17"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:17"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:17"},"nodeType":"YulFunctionCall","src":"7490:20:17"},"nodeType":"YulExpressionStatement","src":"7490:20:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3136,"isOffset":false,"isSlot":false,"src":"7401:4:17","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"7464:4:17","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"7439:4:17","valueSize":1},{"declaration":3138,"isOffset":false,"isSlot":false,"src":"7497:4:17","valueSize":1}],"id":3141,"nodeType":"InlineAssembly","src":"7358:162:17"}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"7210:77:17","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:17","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:17","nodeType":"VariableDeclaration","scope":3143,"src":"7307:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:17","nodeType":"VariableDeclaration","scope":3143,"src":"7321:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:17"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[],"src":"7348:0:17"},"scope":3707,"src":"7292:234:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3154,"nodeType":"Block","src":"7713:64:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:17","statements":[{"nodeType":"YulAssignment","src":"7746:15:17","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3147,"isOffset":false,"isSlot":false,"src":"7756:5:17","valueSize":1},{"declaration":3151,"isOffset":false,"isSlot":false,"src":"7746:6:17","valueSize":1}],"id":3153,"nodeType":"InlineAssembly","src":"7723:48:17"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"7532:76:17","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:17","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"input","nameLocation":"7659:5:17","nodeType":"VariableDeclaration","scope":3155,"src":"7642:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3145,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3146,"nodeType":"ArrayTypeName","src":"7642:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:17"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"output","nameLocation":"7705:6:17","nodeType":"VariableDeclaration","scope":3155,"src":"7688:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ArrayTypeName","src":"7688:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:17"},"scope":3707,"src":"7613:164:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3166,"nodeType":"Block","src":"7964:64:17","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:17","statements":[{"nodeType":"YulAssignment","src":"7997:15:17","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3159,"isOffset":false,"isSlot":false,"src":"8007:5:17","valueSize":1},{"declaration":3163,"isOffset":false,"isSlot":false,"src":"7997:6:17","valueSize":1}],"id":3165,"nodeType":"InlineAssembly","src":"7974:48:17"}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"7783:76:17","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:17","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"input","nameLocation":"7910:5:17","nodeType":"VariableDeclaration","scope":3167,"src":"7893:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3158,"nodeType":"ArrayTypeName","src":"7893:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:17"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"output","nameLocation":"7956:6:17","nodeType":"VariableDeclaration","scope":3167,"src":"7939:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3162,"nodeType":"ArrayTypeName","src":"7939:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:17"},"scope":3707,"src":"7864:164:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3192,"nodeType":"Block","src":"8290:64:17","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:17","statements":[{"nodeType":"YulAssignment","src":"8323:15:17","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3178,"isOffset":false,"isSlot":false,"src":"8333:5:17","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"8323:6:17","valueSize":1}],"id":3191,"nodeType":"InlineAssembly","src":"8300:48:17"}]},"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"8034:78:17","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:17","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"input","nameLocation":"8201:5:17","nodeType":"VariableDeclaration","scope":3193,"src":"8154:52:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3177,"nodeType":"FunctionTypeName","parameterTypes":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"8163:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"8172:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3171,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:17"},"returnParameterTypes":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"8195:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3174,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:17"},"src":"8154:52:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:17"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"output","nameLocation":"8282:6:17","nodeType":"VariableDeclaration","scope":3193,"src":"8235:53:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3188,"nodeType":"FunctionTypeName","parameterTypes":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"8244:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"8253:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:17"},"returnParameterTypes":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"8276:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3185,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:17"},"src":"8235:53:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:17"},"scope":3707,"src":"8117:237:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3218,"nodeType":"Block","src":"8616:64:17","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:17","statements":[{"nodeType":"YulAssignment","src":"8649:15:17","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:17"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3204,"isOffset":false,"isSlot":false,"src":"8659:5:17","valueSize":1},{"declaration":3215,"isOffset":false,"isSlot":false,"src":"8649:6:17","valueSize":1}],"id":3217,"nodeType":"InlineAssembly","src":"8626:48:17"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"8360:78:17","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:17","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"input","nameLocation":"8527:5:17","nodeType":"VariableDeclaration","scope":3219,"src":"8480:52:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3203,"nodeType":"FunctionTypeName","parameterTypes":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"8489:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"8498:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:17"},"returnParameterTypes":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"8521:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3200,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:17"},"src":"8480:52:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:17"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"output","nameLocation":"8608:6:17","nodeType":"VariableDeclaration","scope":3219,"src":"8561:53:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3214,"nodeType":"FunctionTypeName","parameterTypes":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"8570:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"8579:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:17"},"returnParameterTypes":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"8602:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3211,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:17"},"src":"8561:53:17","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:17"},"scope":3707,"src":"8443:237:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3301,"nodeType":"Block","src":"9405:834:17","statements":[{"assignments":[3231],"declarations":[{"constant":false,"id":3231,"mutability":"mutable","name":"low","nameLocation":"9423:3:17","nodeType":"VariableDeclaration","scope":3301,"src":"9415:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3233,"initialValue":{"hexValue":"30","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:17"},{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"high","nameLocation":"9448:4:17","nodeType":"VariableDeclaration","scope":3301,"src":"9440:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3238,"initialValue":{"expression":{"id":3236,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"9455:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:17","memberName":"length","nodeType":"MemberAccess","src":"9455:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9482:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3245,"nodeType":"IfStatement","src":"9478:48:17","trueBody":{"id":3244,"nodeType":"Block","src":"9493:33:17","statements":[{"expression":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3229,"id":3243,"nodeType":"Return","src":"9507:8:17"}]}},{"body":{"id":3277,"nodeType":"Block","src":"9555:423:17","statements":[{"assignments":[3250],"declarations":[{"constant":false,"id":3250,"mutability":"mutable","name":"mid","nameLocation":"9577:3:17","nodeType":"VariableDeclaration","scope":3277,"src":"9569:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3256,"initialValue":{"arguments":[{"id":3253,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"9596:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3254,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9601:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3251,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"9583:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:17","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6986,"src":"9583:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3258,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"9844:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3259,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"9851:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3582,3608,3634],"referencedDeclaration":3634,"src":"9831:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4428_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"9831:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3262,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"9864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3275,"nodeType":"Block","src":"9922:46:17","statements":[{"expression":{"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"9940:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"9946:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"nodeType":"ExpressionStatement","src":"9940:13:17"}]},"id":3276,"nodeType":"IfStatement","src":"9827:141:17","trueBody":{"id":3268,"nodeType":"Block","src":"9873:43:17","statements":[{"expression":{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3264,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9891:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3265,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"9898:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3267,"nodeType":"ExpressionStatement","src":"9891:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"9543:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3247,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"9549:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3278,"nodeType":"WhileStatement","src":"9536:442:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10095:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3283,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"10119:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10126:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3282,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3582,3608,3634],"referencedDeclaration":3634,"src":"10106:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4428_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"10106:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3289,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"10144:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3299,"nodeType":"Block","src":"10198:35:17","statements":[{"expression":{"id":3297,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10219:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3229,"id":3298,"nodeType":"Return","src":"10212:10:17"}]},"id":3300,"nodeType":"IfStatement","src":"10091:142:17","trueBody":{"id":3296,"nodeType":"Block","src":"10153:39:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3292,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10174:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3229,"id":3295,"nodeType":"Return","src":"10167:14:17"}]}}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"8686:616:17","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:17","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"array","nameLocation":"9349:5:17","nodeType":"VariableDeclaration","scope":3302,"src":"9331:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3222,"nodeType":"ArrayTypeName","src":"9331:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"element","nameLocation":"9364:7:17","nodeType":"VariableDeclaration","scope":3302,"src":"9356:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:17"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"9396:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:17"},"scope":3707,"src":"9307:932:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3365,"nodeType":"Block","src":"10756:709:17","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"low","nameLocation":"10774:3:17","nodeType":"VariableDeclaration","scope":3365,"src":"10766:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3316,"initialValue":{"hexValue":"30","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:17"},{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"high","nameLocation":"10799:4:17","nodeType":"VariableDeclaration","scope":3365,"src":"10791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"initialValue":{"expression":{"id":3319,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10806:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:17","memberName":"length","nodeType":"MemberAccess","src":"10806:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"10833:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"nodeType":"IfStatement","src":"10829:48:17","trueBody":{"id":3327,"nodeType":"Block","src":"10844:33:17","statements":[{"expression":{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3312,"id":3326,"nodeType":"Return","src":"10858:8:17"}]}},{"body":{"id":3361,"nodeType":"Block","src":"10906:532:17","statements":[{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"mid","nameLocation":"10928:3:17","nodeType":"VariableDeclaration","scope":3361,"src":"10920:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3339,"initialValue":{"arguments":[{"id":3336,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10947:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3337,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"10952:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3334,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"10934:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:17","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6986,"src":"10934:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3341,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"11195:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3342,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"11202:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3340,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3582,3608,3634],"referencedDeclaration":3634,"src":"11182:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4428_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"11182:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3345,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"11215:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3359,"nodeType":"Block","src":"11385:43:17","statements":[{"expression":{"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3355,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"11403:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3356,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"11410:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3358,"nodeType":"ExpressionStatement","src":"11403:10:17"}]},"id":3360,"nodeType":"IfStatement","src":"11178:250:17","trueBody":{"id":3354,"nodeType":"Block","src":"11224:155:17","statements":[{"id":3353,"nodeType":"UncheckedBlock","src":"11301:64:17","statements":[{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3347,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"11333:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"11339:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ExpressionStatement","src":"11333:13:17"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10894:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3330,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"10900:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3362,"nodeType":"WhileStatement","src":"10887:551:17"},{"expression":{"id":3363,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"11455:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3312,"id":3364,"nodeType":"Return","src":"11448:10:17"}]},"documentation":{"id":3303,"nodeType":"StructuredDocumentation","src":"10245:412:17","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3366,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:17","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"array","nameLocation":"10700:5:17","nodeType":"VariableDeclaration","scope":3366,"src":"10682:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ArrayTypeName","src":"10682:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"element","nameLocation":"10715:7:17","nodeType":"VariableDeclaration","scope":3366,"src":"10707:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:17"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3366,"src":"10747:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:17"},"scope":3707,"src":"10662:803:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"11982:709:17","statements":[{"assignments":[3378],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"low","nameLocation":"12000:3:17","nodeType":"VariableDeclaration","scope":3429,"src":"11992:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3380,"initialValue":{"hexValue":"30","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:17"},{"assignments":[3382],"declarations":[{"constant":false,"id":3382,"mutability":"mutable","name":"high","nameLocation":"12025:4:17","nodeType":"VariableDeclaration","scope":3429,"src":"12017:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3385,"initialValue":{"expression":{"id":3383,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12032:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:17","memberName":"length","nodeType":"MemberAccess","src":"12032:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"12059:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"12055:48:17","trueBody":{"id":3391,"nodeType":"Block","src":"12070:33:17","statements":[{"expression":{"hexValue":"30","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3376,"id":3390,"nodeType":"Return","src":"12084:8:17"}]}},{"body":{"id":3425,"nodeType":"Block","src":"12132:532:17","statements":[{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"mid","nameLocation":"12154:3:17","nodeType":"VariableDeclaration","scope":3425,"src":"12146:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3403,"initialValue":{"arguments":[{"id":3400,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"12173:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3401,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"12178:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3398,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"12160:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:17","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6986,"src":"12160:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3405,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12421:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3406,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"12428:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3404,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3582,3608,3634],"referencedDeclaration":3634,"src":"12408:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4428_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"12408:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3409,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"12441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3423,"nodeType":"Block","src":"12499:155:17","statements":[{"id":3422,"nodeType":"UncheckedBlock","src":"12576:64:17","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3416,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"12608:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"12614:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"12608:13:17"}]}]},"id":3424,"nodeType":"IfStatement","src":"12404:250:17","trueBody":{"id":3415,"nodeType":"Block","src":"12450:43:17","statements":[{"expression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3411,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"12468:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3412,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"12475:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3414,"nodeType":"ExpressionStatement","src":"12468:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"12120:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3394,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"12126:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"WhileStatement","src":"12113:551:17"},{"expression":{"id":3427,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"12681:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3376,"id":3428,"nodeType":"Return","src":"12674:10:17"}]},"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"11471:412:17","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:17","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"array","nameLocation":"11926:5:17","nodeType":"VariableDeclaration","scope":3430,"src":"11908:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3369,"nodeType":"ArrayTypeName","src":"11908:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"element","nameLocation":"11941:7:17","nodeType":"VariableDeclaration","scope":3430,"src":"11933:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:17"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"11973:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:17"},"scope":3707,"src":"11888:803:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"12875:709:17","statements":[{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"low","nameLocation":"12893:3:17","nodeType":"VariableDeclaration","scope":3492,"src":"12885:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3444,"initialValue":{"hexValue":"30","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:17"},{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"high","nameLocation":"12918:4:17","nodeType":"VariableDeclaration","scope":3492,"src":"12910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3449,"initialValue":{"expression":{"id":3447,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"12925:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:17","memberName":"length","nodeType":"MemberAccess","src":"12925:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"12952:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"IfStatement","src":"12948:48:17","trueBody":{"id":3455,"nodeType":"Block","src":"12963:33:17","statements":[{"expression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3440,"id":3454,"nodeType":"Return","src":"12977:8:17"}]}},{"body":{"id":3488,"nodeType":"Block","src":"13025:532:17","statements":[{"assignments":[3461],"declarations":[{"constant":false,"id":3461,"mutability":"mutable","name":"mid","nameLocation":"13047:3:17","nodeType":"VariableDeclaration","scope":3488,"src":"13039:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3467,"initialValue":{"arguments":[{"id":3464,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"13066:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3465,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"13071:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3462,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"13053:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:17","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6986,"src":"13053:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3469,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"13320:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3470,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"13327:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3468,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3647,3660,3673],"referencedDeclaration":3673,"src":"13301:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3472,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"13334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3486,"nodeType":"Block","src":"13504:43:17","statements":[{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3482,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"13522:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3483,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"13529:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"13522:10:17"}]},"id":3487,"nodeType":"IfStatement","src":"13297:250:17","trueBody":{"id":3481,"nodeType":"Block","src":"13343:155:17","statements":[{"id":3480,"nodeType":"UncheckedBlock","src":"13420:64:17","statements":[{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"13452:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"13458:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ExpressionStatement","src":"13452:13:17"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"13013:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3458,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"13019:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"nodeType":"WhileStatement","src":"13006:551:17"},{"expression":{"id":3490,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"13574:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3440,"id":3491,"nodeType":"Return","src":"13567:10:17"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"12697:74:17","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:17","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"array","nameLocation":"12819:5:17","nodeType":"VariableDeclaration","scope":3493,"src":"12802:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ArrayTypeName","src":"12802:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"element","nameLocation":"12834:7:17","nodeType":"VariableDeclaration","scope":3493,"src":"12826:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:17"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3493,"src":"12866:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:17"},"scope":3707,"src":"12776:808:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3555,"nodeType":"Block","src":"13768:709:17","statements":[{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"low","nameLocation":"13786:3:17","nodeType":"VariableDeclaration","scope":3555,"src":"13778:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3507,"initialValue":{"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:17"},{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"high","nameLocation":"13811:4:17","nodeType":"VariableDeclaration","scope":3555,"src":"13803:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3512,"initialValue":{"expression":{"id":3510,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"13818:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:17","memberName":"length","nodeType":"MemberAccess","src":"13818:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"13845:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3519,"nodeType":"IfStatement","src":"13841:48:17","trueBody":{"id":3518,"nodeType":"Block","src":"13856:33:17","statements":[{"expression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3503,"id":3517,"nodeType":"Return","src":"13870:8:17"}]}},{"body":{"id":3551,"nodeType":"Block","src":"13918:532:17","statements":[{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"mid","nameLocation":"13940:3:17","nodeType":"VariableDeclaration","scope":3551,"src":"13932:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"arguments":[{"id":3527,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13959:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3528,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"13964:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3525,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"13946:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:17","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6986,"src":"13946:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3532,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"14213:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3533,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"14220:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3647,3660,3673],"referencedDeclaration":3673,"src":"14194:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3535,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"14227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3549,"nodeType":"Block","src":"14285:155:17","statements":[{"id":3548,"nodeType":"UncheckedBlock","src":"14362:64:17","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3542,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"14394:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"14400:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3547,"nodeType":"ExpressionStatement","src":"14394:13:17"}]}]},"id":3550,"nodeType":"IfStatement","src":"14190:250:17","trueBody":{"id":3541,"nodeType":"Block","src":"14236:43:17","statements":[{"expression":{"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"14254:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3538,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"14261:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ExpressionStatement","src":"14254:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"13906:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3521,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"13912:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"WhileStatement","src":"13899:551:17"},{"expression":{"id":3553,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"14467:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3503,"id":3554,"nodeType":"Return","src":"14460:10:17"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"13590:74:17","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:17","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"array","nameLocation":"13712:5:17","nodeType":"VariableDeclaration","scope":3556,"src":"13695:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ArrayTypeName","src":"13695:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3499,"mutability":"mutable","name":"element","nameLocation":"13727:7:17","nodeType":"VariableDeclaration","scope":3556,"src":"13719:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:17"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3556,"src":"13759:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:17"},"scope":3707,"src":"13669:808:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3581,"nodeType":"Block","src":"14793:167:17","statements":[{"assignments":[3569],"declarations":[{"constant":false,"id":3569,"mutability":"mutable","name":"slot","nameLocation":"14811:4:17","nodeType":"VariableDeclaration","scope":3581,"src":"14803:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3570,"nodeType":"VariableDeclarationStatement","src":"14803:12:17"},{"AST":{"nodeType":"YulBlock","src":"14850:40:17","statements":[{"nodeType":"YulAssignment","src":"14864:16:17","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3560,"isOffset":false,"isSlot":true,"src":"14872:8:17","suffix":"slot","valueSize":1},{"declaration":3569,"isOffset":false,"isSlot":false,"src":"14864:4:17","valueSize":1}],"flags":["memory-safe"],"id":3571,"nodeType":"InlineAssembly","src":"14825:65:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3576,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"14932:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3572,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"14906:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:17","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"14906:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:17","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4318,"src":"14906:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4448,"src":"14906:45:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4419_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4419_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3567,"id":3580,"nodeType":"Return","src":"14899:54:17"}]},"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"14483:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:17","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"arr","nameLocation":"14719:3:17","nodeType":"VariableDeclaration","scope":3582,"src":"14701:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3558,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3559,"nodeType":"ArrayTypeName","src":"14701:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"pos","nameLocation":"14732:3:17","nodeType":"VariableDeclaration","scope":3582,"src":"14724:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:17"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"14760:31:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4419_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3565,"nodeType":"UserDefinedTypeName","pathNode":{"id":3564,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:17","14772:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":4419,"src":"14760:23:17"},"referencedDeclaration":4419,"src":"14760:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4419_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:17"},"scope":3707,"src":"14679:281:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3607,"nodeType":"Block","src":"15276:167:17","statements":[{"assignments":[3595],"declarations":[{"constant":false,"id":3595,"mutability":"mutable","name":"slot","nameLocation":"15294:4:17","nodeType":"VariableDeclaration","scope":3607,"src":"15286:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3596,"nodeType":"VariableDeclarationStatement","src":"15286:12:17"},{"AST":{"nodeType":"YulBlock","src":"15333:40:17","statements":[{"nodeType":"YulAssignment","src":"15347:16:17","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3586,"isOffset":false,"isSlot":true,"src":"15355:8:17","suffix":"slot","valueSize":1},{"declaration":3595,"isOffset":false,"isSlot":false,"src":"15347:4:17","valueSize":1}],"flags":["memory-safe"],"id":3597,"nodeType":"InlineAssembly","src":"15308:65:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3602,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"15415:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3598,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"15389:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:17","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"15389:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:17","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4318,"src":"15389:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:17","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4470,"src":"15389:45:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4425_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4425_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3593,"id":3606,"nodeType":"Return","src":"15382:54:17"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"14966:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:17","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"arr","nameLocation":"15202:3:17","nodeType":"VariableDeclaration","scope":3608,"src":"15184:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3585,"nodeType":"ArrayTypeName","src":"15184:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"pos","nameLocation":"15215:3:17","nodeType":"VariableDeclaration","scope":3608,"src":"15207:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:17"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"15243:31:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4425_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3591,"nodeType":"UserDefinedTypeName","pathNode":{"id":3590,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:17","15255:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"15243:23:17"},"referencedDeclaration":4425,"src":"15243:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4425_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:17"},"scope":3707,"src":"15162:281:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3633,"nodeType":"Block","src":"15759:167:17","statements":[{"assignments":[3621],"declarations":[{"constant":false,"id":3621,"mutability":"mutable","name":"slot","nameLocation":"15777:4:17","nodeType":"VariableDeclaration","scope":3633,"src":"15769:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3622,"nodeType":"VariableDeclarationStatement","src":"15769:12:17"},{"AST":{"nodeType":"YulBlock","src":"15816:40:17","statements":[{"nodeType":"YulAssignment","src":"15830:16:17","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3612,"isOffset":false,"isSlot":true,"src":"15838:8:17","suffix":"slot","valueSize":1},{"declaration":3621,"isOffset":false,"isSlot":false,"src":"15830:4:17","valueSize":1}],"flags":["memory-safe"],"id":3623,"nodeType":"InlineAssembly","src":"15791:65:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3628,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"15898:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3624,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"15872:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:17","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4328,"src":"15872:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:17","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4318,"src":"15872:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:17","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4481,"src":"15872:45:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4428_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3619,"id":3632,"nodeType":"Return","src":"15865:54:17"}]},"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"15449:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3634,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:17","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"arr","nameLocation":"15685:3:17","nodeType":"VariableDeclaration","scope":3634,"src":"15667:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3611,"nodeType":"ArrayTypeName","src":"15667:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"pos","nameLocation":"15698:3:17","nodeType":"VariableDeclaration","scope":3634,"src":"15690:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:17"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3634,"src":"15726:31:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3617,"nodeType":"UserDefinedTypeName","pathNode":{"id":3616,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:17","15738:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":4428,"src":"15726:23:17"},"referencedDeclaration":4428,"src":"15726:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:17"},"scope":3707,"src":"15645:281:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"16227:98:17","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:17","statements":[{"nodeType":"YulAssignment","src":"16260:49:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:17"},"nodeType":"YulFunctionCall","src":"16277:14:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:17"},"nodeType":"YulFunctionCall","src":"16293:14:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:17"},"nodeType":"YulFunctionCall","src":"16273:35:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:17"},"nodeType":"YulFunctionCall","src":"16267:42:17"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3638,"isOffset":false,"isSlot":false,"src":"16281:3:17","valueSize":1},{"declaration":3640,"isOffset":false,"isSlot":false,"src":"16297:3:17","valueSize":1},{"declaration":3643,"isOffset":false,"isSlot":false,"src":"16260:3:17","valueSize":1}],"id":3645,"nodeType":"InlineAssembly","src":"16237:82:17"}]},"documentation":{"id":3635,"nodeType":"StructuredDocumentation","src":"15932:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:17","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"arr","nameLocation":"16173:3:17","nodeType":"VariableDeclaration","scope":3647,"src":"16156:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3637,"nodeType":"ArrayTypeName","src":"16156:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"pos","nameLocation":"16186:3:17","nodeType":"VariableDeclaration","scope":3647,"src":"16178:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:17"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"res","nameLocation":"16222:3:17","nodeType":"VariableDeclaration","scope":3647,"src":"16214:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3642,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:17"},"scope":3707,"src":"16128:197:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"16626:98:17","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:17","statements":[{"nodeType":"YulAssignment","src":"16659:49:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:17"},"nodeType":"YulFunctionCall","src":"16676:14:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:17"},"nodeType":"YulFunctionCall","src":"16692:14:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:17"},"nodeType":"YulFunctionCall","src":"16672:35:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:17"},"nodeType":"YulFunctionCall","src":"16666:42:17"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3651,"isOffset":false,"isSlot":false,"src":"16680:3:17","valueSize":1},{"declaration":3653,"isOffset":false,"isSlot":false,"src":"16696:3:17","valueSize":1},{"declaration":3656,"isOffset":false,"isSlot":false,"src":"16659:3:17","valueSize":1}],"id":3658,"nodeType":"InlineAssembly","src":"16636:82:17"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"16331:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:17","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"arr","nameLocation":"16572:3:17","nodeType":"VariableDeclaration","scope":3660,"src":"16555:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3650,"nodeType":"ArrayTypeName","src":"16555:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"pos","nameLocation":"16585:3:17","nodeType":"VariableDeclaration","scope":3660,"src":"16577:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:17"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"res","nameLocation":"16621:3:17","nodeType":"VariableDeclaration","scope":3660,"src":"16613:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:17"},"scope":3707,"src":"16527:197:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"17025:98:17","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:17","statements":[{"nodeType":"YulAssignment","src":"17058:49:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:17"},"nodeType":"YulFunctionCall","src":"17075:14:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:17"},"nodeType":"YulFunctionCall","src":"17091:14:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:17"},"nodeType":"YulFunctionCall","src":"17071:35:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:17"},"nodeType":"YulFunctionCall","src":"17065:42:17"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3664,"isOffset":false,"isSlot":false,"src":"17079:3:17","valueSize":1},{"declaration":3666,"isOffset":false,"isSlot":false,"src":"17095:3:17","valueSize":1},{"declaration":3669,"isOffset":false,"isSlot":false,"src":"17058:3:17","valueSize":1}],"id":3671,"nodeType":"InlineAssembly","src":"17035:82:17"}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"16730:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:17","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"arr","nameLocation":"16971:3:17","nodeType":"VariableDeclaration","scope":3673,"src":"16954:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3663,"nodeType":"ArrayTypeName","src":"16954:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"pos","nameLocation":"16984:3:17","nodeType":"VariableDeclaration","scope":3673,"src":"16976:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:17"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"res","nameLocation":"17020:3:17","nodeType":"VariableDeclaration","scope":3673,"src":"17012:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:17"},"scope":3707,"src":"16926:197:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3683,"nodeType":"Block","src":"17439:88:17","statements":[{"AST":{"nodeType":"YulBlock","src":"17474:47:17","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17495:10:17"},{"name":"len","nodeType":"YulIdentifier","src":"17507:3:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17488:6:17"},"nodeType":"YulFunctionCall","src":"17488:23:17"},"nodeType":"YulExpressionStatement","src":"17488:23:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3677,"isOffset":false,"isSlot":true,"src":"17495:10:17","suffix":"slot","valueSize":1},{"declaration":3679,"isOffset":false,"isSlot":false,"src":"17507:3:17","valueSize":1}],"flags":["memory-safe"],"id":3682,"nodeType":"InlineAssembly","src":"17449:72:17"}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"17129:233:17","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3684,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:17","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"array","nameLocation":"17410:5:17","nodeType":"VariableDeclaration","scope":3684,"src":"17392:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3675,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3676,"nodeType":"ArrayTypeName","src":"17392:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"len","nameLocation":"17425:3:17","nodeType":"VariableDeclaration","scope":3684,"src":"17417:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:17"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[],"src":"17439:0:17"},"scope":3707,"src":"17367:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3694,"nodeType":"Block","src":"17843:88:17","statements":[{"AST":{"nodeType":"YulBlock","src":"17878:47:17","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17899:10:17"},{"name":"len","nodeType":"YulIdentifier","src":"17911:3:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17892:6:17"},"nodeType":"YulFunctionCall","src":"17892:23:17"},"nodeType":"YulExpressionStatement","src":"17892:23:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3688,"isOffset":false,"isSlot":true,"src":"17899:10:17","suffix":"slot","valueSize":1},{"declaration":3690,"isOffset":false,"isSlot":false,"src":"17911:3:17","valueSize":1}],"flags":["memory-safe"],"id":3693,"nodeType":"InlineAssembly","src":"17853:72:17"}]},"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"17533:233:17","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3695,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:17","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"array","nameLocation":"17814:5:17","nodeType":"VariableDeclaration","scope":3695,"src":"17796:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3687,"nodeType":"ArrayTypeName","src":"17796:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"len","nameLocation":"17829:3:17","nodeType":"VariableDeclaration","scope":3695,"src":"17821:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:17"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"17843:0:17"},"scope":3707,"src":"17771:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"18247:88:17","statements":[{"AST":{"nodeType":"YulBlock","src":"18282:47:17","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18303:10:17"},{"name":"len","nodeType":"YulIdentifier","src":"18315:3:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18296:6:17"},"nodeType":"YulFunctionCall","src":"18296:23:17"},"nodeType":"YulExpressionStatement","src":"18296:23:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3699,"isOffset":false,"isSlot":true,"src":"18303:10:17","suffix":"slot","valueSize":1},{"declaration":3701,"isOffset":false,"isSlot":false,"src":"18315:3:17","valueSize":1}],"flags":["memory-safe"],"id":3704,"nodeType":"InlineAssembly","src":"18257:72:17"}]},"documentation":{"id":3696,"nodeType":"StructuredDocumentation","src":"17937:233:17","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:17","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"array","nameLocation":"18218:5:17","nodeType":"VariableDeclaration","scope":3706,"src":"18200:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ArrayTypeName","src":"18200:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"len","nameLocation":"18233:3:17","nodeType":"VariableDeclaration","scope":3706,"src":"18225:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:17"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[],"src":"18247:0:17"},"scope":3707,"src":"18175:160:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3708,"src":"459:17878:17","usedErrors":[],"usedEvents":[]}],"src":"183:18155:17"},"id":17},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3739]},"id":3740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3709,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"131:92:18","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3739,"linearizedBaseContracts":[3739],"name":"Comparators","nameLocation":"232:11:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3723,"nodeType":"Block","src":"313:29:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"334:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3718,"id":3722,"nodeType":"Return","src":"323:12:18"}]},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:18","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"a","nameLocation":"270:1:18","nodeType":"VariableDeclaration","scope":3724,"src":"262:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"b","nameLocation":"281:1:18","nodeType":"VariableDeclaration","scope":3724,"src":"273:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:18"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"307:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3716,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:18"},"scope":3739,"src":"250:92:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3737,"nodeType":"Block","src":"411:29:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"428:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"432:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3732,"id":3736,"nodeType":"Return","src":"421:12:18"}]},"id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:18","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"a","nameLocation":"368:1:18","nodeType":"VariableDeclaration","scope":3738,"src":"360:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"b","nameLocation":"379:1:18","nodeType":"VariableDeclaration","scope":3738,"src":"371:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:18"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3738,"src":"405:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3730,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:18"},"scope":3739,"src":"348:92:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3740,"src":"224:218:18","usedErrors":[],"usedEvents":[]}],"src":"105:338:18"},"id":18},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3769]},"id":3770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"127:496:19","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3769,"linearizedBaseContracts":[3769],"name":"Context","nameLocation":"642:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3750,"nodeType":"Block","src":"718:34:19","statements":[{"expression":{"expression":{"id":3747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:19","memberName":"sender","nodeType":"MemberAccess","src":"735:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3746,"id":3749,"nodeType":"Return","src":"728:17:19"}]},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:19","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"675:2:19"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"709:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:19"},"scope":3769,"src":"656:96:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3759,"nodeType":"Block","src":"825:32:19","statements":[{"expression":{"expression":{"id":3756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:19","memberName":"data","nodeType":"MemberAccess","src":"842:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3755,"id":3758,"nodeType":"Return","src":"835:15:19"}]},"id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:19","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"775:2:19"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"809:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3753,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:19"},"scope":3769,"src":"758:99:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"935:25:19","statements":[{"expression":{"hexValue":"30","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3764,"id":3766,"nodeType":"Return","src":"945:8:19"}]},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:19","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[],"src":"892:2:19"},"returnParameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3768,"src":"926:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:19"},"scope":3769,"src":"863:97:19","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3770,"src":"624:338:19","usedErrors":[],"usedEvents":[]}],"src":"101:862:19"},"id":19},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[3837]},"id":3838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3771,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"125:83:20","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":3837,"linearizedBaseContracts":[3837],"name":"Nonces","nameLocation":"227:6:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"240:90:20","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":3779,"name":"InvalidAccountNonce","nameLocation":"341:19:20","nodeType":"ErrorDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"account","nameLocation":"369:7:20","nodeType":"VariableDeclaration","scope":3779,"src":"361:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:20","nodeType":"VariableDeclaration","scope":3779,"src":"378:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:20"},"src":"335:65:20"},{"constant":false,"id":3783,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:20","nodeType":"VariableDeclaration","scope":3837,"src":"406:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3782,"keyName":"account","keyNameLocation":"422:7:20","keyType":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":3795,"nodeType":"Block","src":"607:38:20","statements":[{"expression":{"baseExpression":{"id":3791,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"624:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3793,"indexExpression":{"id":3792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"632:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3790,"id":3794,"nodeType":"Return","src":"617:21:20"}]},"documentation":{"id":3784,"nodeType":"StructuredDocumentation","src":"464:69:20","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:20","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"owner","nameLocation":"562:5:20","nodeType":"VariableDeclaration","scope":3796,"src":"554:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:20"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"598:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:20"},"scope":3837,"src":"538:107:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3810,"nodeType":"Block","src":"828:326:20","statements":[{"id":3809,"nodeType":"UncheckedBlock","src":"1031:117:20","statements":[{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:20","subExpression":{"baseExpression":{"id":3804,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"1121:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3806,"indexExpression":{"id":3805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1129:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3803,"id":3808,"nodeType":"Return","src":"1114:23:20"}]}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"651:103:20","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:20","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"owner","nameLocation":"786:5:20","nodeType":"VariableDeclaration","scope":3811,"src":"778:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:20"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"819:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:20"},"scope":3837,"src":"759:395:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"1338:149:20","statements":[{"assignments":[3820],"declarations":[{"constant":false,"id":3820,"mutability":"mutable","name":"current","nameLocation":"1356:7:20","nodeType":"VariableDeclaration","scope":3835,"src":"1348:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3824,"initialValue":{"arguments":[{"id":3822,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"1376:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3821,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"1366:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"1396:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3826,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1405:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3834,"nodeType":"IfStatement","src":"1392:89:20","trueBody":{"id":3833,"nodeType":"Block","src":"1414:67:20","statements":[{"errorCall":{"arguments":[{"id":3829,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"1455:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3830,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1462:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3828,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"1435:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3832,"nodeType":"RevertStatement","src":"1428:42:20"}]}}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"1160:100:20","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:20","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"owner","nameLocation":"1299:5:20","nodeType":"VariableDeclaration","scope":3836,"src":"1291:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:20","nodeType":"VariableDeclaration","scope":3836,"src":"1306:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:20"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"1338:0:20"},"scope":3837,"src":"1265:222:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3838,"src":"209:1280:20","usedErrors":[3779],"usedEvents":[]}],"src":"99:1391:20"},"id":20},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3889]},"id":3890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"125:489:21","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3889,"linearizedBaseContracts":[3889],"name":"Panic","nameLocation":"665:5:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"677:36:21","text":"@dev generic / unspecified error"},"id":3844,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:21","nodeType":"VariableDeclaration","scope":3889,"src":"718:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"764:37:21","text":"@dev used by the assert() builtin"},"id":3848,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:21","nodeType":"VariableDeclaration","scope":3889,"src":"806:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"851:41:21","text":"@dev arithmetic underflow or overflow"},"id":3852,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:21","nodeType":"VariableDeclaration","scope":3889,"src":"897:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:21","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"950:35:21","text":"@dev division or modulo by zero"},"id":3856,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:21","nodeType":"VariableDeclaration","scope":3889,"src":"990:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3857,"nodeType":"StructuredDocumentation","src":"1045:30:21","text":"@dev enum conversion error"},"id":3860,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:21","nodeType":"VariableDeclaration","scope":3889,"src":"1080:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3861,"nodeType":"StructuredDocumentation","src":"1140:36:21","text":"@dev invalid encoding in storage"},"id":3864,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:21","nodeType":"VariableDeclaration","scope":3889,"src":"1181:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"1242:24:21","text":"@dev empty array pop"},"id":3868,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:21","nodeType":"VariableDeclaration","scope":3889,"src":"1271:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:21","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"1325:35:21","text":"@dev array out of bounds access"},"id":3872,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:21","nodeType":"VariableDeclaration","scope":3889,"src":"1365:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"1423:65:21","text":"@dev resource error (too large allocation or too large array)"},"id":3876,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:21","nodeType":"VariableDeclaration","scope":3889,"src":"1493:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"1546:42:21","text":"@dev calling invalid internal function"},"id":3880,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:21","nodeType":"VariableDeclaration","scope":3889,"src":"1593:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:21","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3887,"nodeType":"Block","src":"1819:151:21","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:21"},"nodeType":"YulFunctionCall","src":"1868:24:21"},"nodeType":"YulExpressionStatement","src":"1868:24:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:21","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:21"},"nodeType":"YulFunctionCall","src":"1905:18:21"},"nodeType":"YulExpressionStatement","src":"1905:18:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:21","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:21"},"nodeType":"YulFunctionCall","src":"1936:18:21"},"nodeType":"YulExpressionStatement","src":"1936:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3883,"isOffset":false,"isSlot":false,"src":"1918:4:21","valueSize":1}],"flags":["memory-safe"],"id":3886,"nodeType":"InlineAssembly","src":"1829:135:21"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"1658:113:21","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3888,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:21","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"code","nameLocation":"1799:4:21","nodeType":"VariableDeclaration","scope":3888,"src":"1791:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:21"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[],"src":"1819:0:21"},"scope":3889,"src":"1776:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3890,"src":"657:1315:21","usedErrors":[],"usedEvents":[]}],"src":"99:1874:21"},"id":21},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3769],"Pausable":[3997]},"id":3998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3891,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3893,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3998,"sourceUnit":3770,"src":"128:45:22","symbolAliases":[{"foreign":{"id":3892,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"136:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3895,"name":"Context","nameLocations":["645:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"645:7:22"},"id":3896,"nodeType":"InheritanceSpecifier","src":"645:7:22"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"175:439:22","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3997,"linearizedBaseContracts":[3997,3769],"name":"Pausable","nameLocation":"633:8:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3898,"mutability":"mutable","name":"_paused","nameLocation":"672:7:22","nodeType":"VariableDeclaration","scope":3997,"src":"659:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"686:73:22","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3903,"name":"Paused","nameLocation":"770:6:22","nodeType":"EventDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:22","nodeType":"VariableDeclaration","scope":3903,"src":"777:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3900,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:22"},"src":"764:30:22"},{"anonymous":false,"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"800:70:22","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3908,"name":"Unpaused","nameLocation":"881:8:22","nodeType":"EventDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:22","nodeType":"VariableDeclaration","scope":3908,"src":"890:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:22"},"src":"875:32:22"},{"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"913:76:22","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3911,"name":"EnforcedPause","nameLocation":"1000:13:22","nodeType":"ErrorDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[],"src":"1013:2:22"},"src":"994:22:22"},{"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"1022:80:22","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3914,"name":"ExpectedPause","nameLocation":"1113:13:22","nodeType":"ErrorDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[],"src":"1126:2:22"},"src":"1107:22:22"},{"body":{"id":3921,"nodeType":"Block","src":"1340:47:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3917,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"1350:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3919,"nodeType":"ExpressionStatement","src":"1350:19:22"},{"id":3920,"nodeType":"PlaceholderStatement","src":"1379:1:22"}]},"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"1135:175:22","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3922,"name":"whenNotPaused","nameLocation":"1324:13:22","nodeType":"ModifierDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[],"src":"1337:2:22"},"src":"1315:72:22","virtual":false,"visibility":"internal"},{"body":{"id":3929,"nodeType":"Block","src":"1587:44:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3925,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"1597:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3927,"nodeType":"ExpressionStatement","src":"1597:16:22"},{"id":3928,"nodeType":"PlaceholderStatement","src":"1623:1:22"}]},"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"1393:167:22","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3930,"name":"whenPaused","nameLocation":"1574:10:22","nodeType":"ModifierDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[],"src":"1584:2:22"},"src":"1565:66:22","virtual":false,"visibility":"internal"},{"body":{"id":3938,"nodeType":"Block","src":"1779:31:22","statements":[{"expression":{"id":3936,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"1796:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3935,"id":3937,"nodeType":"Return","src":"1789:14:22"}]},"documentation":{"id":3931,"nodeType":"StructuredDocumentation","src":"1637:84:22","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:22","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[],"src":"1741:2:22"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"1773:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3933,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:22"},"scope":3997,"src":"1726:84:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3950,"nodeType":"Block","src":"1929:77:22","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3943,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"1943:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3949,"nodeType":"IfStatement","src":"1939:61:22","trueBody":{"id":3948,"nodeType":"Block","src":"1953:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3945,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1974:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"RevertStatement","src":"1967:22:22"}]}}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"1816:57:22","text":" @dev Throws if the contract is paused."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:22","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[],"src":"1904:2:22"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[],"src":"1929:0:22"},"scope":3997,"src":"1878:128:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"2126:78:22","statements":[{"condition":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:22","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3955,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"2141:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3962,"nodeType":"IfStatement","src":"2136:62:22","trueBody":{"id":3961,"nodeType":"Block","src":"2151:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3958,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2172:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3960,"nodeType":"RevertStatement","src":"2165:22:22"}]}}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"2012:61:22","text":" @dev Throws if the contract is not paused."},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:22","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[],"src":"2101:2:22"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[],"src":"2126:0:22"},"scope":3997,"src":"2078:126:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"2388:66:22","statements":[{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"2398:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"ExpressionStatement","src":"2398:14:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3975,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"2434:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3974,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"2427:6:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3978,"nodeType":"EmitStatement","src":"2422:25:22"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"2210:124:22","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3980,"implemented":true,"kind":"function","modifiers":[{"id":3968,"kind":"modifierInvocation","modifierName":{"id":3967,"name":"whenNotPaused","nameLocations":["2374:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"2374:13:22"},"nodeType":"ModifierInvocation","src":"2374:13:22"}],"name":"_pause","nameLocation":"2348:6:22","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[],"src":"2354:2:22"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[],"src":"2388:0:22"},"scope":3997,"src":"2339:115:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3995,"nodeType":"Block","src":"2634:69:22","statements":[{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"2644:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3989,"nodeType":"ExpressionStatement","src":"2644:15:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3991,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"2683:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3990,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"2674:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3994,"nodeType":"EmitStatement","src":"2669:27:22"}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"2460:121:22","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3996,"implemented":true,"kind":"function","modifiers":[{"id":3984,"kind":"modifierInvocation","modifierName":{"id":3983,"name":"whenPaused","nameLocations":["2623:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":3930,"src":"2623:10:22"},"nodeType":"ModifierInvocation","src":"2623:10:22"}],"name":"_unpause","nameLocation":"2595:8:22","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[],"src":"2603:2:22"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[],"src":"2634:0:22"},"scope":3997,"src":"2586:117:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3998,"src":"615:2090:22","usedErrors":[3911,3914],"usedEvents":[3903,3908]}],"src":"102:2604:22"},"id":22},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4066]},"id":4067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3999,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"135:894:23","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4066,"linearizedBaseContracts":[4066],"name":"ReentrancyGuard","nameLocation":"1048:15:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4003,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:23","nodeType":"VariableDeclaration","scope":4066,"src":"1818:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4006,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:23","nodeType":"VariableDeclaration","scope":4066,"src":"1864:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4008,"mutability":"mutable","name":"_status","nameLocation":"1923:7:23","nodeType":"VariableDeclaration","scope":4066,"src":"1907:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"1937:52:23","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":4011,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:23","nodeType":"ErrorDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[],"src":"2028:2:23"},"src":"1994:37:23"},{"body":{"id":4018,"nodeType":"Block","src":"2051:38:23","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4015,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"2071:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"2061:21:23"}]},"id":4019,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[],"src":"2048:2:23"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[],"src":"2051:0:23"},"scope":4066,"src":"2037:52:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4029,"nodeType":"Block","src":"2490:79:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4022,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"2500:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4024,"nodeType":"ExpressionStatement","src":"2500:21:23"},{"id":4025,"nodeType":"PlaceholderStatement","src":"2531:1:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4026,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"2542:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4028,"nodeType":"ExpressionStatement","src":"2542:20:23"}]},"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"2095:366:23","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":4030,"name":"nonReentrant","nameLocation":"2475:12:23","nodeType":"ModifierDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[],"src":"2487:2:23"},"src":"2466:103:23","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"2614:268:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4034,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"nodeType":"IfStatement","src":"2698:86:23","trueBody":{"id":4039,"nodeType":"Block","src":"2722:62:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4036,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"2743:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4038,"nodeType":"RevertStatement","src":"2736:37:23"}]}},{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4042,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"2858:17:23"}]},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:23","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[],"src":"2603:2:23"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[],"src":"2614:0:23"},"scope":4066,"src":"2575:307:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4053,"nodeType":"Block","src":"2926:170:23","statements":[{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"3068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4050,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"3078:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"3068:21:23"}]},"id":4054,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:23","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"2915:2:23"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"2926:0:23"},"scope":4066,"src":"2888:208:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4064,"nodeType":"Block","src":"3339:42:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"3356:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4061,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4059,"id":4063,"nodeType":"Return","src":"3349:25:23"}]},"documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"3102:168:23","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":4065,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:23","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[],"src":"3307:2:23"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4065,"src":"3333:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4057,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:23"},"scope":4066,"src":"3275:106:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4067,"src":"1030:2353:23","usedErrors":[4011],"usedEvents":[]}],"src":"109:3275:23"},"id":23},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[4072],"ShortStrings":[4283],"StorageSlot":[4537]},"id":4284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4068,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":4070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":4538,"src":"132:46:24","symbolAliases":[{"foreign":{"id":4069,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"140:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":4072,"name":"ShortString","nameLocation":"353:11:24","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:24","underlyingType":{"id":4071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":4073,"nodeType":"StructuredDocumentation","src":"378:876:24","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":4283,"linearizedBaseContracts":[4283],"name":"ShortStrings","nameLocation":"1263:12:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4076,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:24","nodeType":"VariableDeclaration","scope":4283,"src":"1345:111:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":4080,"name":"StringTooLong","nameLocation":"1469:13:24","nodeType":"ErrorDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"str","nameLocation":"1490:3:24","nodeType":"VariableDeclaration","scope":4080,"src":"1483:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4077,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:24"},"src":"1463:32:24"},{"errorSelector":"b3512b0c","id":4082,"name":"InvalidShortString","nameLocation":"1506:18:24","nodeType":"ErrorDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[],"src":"1524:2:24"},"src":"1500:27:24"},{"body":{"id":4125,"nodeType":"Block","src":"1786:208:24","statements":[{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:24","nodeType":"VariableDeclaration","scope":4125,"src":"1796:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4091,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4097,"initialValue":{"arguments":[{"id":4095,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"1822:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4093,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:24","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4098,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"1840:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:24","memberName":"length","nodeType":"MemberAccess","src":"1840:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:24","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4107,"nodeType":"IfStatement","src":"1836:72:24","trueBody":{"id":4106,"nodeType":"Block","src":"1858:50:24","statements":[{"errorCall":{"arguments":[{"id":4103,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"1893:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4102,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"1879:13:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"RevertStatement","src":"1872:25:24"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4116,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"1965:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:24","typeDescriptions":{}}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:24","typeDescriptions":{}}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":4119,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"1974:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:24","memberName":"length","nodeType":"MemberAccess","src":"1974:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:24","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4108,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"1924:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"type(ShortString)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:24","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:24","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"functionReturnParameters":4090,"id":4124,"nodeType":"Return","src":"1917:70:24"}]},"documentation":{"id":4083,"nodeType":"StructuredDocumentation","src":"1533:170:24","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:24","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"str","nameLocation":"1745:3:24","nodeType":"VariableDeclaration","scope":4126,"src":"1731:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4084,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:24"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4126,"src":"1773:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"ShortString","nameLocations":["1773:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"1773:11:24"},"referencedDeclaration":4072,"src":"1773:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:24"},"scope":4283,"src":"1708:286:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"2152:304:24","statements":[{"assignments":[4136],"declarations":[{"constant":false,"id":4136,"mutability":"mutable","name":"len","nameLocation":"2170:3:24","nodeType":"VariableDeclaration","scope":4151,"src":"2162:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4140,"initialValue":{"arguments":[{"id":4138,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"2187:4:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"id":4137,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"2176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:24"},{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"str","nameLocation":"2294:3:24","nodeType":"VariableDeclaration","scope":4151,"src":"2280:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4141,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4147,"initialValue":{"arguments":[{"hexValue":"3332","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4143,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:24"},{"AST":{"nodeType":"YulBlock","src":"2349:81:24","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:24"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:24"},"nodeType":"YulFunctionCall","src":"2363:16:24"},"nodeType":"YulExpressionStatement","src":"2363:16:24"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:24"},"nodeType":"YulFunctionCall","src":"2399:14:24"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:24"},"nodeType":"YulFunctionCall","src":"2392:28:24"},"nodeType":"YulExpressionStatement","src":"2392:28:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4136,"isOffset":false,"isSlot":false,"src":"2375:3:24","valueSize":1},{"declaration":4130,"isOffset":false,"isSlot":false,"src":"2415:4:24","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"2370:3:24","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"2403:3:24","valueSize":1}],"flags":["memory-safe"],"id":4148,"nodeType":"InlineAssembly","src":"2324:106:24"},{"expression":{"id":4149,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"2446:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4134,"id":4150,"nodeType":"Return","src":"2439:10:24"}]},"documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"2000:73:24","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:24","nodeType":"FunctionDefinition","parameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:24","nodeType":"VariableDeclaration","scope":4152,"src":"2096:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4129,"nodeType":"UserDefinedTypeName","pathNode":{"id":4128,"name":"ShortString","nameLocations":["2096:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2096:11:24"},"referencedDeclaration":4072,"src":"2096:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:24"},"returnParameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4152,"src":"2137:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4132,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:24"},"scope":4283,"src":"2078:378:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4183,"nodeType":"Block","src":"2598:175:24","statements":[{"assignments":[4162],"declarations":[{"constant":false,"id":4162,"mutability":"mutable","name":"result","nameLocation":"2616:6:24","nodeType":"VariableDeclaration","scope":4183,"src":"2608:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4172,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4167,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"2652:4:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"expression":{"id":4165,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"2633:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"type(ShortString)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:24","typeDescriptions":{}}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2679:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:24","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"2675:69:24","trueBody":{"id":4179,"nodeType":"Block","src":"2692:52:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4176,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2713:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4178,"nodeType":"RevertStatement","src":"2706:27:24"}]}},{"expression":{"id":4181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2760:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4160,"id":4182,"nodeType":"Return","src":"2753:13:24"}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"2462:61:24","text":" @dev Return the length of a `ShortString`."},"id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:24","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:24","nodeType":"VariableDeclaration","scope":4184,"src":"2548:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"ShortString","nameLocations":["2548:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2548:11:24"},"referencedDeclaration":4072,"src":"2548:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:24"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"2589:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:24"},"scope":4283,"src":"2528:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"2996:231:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"3016:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4195,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:24","typeDescriptions":{}}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:24","memberName":"length","nodeType":"MemberAccess","src":"3010:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4221,"nodeType":"Block","src":"3094:127:24","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":4210,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"3134:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":4207,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"3108:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4537_$","typeString":"type(library StorageSlot)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:24","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4514,"src":"3108:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$4434_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4434_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":4212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:24","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4433,"src":"3108:38:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"3149:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4215,"nodeType":"ExpressionStatement","src":"3108:46:24"},{"expression":{"arguments":[{"id":4218,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"3192:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4216,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"3175:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"type(ShortString)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:24","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:24","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"functionReturnParameters":4194,"id":4220,"nodeType":"Return","src":"3168:42:24"}]},"id":4222,"nodeType":"IfStatement","src":"3006:215:24","trueBody":{"id":4206,"nodeType":"Block","src":"3036:52:24","statements":[{"expression":{"arguments":[{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"3071:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4202,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"3057:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"functionReturnParameters":4194,"id":4205,"nodeType":"Return","src":"3050:27:24"}]}}]},"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"2779:103:24","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:24","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"value","nameLocation":"2936:5:24","nodeType":"VariableDeclaration","scope":4224,"src":"2922:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4186,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"store","nameLocation":"2958:5:24","nodeType":"VariableDeclaration","scope":4224,"src":"2943:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4188,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:24"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"2983:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"ShortString","nameLocations":["2983:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2983:11:24"},"referencedDeclaration":4072,"src":"2983:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:24"},"scope":4283,"src":"2887:340:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4250,"nodeType":"Block","src":"3477:158:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3510:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"expression":{"id":4235,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"3491:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"type(ShortString)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4239,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"3520:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4248,"nodeType":"Block","src":"3592:37:24","statements":[{"expression":{"id":4246,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"3613:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":4234,"id":4247,"nodeType":"Return","src":"3606:12:24"}]},"id":4249,"nodeType":"IfStatement","src":"3487:142:24","trueBody":{"id":4245,"nodeType":"Block","src":"3539:47:24","statements":[{"expression":{"arguments":[{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3569:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"id":4241,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"3560:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4234,"id":4244,"nodeType":"Return","src":"3553:22:24"}]}}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"3233:130:24","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:24","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"value","nameLocation":"3410:5:24","nodeType":"VariableDeclaration","scope":4251,"src":"3398:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4227,"nodeType":"UserDefinedTypeName","pathNode":{"id":4226,"name":"ShortString","nameLocations":["3398:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"3398:11:24"},"referencedDeclaration":4072,"src":"3398:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"store","nameLocation":"3432:5:24","nodeType":"VariableDeclaration","scope":4251,"src":"3417:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4229,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:24"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"3462:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4232,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:24"},"scope":4283,"src":"3368:267:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4281,"nodeType":"Block","src":"4125:174:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"4158:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"expression":{"id":4262,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"4139:11:24","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"type(ShortString)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:24","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:24","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4266,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"4168:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4279,"nodeType":"Block","src":"4242:51:24","statements":[{"expression":{"expression":{"arguments":[{"id":4275,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"4269:5:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4273,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:24","typeDescriptions":{}}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:24","memberName":"length","nodeType":"MemberAccess","src":"4263:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4261,"id":4278,"nodeType":"Return","src":"4256:26:24"}]},"id":4280,"nodeType":"IfStatement","src":"4135:158:24","trueBody":{"id":4272,"nodeType":"Block","src":"4187:49:24","statements":[{"expression":{"arguments":[{"id":4269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"4219:5:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}],"id":4268,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"4208:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$4072_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4261,"id":4271,"nodeType":"Return","src":"4201:24:24"}]}}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"3641:374:24","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:24","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"value","nameLocation":"4064:5:24","nodeType":"VariableDeclaration","scope":4282,"src":"4052:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":4254,"nodeType":"UserDefinedTypeName","pathNode":{"id":4253,"name":"ShortString","nameLocations":["4052:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"4052:11:24"},"referencedDeclaration":4072,"src":"4052:11:24","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":4257,"mutability":"mutable","name":"store","nameLocation":"4086:5:24","nodeType":"VariableDeclaration","scope":4282,"src":"4071:20:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4256,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:24"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"4116:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:24"},"scope":4283,"src":"4020:279:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4284,"src":"1255:3046:24","usedErrors":[4080,4082],"usedEvents":[]}],"src":"106:4196:24"},"id":24},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4413]},"id":4414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4285,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"225:1373:25","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4413,"linearizedBaseContracts":[4413],"name":"SlotDerivation","nameLocation":"1607:14:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4295,"nodeType":"Block","src":"1790:194:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:25","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:25"},"nodeType":"YulFunctionCall","src":"1866:20:25"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:25"},"nodeType":"YulFunctionCall","src":"1888:16:25"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:25"},"nodeType":"YulFunctionCall","src":"1856:49:25"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:25"},"nodeType":"YulFunctionCall","src":"1852:57:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:25"},"nodeType":"YulFunctionCall","src":"1839:71:25"},"nodeType":"YulExpressionStatement","src":"1839:71:25"},{"nodeType":"YulAssignment","src":"1923:45:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:25"},"nodeType":"YulFunctionCall","src":"1935:21:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:25","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:25"},"nodeType":"YulFunctionCall","src":"1958:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:25"},"nodeType":"YulFunctionCall","src":"1931:37:25"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4289,"isOffset":false,"isSlot":false,"src":"1870:9:25","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"1894:9:25","valueSize":1},{"declaration":4292,"isOffset":false,"isSlot":false,"src":"1923:4:25","valueSize":1}],"flags":["memory-safe"],"id":4294,"nodeType":"InlineAssembly","src":"1800:178:25"}]},"documentation":{"id":4287,"nodeType":"StructuredDocumentation","src":"1628:74:25","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:25","nodeType":"FunctionDefinition","parameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:25","nodeType":"VariableDeclaration","scope":4296,"src":"1728:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4288,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:25"},"returnParameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"slot","nameLocation":"1784:4:25","nodeType":"VariableDeclaration","scope":4296,"src":"1776:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:25"},"scope":4413,"src":"1707:277:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"2176:86:25","statements":[{"id":4316,"nodeType":"UncheckedBlock","src":"2186:70:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4310,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"2233:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:25","typeDescriptions":{}}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4312,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"2241:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:25","typeDescriptions":{}}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4305,"id":4315,"nodeType":"Return","src":"2210:35:25"}]}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"1990:99:25","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:25","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"slot","nameLocation":"2118:4:25","nodeType":"VariableDeclaration","scope":4318,"src":"2110:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"pos","nameLocation":"2132:3:25","nodeType":"VariableDeclaration","scope":4318,"src":"2124:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:25"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"result","nameLocation":"2168:6:25","nodeType":"VariableDeclaration","scope":4318,"src":"2160:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:25"},"scope":4413,"src":"2094:168:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4327,"nodeType":"Block","src":"2465:127:25","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:25","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:25"},"nodeType":"YulFunctionCall","src":"2514:18:25"},"nodeType":"YulExpressionStatement","src":"2514:18:25"},{"nodeType":"YulAssignment","src":"2545:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:25"},"nodeType":"YulFunctionCall","src":"2555:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4324,"isOffset":false,"isSlot":false,"src":"2545:6:25","valueSize":1},{"declaration":4321,"isOffset":false,"isSlot":false,"src":"2527:4:25","valueSize":1}],"flags":["memory-safe"],"id":4326,"nodeType":"InlineAssembly","src":"2475:111:25"}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"2268:118:25","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:25","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"slot","nameLocation":"2420:4:25","nodeType":"VariableDeclaration","scope":4328,"src":"2412:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:25"},"returnParameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"result","nameLocation":"2457:6:25","nodeType":"VariableDeclaration","scope":4328,"src":"2449:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:25"},"scope":4413,"src":"2391:201:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"2770:179:25","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:25","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:25","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:25"},"nodeType":"YulFunctionCall","src":"2849:6:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:25"},"nodeType":"YulFunctionCall","src":"2841:15:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:25"},"nodeType":"YulFunctionCall","src":"2832:25:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:25"},"nodeType":"YulFunctionCall","src":"2819:39:25"},"nodeType":"YulExpressionStatement","src":"2819:39:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:25","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:25"},"nodeType":"YulFunctionCall","src":"2871:18:25"},"nodeType":"YulExpressionStatement","src":"2871:18:25"},{"nodeType":"YulAssignment","src":"2902:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:25","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:25"},"nodeType":"YulFunctionCall","src":"2912:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4333,"isOffset":false,"isSlot":false,"src":"2836:3:25","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"2902:6:25","valueSize":1},{"declaration":4331,"isOffset":false,"isSlot":false,"src":"2884:4:25","valueSize":1}],"flags":["memory-safe"],"id":4338,"nodeType":"InlineAssembly","src":"2780:163:25"}]},"documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"2598:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:25","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"slot","nameLocation":"2712:4:25","nodeType":"VariableDeclaration","scope":4340,"src":"2704:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"key","nameLocation":"2726:3:25","nodeType":"VariableDeclaration","scope":4340,"src":"2718:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4332,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:25"},"returnParameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"result","nameLocation":"2762:6:25","nodeType":"VariableDeclaration","scope":4340,"src":"2754:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:25"},"scope":4413,"src":"2681:268:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"3124:173:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:25","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:25"},"nodeType":"YulFunctionCall","src":"3193:11:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:25"},"nodeType":"YulFunctionCall","src":"3186:19:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:25"},"nodeType":"YulFunctionCall","src":"3173:33:25"},"nodeType":"YulExpressionStatement","src":"3173:33:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:25","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:25"},"nodeType":"YulFunctionCall","src":"3219:18:25"},"nodeType":"YulExpressionStatement","src":"3219:18:25"},{"nodeType":"YulAssignment","src":"3250:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:25","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:25"},"nodeType":"YulFunctionCall","src":"3260:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4345,"isOffset":false,"isSlot":false,"src":"3200:3:25","valueSize":1},{"declaration":4348,"isOffset":false,"isSlot":false,"src":"3250:6:25","valueSize":1},{"declaration":4343,"isOffset":false,"isSlot":false,"src":"3232:4:25","valueSize":1}],"flags":["memory-safe"],"id":4350,"nodeType":"InlineAssembly","src":"3134:157:25"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"2955:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:25","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"slot","nameLocation":"3069:4:25","nodeType":"VariableDeclaration","scope":4352,"src":"3061:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"key","nameLocation":"3080:3:25","nodeType":"VariableDeclaration","scope":4352,"src":"3075:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4344,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:25"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"result","nameLocation":"3116:6:25","nodeType":"VariableDeclaration","scope":4352,"src":"3108:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:25"},"scope":4413,"src":"3038:259:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"3475:157:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:25","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:25"},"nodeType":"YulFunctionCall","src":"3524:17:25"},"nodeType":"YulExpressionStatement","src":"3524:17:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:25","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:25"},"nodeType":"YulFunctionCall","src":"3554:18:25"},"nodeType":"YulExpressionStatement","src":"3554:18:25"},{"nodeType":"YulAssignment","src":"3585:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:25","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:25"},"nodeType":"YulFunctionCall","src":"3595:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4357,"isOffset":false,"isSlot":false,"src":"3537:3:25","valueSize":1},{"declaration":4360,"isOffset":false,"isSlot":false,"src":"3585:6:25","valueSize":1},{"declaration":4355,"isOffset":false,"isSlot":false,"src":"3567:4:25","valueSize":1}],"flags":["memory-safe"],"id":4362,"nodeType":"InlineAssembly","src":"3485:141:25"}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"3303:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:25","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"slot","nameLocation":"3417:4:25","nodeType":"VariableDeclaration","scope":4364,"src":"3409:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"key","nameLocation":"3431:3:25","nodeType":"VariableDeclaration","scope":4364,"src":"3423:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:25"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"result","nameLocation":"3467:6:25","nodeType":"VariableDeclaration","scope":4364,"src":"3459:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:25"},"scope":4413,"src":"3386:246:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"3810:157:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:25","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:25"},"nodeType":"YulFunctionCall","src":"3859:17:25"},"nodeType":"YulExpressionStatement","src":"3859:17:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:25","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:25"},"nodeType":"YulFunctionCall","src":"3889:18:25"},"nodeType":"YulExpressionStatement","src":"3889:18:25"},{"nodeType":"YulAssignment","src":"3920:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:25","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:25"},"nodeType":"YulFunctionCall","src":"3930:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4369,"isOffset":false,"isSlot":false,"src":"3872:3:25","valueSize":1},{"declaration":4372,"isOffset":false,"isSlot":false,"src":"3920:6:25","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"3902:4:25","valueSize":1}],"flags":["memory-safe"],"id":4374,"nodeType":"InlineAssembly","src":"3820:141:25"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"3638:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:25","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"slot","nameLocation":"3752:4:25","nodeType":"VariableDeclaration","scope":4376,"src":"3744:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"key","nameLocation":"3766:3:25","nodeType":"VariableDeclaration","scope":4376,"src":"3758:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:25"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"result","nameLocation":"3802:6:25","nodeType":"VariableDeclaration","scope":4376,"src":"3794:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:25"},"scope":4413,"src":"3721:246:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4387,"nodeType":"Block","src":"4144:157:25","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:25","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:25"},"nodeType":"YulFunctionCall","src":"4193:17:25"},"nodeType":"YulExpressionStatement","src":"4193:17:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:25","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:25"},"nodeType":"YulFunctionCall","src":"4223:18:25"},"nodeType":"YulExpressionStatement","src":"4223:18:25"},{"nodeType":"YulAssignment","src":"4254:31:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:25","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:25"},"nodeType":"YulFunctionCall","src":"4264:21:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4381,"isOffset":false,"isSlot":false,"src":"4206:3:25","valueSize":1},{"declaration":4384,"isOffset":false,"isSlot":false,"src":"4254:6:25","valueSize":1},{"declaration":4379,"isOffset":false,"isSlot":false,"src":"4236:4:25","valueSize":1}],"flags":["memory-safe"],"id":4386,"nodeType":"InlineAssembly","src":"4154:141:25"}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"3973:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:25","nodeType":"FunctionDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"slot","nameLocation":"4087:4:25","nodeType":"VariableDeclaration","scope":4388,"src":"4079:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4381,"mutability":"mutable","name":"key","nameLocation":"4100:3:25","nodeType":"VariableDeclaration","scope":4388,"src":"4093:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4380,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:25"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"result","nameLocation":"4136:6:25","nodeType":"VariableDeclaration","scope":4388,"src":"4128:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:25"},"scope":4413,"src":"4056:245:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"4485:326:25","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:25","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:25"},"nodeType":"YulFunctionCall","src":"4548:10:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:25","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:25"},"nodeType":"YulFunctionCall","src":"4584:14:25"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:25","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:25"},"nodeType":"YulFunctionCall","src":"4622:18:25"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:25","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:25"},"nodeType":"YulFunctionCall","src":"4666:10:25"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:25","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:25"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:25"},"nodeType":"YulFunctionCall","src":"4689:17:25"},"nodeType":"YulExpressionStatement","src":"4689:17:25"},{"nodeType":"YulAssignment","src":"4719:45:25","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:25"},"nodeType":"YulFunctionCall","src":"4746:17:25"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:25"},"nodeType":"YulFunctionCall","src":"4729:35:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:25"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:25"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:25"},"nodeType":"YulFunctionCall","src":"4777:18:25"},"nodeType":"YulExpressionStatement","src":"4777:18:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4554:3:25","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4588:3:25","valueSize":1},{"declaration":4396,"isOffset":false,"isSlot":false,"src":"4719:6:25","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"4701:4:25","valueSize":1}],"flags":["memory-safe"],"id":4398,"nodeType":"InlineAssembly","src":"4495:310:25"}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"4307:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:25","nodeType":"FunctionDefinition","parameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"slot","nameLocation":"4421:4:25","nodeType":"VariableDeclaration","scope":4400,"src":"4413:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"key","nameLocation":"4441:3:25","nodeType":"VariableDeclaration","scope":4400,"src":"4427:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4392,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:25"},"returnParameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"result","nameLocation":"4477:6:25","nodeType":"VariableDeclaration","scope":4400,"src":"4469:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:25"},"scope":4413,"src":"4390:421:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4411,"nodeType":"Block","src":"4994:326:25","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:25","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:25"},"nodeType":"YulFunctionCall","src":"5057:10:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:25","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:25"},"nodeType":"YulFunctionCall","src":"5093:14:25"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:25","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:25"},"nodeType":"YulFunctionCall","src":"5131:18:25"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:25","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:25"},"nodeType":"YulFunctionCall","src":"5175:10:25"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:25","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:25"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:25"},"nodeType":"YulFunctionCall","src":"5198:17:25"},"nodeType":"YulExpressionStatement","src":"5198:17:25"},{"nodeType":"YulAssignment","src":"5228:45:25","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:25"},"nodeType":"YulFunctionCall","src":"5255:17:25"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:25"},"nodeType":"YulFunctionCall","src":"5238:35:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:25"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:25"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:25"},"nodeType":"YulFunctionCall","src":"5286:18:25"},"nodeType":"YulExpressionStatement","src":"5286:18:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":4405,"isOffset":false,"isSlot":false,"src":"5063:3:25","valueSize":1},{"declaration":4405,"isOffset":false,"isSlot":false,"src":"5097:3:25","valueSize":1},{"declaration":4408,"isOffset":false,"isSlot":false,"src":"5228:6:25","valueSize":1},{"declaration":4403,"isOffset":false,"isSlot":false,"src":"5210:4:25","valueSize":1}],"flags":["memory-safe"],"id":4410,"nodeType":"InlineAssembly","src":"5004:310:25"}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"4817:78:25","text":" @dev Derive the location of a mapping element from the key."},"id":4412,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:25","nodeType":"FunctionDefinition","parameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"slot","nameLocation":"4931:4:25","nodeType":"VariableDeclaration","scope":4412,"src":"4923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4405,"mutability":"mutable","name":"key","nameLocation":"4950:3:25","nodeType":"VariableDeclaration","scope":4412,"src":"4937:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4404,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:25"},"returnParameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4408,"mutability":"mutable","name":"result","nameLocation":"4986:6:25","nodeType":"VariableDeclaration","scope":4412,"src":"4978:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:25"},"scope":4413,"src":"4900:420:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4414,"src":"1599:3723:25","usedErrors":[],"usedEvents":[]}],"src":"199:5124:25"},"id":25},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4537]},"id":4538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4415,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"219:1187:26","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4537,"linearizedBaseContracts":[4537],"name":"StorageSlot","nameLocation":"1415:11:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4419,"members":[{"constant":false,"id":4418,"mutability":"mutable","name":"value","nameLocation":"1470:5:26","nodeType":"VariableDeclaration","scope":4419,"src":"1462:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4417,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:26","nodeType":"StructDefinition","scope":4537,"src":"1433:49:26","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4422,"members":[{"constant":false,"id":4421,"mutability":"mutable","name":"value","nameLocation":"1522:5:26","nodeType":"VariableDeclaration","scope":4422,"src":"1517:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4420,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:26","nodeType":"StructDefinition","scope":4537,"src":"1488:46:26","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4425,"members":[{"constant":false,"id":4424,"mutability":"mutable","name":"value","nameLocation":"1577:5:26","nodeType":"VariableDeclaration","scope":4425,"src":"1569:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:26","nodeType":"StructDefinition","scope":4537,"src":"1540:49:26","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4428,"members":[{"constant":false,"id":4427,"mutability":"mutable","name":"value","nameLocation":"1632:5:26","nodeType":"VariableDeclaration","scope":4428,"src":"1624:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:26","nodeType":"StructDefinition","scope":4537,"src":"1595:49:26","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4431,"members":[{"constant":false,"id":4430,"mutability":"mutable","name":"value","nameLocation":"1685:5:26","nodeType":"VariableDeclaration","scope":4431,"src":"1678:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4429,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:26","nodeType":"StructDefinition","scope":4537,"src":"1650:47:26","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4434,"members":[{"constant":false,"id":4433,"mutability":"mutable","name":"value","nameLocation":"1738:5:26","nodeType":"VariableDeclaration","scope":4434,"src":"1731:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4432,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:26","nodeType":"StructDefinition","scope":4537,"src":"1703:47:26","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4437,"members":[{"constant":false,"id":4436,"mutability":"mutable","name":"value","nameLocation":"1789:5:26","nodeType":"VariableDeclaration","scope":4437,"src":"1783:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4435,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:26","nodeType":"StructDefinition","scope":4537,"src":"1756:45:26","visibility":"public"},{"body":{"id":4447,"nodeType":"Block","src":"1983:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:26","statements":[{"nodeType":"YulAssignment","src":"2032:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4444,"isOffset":false,"isSlot":true,"src":"2032:6:26","suffix":"slot","valueSize":1},{"declaration":4440,"isOffset":false,"isSlot":false,"src":"2042:4:26","valueSize":1}],"flags":["memory-safe"],"id":4446,"nodeType":"InlineAssembly","src":"1993:63:26"}]},"documentation":{"id":4438,"nodeType":"StructuredDocumentation","src":"1807:87:26","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4448,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:26","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"slot","nameLocation":"1931:4:26","nodeType":"VariableDeclaration","scope":4448,"src":"1923:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:26"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"r","nameLocation":"1980:1:26","nodeType":"VariableDeclaration","scope":4448,"src":"1960:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4419_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4443,"nodeType":"UserDefinedTypeName","pathNode":{"id":4442,"name":"AddressSlot","nameLocations":["1960:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":4419,"src":"1960:11:26"},"referencedDeclaration":4419,"src":"1960:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4419_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:26"},"scope":4537,"src":"1899:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4458,"nodeType":"Block","src":"2243:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:26","statements":[{"nodeType":"YulAssignment","src":"2292:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4455,"isOffset":false,"isSlot":true,"src":"2292:6:26","suffix":"slot","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"2302:4:26","valueSize":1}],"flags":["memory-safe"],"id":4457,"nodeType":"InlineAssembly","src":"2253:63:26"}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"2068:86:26","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4459,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:26","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"slot","nameLocation":"2191:4:26","nodeType":"VariableDeclaration","scope":4459,"src":"2183:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:26"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"r","nameLocation":"2240:1:26","nodeType":"VariableDeclaration","scope":4459,"src":"2220:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4422_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4454,"nodeType":"UserDefinedTypeName","pathNode":{"id":4453,"name":"BooleanSlot","nameLocations":["2220:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":4422,"src":"2220:11:26"},"referencedDeclaration":4422,"src":"2220:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4422_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:26"},"scope":4537,"src":"2159:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4469,"nodeType":"Block","src":"2503:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:26","statements":[{"nodeType":"YulAssignment","src":"2552:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4466,"isOffset":false,"isSlot":true,"src":"2552:6:26","suffix":"slot","valueSize":1},{"declaration":4462,"isOffset":false,"isSlot":false,"src":"2562:4:26","valueSize":1}],"flags":["memory-safe"],"id":4468,"nodeType":"InlineAssembly","src":"2513:63:26"}]},"documentation":{"id":4460,"nodeType":"StructuredDocumentation","src":"2328:86:26","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4470,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:26","nodeType":"FunctionDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"slot","nameLocation":"2451:4:26","nodeType":"VariableDeclaration","scope":4470,"src":"2443:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:26"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"r","nameLocation":"2500:1:26","nodeType":"VariableDeclaration","scope":4470,"src":"2480:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4425_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4465,"nodeType":"UserDefinedTypeName","pathNode":{"id":4464,"name":"Bytes32Slot","nameLocations":["2480:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":4425,"src":"2480:11:26"},"referencedDeclaration":4425,"src":"2480:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4425_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:26"},"scope":4537,"src":"2419:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4480,"nodeType":"Block","src":"2763:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:26","statements":[{"nodeType":"YulAssignment","src":"2812:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4477,"isOffset":false,"isSlot":true,"src":"2812:6:26","suffix":"slot","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"2822:4:26","valueSize":1}],"flags":["memory-safe"],"id":4479,"nodeType":"InlineAssembly","src":"2773:63:26"}]},"documentation":{"id":4471,"nodeType":"StructuredDocumentation","src":"2588:86:26","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:26","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"slot","nameLocation":"2711:4:26","nodeType":"VariableDeclaration","scope":4481,"src":"2703:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:26"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"r","nameLocation":"2760:1:26","nodeType":"VariableDeclaration","scope":4481,"src":"2740:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4476,"nodeType":"UserDefinedTypeName","pathNode":{"id":4475,"name":"Uint256Slot","nameLocations":["2740:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":4428,"src":"2740:11:26"},"referencedDeclaration":4428,"src":"2740:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4428_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:26"},"scope":4537,"src":"2679:163:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"3020:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:26","statements":[{"nodeType":"YulAssignment","src":"3069:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4488,"isOffset":false,"isSlot":true,"src":"3069:6:26","suffix":"slot","valueSize":1},{"declaration":4484,"isOffset":false,"isSlot":false,"src":"3079:4:26","valueSize":1}],"flags":["memory-safe"],"id":4490,"nodeType":"InlineAssembly","src":"3030:63:26"}]},"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"2848:85:26","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:26","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"slot","nameLocation":"2969:4:26","nodeType":"VariableDeclaration","scope":4492,"src":"2961:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:26"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"r","nameLocation":"3017:1:26","nodeType":"VariableDeclaration","scope":4492,"src":"2998:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4431_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4487,"nodeType":"UserDefinedTypeName","pathNode":{"id":4486,"name":"Int256Slot","nameLocations":["2998:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4431,"src":"2998:10:26"},"referencedDeclaration":4431,"src":"2998:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4431_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:26"},"scope":4537,"src":"2938:161:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4502,"nodeType":"Block","src":"3277:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:26","statements":[{"nodeType":"YulAssignment","src":"3326:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4499,"isOffset":false,"isSlot":true,"src":"3326:6:26","suffix":"slot","valueSize":1},{"declaration":4495,"isOffset":false,"isSlot":false,"src":"3336:4:26","valueSize":1}],"flags":["memory-safe"],"id":4501,"nodeType":"InlineAssembly","src":"3287:63:26"}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"3105:85:26","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4503,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:26","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"slot","nameLocation":"3226:4:26","nodeType":"VariableDeclaration","scope":4503,"src":"3218:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:26"},"returnParameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"r","nameLocation":"3274:1:26","nodeType":"VariableDeclaration","scope":4503,"src":"3255:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4434_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4498,"nodeType":"UserDefinedTypeName","pathNode":{"id":4497,"name":"StringSlot","nameLocations":["3255:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4434,"src":"3255:10:26"},"referencedDeclaration":4434,"src":"3255:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4434_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:26"},"scope":4537,"src":"3195:161:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4513,"nodeType":"Block","src":"3558:85:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:26","statements":[{"nodeType":"YulAssignment","src":"3607:20:26","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4510,"isOffset":false,"isSlot":true,"src":"3607:6:26","suffix":"slot","valueSize":1},{"declaration":4506,"isOffset":false,"isSlot":true,"src":"3617:10:26","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4512,"nodeType":"InlineAssembly","src":"3568:69:26"}]},"documentation":{"id":4504,"nodeType":"StructuredDocumentation","src":"3362:101:26","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4514,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:26","nodeType":"FunctionDefinition","parameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"store","nameLocation":"3506:5:26","nodeType":"VariableDeclaration","scope":4514,"src":"3491:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4505,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:26"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"r","nameLocation":"3555:1:26","nodeType":"VariableDeclaration","scope":4514,"src":"3536:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4434_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4509,"nodeType":"UserDefinedTypeName","pathNode":{"id":4508,"name":"StringSlot","nameLocations":["3536:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":4434,"src":"3536:10:26"},"referencedDeclaration":4434,"src":"3536:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4434_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:26"},"scope":4537,"src":"3468:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"3818:79:26","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:26","statements":[{"nodeType":"YulAssignment","src":"3867:14:26","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4521,"isOffset":false,"isSlot":true,"src":"3867:6:26","suffix":"slot","valueSize":1},{"declaration":4517,"isOffset":false,"isSlot":false,"src":"3877:4:26","valueSize":1}],"flags":["memory-safe"],"id":4523,"nodeType":"InlineAssembly","src":"3828:63:26"}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"3649:84:26","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:26","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"slot","nameLocation":"3768:4:26","nodeType":"VariableDeclaration","scope":4525,"src":"3760:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:26"},"returnParameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"r","nameLocation":"3815:1:26","nodeType":"VariableDeclaration","scope":4525,"src":"3797:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4437_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4520,"nodeType":"UserDefinedTypeName","pathNode":{"id":4519,"name":"BytesSlot","nameLocations":["3797:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":4437,"src":"3797:9:26"},"referencedDeclaration":4437,"src":"3797:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4437_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:26"},"scope":4537,"src":"3738:159:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"4094:85:26","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:26","statements":[{"nodeType":"YulAssignment","src":"4143:20:26","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:26"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4532,"isOffset":false,"isSlot":true,"src":"4143:6:26","suffix":"slot","valueSize":1},{"declaration":4528,"isOffset":false,"isSlot":true,"src":"4153:10:26","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4534,"nodeType":"InlineAssembly","src":"4104:69:26"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"3903:99:26","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:26","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"store","nameLocation":"4043:5:26","nodeType":"VariableDeclaration","scope":4536,"src":"4029:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4527,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:26"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"r","nameLocation":"4091:1:26","nodeType":"VariableDeclaration","scope":4536,"src":"4073:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4437_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"BytesSlot","nameLocations":["4073:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":4437,"src":"4073:9:26"},"referencedDeclaration":4437,"src":"4073:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4437_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:26"},"scope":4537,"src":"4007:172:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4538,"src":"1407:2774:26","usedErrors":[],"usedEvents":[]}],"src":"193:3989:26"},"id":26},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[8257],"SafeCast":[10022],"SignedMath":[10166],"Strings":[5939]},"id":5940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4539,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5940,"sourceUnit":8258,"src":"127:37:27","symbolAliases":[{"foreign":{"id":4540,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"135:4:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5940,"sourceUnit":10023,"src":"165:45:27","symbolAliases":[{"foreign":{"id":4542,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"173:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5940,"sourceUnit":10167,"src":"211:49:27","symbolAliases":[{"foreign":{"id":4544,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"219:10:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4546,"nodeType":"StructuredDocumentation","src":"262:34:27","text":" @dev String operations."},"fullyImplemented":true,"id":5939,"linearizedBaseContracts":[5939],"name":"Strings","nameLocation":"305:7:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4548,"libraryName":{"id":4547,"name":"SafeCast","nameLocations":["325:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":10022,"src":"325:8:27"},"nodeType":"UsingForDirective","src":"319:21:27"},{"constant":true,"id":4551,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:27","nodeType":"VariableDeclaration","scope":5939,"src":"346:56:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4549,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4554,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:27","nodeType":"VariableDeclaration","scope":5939,"src":"408:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4552,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4590,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:27","nodeType":"VariableDeclaration","scope":5939,"src":"456:302:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:27","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:27","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:27","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:27","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:27","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:27","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:27","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:27","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:27","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:27","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:27","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:27","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:27","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:27","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:27","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:27","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:27","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:27","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:27","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:27","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"778:81:27","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4597,"name":"StringsInsufficientHexLength","nameLocation":"870:28:27","nodeType":"ErrorDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"value","nameLocation":"907:5:27","nodeType":"VariableDeclaration","scope":4597,"src":"899:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"length","nameLocation":"922:6:27","nodeType":"VariableDeclaration","scope":4597,"src":"914:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:27"},"src":"864:66:27"},{"documentation":{"id":4598,"nodeType":"StructuredDocumentation","src":"936:108:27","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4600,"name":"StringsInvalidChar","nameLocation":"1055:18:27","nodeType":"ErrorDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[],"src":"1073:2:27"},"src":"1049:27:27"},{"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"1082:84:27","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4603,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:27","nodeType":"ErrorDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[],"src":"1204:2:27"},"src":"1171:36:27"},{"body":{"id":4650,"nodeType":"Block","src":"1379:561:27","statements":[{"id":4649,"nodeType":"UncheckedBlock","src":"1389:545:27","statements":[{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"length","nameLocation":"1421:6:27","nodeType":"VariableDeclaration","scope":4649,"src":"1413:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1441:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4613,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"1430:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:27","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":8089,"src":"1430:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:27"},{"assignments":[4621],"declarations":[{"constant":false,"id":4621,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:27","nodeType":"VariableDeclaration","scope":4649,"src":"1465:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4620,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4626,"initialValue":{"arguments":[{"id":4624,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"1499:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4622,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:27"},{"assignments":[4628],"declarations":[{"constant":false,"id":4628,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:27","nodeType":"VariableDeclaration","scope":4649,"src":"1520:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4629,"nodeType":"VariableDeclarationStatement","src":"1520:11:27"},{"AST":{"nodeType":"YulBlock","src":"1570:67:27","statements":[{"nodeType":"YulAssignment","src":"1588:35:27","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:27","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:27"},"nodeType":"YulFunctionCall","src":"1607:15:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:27"},"nodeType":"YulFunctionCall","src":"1595:28:27"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4621,"isOffset":false,"isSlot":false,"src":"1599:6:27","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"1615:6:27","valueSize":1},{"declaration":4628,"isOffset":false,"isSlot":false,"src":"1588:3:27","valueSize":1}],"flags":["memory-safe"],"id":4630,"nodeType":"InlineAssembly","src":"1545:92:27"},{"body":{"id":4645,"nodeType":"Block","src":"1663:234:27","statements":[{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:27","subExpression":{"id":4632,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"1681:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"1681:5:27"},{"AST":{"nodeType":"YulBlock","src":"1729:86:27","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:27","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:27"},"nodeType":"YulFunctionCall","src":"1769:14:27"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:27"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:27"},"nodeType":"YulFunctionCall","src":"1764:32:27"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:27"},"nodeType":"YulFunctionCall","src":"1751:46:27"},"nodeType":"YulExpressionStatement","src":"1751:46:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":4551,"isOffset":false,"isSlot":false,"src":"1785:10:27","valueSize":1},{"declaration":4628,"isOffset":false,"isSlot":false,"src":"1759:3:27","valueSize":1},{"declaration":4606,"isOffset":false,"isSlot":false,"src":"1773:5:27","valueSize":1}],"flags":["memory-safe"],"id":4635,"nodeType":"InlineAssembly","src":"1704:111:27"},{"expression":{"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1832:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4639,"nodeType":"ExpressionStatement","src":"1832:11:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"1865:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4644,"nodeType":"IfStatement","src":"1861:21:27","trueBody":{"id":4643,"nodeType":"Break","src":"1877:5:27"}}]},"condition":{"hexValue":"74727565","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4646,"nodeType":"WhileStatement","src":"1650:247:27"},{"expression":{"id":4647,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"1917:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4610,"id":4648,"nodeType":"Return","src":"1910:13:27"}]}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"1213:90:27","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:27","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"value","nameLocation":"1334:5:27","nodeType":"VariableDeclaration","scope":4651,"src":"1326:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:27"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"1364:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4608,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:27"},"scope":5939,"src":"1308:632:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4676,"nodeType":"Block","src":"2116:92:27","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"2147:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:27","trueExpression":{"hexValue":"2d","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"2193:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4669,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"2178:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$10166_$","typeString":"type(library SignedMath)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":10165,"src":"2178:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4668,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"2169:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4659,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:27","typeDescriptions":{}}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:27","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:27","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4658,"id":4675,"nodeType":"Return","src":"2126:75:27"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"1946:89:27","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4677,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:27","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"value","nameLocation":"2071:5:27","nodeType":"VariableDeclaration","scope":4677,"src":"2064:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4653,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:27"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4677,"src":"2101:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4656,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:27"},"scope":5939,"src":"2040:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"2387:100:27","statements":[{"id":4695,"nodeType":"UncheckedBlock","src":"2397:84:27","statements":[{"expression":{"arguments":[{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2440:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2459:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4687,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"2447:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:27","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":8200,"src":"2447:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4685,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4697,4780,4800],"referencedDeclaration":4780,"src":"2428:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4684,"id":4694,"nodeType":"Return","src":"2421:49:27"}]}]},"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"2214:94:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:27","nodeType":"FunctionDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"value","nameLocation":"2342:5:27","nodeType":"VariableDeclaration","scope":4697,"src":"2334:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:27"},"returnParameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"2372:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4682,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:27"},"scope":5939,"src":"2313:174:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4779,"nodeType":"Block","src":"2700:435:27","statements":[{"assignments":[4708],"declarations":[{"constant":false,"id":4708,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:27","nodeType":"VariableDeclaration","scope":4779,"src":"2710:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4710,"initialValue":{"id":4709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"2731:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:27"},{"assignments":[4712],"declarations":[{"constant":false,"id":4712,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:27","nodeType":"VariableDeclaration","scope":4779,"src":"2746:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4711,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4721,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4716,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2782:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4713,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:27"},{"expression":{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4722,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"2803:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4724,"indexExpression":{"hexValue":"30","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4727,"nodeType":"ExpressionStatement","src":"2803:15:27"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4728,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"2828:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4730,"indexExpression":{"hexValue":"31","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4733,"nodeType":"ExpressionStatement","src":"2828:15:27"},{"body":{"id":4762,"nodeType":"Block","src":"2898:95:27","statements":[{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4748,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"2912:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4750,"indexExpression":{"id":4749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"2919:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4751,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"2924:10:27","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4755,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2935:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4757,"nodeType":"ExpressionStatement","src":"2912:40:27"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2966:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"2966:16:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"2886:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4763,"initializationExpression":{"assignments":[4735],"declarations":[{"constant":false,"id":4735,"mutability":"mutable","name":"i","nameLocation":"2866:1:27","nodeType":"VariableDeclaration","scope":4763,"src":"2858:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4737,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2874:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:27"},"loopExpression":{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:27","subExpression":{"id":4745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"2895:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4747,"nodeType":"ExpressionStatement","src":"2893:3:27"},"nodeType":"ForStatement","src":"2853:140:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4764,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3006:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4773,"nodeType":"IfStatement","src":"3002:96:27","trueBody":{"id":4772,"nodeType":"Block","src":"3023:75:27","statements":[{"errorCall":{"arguments":[{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3073:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4769,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3080:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4767,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"3044:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4771,"nodeType":"RevertStatement","src":"3037:50:27"}]}},{"expression":{"arguments":[{"id":4776,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"3121:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4774,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:27","typeDescriptions":{}}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4706,"id":4778,"nodeType":"Return","src":"3107:21:27"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"2493:112:27","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4780,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:27","nodeType":"FunctionDefinition","parameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"value","nameLocation":"2639:5:27","nodeType":"VariableDeclaration","scope":4780,"src":"2631:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"length","nameLocation":"2654:6:27","nodeType":"VariableDeclaration","scope":4780,"src":"2646:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:27"},"returnParameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4780,"src":"2685:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4704,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:27"},"scope":5939,"src":"2610:525:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"3367:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4793,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"3412:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4791,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:27","typeDescriptions":{}}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:27","typeDescriptions":{}}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4796,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"3420:14:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4788,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4697,4780,4800],"referencedDeclaration":4780,"src":"3384:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4787,"id":4798,"nodeType":"Return","src":"3377:58:27"}]},"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"3141:148:27","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:27","nodeType":"FunctionDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"addr","nameLocation":"3323:4:27","nodeType":"VariableDeclaration","scope":4800,"src":"3315:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4782,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:27"},"returnParameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4800,"src":"3352:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4785,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:27"},"scope":5939,"src":"3294:148:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4864,"nodeType":"Block","src":"3699:642:27","statements":[{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:27","nodeType":"VariableDeclaration","scope":4864,"src":"3709:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4808,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4816,"initialValue":{"arguments":[{"arguments":[{"id":4813,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"3749:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4812,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4697,4780,4800],"referencedDeclaration":4800,"src":"3737:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4810,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:27","typeDescriptions":{}}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:27"},{"assignments":[4818],"declarations":[{"constant":false,"id":4818,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:27","nodeType":"VariableDeclaration","scope":4864,"src":"3840:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4819,"nodeType":"VariableDeclarationStatement","src":"3840:17:27"},{"AST":{"nodeType":"YulBlock","src":"3892:78:27","statements":[{"nodeType":"YulAssignment","src":"3906:54:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:27","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:27","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:27"},"nodeType":"YulFunctionCall","src":"3937:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:27","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:27"},"nodeType":"YulFunctionCall","src":"3927:32:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:27"},"nodeType":"YulFunctionCall","src":"3919:41:27"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4809,"isOffset":false,"isSlot":false,"src":"3941:6:27","valueSize":1},{"declaration":4818,"isOffset":false,"isSlot":false,"src":"3906:9:27","valueSize":1}],"flags":["memory-safe"],"id":4820,"nodeType":"InlineAssembly","src":"3867:103:27"},{"body":{"id":4857,"nodeType":"Block","src":"4013:291:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"4119:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4838,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"4148:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4840,"indexExpression":{"id":4839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"4155:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4836,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:27","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4852,"nodeType":"IfStatement","src":"4115:150:27","trueBody":{"id":4851,"nodeType":"Block","src":"4165:100:27","statements":[{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4845,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"4233:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4847,"indexExpression":{"id":4846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"4240:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4850,"nodeType":"ExpressionStatement","src":"4233:17:27"}]}},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"4278:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"4278:15:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"4001:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"initializationExpression":{"assignments":[4822],"declarations":[{"constant":false,"id":4822,"mutability":"mutable","name":"i","nameLocation":"3993:1:27","nodeType":"VariableDeclaration","scope":4858,"src":"3985:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4824,"initialValue":{"hexValue":"3431","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:27","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:27"},"loopExpression":{"expression":{"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:27","subExpression":{"id":4828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"4010:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4830,"nodeType":"ExpressionStatement","src":"4008:3:27"},"nodeType":"ForStatement","src":"3980:324:27"},{"expression":{"arguments":[{"id":4861,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"4327:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4859,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:27","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4807,"id":4863,"nodeType":"Return","src":"4313:21:27"}]},"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"3448:165:27","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4865,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:27","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"addr","nameLocation":"3655:4:27","nodeType":"VariableDeclaration","scope":4865,"src":"3647:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4802,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:27"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4865,"src":"3684:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4805,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:27"},"scope":5939,"src":"3618:723:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4901,"nodeType":"Block","src":"4496:104:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"4519:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4875,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:27","typeDescriptions":{}}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:27","memberName":"length","nodeType":"MemberAccess","src":"4513:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"4538:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:27","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:27","memberName":"length","nodeType":"MemberAccess","src":"4532:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"4567:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4887,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:27","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4886,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"4590:1:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4893,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:27","typeDescriptions":{}}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4892,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4874,"id":4900,"nodeType":"Return","src":"4506:87:27"}]},"documentation":{"id":4866,"nodeType":"StructuredDocumentation","src":"4347:66:27","text":" @dev Returns true if the two strings are equal."},"id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:27","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"a","nameLocation":"4447:1:27","nodeType":"VariableDeclaration","scope":4902,"src":"4433:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4867,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"b","nameLocation":"4464:1:27","nodeType":"VariableDeclaration","scope":4902,"src":"4450:15:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4869,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:27"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"4490:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4872,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:27"},"scope":5939,"src":"4418:182:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"4897:64:27","statements":[{"expression":{"arguments":[{"id":4911,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4924:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4915,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4940:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:27","typeDescriptions":{}}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:27","memberName":"length","nodeType":"MemberAccess","src":"4934:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4910,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4921,4952],"referencedDeclaration":4952,"src":"4914:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4909,"id":4919,"nodeType":"Return","src":"4907:47:27"}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"4606:214:27","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:27","nodeType":"FunctionDefinition","parameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"input","nameLocation":"4858:5:27","nodeType":"VariableDeclaration","scope":4921,"src":"4844:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4904,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:27"},"returnParameters":{"id":4909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"4888:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:27"},"scope":5939,"src":"4825:136:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"5366:153:27","statements":[{"assignments":[4934,4936],"declarations":[{"constant":false,"id":4934,"mutability":"mutable","name":"success","nameLocation":"5382:7:27","nodeType":"VariableDeclaration","scope":4951,"src":"5377:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4933,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"value","nameLocation":"5399:5:27","nodeType":"VariableDeclaration","scope":4951,"src":"5391:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4942,"initialValue":{"arguments":[{"id":4938,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"5421:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4939,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"5428:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4940,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"5435:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4937,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4973,5010],"referencedDeclaration":5010,"src":"5408:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:27"},{"condition":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:27","subExpression":{"id":4943,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"5454:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4948,"nodeType":"IfStatement","src":"5449:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4945,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"5470:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4947,"nodeType":"RevertStatement","src":"5463:27:27"}},{"expression":{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"5507:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4932,"id":4950,"nodeType":"Return","src":"5500:12:27"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"4967:294:27","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:27","nodeType":"FunctionDefinition","parameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"input","nameLocation":"5299:5:27","nodeType":"VariableDeclaration","scope":4952,"src":"5285:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4923,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4926,"mutability":"mutable","name":"begin","nameLocation":"5314:5:27","nodeType":"VariableDeclaration","scope":4952,"src":"5306:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4928,"mutability":"mutable","name":"end","nameLocation":"5329:3:27","nodeType":"VariableDeclaration","scope":4952,"src":"5321:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:27"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"5357:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:27"},"scope":5939,"src":"5266:253:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"5840:83:27","statements":[{"expression":{"arguments":[{"id":4963,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"5886:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4967,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"5902:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4965,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:27","typeDescriptions":{}}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:27","memberName":"length","nodeType":"MemberAccess","src":"5896:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"5857:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4961,"id":4971,"nodeType":"Return","src":"5850:66:27"}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"5525:215:27","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:27","nodeType":"FunctionDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"input","nameLocation":"5781:5:27","nodeType":"VariableDeclaration","scope":4973,"src":"5767:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4954,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:27"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"success","nameLocation":"5816:7:27","nodeType":"VariableDeclaration","scope":4973,"src":"5811:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4957,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"value","nameLocation":"5833:5:27","nodeType":"VariableDeclaration","scope":4973,"src":"5825:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:27"},"scope":5939,"src":"5745:178:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5009,"nodeType":"Block","src":"6325:144:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6339:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4990,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"6351:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4988,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:27","typeDescriptions":{}}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:27","memberName":"length","nodeType":"MemberAccess","src":"6345:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"6368:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4995,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6376:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5002,"nodeType":"IfStatement","src":"6335:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4986,"id":5001,"nodeType":"Return","src":"6381:17:27"}},{"expression":{"arguments":[{"id":5004,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"6444:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5005,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"6451:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5006,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"6458:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5003,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"6415:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4986,"id":5008,"nodeType":"Return","src":"6408:54:27"}]},"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"5929:238:27","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5010,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:27","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"input","nameLocation":"6217:5:27","nodeType":"VariableDeclaration","scope":5010,"src":"6203:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4975,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"begin","nameLocation":"6240:5:27","nodeType":"VariableDeclaration","scope":5010,"src":"6232:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4980,"mutability":"mutable","name":"end","nameLocation":"6263:3:27","nodeType":"VariableDeclaration","scope":5010,"src":"6255:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:27"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"success","nameLocation":"6301:7:27","nodeType":"VariableDeclaration","scope":5010,"src":"6296:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4982,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"value","nameLocation":"6318:5:27","nodeType":"VariableDeclaration","scope":5010,"src":"6310:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:27"},"scope":5939,"src":"6172:297:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5079,"nodeType":"Block","src":"6872:347:27","statements":[{"assignments":[5025],"declarations":[{"constant":false,"id":5025,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:27","nodeType":"VariableDeclaration","scope":5079,"src":"6882:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5024,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5030,"initialValue":{"arguments":[{"id":5028,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6910:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5026,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:27","typeDescriptions":{}}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:27"},{"assignments":[5032],"declarations":[{"constant":false,"id":5032,"mutability":"mutable","name":"result","nameLocation":"6935:6:27","nodeType":"VariableDeclaration","scope":5079,"src":"6927:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5034,"initialValue":{"hexValue":"30","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:27"},{"body":{"id":5073,"nodeType":"Block","src":"6993:189:27","statements":[{"assignments":[5046],"declarations":[{"constant":false,"id":5046,"mutability":"mutable","name":"chr","nameLocation":"7013:3:27","nodeType":"VariableDeclaration","scope":5073,"src":"7007:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5045,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5056,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5051,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"7062:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5052,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"7070:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5050,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"7039:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5048,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:27","typeDescriptions":{}}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5047,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"7019:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"7092:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5064,"nodeType":"IfStatement","src":"7088:30:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5023,"id":5063,"nodeType":"Return","src":"7101:17:27"}},{"expression":{"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7132:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5068,"nodeType":"ExpressionStatement","src":"7132:12:27"},{"expression":{"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7158:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5070,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"7168:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5072,"nodeType":"ExpressionStatement","src":"7158:13:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"6979:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5040,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6983:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5074,"initializationExpression":{"assignments":[5036],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"i","nameLocation":"6968:1:27","nodeType":"VariableDeclaration","scope":5074,"src":"6960:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"initialValue":{"id":5037,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"6972:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:27"},"loopExpression":{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:27","subExpression":{"id":5042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"6990:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5044,"nodeType":"ExpressionStatement","src":"6988:3:27"},"nodeType":"ForStatement","src":"6955:227:27"},{"expression":{"components":[{"hexValue":"74727565","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"7205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5023,"id":5078,"nodeType":"Return","src":"7191:21:27"}]},"documentation":{"id":5011,"nodeType":"StructuredDocumentation","src":"6475:224:27","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5080,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:27","nodeType":"FunctionDefinition","parameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"input","nameLocation":"6765:5:27","nodeType":"VariableDeclaration","scope":5080,"src":"6751:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5012,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5015,"mutability":"mutable","name":"begin","nameLocation":"6788:5:27","nodeType":"VariableDeclaration","scope":5080,"src":"6780:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5017,"mutability":"mutable","name":"end","nameLocation":"6811:3:27","nodeType":"VariableDeclaration","scope":5080,"src":"6803:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:27"},"returnParameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"success","nameLocation":"6848:7:27","nodeType":"VariableDeclaration","scope":5080,"src":"6843:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5019,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"6865:5:27","nodeType":"VariableDeclaration","scope":5080,"src":"6857:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:27"},"scope":5939,"src":"6704:515:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5098,"nodeType":"Block","src":"7516:63:27","statements":[{"expression":{"arguments":[{"id":5089,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"7542:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5093,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"7558:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5091,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:27","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:27","memberName":"length","nodeType":"MemberAccess","src":"7552:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5088,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5099,5130],"referencedDeclaration":5130,"src":"7533:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5087,"id":5097,"nodeType":"Return","src":"7526:46:27"}]},"documentation":{"id":5081,"nodeType":"StructuredDocumentation","src":"7225:216:27","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:27","nodeType":"FunctionDefinition","parameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"input","nameLocation":"7478:5:27","nodeType":"VariableDeclaration","scope":5099,"src":"7464:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5082,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:27"},"returnParameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"7508:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5085,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:27"},"scope":5939,"src":"7446:133:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5129,"nodeType":"Block","src":"7984:151:27","statements":[{"assignments":[5112,5114],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"success","nameLocation":"8000:7:27","nodeType":"VariableDeclaration","scope":5129,"src":"7995:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5111,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5114,"mutability":"mutable","name":"value","nameLocation":"8016:5:27","nodeType":"VariableDeclaration","scope":5129,"src":"8009:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5113,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5120,"initialValue":{"arguments":[{"id":5116,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"8037:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5117,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"8044:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5118,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"8051:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5151,5193],"referencedDeclaration":5193,"src":"8025:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:27"},{"condition":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:27","subExpression":{"id":5121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"8070:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"8065:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5123,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"8086:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5125,"nodeType":"RevertStatement","src":"8079:27:27"}},{"expression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"8123:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5110,"id":5128,"nodeType":"Return","src":"8116:12:27"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"7585:296:27","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5130,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:27","nodeType":"FunctionDefinition","parameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"input","nameLocation":"7918:5:27","nodeType":"VariableDeclaration","scope":5130,"src":"7904:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5101,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"begin","nameLocation":"7933:5:27","nodeType":"VariableDeclaration","scope":5130,"src":"7925:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5106,"mutability":"mutable","name":"end","nameLocation":"7948:3:27","nodeType":"VariableDeclaration","scope":5130,"src":"7940:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:27"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5130,"src":"7976:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5108,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:27"},"scope":5939,"src":"7886:249:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5150,"nodeType":"Block","src":"8526:82:27","statements":[{"expression":{"arguments":[{"id":5141,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"8571:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5145,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"8587:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5143,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:27","typeDescriptions":{}}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:27","memberName":"length","nodeType":"MemberAccess","src":"8581:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"8543:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5139,"id":5149,"nodeType":"Return","src":"8536:65:27"}]},"documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"8141:287:27","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5151,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:27","nodeType":"FunctionDefinition","parameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"input","nameLocation":"8468:5:27","nodeType":"VariableDeclaration","scope":5151,"src":"8454:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5132,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:27"},"returnParameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"success","nameLocation":"8503:7:27","nodeType":"VariableDeclaration","scope":5151,"src":"8498:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5135,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"value","nameLocation":"8519:5:27","nodeType":"VariableDeclaration","scope":5151,"src":"8512:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5137,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:27"},"scope":5939,"src":"8433:175:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5156,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:27","nodeType":"VariableDeclaration","scope":5939,"src":"8614:50:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:27","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5192,"nodeType":"Block","src":"9130:143:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"9144:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"9156:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5171,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:27","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:27","memberName":"length","nodeType":"MemberAccess","src":"9150:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"9173:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5178,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"9181:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5185,"nodeType":"IfStatement","src":"9140:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5169,"id":5184,"nodeType":"Return","src":"9186:17:27"}},{"expression":{"arguments":[{"id":5187,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"9248:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5188,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"9255:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5189,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"9262:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"9220:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5169,"id":5191,"nodeType":"Return","src":"9213:53:27"}]},"documentation":{"id":5157,"nodeType":"StructuredDocumentation","src":"8671:303:27","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5193,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:27","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"input","nameLocation":"9023:5:27","nodeType":"VariableDeclaration","scope":5193,"src":"9009:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5158,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5161,"mutability":"mutable","name":"begin","nameLocation":"9046:5:27","nodeType":"VariableDeclaration","scope":5193,"src":"9038:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"end","nameLocation":"9069:3:27","nodeType":"VariableDeclaration","scope":5193,"src":"9061:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:27"},"returnParameters":{"id":5169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"success","nameLocation":"9107:7:27","nodeType":"VariableDeclaration","scope":5193,"src":"9102:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5165,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5168,"mutability":"mutable","name":"value","nameLocation":"9123:5:27","nodeType":"VariableDeclaration","scope":5193,"src":"9116:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5167,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:27"},"scope":5939,"src":"8979:294:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"9673:812:27","statements":[{"assignments":[5208],"declarations":[{"constant":false,"id":5208,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:27","nodeType":"VariableDeclaration","scope":5313,"src":"9683:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5207,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5213,"initialValue":{"arguments":[{"id":5211,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9711:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5209,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:27","typeDescriptions":{}}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:27"},{"assignments":[5215],"declarations":[{"constant":false,"id":5215,"mutability":"mutable","name":"sign","nameLocation":"9781:4:27","nodeType":"VariableDeclaration","scope":5313,"src":"9774:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5214,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5231,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"9788:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5217,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"9797:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5226,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"9845:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5227,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"9853:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5225,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"9822:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5223,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:27","typeDescriptions":{}}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:27","trueExpression":{"arguments":[{"hexValue":"30","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5219,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:27","typeDescriptions":{}}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:27"},{"assignments":[5233],"declarations":[{"constant":false,"id":5233,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:27","nodeType":"VariableDeclaration","scope":5313,"src":"9941:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5232,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5240,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"9961:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5235,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:27","typeDescriptions":{}}},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:27"},{"assignments":[5242],"declarations":[{"constant":false,"id":5242,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:27","nodeType":"VariableDeclaration","scope":5313,"src":"9990:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5241,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5249,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"10010:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5244,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:27","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:27"},{"assignments":[5251],"declarations":[{"constant":false,"id":5251,"mutability":"mutable","name":"offset","nameLocation":"10047:6:27","nodeType":"VariableDeclaration","scope":5313,"src":"10039:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5258,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10057:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5253,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"10073:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"10056:37:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:27"},{"assignments":[5260,5262],"declarations":[{"constant":false,"id":5260,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:27","nodeType":"VariableDeclaration","scope":5313,"src":"10107:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5259,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:27","nodeType":"VariableDeclaration","scope":5313,"src":"10124:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5270,"initialValue":{"arguments":[{"id":5264,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"10157:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"10164:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5266,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"10172:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5268,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"10180:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5263,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4973,5010],"referencedDeclaration":5010,"src":"10144:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10199:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"10213:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5273,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10224:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"10341:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5292,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"10355:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"10371:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5295,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10383:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5206,"id":5310,"nodeType":"Return","src":"10461:17:27"},"id":5311,"nodeType":"IfStatement","src":"10337:141:27","trueBody":{"id":5306,"nodeType":"Block","src":"10399:56:27","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5300,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:27","memberName":"min","nodeType":"MemberAccess","src":"10427:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5206,"id":5305,"nodeType":"Return","src":"10413:31:27"}]}},"id":5312,"nodeType":"IfStatement","src":"10195:283:27","trueBody":{"id":5290,"nodeType":"Block","src":"10240:91:27","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5277,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"10268:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5285,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"10310:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5283,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:27","typeDescriptions":{}}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:27","trueExpression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:27","subExpression":{"arguments":[{"id":5280,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"10291:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5278,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:27","typeDescriptions":{}}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5206,"id":5289,"nodeType":"Return","src":"10254:66:27"}]}}]},"documentation":{"id":5194,"nodeType":"StructuredDocumentation","src":"9279:223:27","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:27","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"input","nameLocation":"9567:5:27","nodeType":"VariableDeclaration","scope":5314,"src":"9553:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5195,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5198,"mutability":"mutable","name":"begin","nameLocation":"9590:5:27","nodeType":"VariableDeclaration","scope":5314,"src":"9582:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5200,"mutability":"mutable","name":"end","nameLocation":"9613:3:27","nodeType":"VariableDeclaration","scope":5314,"src":"9605:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:27"},"returnParameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"success","nameLocation":"9650:7:27","nodeType":"VariableDeclaration","scope":5314,"src":"9645:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5202,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"9666:5:27","nodeType":"VariableDeclaration","scope":5314,"src":"9659:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5204,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:27"},"scope":5939,"src":"9507:978:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5332,"nodeType":"Block","src":"10830:67:27","statements":[{"expression":{"arguments":[{"id":5323,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"10860:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5327,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"10876:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5325,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:27","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:27","memberName":"length","nodeType":"MemberAccess","src":"10870:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5322,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5333,5364],"referencedDeclaration":5364,"src":"10847:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5321,"id":5331,"nodeType":"Return","src":"10840:50:27"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"10491:259:27","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5333,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:27","nodeType":"FunctionDefinition","parameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"input","nameLocation":"10791:5:27","nodeType":"VariableDeclaration","scope":5333,"src":"10777:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5316,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:27"},"returnParameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5333,"src":"10821:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:27"},"scope":5939,"src":"10755:142:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5363,"nodeType":"Block","src":"11318:156:27","statements":[{"assignments":[5346,5348],"declarations":[{"constant":false,"id":5346,"mutability":"mutable","name":"success","nameLocation":"11334:7:27","nodeType":"VariableDeclaration","scope":5363,"src":"11329:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5345,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5348,"mutability":"mutable","name":"value","nameLocation":"11351:5:27","nodeType":"VariableDeclaration","scope":5363,"src":"11343:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5347,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5354,"initialValue":{"arguments":[{"id":5350,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"11376:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5351,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"11383:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5352,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"11390:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5385,5422],"referencedDeclaration":5422,"src":"11360:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:27"},{"condition":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:27","subExpression":{"id":5355,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"11409:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5360,"nodeType":"IfStatement","src":"11404:41:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5357,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11425:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5359,"nodeType":"RevertStatement","src":"11418:27:27"}},{"expression":{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"11462:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5344,"id":5362,"nodeType":"Return","src":"11455:12:27"}]},"documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"10903:307:27","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5364,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:27","nodeType":"FunctionDefinition","parameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"input","nameLocation":"11251:5:27","nodeType":"VariableDeclaration","scope":5364,"src":"11237:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5335,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"begin","nameLocation":"11266:5:27","nodeType":"VariableDeclaration","scope":5364,"src":"11258:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5337,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5340,"mutability":"mutable","name":"end","nameLocation":"11281:3:27","nodeType":"VariableDeclaration","scope":5364,"src":"11273:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:27"},"returnParameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5364,"src":"11309:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:27"},"scope":5939,"src":"11215:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5384,"nodeType":"Block","src":"11801:86:27","statements":[{"expression":{"arguments":[{"id":5375,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"11850:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5379,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"11866:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5377,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:27","typeDescriptions":{}}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:27","memberName":"length","nodeType":"MemberAccess","src":"11860:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"11818:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5373,"id":5383,"nodeType":"Return","src":"11811:69:27"}]},"documentation":{"id":5365,"nodeType":"StructuredDocumentation","src":"11480:218:27","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5385,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:27","nodeType":"FunctionDefinition","parameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"input","nameLocation":"11742:5:27","nodeType":"VariableDeclaration","scope":5385,"src":"11728:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5366,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:27"},"returnParameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"success","nameLocation":"11777:7:27","nodeType":"VariableDeclaration","scope":5385,"src":"11772:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5369,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"value","nameLocation":"11794:5:27","nodeType":"VariableDeclaration","scope":5385,"src":"11786:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:27"},"scope":5939,"src":"11703:184:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5421,"nodeType":"Block","src":"12295:147:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"12309:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5402,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"12321:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5400,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:27","typeDescriptions":{}}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:27","memberName":"length","nodeType":"MemberAccess","src":"12315:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5406,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"12338:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5407,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"12346:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"12305:63:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5398,"id":5413,"nodeType":"Return","src":"12351:17:27"}},{"expression":{"arguments":[{"id":5416,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"12417:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5417,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"12424:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5418,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"12431:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5415,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"12385:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5398,"id":5420,"nodeType":"Return","src":"12378:57:27"}]},"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"11893:241:27","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5422,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:27","nodeType":"FunctionDefinition","parameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"input","nameLocation":"12187:5:27","nodeType":"VariableDeclaration","scope":5422,"src":"12173:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5387,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5390,"mutability":"mutable","name":"begin","nameLocation":"12210:5:27","nodeType":"VariableDeclaration","scope":5422,"src":"12202:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5392,"mutability":"mutable","name":"end","nameLocation":"12233:3:27","nodeType":"VariableDeclaration","scope":5422,"src":"12225:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:27"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"success","nameLocation":"12271:7:27","nodeType":"VariableDeclaration","scope":5422,"src":"12266:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5394,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"12288:5:27","nodeType":"VariableDeclaration","scope":5422,"src":"12280:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:27"},"scope":5939,"src":"12139:303:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5524,"nodeType":"Block","src":"12851:881:27","statements":[{"assignments":[5437],"declarations":[{"constant":false,"id":5437,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:27","nodeType":"VariableDeclaration","scope":5524,"src":"12861:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5436,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5442,"initialValue":{"arguments":[{"id":5440,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"12889:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5438,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:27","typeDescriptions":{}}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:27"},{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:27","nodeType":"VariableDeclaration","scope":5524,"src":"12943:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5443,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5464,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5445,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"12961:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5446,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"12967:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5454,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"13011:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5455,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"13019:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"12988:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5451,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:27","typeDescriptions":{}}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5458,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:27","typeDescriptions":{}}},"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:27"},{"assignments":[5466],"declarations":[{"constant":false,"id":5466,"mutability":"mutable","name":"offset","nameLocation":"13131:6:27","nodeType":"VariableDeclaration","scope":5524,"src":"13123:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5467,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"13140:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"13140:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:27"},{"assignments":[5474],"declarations":[{"constant":false,"id":5474,"mutability":"mutable","name":"result","nameLocation":"13181:6:27","nodeType":"VariableDeclaration","scope":5524,"src":"13173:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5476,"initialValue":{"hexValue":"30","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:27"},{"body":{"id":5518,"nodeType":"Block","src":"13248:447:27","statements":[{"assignments":[5490],"declarations":[{"constant":false,"id":5490,"mutability":"mutable","name":"chr","nameLocation":"13268:3:27","nodeType":"VariableDeclaration","scope":5518,"src":"13262:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5489,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5500,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5495,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"13317:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"13325:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"13294:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5492,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:27","typeDescriptions":{}}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5491,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"13274:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"13347:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5508,"nodeType":"IfStatement","src":"13343:31:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5435,"id":5507,"nodeType":"Return","src":"13357:17:27"}},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"13388:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"13388:12:27"},{"id":5517,"nodeType":"UncheckedBlock","src":"13414:271:27","statements":[{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"13657:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5514,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"13667:3:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"13657:13:27"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"13234:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5484,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"13238:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5519,"initializationExpression":{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"i","nameLocation":"13214:1:27","nodeType":"VariableDeclaration","scope":5519,"src":"13206:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5482,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"13218:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5480,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"13226:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:27"},"loopExpression":{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:27","subExpression":{"id":5486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"13245:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5488,"nodeType":"ExpressionStatement","src":"13243:3:27"},"nodeType":"ForStatement","src":"13201:494:27"},{"expression":{"components":[{"hexValue":"74727565","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"13718:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5435,"id":5523,"nodeType":"Return","src":"13704:21:27"}]},"documentation":{"id":5423,"nodeType":"StructuredDocumentation","src":"12448:227:27","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5525,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:27","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"input","nameLocation":"12744:5:27","nodeType":"VariableDeclaration","scope":5525,"src":"12730:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5424,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5427,"mutability":"mutable","name":"begin","nameLocation":"12767:5:27","nodeType":"VariableDeclaration","scope":5525,"src":"12759:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5429,"mutability":"mutable","name":"end","nameLocation":"12790:3:27","nodeType":"VariableDeclaration","scope":5525,"src":"12782:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:27"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"success","nameLocation":"12827:7:27","nodeType":"VariableDeclaration","scope":5525,"src":"12822:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5431,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"value","nameLocation":"12844:5:27","nodeType":"VariableDeclaration","scope":5525,"src":"12836:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5433,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:27"},"scope":5939,"src":"12680:1052:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5543,"nodeType":"Block","src":"14030:67:27","statements":[{"expression":{"arguments":[{"id":5534,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14060:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5538,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"14076:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5536,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:27","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:27","memberName":"length","nodeType":"MemberAccess","src":"14070:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5544,5575],"referencedDeclaration":5575,"src":"14047:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5532,"id":5542,"nodeType":"Return","src":"14040:50:27"}]},"documentation":{"id":5526,"nodeType":"StructuredDocumentation","src":"13738:212:27","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:27","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"input","nameLocation":"13991:5:27","nodeType":"VariableDeclaration","scope":5544,"src":"13977:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5527,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:27"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5544,"src":"14021:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5530,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:27"},"scope":5939,"src":"13955:142:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5574,"nodeType":"Block","src":"14470:165:27","statements":[{"assignments":[5557,5559],"declarations":[{"constant":false,"id":5557,"mutability":"mutable","name":"success","nameLocation":"14486:7:27","nodeType":"VariableDeclaration","scope":5574,"src":"14481:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5556,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5559,"mutability":"mutable","name":"value","nameLocation":"14503:5:27","nodeType":"VariableDeclaration","scope":5574,"src":"14495:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5558,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5565,"initialValue":{"arguments":[{"id":5561,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"14528:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5562,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"14535:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5563,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"14542:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5596,5700],"referencedDeclaration":5700,"src":"14512:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:27"},{"condition":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:27","subExpression":{"id":5566,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"14561:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5571,"nodeType":"IfStatement","src":"14556:50:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5568,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"14577:27:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5570,"nodeType":"RevertStatement","src":"14570:36:27"}},{"expression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"14623:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5555,"id":5573,"nodeType":"Return","src":"14616:12:27"}]},"documentation":{"id":5545,"nodeType":"StructuredDocumentation","src":"14103:259:27","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5575,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:27","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"input","nameLocation":"14403:5:27","nodeType":"VariableDeclaration","scope":5575,"src":"14389:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5546,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"begin","nameLocation":"14418:5:27","nodeType":"VariableDeclaration","scope":5575,"src":"14410:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"end","nameLocation":"14433:3:27","nodeType":"VariableDeclaration","scope":5575,"src":"14425:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:27"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5575,"src":"14461:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5553,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:27"},"scope":5939,"src":"14367:268:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"14942:70:27","statements":[{"expression":{"arguments":[{"id":5586,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"14975:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5590,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"14991:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5588,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:27","typeDescriptions":{}}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:27","memberName":"length","nodeType":"MemberAccess","src":"14985:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5585,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5596,5700],"referencedDeclaration":5700,"src":"14959:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5584,"id":5594,"nodeType":"Return","src":"14952:53:27"}]},"documentation":{"id":5576,"nodeType":"StructuredDocumentation","src":"14641:198:27","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:27","nodeType":"FunctionDefinition","parameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"input","nameLocation":"14883:5:27","nodeType":"VariableDeclaration","scope":5596,"src":"14869:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5577,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:27"},"returnParameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"success","nameLocation":"14918:7:27","nodeType":"VariableDeclaration","scope":5596,"src":"14913:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5580,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5583,"mutability":"mutable","name":"value","nameLocation":"14935:5:27","nodeType":"VariableDeclaration","scope":5596,"src":"14927:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5582,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:27"},"scope":5939,"src":"14844:168:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5699,"nodeType":"Block","src":"15405:733:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"15419:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5613,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"15431:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5611,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:27","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:27","memberName":"length","nodeType":"MemberAccess","src":"15425:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"15448:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5618,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"15456:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5628,"nodeType":"IfStatement","src":"15415:72:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5622,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:27","typeDescriptions":{}}},"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5609,"id":5627,"nodeType":"Return","src":"15461:26:27"}},{"assignments":[5630],"declarations":[{"constant":false,"id":5630,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:27","nodeType":"VariableDeclaration","scope":5699,"src":"15498:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5629,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5653,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5631,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"15516:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"15522:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5642,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"15572:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5640,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:27","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5644,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"15580:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"15543:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5637,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:27","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5647,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:27","typeDescriptions":{}}},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:27"},{"assignments":[5655],"declarations":[{"constant":false,"id":5655,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:27","nodeType":"VariableDeclaration","scope":5699,"src":"15684:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5663,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5657,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"15714:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"15714:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"15801:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5665,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"15807:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5667,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"15816:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5697,"nodeType":"Block","src":"16081:51:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5691,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:27","typeDescriptions":{}}},"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5609,"id":5696,"nodeType":"Return","src":"16095:26:27"}]},"id":5698,"nodeType":"IfStatement","src":"15797:335:27","trueBody":{"id":5689,"nodeType":"Block","src":"15832:243:27","statements":[{"assignments":[5670,5672],"declarations":[{"constant":false,"id":5670,"mutability":"mutable","name":"s","nameLocation":"15953:1:27","nodeType":"VariableDeclaration","scope":5689,"src":"15948:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5669,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5672,"mutability":"mutable","name":"v","nameLocation":"15964:1:27","nodeType":"VariableDeclaration","scope":5689,"src":"15956:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5678,"initialValue":{"arguments":[{"id":5674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"16001:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5675,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"16008:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5676,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"16015:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"15969:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:27"},{"expression":{"components":[{"id":5679,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"16041:1:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5684,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"16060:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5682,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:27","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5680,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:27","typeDescriptions":{}}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5609,"id":5688,"nodeType":"Return","src":"16033:31:27"}]}}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"15018:226:27","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5700,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:27","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"input","nameLocation":"15297:5:27","nodeType":"VariableDeclaration","scope":5700,"src":"15283:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5598,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5601,"mutability":"mutable","name":"begin","nameLocation":"15320:5:27","nodeType":"VariableDeclaration","scope":5700,"src":"15312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5603,"mutability":"mutable","name":"end","nameLocation":"15343:3:27","nodeType":"VariableDeclaration","scope":5700,"src":"15335:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5602,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:27"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"success","nameLocation":"15381:7:27","nodeType":"VariableDeclaration","scope":5700,"src":"15376:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5605,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5608,"mutability":"mutable","name":"value","nameLocation":"15398:5:27","nodeType":"VariableDeclaration","scope":5700,"src":"15390:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5607,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:27"},"scope":5939,"src":"15249:889:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5759,"nodeType":"Block","src":"16207:461:27","statements":[{"assignments":[5708],"declarations":[{"constant":false,"id":5708,"mutability":"mutable","name":"value","nameLocation":"16223:5:27","nodeType":"VariableDeclaration","scope":5759,"src":"16217:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5707,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5713,"initialValue":{"arguments":[{"id":5711,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"16237:3:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5709,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:27","typeDescriptions":{}}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:27"},{"id":5756,"nodeType":"UncheckedBlock","src":"16401:238:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16429:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:27","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16443:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:27","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16489:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:27","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16503:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:27","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16550:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16564:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:27","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5748,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5747,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:27","memberName":"max","nodeType":"MemberAccess","src":"16613:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5706,"id":5752,"nodeType":"Return","src":"16606:22:27"},"id":5753,"nodeType":"IfStatement","src":"16546:82:27","trueBody":{"expression":{"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16576:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:27","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5746,"nodeType":"ExpressionStatement","src":"16576:11:27"}},"id":5754,"nodeType":"IfStatement","src":"16485:143:27","trueBody":{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16516:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:27","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5735,"nodeType":"ExpressionStatement","src":"16516:11:27"}},"id":5755,"nodeType":"IfStatement","src":"16425:203:27","trueBody":{"expression":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16455:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:27","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5724,"nodeType":"ExpressionStatement","src":"16455:11:27"}}]},{"expression":{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"16656:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5706,"id":5758,"nodeType":"Return","src":"16649:12:27"}]},"id":5760,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:27","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"chr","nameLocation":"16173:3:27","nodeType":"VariableDeclaration","scope":5760,"src":"16166:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5701,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:27"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5760,"src":"16200:5:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5704,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:27"},"scope":5939,"src":"16144:524:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5925,"nodeType":"Block","src":"17334:1331:27","statements":[{"assignments":[5769],"declarations":[{"constant":false,"id":5769,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:27","nodeType":"VariableDeclaration","scope":5925,"src":"17344:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5768,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5774,"initialValue":{"arguments":[{"id":5772,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"17372:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5770,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:27","typeDescriptions":{}}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:27"},{"assignments":[5776],"declarations":[{"constant":false,"id":5776,"mutability":"mutable","name":"output","nameLocation":"17401:6:27","nodeType":"VariableDeclaration","scope":5925,"src":"17388:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5775,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5784,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5780,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17424:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:27","memberName":"length","nodeType":"MemberAccess","src":"17424:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5777,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:27"},{"assignments":[5786],"declarations":[{"constant":false,"id":5786,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:27","nodeType":"VariableDeclaration","scope":5925,"src":"17471:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5788,"initialValue":{"hexValue":"30","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:27"},{"body":{"id":5917,"nodeType":"Block","src":"17546:854:27","statements":[{"assignments":[5800],"declarations":[{"constant":false,"id":5800,"mutability":"mutable","name":"char","nameLocation":"17567:4:27","nodeType":"VariableDeclaration","scope":5917,"src":"17560:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5799,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5808,"initialValue":{"arguments":[{"arguments":[{"id":5804,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17604:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"17612:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5803,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"17581:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5801,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:27","typeDescriptions":{}}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:27"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5809,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"17635:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5813,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17670:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5811,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:27","typeDescriptions":{}}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5915,"nodeType":"Block","src":"18328:62:27","statements":[{"expression":{"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5908,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"18346:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5911,"indexExpression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:27","subExpression":{"id":5909,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18353:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5912,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18371:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5914,"nodeType":"ExpressionStatement","src":"18346:29:27"}]},"id":5916,"nodeType":"IfStatement","src":"17629:761:27","trueBody":{"id":5907,"nodeType":"Block","src":"17685:637:27","statements":[{"expression":{"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5822,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"17703:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5825,"indexExpression":{"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:27","subExpression":{"id":5823,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"17710:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5828,"nodeType":"ExpressionStatement","src":"17703:29:27"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17754:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5839,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17823:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:27","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17892:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"17961:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:27","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18030:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:27","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18099:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:27","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"18169:4:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:27","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5900,"nodeType":"IfStatement","src":"18165:143:27","trueBody":{"id":5899,"nodeType":"Block","src":"18183:125:27","statements":[{"expression":{"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5892,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"18261:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5895,"indexExpression":{"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:27","subExpression":{"id":5893,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18268:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5898,"nodeType":"ExpressionStatement","src":"18261:28:27"}]}},"id":5901,"nodeType":"IfStatement","src":"18095:213:27","trueBody":{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5882,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"18113:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5885,"indexExpression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:27","subExpression":{"id":5883,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18120:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5888,"nodeType":"ExpressionStatement","src":"18113:29:27"}},"id":5902,"nodeType":"IfStatement","src":"18026:282:27","trueBody":{"expression":{"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5872,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"18044:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5875,"indexExpression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:27","subExpression":{"id":5873,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"18051:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5878,"nodeType":"ExpressionStatement","src":"18044:28:27"}},"id":5903,"nodeType":"IfStatement","src":"17957:351:27","trueBody":{"expression":{"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5862,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"17975:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5865,"indexExpression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:27","subExpression":{"id":5863,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"17982:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5868,"nodeType":"ExpressionStatement","src":"17975:28:27"}},"id":5904,"nodeType":"IfStatement","src":"17888:420:27","trueBody":{"expression":{"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5852,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"17906:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5855,"indexExpression":{"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:27","subExpression":{"id":5853,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"17913:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5858,"nodeType":"ExpressionStatement","src":"17906:28:27"}},"id":5905,"nodeType":"IfStatement","src":"17819:489:27","trueBody":{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5842,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"17837:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5845,"indexExpression":{"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:27","subExpression":{"id":5843,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"17844:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5848,"nodeType":"ExpressionStatement","src":"17837:28:27"}},"id":5906,"nodeType":"IfStatement","src":"17750:558:27","trueBody":{"expression":{"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5832,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"17768:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5835,"indexExpression":{"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:27","subExpression":{"id":5833,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"17775:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:27","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5838,"nodeType":"ExpressionStatement","src":"17768:28:27"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"17522:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5793,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"17526:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:27","memberName":"length","nodeType":"MemberAccess","src":"17526:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5918,"initializationExpression":{"assignments":[5790],"declarations":[{"constant":false,"id":5790,"mutability":"mutable","name":"i","nameLocation":"17519:1:27","nodeType":"VariableDeclaration","scope":5918,"src":"17511:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5791,"nodeType":"VariableDeclarationStatement","src":"17511:9:27"},"loopExpression":{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:27","subExpression":{"id":5796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"17543:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5798,"nodeType":"ExpressionStatement","src":"17541:3:27"},"nodeType":"ForStatement","src":"17506:894:27"},{"AST":{"nodeType":"YulBlock","src":"18498:129:27","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:27"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:27"},"nodeType":"YulFunctionCall","src":"18512:28:27"},"nodeType":"YulExpressionStatement","src":"18512:28:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:27","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:27","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:27","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:27"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:27"},"nodeType":"YulFunctionCall","src":"18592:21:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:27"},"nodeType":"YulFunctionCall","src":"18585:29:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:27"},"nodeType":"YulFunctionCall","src":"18578:37:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:27"},"nodeType":"YulFunctionCall","src":"18566:50:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:27"},"nodeType":"YulFunctionCall","src":"18553:64:27"},"nodeType":"YulExpressionStatement","src":"18553:64:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":5776,"isOffset":false,"isSlot":false,"src":"18519:6:27","valueSize":1},{"declaration":5776,"isOffset":false,"isSlot":false,"src":"18570:6:27","valueSize":1},{"declaration":5786,"isOffset":false,"isSlot":false,"src":"18527:12:27","valueSize":1},{"declaration":5786,"isOffset":false,"isSlot":false,"src":"18596:12:27","valueSize":1}],"flags":["memory-safe"],"id":5919,"nodeType":"InlineAssembly","src":"18473:154:27"},{"expression":{"arguments":[{"id":5922,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"18651:6:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5920,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:27","typeDescriptions":{}}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5767,"id":5924,"nodeType":"Return","src":"18637:21:27"}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"16674:576:27","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5926,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:27","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"input","nameLocation":"17289:5:27","nodeType":"VariableDeclaration","scope":5926,"src":"17275:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5762,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:27"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5926,"src":"17319:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5765,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:27"},"scope":5939,"src":"17255:1410:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"19050:225:27","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:27","statements":[{"nodeType":"YulAssignment","src":"19213:46:27","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:27","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:27"},"nodeType":"YulFunctionCall","src":"19240:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:27"},"nodeType":"YulFunctionCall","src":"19228:30:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:27"},"nodeType":"YulFunctionCall","src":"19222:37:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5929,"isOffset":false,"isSlot":false,"src":"19232:6:27","valueSize":1},{"declaration":5931,"isOffset":false,"isSlot":false,"src":"19250:6:27","valueSize":1},{"declaration":5934,"isOffset":false,"isSlot":false,"src":"19213:5:27","valueSize":1}],"flags":["memory-safe"],"id":5936,"nodeType":"InlineAssembly","src":"19174:95:27"}]},"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"18671:268:27","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:27","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:27","nodeType":"VariableDeclaration","scope":5938,"src":"18976:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5928,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"offset","nameLocation":"19005:6:27","nodeType":"VariableDeclaration","scope":5938,"src":"18997:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:27"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"19043:5:27","nodeType":"VariableDeclaration","scope":5938,"src":"19035:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:27"},"scope":5939,"src":"18944:331:27","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5940,"src":"297:18980:27","usedErrors":[4597,4600,4603],"usedEvents":[]}],"src":"101:19177:27"},"id":27},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[6287]},"id":6288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5941,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"138:205:28","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":6287,"linearizedBaseContracts":[6287],"name":"ECDSA","nameLocation":"352:5:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5947,"members":[{"id":5943,"name":"NoError","nameLocation":"392:7:28","nodeType":"EnumValue","src":"392:7:28"},{"id":5944,"name":"InvalidSignature","nameLocation":"409:16:28","nodeType":"EnumValue","src":"409:16:28"},{"id":5945,"name":"InvalidSignatureLength","nameLocation":"435:22:28","nodeType":"EnumValue","src":"435:22:28"},{"id":5946,"name":"InvalidSignatureS","nameLocation":"467:17:28","nodeType":"EnumValue","src":"467:17:28"}],"name":"RecoverError","nameLocation":"369:12:28","nodeType":"EnumDefinition","src":"364:126:28"},{"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"496:63:28","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":5950,"name":"ECDSAInvalidSignature","nameLocation":"570:21:28","nodeType":"ErrorDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[],"src":"591:2:28"},"src":"564:30:28"},{"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"600:60:28","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":5955,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:28","nodeType":"ErrorDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"length","nameLocation":"707:6:28","nodeType":"VariableDeclaration","scope":5955,"src":"699:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:28"},"src":"665:50:28"},{"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"721:85:28","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":5960,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:28","nodeType":"ErrorDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"s","nameLocation":"848:1:28","nodeType":"VariableDeclaration","scope":5960,"src":"840:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:28"},"src":"811:40:28"},{"body":{"id":6012,"nodeType":"Block","src":"2285:622:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5975,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"2299:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:28","memberName":"length","nodeType":"MemberAccess","src":"2299:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:28","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6010,"nodeType":"Block","src":"2793:108:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5997,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:28","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6001,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"2827:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:28","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"2827:35:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":6005,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"2872:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:28","memberName":"length","nodeType":"MemberAccess","src":"2872:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:28","typeDescriptions":{}}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5974,"id":6009,"nodeType":"Return","src":"2807:83:28"}]},"id":6011,"nodeType":"IfStatement","src":"2295:606:28","trueBody":{"id":5996,"nodeType":"Block","src":"2323:464:28","statements":[{"assignments":[5980],"declarations":[{"constant":false,"id":5980,"mutability":"mutable","name":"r","nameLocation":"2345:1:28","nodeType":"VariableDeclaration","scope":5996,"src":"2337:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5981,"nodeType":"VariableDeclarationStatement","src":"2337:9:28"},{"assignments":[5983],"declarations":[{"constant":false,"id":5983,"mutability":"mutable","name":"s","nameLocation":"2368:1:28","nodeType":"VariableDeclaration","scope":5996,"src":"2360:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5984,"nodeType":"VariableDeclarationStatement","src":"2360:9:28"},{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"v","nameLocation":"2389:1:28","nodeType":"VariableDeclaration","scope":5996,"src":"2383:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5985,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5987,"nodeType":"VariableDeclarationStatement","src":"2383:7:28"},{"AST":{"nodeType":"YulBlock","src":"2560:171:28","statements":[{"nodeType":"YulAssignment","src":"2578:32:28","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:28"},"nodeType":"YulFunctionCall","src":"2589:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:28"},"nodeType":"YulFunctionCall","src":"2583:27:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:28"}]},{"nodeType":"YulAssignment","src":"2627:32:28","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:28"},"nodeType":"YulFunctionCall","src":"2638:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:28"},"nodeType":"YulFunctionCall","src":"2632:27:28"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:28"}]},{"nodeType":"YulAssignment","src":"2676:41:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:28","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:28"},"nodeType":"YulFunctionCall","src":"2695:20:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:28"},"nodeType":"YulFunctionCall","src":"2689:27:28"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:28"},"nodeType":"YulFunctionCall","src":"2681:36:28"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5980,"isOffset":false,"isSlot":false,"src":"2578:1:28","valueSize":1},{"declaration":5983,"isOffset":false,"isSlot":false,"src":"2627:1:28","valueSize":1},{"declaration":5965,"isOffset":false,"isSlot":false,"src":"2593:9:28","valueSize":1},{"declaration":5965,"isOffset":false,"isSlot":false,"src":"2642:9:28","valueSize":1},{"declaration":5965,"isOffset":false,"isSlot":false,"src":"2699:9:28","valueSize":1},{"declaration":5986,"isOffset":false,"isSlot":false,"src":"2676:1:28","valueSize":1}],"flags":["memory-safe"],"id":5988,"nodeType":"InlineAssembly","src":"2535:196:28"},{"expression":{"arguments":[{"id":5990,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"2762:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5991,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2768:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5992,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"2771:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5993,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"2774:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5989,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6013,6093,6201],"referencedDeclaration":6201,"src":"2751:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5974,"id":5995,"nodeType":"Return","src":"2744:32:28"}]}}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"857:1267:28","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":6013,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:28","nodeType":"FunctionDefinition","parameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"hash","nameLocation":"2166:4:28","nodeType":"VariableDeclaration","scope":6013,"src":"2158:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5965,"mutability":"mutable","name":"signature","nameLocation":"2193:9:28","nodeType":"VariableDeclaration","scope":6013,"src":"2180:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5964,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:28"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:28","nodeType":"VariableDeclaration","scope":6013,"src":"2232:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5967,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"err","nameLocation":"2264:3:28","nodeType":"VariableDeclaration","scope":6013,"src":"2251:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5970,"nodeType":"UserDefinedTypeName","pathNode":{"id":5969,"name":"RecoverError","nameLocations":["2251:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"2251:12:28"},"referencedDeclaration":5947,"src":"2251:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5973,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:28","nodeType":"VariableDeclaration","scope":6013,"src":"2269:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:28"},"scope":6287,"src":"2129:778:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"3801:168:28","statements":[{"assignments":[6024,6027,6029],"declarations":[{"constant":false,"id":6024,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:28","nodeType":"VariableDeclaration","scope":6042,"src":"3812:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6023,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6027,"mutability":"mutable","name":"error","nameLocation":"3844:5:28","nodeType":"VariableDeclaration","scope":6042,"src":"3831:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6026,"nodeType":"UserDefinedTypeName","pathNode":{"id":6025,"name":"RecoverError","nameLocations":["3831:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"3831:12:28"},"referencedDeclaration":5947,"src":"3831:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6029,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:28","nodeType":"VariableDeclaration","scope":6042,"src":"3851:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6034,"initialValue":{"arguments":[{"id":6031,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"3882:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6032,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"3888:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6030,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6013,6093,6201],"referencedDeclaration":6013,"src":"3871:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:28"},{"expression":{"arguments":[{"id":6036,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"3920:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"id":6037,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"3927:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6035,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"3908:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5947_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6039,"nodeType":"ExpressionStatement","src":"3908:28:28"},{"expression":{"id":6040,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"3953:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6022,"id":6041,"nodeType":"Return","src":"3946:16:28"}]},"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"2913:796:28","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:28","nodeType":"FunctionDefinition","parameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"hash","nameLocation":"3739:4:28","nodeType":"VariableDeclaration","scope":6043,"src":"3731:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6018,"mutability":"mutable","name":"signature","nameLocation":"3758:9:28","nodeType":"VariableDeclaration","scope":6043,"src":"3745:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:28"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6043,"src":"3792:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6020,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:28"},"scope":6287,"src":"3714:255:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6092,"nodeType":"Block","src":"4348:342:28","statements":[{"id":6091,"nodeType":"UncheckedBlock","src":"4358:326:28","statements":[{"assignments":[6061],"declarations":[{"constant":false,"id":6061,"mutability":"mutable","name":"s","nameLocation":"4390:1:28","nodeType":"VariableDeclaration","scope":6091,"src":"4382:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6068,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"4394:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:28","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:28","typeDescriptions":{}}},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:28"},{"assignments":[6070],"declarations":[{"constant":false,"id":6070,"mutability":"mutable","name":"v","nameLocation":"4591:1:28","nodeType":"VariableDeclaration","scope":6091,"src":"4585:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6069,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6083,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6075,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"4610:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:28","typeDescriptions":{}}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:28","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6071,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:28","typeDescriptions":{}}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:28"},{"expression":{"arguments":[{"id":6085,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"4659:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6086,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"4665:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6087,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"4668:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6088,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"4671:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6084,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6013,6093,6201],"referencedDeclaration":6201,"src":"4648:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":6059,"id":6090,"nodeType":"Return","src":"4641:32:28"}]}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"3975:205:28","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":6093,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:28","nodeType":"FunctionDefinition","parameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"hash","nameLocation":"4222:4:28","nodeType":"VariableDeclaration","scope":6093,"src":"4214:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6048,"mutability":"mutable","name":"r","nameLocation":"4244:1:28","nodeType":"VariableDeclaration","scope":6093,"src":"4236:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6050,"mutability":"mutable","name":"vs","nameLocation":"4263:2:28","nodeType":"VariableDeclaration","scope":6093,"src":"4255:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:28"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:28","nodeType":"VariableDeclaration","scope":6093,"src":"4295:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6052,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"err","nameLocation":"4327:3:28","nodeType":"VariableDeclaration","scope":6093,"src":"4314:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6055,"nodeType":"UserDefinedTypeName","pathNode":{"id":6054,"name":"RecoverError","nameLocations":["4314:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"4314:12:28"},"referencedDeclaration":5947,"src":"4314:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6058,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:28","nodeType":"VariableDeclaration","scope":6093,"src":"4332:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:28"},"scope":6287,"src":"4185:505:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"4903:164:28","statements":[{"assignments":[6106,6109,6111],"declarations":[{"constant":false,"id":6106,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:28","nodeType":"VariableDeclaration","scope":6125,"src":"4914:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6105,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6109,"mutability":"mutable","name":"error","nameLocation":"4946:5:28","nodeType":"VariableDeclaration","scope":6125,"src":"4933:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6108,"nodeType":"UserDefinedTypeName","pathNode":{"id":6107,"name":"RecoverError","nameLocations":["4933:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"4933:12:28"},"referencedDeclaration":5947,"src":"4933:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6111,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:28","nodeType":"VariableDeclaration","scope":6125,"src":"4953:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6117,"initialValue":{"arguments":[{"id":6113,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"4984:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6114,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"4990:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6115,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"4993:2:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6112,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6013,6093,6201],"referencedDeclaration":6093,"src":"4973:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:28"},{"expression":{"arguments":[{"id":6119,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"5018:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"id":6120,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"5025:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6118,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"5006:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5947_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6122,"nodeType":"ExpressionStatement","src":"5006:28:28"},{"expression":{"id":6123,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"5051:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6104,"id":6124,"nodeType":"Return","src":"5044:16:28"}]},"documentation":{"id":6094,"nodeType":"StructuredDocumentation","src":"4696:116:28","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:28","nodeType":"FunctionDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"hash","nameLocation":"4842:4:28","nodeType":"VariableDeclaration","scope":6126,"src":"4834:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6098,"mutability":"mutable","name":"r","nameLocation":"4856:1:28","nodeType":"VariableDeclaration","scope":6126,"src":"4848:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6100,"mutability":"mutable","name":"vs","nameLocation":"4867:2:28","nodeType":"VariableDeclaration","scope":6126,"src":"4859:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:28"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6126,"src":"4894:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6102,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:28"},"scope":6287,"src":"4817:250:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"5382:1372:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6147,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"6278:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:28","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:28","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6161,"nodeType":"IfStatement","src":"6266:164:28","trueBody":{"id":6160,"nodeType":"Block","src":"6351:79:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6151,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:28","typeDescriptions":{}}},"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6155,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"6385:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:28","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5946,"src":"6385:30:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"id":6157,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"6417:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":6144,"id":6159,"nodeType":"Return","src":"6365:54:28"}]}},{"assignments":[6163],"declarations":[{"constant":false,"id":6163,"mutability":"mutable","name":"signer","nameLocation":"6532:6:28","nodeType":"VariableDeclaration","scope":6200,"src":"6524:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6162,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6170,"initialValue":{"arguments":[{"id":6165,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6551:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6166,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6557:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6167,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"6560:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6168,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"6563:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6164,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:28","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"6579:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6172,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:28","typeDescriptions":{}}},"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"6575:113:28","trueBody":{"id":6189,"nodeType":"Block","src":"6601:87:28","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6177,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:28","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6181,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"6635:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:28","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5944,"src":"6635:29:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:28","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":6144,"id":6188,"nodeType":"Return","src":"6615:62:28"}]}},{"expression":{"components":[{"id":6191,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"6706:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6192,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"6714:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:28","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"6714:20:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:28","typeDescriptions":{}}},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":6144,"id":6199,"nodeType":"Return","src":"6698:49:28"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"5073:125:28","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:28","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"hash","nameLocation":"5240:4:28","nodeType":"VariableDeclaration","scope":6201,"src":"5232:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"v","nameLocation":"5260:1:28","nodeType":"VariableDeclaration","scope":6201,"src":"5254:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6130,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"r","nameLocation":"5279:1:28","nodeType":"VariableDeclaration","scope":6201,"src":"5271:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"s","nameLocation":"5298:1:28","nodeType":"VariableDeclaration","scope":6201,"src":"5290:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:28"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:28","nodeType":"VariableDeclaration","scope":6201,"src":"5329:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6137,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"err","nameLocation":"5361:3:28","nodeType":"VariableDeclaration","scope":6201,"src":"5348:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6140,"nodeType":"UserDefinedTypeName","pathNode":{"id":6139,"name":"RecoverError","nameLocations":["5348:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"5348:12:28"},"referencedDeclaration":5947,"src":"5348:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6143,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:28","nodeType":"VariableDeclaration","scope":6201,"src":"5366:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:28"},"scope":6287,"src":"5203:1551:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6236,"nodeType":"Block","src":"6981:166:28","statements":[{"assignments":[6216,6219,6221],"declarations":[{"constant":false,"id":6216,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:28","nodeType":"VariableDeclaration","scope":6236,"src":"6992:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6215,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"error","nameLocation":"7024:5:28","nodeType":"VariableDeclaration","scope":6236,"src":"7011:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6218,"nodeType":"UserDefinedTypeName","pathNode":{"id":6217,"name":"RecoverError","nameLocations":["7011:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"7011:12:28"},"referencedDeclaration":5947,"src":"7011:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:28","nodeType":"VariableDeclaration","scope":6236,"src":"7031:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6228,"initialValue":{"arguments":[{"id":6223,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"7062:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6224,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"7068:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6225,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"7071:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6226,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"7074:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6222,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[6013,6093,6201],"referencedDeclaration":6201,"src":"7051:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5947_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:28"},{"expression":{"arguments":[{"id":6230,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"7098:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},{"id":6231,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"7105:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6229,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"7086:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5947_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6233,"nodeType":"ExpressionStatement","src":"7086:28:28"},{"expression":{"id":6234,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"7131:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6214,"id":6235,"nodeType":"Return","src":"7124:16:28"}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"6760:122:28","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":6237,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:28","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"hash","nameLocation":"6912:4:28","nodeType":"VariableDeclaration","scope":6237,"src":"6904:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6206,"mutability":"mutable","name":"v","nameLocation":"6924:1:28","nodeType":"VariableDeclaration","scope":6237,"src":"6918:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6205,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6208,"mutability":"mutable","name":"r","nameLocation":"6935:1:28","nodeType":"VariableDeclaration","scope":6237,"src":"6927:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6210,"mutability":"mutable","name":"s","nameLocation":"6946:1:28","nodeType":"VariableDeclaration","scope":6237,"src":"6938:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:28"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6237,"src":"6972:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6212,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:28"},"scope":6287,"src":"6887:260:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6285,"nodeType":"Block","src":"7352:460:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"7366:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6247,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"7375:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:28","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5943,"src":"7375:20:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6252,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"7462:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6253,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"7471:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:28","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5944,"src":"7471:29:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"7567:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6261,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"7576:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:28","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5945,"src":"7576:35:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"7701:5:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6273,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"7710:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5947_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:28","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5946,"src":"7710:30:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6281,"nodeType":"IfStatement","src":"7697:109:28","trueBody":{"id":6280,"nodeType":"Block","src":"7742:64:28","statements":[{"errorCall":{"arguments":[{"id":6277,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"7786:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6276,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"7763:22:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6279,"nodeType":"RevertStatement","src":"7756:39:28"}]}},"id":6282,"nodeType":"IfStatement","src":"7563:243:28","trueBody":{"id":6271,"nodeType":"Block","src":"7613:78:28","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":6267,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"7670:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:28","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"7634:27:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6270,"nodeType":"RevertStatement","src":"7627:53:28"}]}},"id":6283,"nodeType":"IfStatement","src":"7458:348:28","trueBody":{"id":6259,"nodeType":"Block","src":"7502:55:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6256,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"7523:21:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"7516:30:28"}]}},"id":6284,"nodeType":"IfStatement","src":"7362:444:28","trueBody":{"id":6251,"nodeType":"Block","src":"7397:55:28","statements":[{"functionReturnParameters":6245,"id":6250,"nodeType":"Return","src":"7411:7:28"}]}}]},"documentation":{"id":6238,"nodeType":"StructuredDocumentation","src":"7153:122:28","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:28","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"error","nameLocation":"7314:5:28","nodeType":"VariableDeclaration","scope":6286,"src":"7301:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":6240,"nodeType":"UserDefinedTypeName","pathNode":{"id":6239,"name":"RecoverError","nameLocations":["7301:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":5947,"src":"7301:12:28"},"referencedDeclaration":5947,"src":"7301:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5947","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:28","nodeType":"VariableDeclaration","scope":6286,"src":"7321:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:28"},"returnParameters":{"id":6245,"nodeType":"ParameterList","parameters":[],"src":"7352:0:28"},"scope":6287,"src":"7280:532:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6288,"src":"344:7470:28","usedErrors":[5950,5955,5960],"usedEvents":[]}],"src":"112:7703:28"},"id":28},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[6514],"IERC5267":[551],"MessageHashUtils":[6600],"ShortString":[4072],"ShortStrings":[4283]},"id":6515,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6289,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":6291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6515,"sourceUnit":6601,"src":"139:56:29","symbolAliases":[{"foreign":{"id":6290,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"147:16:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":6294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6515,"sourceUnit":4284,"src":"196:62:29","symbolAliases":[{"foreign":{"id":6292,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"204:12:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6293,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"218:11:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":6296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6515,"sourceUnit":552,"src":"259:55:29","symbolAliases":[{"foreign":{"id":6295,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"267:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6298,"name":"IERC5267","nameLocations":["1988:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"1988:8:29"},"id":6299,"nodeType":"InheritanceSpecifier","src":"1988:8:29"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"316:1643:29","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":6514,"linearizedBaseContracts":[6514,551],"name":"EIP712","nameLocation":"1978:6:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6301,"libraryName":{"id":6300,"name":"ShortStrings","nameLocations":["2009:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"2009:12:29"},"nodeType":"UsingForDirective","src":"2003:25:29"},{"constant":true,"id":6306,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:29","nodeType":"VariableDeclaration","scope":6514,"src":"2034:140:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":6303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6308,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:29","nodeType":"VariableDeclaration","scope":6514,"src":"2373:48:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6310,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:29","nodeType":"VariableDeclaration","scope":6514,"src":"2427:40:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6312,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:29","nodeType":"VariableDeclaration","scope":6514,"src":"2473:37:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6311,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":6314,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:29","nodeType":"VariableDeclaration","scope":6514,"src":"2517:37:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6316,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:29","nodeType":"VariableDeclaration","scope":6514,"src":"2560:40:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6319,"mutability":"immutable","name":"_name","nameLocation":"2637:5:29","nodeType":"VariableDeclaration","scope":6514,"src":"2607:35:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":6318,"nodeType":"UserDefinedTypeName","pathNode":{"id":6317,"name":"ShortString","nameLocations":["2607:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2607:11:29"},"referencedDeclaration":4072,"src":"2607:11:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":6322,"mutability":"immutable","name":"_version","nameLocation":"2678:8:29","nodeType":"VariableDeclaration","scope":6514,"src":"2648:38:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"},"typeName":{"id":6321,"nodeType":"UserDefinedTypeName","pathNode":{"id":6320,"name":"ShortString","nameLocations":["2648:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":4072,"src":"2648:11:29"},"referencedDeclaration":4072,"src":"2648:11:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":6324,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:29","nodeType":"VariableDeclaration","scope":6514,"src":"2742:28:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6323,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":6326,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:29","nodeType":"VariableDeclaration","scope":6514,"src":"2826:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6325,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":6383,"nodeType":"Block","src":"3483:376:29","statements":[{"expression":{"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6334,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"3493:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6337,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"3532:13:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6335,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"3501:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:29","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"3501:30:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$4072_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"src":"3493:53:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"id":6340,"nodeType":"ExpressionStatement","src":"3493:53:29"},{"expression":{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6341,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"3556:8:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6344,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"3601:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6342,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"3567:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:29","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"3567:33:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$4072_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"src":"3556:62:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"id":6347,"nodeType":"ExpressionStatement","src":"3556:62:29"},{"expression":{"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6348,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"3628:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6352,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"3658:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6350,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:29","typeDescriptions":{}}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6349,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6356,"nodeType":"ExpressionStatement","src":"3628:36:29"},{"expression":{"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"3674:14:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6361,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"3707:7:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6359,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:29","typeDescriptions":{}}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6358,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6365,"nodeType":"ExpressionStatement","src":"3674:42:29"},{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6366,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"3727:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6367,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6370,"nodeType":"ExpressionStatement","src":"3727:30:29"},{"expression":{"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6371,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"3767:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":6372,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"3792:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6375,"nodeType":"ExpressionStatement","src":"3767:48:29"},{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6376,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"3825:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6379,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}],"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6377,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:29","typeDescriptions":{}}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6382,"nodeType":"ExpressionStatement","src":"3825:27:29"}]},"documentation":{"id":6327,"nodeType":"StructuredDocumentation","src":"2864:559:29","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":6384,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"name","nameLocation":"3454:4:29","nodeType":"VariableDeclaration","scope":6384,"src":"3440:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6328,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6331,"mutability":"mutable","name":"version","nameLocation":"3474:7:29","nodeType":"VariableDeclaration","scope":6384,"src":"3460:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6330,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:29"},"returnParameters":{"id":6333,"nodeType":"ParameterList","parameters":[],"src":"3483:0:29"},"scope":6514,"src":"3428:431:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6409,"nodeType":"Block","src":"4007:200:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6392,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6390,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:29","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6394,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"4038:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6396,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6398,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"4070:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6407,"nodeType":"Block","src":"4146:55:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6404,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"4167:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6389,"id":6406,"nodeType":"Return","src":"4160:30:29"}]},"id":6408,"nodeType":"IfStatement","src":"4017:184:29","trueBody":{"id":6403,"nodeType":"Block","src":"4086:54:29","statements":[{"expression":{"id":6401,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"4107:22:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6389,"id":6402,"nodeType":"Return","src":"4100:29:29"}]}}]},"documentation":{"id":6385,"nodeType":"StructuredDocumentation","src":"3865:75:29","text":" @dev Returns the domain separator for the current chain."},"id":6410,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:29","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[],"src":"3972:2:29"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6410,"src":"3998:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:29"},"scope":6514,"src":"3945:262:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"4277:115:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":6418,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"4315:9:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6419,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"4326:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6420,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"4339:14:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6425,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}],"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6423,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:29","typeDescriptions":{}}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6416,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:29","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6415,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6414,"id":6429,"nodeType":"Return","src":"4287:98:29"}]},"id":6431,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:29","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[],"src":"4243:2:29"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6431,"src":"4268:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:29"},"scope":6514,"src":"4213:179:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6446,"nodeType":"Block","src":"5103:90:29","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6441,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"5153:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6443,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"5175:10:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6439,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"5120:16:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$6600_$","typeString":"type(library MessageHashUtils)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:29","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"5120:32:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6438,"id":6445,"nodeType":"Return","src":"5113:73:29"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"4398:614:29","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":6447,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:29","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:29","nodeType":"VariableDeclaration","scope":6447,"src":"5043:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:29"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6447,"src":"5094:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:29"},"scope":6514,"src":"5017:176:29","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[550],"body":{"id":6488,"nodeType":"Block","src":"5571:229:29","statements":[{"expression":{"components":[{"hexValue":"0f","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":6467,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"5632:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6469,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"5659:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6471,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:29","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6475,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6514","typeString":"contract EIP712"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6473,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:29","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:29","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6482,"nodeType":"ArrayTypeName","src":"5771:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":6465,"id":6487,"nodeType":"Return","src":"5581:212:29"}]},"documentation":{"id":6448,"nodeType":"StructuredDocumentation","src":"5199:39:29","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:29","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[],"src":"5264:2:29"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"fields","nameLocation":"5348:6:29","nodeType":"VariableDeclaration","scope":6489,"src":"5341:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6450,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":6453,"mutability":"mutable","name":"name","nameLocation":"5382:4:29","nodeType":"VariableDeclaration","scope":6489,"src":"5368:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6452,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6455,"mutability":"mutable","name":"version","nameLocation":"5414:7:29","nodeType":"VariableDeclaration","scope":6489,"src":"5400:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6454,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6457,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:29","nodeType":"VariableDeclaration","scope":6489,"src":"5435:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6459,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:29","nodeType":"VariableDeclaration","scope":6489,"src":"5464:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6458,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6461,"mutability":"mutable","name":"salt","nameLocation":"5511:4:29","nodeType":"VariableDeclaration","scope":6489,"src":"5503:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6464,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:29","nodeType":"VariableDeclaration","scope":6489,"src":"5529:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6463,"nodeType":"ArrayTypeName","src":"5529:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:29"},"scope":6514,"src":"5243:557:29","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":6500,"nodeType":"Block","src":"6181:65:29","statements":[{"expression":{"arguments":[{"id":6497,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"6225:13:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6495,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"6198:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:29","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"6198:26:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$4072_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6494,"id":6499,"nodeType":"Return","src":"6191:48:29"}]},"documentation":{"id":6490,"nodeType":"StructuredDocumentation","src":"5806:256:29","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":6501,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:29","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[],"src":"6140:2:29"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6501,"src":"6166:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6492,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:29"},"scope":6514,"src":"6120:126:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"6636:71:29","statements":[{"expression":{"arguments":[{"id":6509,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"6683:16:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":6507,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"6653:8:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$4072","typeString":"ShortString"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:29","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":4251,"src":"6653:29:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$4072_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$4072_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6506,"id":6511,"nodeType":"Return","src":"6646:54:29"}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"6252:262:29","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:29","nodeType":"FunctionDefinition","parameters":{"id":6503,"nodeType":"ParameterList","parameters":[],"src":"6595:2:29"},"returnParameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6513,"src":"6621:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6504,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:29"},"scope":6514,"src":"6572:135:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6515,"src":"1960:4749:29","usedErrors":[4080,4082],"usedEvents":[531]}],"src":"113:6597:29"},"id":29},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[6600],"Strings":[5939]},"id":6601,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6516,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":6518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6601,"sourceUnit":5940,"src":"149:39:30","symbolAliases":[{"foreign":{"id":6517,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"157:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":6519,"nodeType":"StructuredDocumentation","src":"190:330:30","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":6600,"linearizedBaseContracts":[6600],"name":"MessageHashUtils","nameLocation":"529:16:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":6528,"nodeType":"Block","src":"1339:341:30","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:30","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:30","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:30"},"nodeType":"YulFunctionCall","src":"1388:48:30"},"nodeType":"YulExpressionStatement","src":"1388:48:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:30","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:30"},"nodeType":"YulFunctionCall","src":"1490:25:30"},"nodeType":"YulExpressionStatement","src":"1490:25:30"},{"nodeType":"YulAssignment","src":"1569:31:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:30","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:30","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:30"},"nodeType":"YulFunctionCall","src":"1579:21:30"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6525,"isOffset":false,"isSlot":false,"src":"1569:6:30","valueSize":1},{"declaration":6522,"isOffset":false,"isSlot":false,"src":"1503:11:30","valueSize":1}],"flags":["memory-safe"],"id":6527,"nodeType":"InlineAssembly","src":"1349:325:30"}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"552:690:30","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":6529,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:30","nodeType":"FunctionDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:30","nodeType":"VariableDeclaration","scope":6529,"src":"1279:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:30"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"digest","nameLocation":"1331:6:30","nodeType":"VariableDeclaration","scope":6529,"src":"1323:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:30"},"scope":6600,"src":"1247:433:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6554,"nodeType":"Block","src":"2257:143:30","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":6546,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"2366:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:30","memberName":"length","nodeType":"MemberAccess","src":"2366:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6544,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"2349:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5939_$","typeString":"type(library Strings)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:30","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4651,"src":"2349:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6542,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:30","typeDescriptions":{}}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6550,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"2384:7:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6538,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:30","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:30","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:30","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6537,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6536,"id":6553,"nodeType":"Return","src":"2267:126:30"}]},"documentation":{"id":6530,"nodeType":"StructuredDocumentation","src":"1686:480:30","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":6555,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:30","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"message","nameLocation":"2216:7:30","nodeType":"VariableDeclaration","scope":6555,"src":"2203:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6531,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:30"},"returnParameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6555,"src":"2248:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:30"},"scope":6600,"src":"2171:229:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6574,"nodeType":"Block","src":"2854:80:30","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":6569,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"2910:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6570,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"2921:4:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6566,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6565,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6564,"id":6573,"nodeType":"Return","src":"2864:63:30"}]},"documentation":{"id":6556,"nodeType":"StructuredDocumentation","src":"2406:332:30","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":6575,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:30","nodeType":"FunctionDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6558,"mutability":"mutable","name":"validator","nameLocation":"2792:9:30","nodeType":"VariableDeclaration","scope":6575,"src":"2784:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6557,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6560,"mutability":"mutable","name":"data","nameLocation":"2816:4:30","nodeType":"VariableDeclaration","scope":6575,"src":"2803:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6559,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:30"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6575,"src":"2845:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:30"},"scope":6600,"src":"2743:191:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6586,"nodeType":"Block","src":"3216:216:30","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:30","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:30","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:30"},"nodeType":"YulFunctionCall","src":"3265:24:30"},"nodeType":"YulExpressionStatement","src":"3265:24:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:30","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:30","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:30"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:30"},"nodeType":"YulFunctionCall","src":"3315:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:30"},"nodeType":"YulFunctionCall","src":"3302:32:30"},"nodeType":"YulExpressionStatement","src":"3302:32:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:30","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:30"},"nodeType":"YulFunctionCall","src":"3347:25:30"},"nodeType":"YulExpressionStatement","src":"3347:25:30"},{"nodeType":"YulAssignment","src":"3385:31:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:30","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:30","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:30"},"nodeType":"YulFunctionCall","src":"3395:21:30"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6583,"isOffset":false,"isSlot":false,"src":"3385:6:30","valueSize":1},{"declaration":6580,"isOffset":false,"isSlot":false,"src":"3360:11:30","valueSize":1},{"declaration":6578,"isOffset":false,"isSlot":false,"src":"3323:9:30","valueSize":1}],"flags":["memory-safe"],"id":6585,"nodeType":"InlineAssembly","src":"3226:200:30"}]},"documentation":{"id":6576,"nodeType":"StructuredDocumentation","src":"2940:129:30","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":6587,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:30","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"validator","nameLocation":"3132:9:30","nodeType":"VariableDeclaration","scope":6587,"src":"3124:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:30","nodeType":"VariableDeclaration","scope":6587,"src":"3151:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:30"},"returnParameters":{"id":6584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"digest","nameLocation":"3208:6:30","nodeType":"VariableDeclaration","scope":6587,"src":"3200:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:30"},"scope":6600,"src":"3074:358:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"3983:265:30","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:30","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:30"},"nodeType":"YulFunctionCall","src":"4043:11:30"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:30","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:30"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:30","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:30"},"nodeType":"YulFunctionCall","src":"4067:23:30"},"nodeType":"YulExpressionStatement","src":"4067:23:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:30","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:30"},"nodeType":"YulFunctionCall","src":"4110:14:30"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:30"},"nodeType":"YulFunctionCall","src":"4103:39:30"},"nodeType":"YulExpressionStatement","src":"4103:39:30"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:30","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:30"},"nodeType":"YulFunctionCall","src":"4162:14:30"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:30"},"nodeType":"YulFunctionCall","src":"4155:34:30"},"nodeType":"YulExpressionStatement","src":"4155:34:30"},{"nodeType":"YulAssignment","src":"4202:30:30","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:30","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:30"},"nodeType":"YulFunctionCall","src":"4212:20:30"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6595,"isOffset":false,"isSlot":false,"src":"4202:6:30","valueSize":1},{"declaration":6590,"isOffset":false,"isSlot":false,"src":"4126:15:30","valueSize":1},{"declaration":6592,"isOffset":false,"isSlot":false,"src":"4178:10:30","valueSize":1}],"flags":["memory-safe"],"id":6597,"nodeType":"InlineAssembly","src":"3993:249:30"}]},"documentation":{"id":6588,"nodeType":"StructuredDocumentation","src":"3438:431:30","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:30","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:30","nodeType":"VariableDeclaration","scope":6599,"src":"3899:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:30","nodeType":"VariableDeclaration","scope":6599,"src":"3924:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:30"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"digest","nameLocation":"3975:6:30","nodeType":"VariableDeclaration","scope":6599,"src":"3967:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:30"},"scope":6600,"src":"3874:374:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6601,"src":"521:3729:30","usedErrors":[],"usedEvents":[]}],"src":"123:4128:30"},"id":30},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[6624],"IERC165":[6636]},"id":6625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6602,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":6604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6625,"sourceUnit":6637,"src":"140:38:31","symbolAliases":[{"foreign":{"id":6603,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"148:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6606,"name":"IERC165","nameLocations":["688:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":6636,"src":"688:7:31"},"id":6607,"nodeType":"InheritanceSpecifier","src":"688:7:31"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":6605,"nodeType":"StructuredDocumentation","src":"180:479:31","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":6624,"linearizedBaseContracts":[6624,6636],"name":"ERC165","nameLocation":"678:6:31","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6635],"body":{"id":6622,"nodeType":"Block","src":"845:64:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"862:11:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6617,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"882:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6636_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6636_$","typeString":"type(contract IERC165)"}],"id":6616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:31","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6636","typeString":"type(contract IERC165)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:31","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6614,"id":6621,"nodeType":"Return","src":"855:47:31"}]},"documentation":{"id":6608,"nodeType":"StructuredDocumentation","src":"702:56:31","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":6623,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:31","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:31","nodeType":"VariableDeclaration","scope":6623,"src":"790:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6609,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:31"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6623,"src":"839:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6612,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:31"},"scope":6624,"src":"763:146:31","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6625,"src":"660:251:31","usedErrors":[],"usedEvents":[]}],"src":"114:798:31"},"id":31},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6636]},"id":6637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:32"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6627,"nodeType":"StructuredDocumentation","src":"141:280:32","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6636,"linearizedBaseContracts":[6636],"name":"IERC165","nameLocation":"432:7:32","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"446:340:32","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6635,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:32","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:32","nodeType":"VariableDeclaration","scope":6635,"src":"818:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6629,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:32"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6635,"src":"861:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6632,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:32"},"scope":6636,"src":"791:76:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6637,"src":"422:447:32","usedErrors":[],"usedEvents":[]}],"src":"115:755:32"},"id":32},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[8257],"Panic":[3889],"SafeCast":[10022]},"id":8258,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6638,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:33"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8258,"sourceUnit":3890,"src":"129:35:33","symbolAliases":[{"foreign":{"id":6639,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"137:5:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8258,"sourceUnit":10023,"src":"165:40:33","symbolAliases":[{"foreign":{"id":6641,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"173:8:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"207:73:33","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8257,"linearizedBaseContracts":[8257],"name":"Math","nameLocation":"289:4:33","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6648,"members":[{"id":6644,"name":"Floor","nameLocation":"324:5:33","nodeType":"EnumValue","src":"324:5:33"},{"id":6645,"name":"Ceil","nameLocation":"367:4:33","nodeType":"EnumValue","src":"367:4:33"},{"id":6646,"name":"Trunc","nameLocation":"409:5:33","nodeType":"EnumValue","src":"409:5:33"},{"id":6647,"name":"Expand","nameLocation":"439:6:33","nodeType":"EnumValue","src":"439:6:33"}],"name":"Rounding","nameLocation":"305:8:33","nodeType":"EnumDefinition","src":"300:169:33"},{"body":{"id":6661,"nodeType":"Block","src":"731:112:33","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:33","statements":[{"nodeType":"YulAssignment","src":"780:16:33","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:33"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:33"},"nodeType":"YulFunctionCall","src":"787:9:33"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:33"}]},{"nodeType":"YulAssignment","src":"809:18:33","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:33"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:33"},"nodeType":"YulFunctionCall","src":"817:10:33"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6651,"isOffset":false,"isSlot":false,"src":"791:1:33","valueSize":1},{"declaration":6651,"isOffset":false,"isSlot":false,"src":"825:1:33","valueSize":1},{"declaration":6653,"isOffset":false,"isSlot":false,"src":"794:1:33","valueSize":1},{"declaration":6656,"isOffset":false,"isSlot":false,"src":"809:4:33","valueSize":1},{"declaration":6658,"isOffset":false,"isSlot":false,"src":"780:3:33","valueSize":1},{"declaration":6658,"isOffset":false,"isSlot":false,"src":"820:3:33","valueSize":1}],"flags":["memory-safe"],"id":6660,"nodeType":"InlineAssembly","src":"741:96:33"}]},"documentation":{"id":6649,"nodeType":"StructuredDocumentation","src":"475:163:33","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:33","nodeType":"FunctionDefinition","parameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6651,"mutability":"mutable","name":"a","nameLocation":"667:1:33","nodeType":"VariableDeclaration","scope":6662,"src":"659:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6650,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6653,"mutability":"mutable","name":"b","nameLocation":"678:1:33","nodeType":"VariableDeclaration","scope":6662,"src":"670:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:33"},"returnParameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6656,"mutability":"mutable","name":"high","nameLocation":"712:4:33","nodeType":"VariableDeclaration","scope":6662,"src":"704:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6655,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6658,"mutability":"mutable","name":"low","nameLocation":"726:3:33","nodeType":"VariableDeclaration","scope":6662,"src":"718:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:33"},"scope":8257,"src":"643:200:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6675,"nodeType":"Block","src":"1115:462:33","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:33","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:33"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:33"},"nodeType":"YulFunctionCall","src":"1474:6:33"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:33"},"nodeType":"YulFunctionCall","src":"1461:20:33"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:33","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:33","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:33"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:33"},"nodeType":"YulFunctionCall","src":"1501:9:33"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:33"}]},{"nodeType":"YulAssignment","src":"1523:38:33","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:33"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:33"},"nodeType":"YulFunctionCall","src":"1535:12:33"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:33"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:33"},"nodeType":"YulFunctionCall","src":"1549:11:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:33"},"nodeType":"YulFunctionCall","src":"1531:30:33"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6665,"isOffset":false,"isSlot":false,"src":"1468:1:33","valueSize":1},{"declaration":6665,"isOffset":false,"isSlot":false,"src":"1505:1:33","valueSize":1},{"declaration":6667,"isOffset":false,"isSlot":false,"src":"1471:1:33","valueSize":1},{"declaration":6667,"isOffset":false,"isSlot":false,"src":"1508:1:33","valueSize":1},{"declaration":6670,"isOffset":false,"isSlot":false,"src":"1523:4:33","valueSize":1},{"declaration":6672,"isOffset":false,"isSlot":false,"src":"1494:3:33","valueSize":1},{"declaration":6672,"isOffset":false,"isSlot":false,"src":"1543:3:33","valueSize":1},{"declaration":6672,"isOffset":false,"isSlot":false,"src":"1556:3:33","valueSize":1}],"flags":["memory-safe"],"id":6674,"nodeType":"InlineAssembly","src":"1412:159:33"}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"849:173:33","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6676,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:33","nodeType":"FunctionDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"a","nameLocation":"1051:1:33","nodeType":"VariableDeclaration","scope":6676,"src":"1043:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6667,"mutability":"mutable","name":"b","nameLocation":"1062:1:33","nodeType":"VariableDeclaration","scope":6676,"src":"1054:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:33"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"high","nameLocation":"1096:4:33","nodeType":"VariableDeclaration","scope":6676,"src":"1088:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6672,"mutability":"mutable","name":"low","nameLocation":"1110:3:33","nodeType":"VariableDeclaration","scope":6676,"src":"1102:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:33"},"scope":8257,"src":"1027:550:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6710,"nodeType":"Block","src":"1784:149:33","statements":[{"id":6709,"nodeType":"UncheckedBlock","src":"1794:133:33","statements":[{"assignments":[6689],"declarations":[{"constant":false,"id":6689,"mutability":"mutable","name":"c","nameLocation":"1826:1:33","nodeType":"VariableDeclaration","scope":6709,"src":"1818:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"1830:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"1834:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:33"},{"expression":{"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1849:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1859:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"1864:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6699,"nodeType":"ExpressionStatement","src":"1849:16:33"},{"expression":{"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"1879:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1888:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6704,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1908:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6702,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"1892:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"1892:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6708,"nodeType":"ExpressionStatement","src":"1879:37:33"}]}]},"documentation":{"id":6677,"nodeType":"StructuredDocumentation","src":"1583:105:33","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6711,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:33","nodeType":"FunctionDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"a","nameLocation":"1717:1:33","nodeType":"VariableDeclaration","scope":6711,"src":"1709:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6681,"mutability":"mutable","name":"b","nameLocation":"1728:1:33","nodeType":"VariableDeclaration","scope":6711,"src":"1720:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:33"},"returnParameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"success","nameLocation":"1759:7:33","nodeType":"VariableDeclaration","scope":6711,"src":"1754:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6683,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"result","nameLocation":"1776:6:33","nodeType":"VariableDeclaration","scope":6711,"src":"1768:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:33"},"scope":8257,"src":"1693:240:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6745,"nodeType":"Block","src":"2143:149:33","statements":[{"id":6744,"nodeType":"UncheckedBlock","src":"2153:133:33","statements":[{"assignments":[6724],"declarations":[{"constant":false,"id":6724,"mutability":"mutable","name":"c","nameLocation":"2185:1:33","nodeType":"VariableDeclaration","scope":6744,"src":"2177:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"2189:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"2193:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:33"},{"expression":{"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6729,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"2208:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6730,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"2218:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"2223:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"ExpressionStatement","src":"2208:16:33"},{"expression":{"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"2238:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"2247:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6739,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"2267:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6737,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"2251:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"2251:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6743,"nodeType":"ExpressionStatement","src":"2238:37:33"}]}]},"documentation":{"id":6712,"nodeType":"StructuredDocumentation","src":"1939:108:33","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6746,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:33","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"a","nameLocation":"2076:1:33","nodeType":"VariableDeclaration","scope":6746,"src":"2068:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6716,"mutability":"mutable","name":"b","nameLocation":"2087:1:33","nodeType":"VariableDeclaration","scope":6746,"src":"2079:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:33"},"returnParameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"success","nameLocation":"2118:7:33","nodeType":"VariableDeclaration","scope":6746,"src":"2113:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6718,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6721,"mutability":"mutable","name":"result","nameLocation":"2135:6:33","nodeType":"VariableDeclaration","scope":6746,"src":"2127:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:33"},"scope":8257,"src":"2052:240:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"2505:391:33","statements":[{"id":6774,"nodeType":"UncheckedBlock","src":"2515:375:33","statements":[{"assignments":[6759],"declarations":[{"constant":false,"id":6759,"mutability":"mutable","name":"c","nameLocation":"2547:1:33","nodeType":"VariableDeclaration","scope":6774,"src":"2539:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6763,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"2551:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"2555:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:33"},{"AST":{"nodeType":"YulBlock","src":"2595:188:33","statements":[{"nodeType":"YulAssignment","src":"2727:42:33","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:33"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:33"},"nodeType":"YulFunctionCall","src":"2744:9:33"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:33"},"nodeType":"YulFunctionCall","src":"2741:16:33"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:33"},"nodeType":"YulFunctionCall","src":"2759:9:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:33"},"nodeType":"YulFunctionCall","src":"2738:31:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6749,"isOffset":false,"isSlot":false,"src":"2751:1:33","valueSize":1},{"declaration":6749,"isOffset":false,"isSlot":false,"src":"2766:1:33","valueSize":1},{"declaration":6751,"isOffset":false,"isSlot":false,"src":"2755:1:33","valueSize":1},{"declaration":6759,"isOffset":false,"isSlot":false,"src":"2748:1:33","valueSize":1},{"declaration":6754,"isOffset":false,"isSlot":false,"src":"2727:7:33","valueSize":1}],"flags":["memory-safe"],"id":6764,"nodeType":"InlineAssembly","src":"2570:213:33"},{"expression":{"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"2842:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"2851:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6769,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"2871:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6767,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"2855:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"2855:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6773,"nodeType":"ExpressionStatement","src":"2842:37:33"}]}]},"documentation":{"id":6747,"nodeType":"StructuredDocumentation","src":"2298:111:33","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:33","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"a","nameLocation":"2438:1:33","nodeType":"VariableDeclaration","scope":6776,"src":"2430:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"b","nameLocation":"2449:1:33","nodeType":"VariableDeclaration","scope":6776,"src":"2441:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:33"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"success","nameLocation":"2480:7:33","nodeType":"VariableDeclaration","scope":6776,"src":"2475:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6753,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6756,"mutability":"mutable","name":"result","nameLocation":"2497:6:33","nodeType":"VariableDeclaration","scope":6776,"src":"2489:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:33"},"scope":8257,"src":"2414:482:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"3111:231:33","statements":[{"id":6795,"nodeType":"UncheckedBlock","src":"3121:215:33","statements":[{"expression":{"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"3145:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"3155:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6793,"nodeType":"ExpressionStatement","src":"3145:15:33"},{"AST":{"nodeType":"YulBlock","src":"3199:127:33","statements":[{"nodeType":"YulAssignment","src":"3293:19:33","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:33"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:33"},"nodeType":"YulFunctionCall","src":"3303:9:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6779,"isOffset":false,"isSlot":false,"src":"3307:1:33","valueSize":1},{"declaration":6781,"isOffset":false,"isSlot":false,"src":"3310:1:33","valueSize":1},{"declaration":6786,"isOffset":false,"isSlot":false,"src":"3293:6:33","valueSize":1}],"flags":["memory-safe"],"id":6794,"nodeType":"InlineAssembly","src":"3174:152:33"}]}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"2902:113:33","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:33","nodeType":"FunctionDefinition","parameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"a","nameLocation":"3044:1:33","nodeType":"VariableDeclaration","scope":6797,"src":"3036:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6778,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6781,"mutability":"mutable","name":"b","nameLocation":"3055:1:33","nodeType":"VariableDeclaration","scope":6797,"src":"3047:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:33"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"success","nameLocation":"3086:7:33","nodeType":"VariableDeclaration","scope":6797,"src":"3081:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6783,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"result","nameLocation":"3103:6:33","nodeType":"VariableDeclaration","scope":6797,"src":"3095:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:33"},"scope":8257,"src":"3020:322:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6817,"nodeType":"Block","src":"3567:231:33","statements":[{"id":6816,"nodeType":"UncheckedBlock","src":"3577:215:33","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"3601:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"3611:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6814,"nodeType":"ExpressionStatement","src":"3601:15:33"},{"AST":{"nodeType":"YulBlock","src":"3655:127:33","statements":[{"nodeType":"YulAssignment","src":"3749:19:33","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:33"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:33"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:33"},"nodeType":"YulFunctionCall","src":"3759:9:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6800,"isOffset":false,"isSlot":false,"src":"3763:1:33","valueSize":1},{"declaration":6802,"isOffset":false,"isSlot":false,"src":"3766:1:33","valueSize":1},{"declaration":6807,"isOffset":false,"isSlot":false,"src":"3749:6:33","valueSize":1}],"flags":["memory-safe"],"id":6815,"nodeType":"InlineAssembly","src":"3630:152:33"}]}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"3348:123:33","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6818,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:33","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"a","nameLocation":"3500:1:33","nodeType":"VariableDeclaration","scope":6818,"src":"3492:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"b","nameLocation":"3511:1:33","nodeType":"VariableDeclaration","scope":6818,"src":"3503:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:33"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"success","nameLocation":"3542:7:33","nodeType":"VariableDeclaration","scope":6818,"src":"3537:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6804,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6807,"mutability":"mutable","name":"result","nameLocation":"3559:6:33","nodeType":"VariableDeclaration","scope":6818,"src":"3551:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6806,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:33"},"scope":8257,"src":"3476:322:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6847,"nodeType":"Block","src":"3989:122:33","statements":[{"assignments":[6829,6831],"declarations":[{"constant":false,"id":6829,"mutability":"mutable","name":"success","nameLocation":"4005:7:33","nodeType":"VariableDeclaration","scope":6847,"src":"4000:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6828,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6831,"mutability":"mutable","name":"result","nameLocation":"4022:6:33","nodeType":"VariableDeclaration","scope":6847,"src":"4014:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6836,"initialValue":{"arguments":[{"id":6833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"4039:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"4042:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6832,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6711,"src":"4032:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:33"},{"expression":{"arguments":[{"id":6838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"4069:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"4078:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6840,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:33","memberName":"max","nodeType":"MemberAccess","src":"4086:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6837,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"4061:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6827,"id":6846,"nodeType":"Return","src":"4054:50:33"}]},"documentation":{"id":6819,"nodeType":"StructuredDocumentation","src":"3804:103:33","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6848,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:33","nodeType":"FunctionDefinition","parameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"a","nameLocation":"3943:1:33","nodeType":"VariableDeclaration","scope":6848,"src":"3935:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6823,"mutability":"mutable","name":"b","nameLocation":"3954:1:33","nodeType":"VariableDeclaration","scope":6848,"src":"3946:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:33"},"returnParameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6848,"src":"3980:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:33"},"scope":8257,"src":"3912:199:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6867,"nodeType":"Block","src":"4294:73:33","statements":[{"assignments":[null,6859],"declarations":[null,{"constant":false,"id":6859,"mutability":"mutable","name":"result","nameLocation":"4315:6:33","nodeType":"VariableDeclaration","scope":6867,"src":"4307:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6864,"initialValue":{"arguments":[{"id":6861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"4332:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"4335:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6860,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"4325:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:33"},{"expression":{"id":6865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"4354:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6857,"id":6866,"nodeType":"Return","src":"4347:13:33"}]},"documentation":{"id":6849,"nodeType":"StructuredDocumentation","src":"4117:95:33","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6868,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:33","nodeType":"FunctionDefinition","parameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"a","nameLocation":"4248:1:33","nodeType":"VariableDeclaration","scope":6868,"src":"4240:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6850,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6853,"mutability":"mutable","name":"b","nameLocation":"4259:1:33","nodeType":"VariableDeclaration","scope":6868,"src":"4251:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:33"},"returnParameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6868,"src":"4285:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:33"},"scope":8257,"src":"4217:150:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"4564:122:33","statements":[{"assignments":[6879,6881],"declarations":[{"constant":false,"id":6879,"mutability":"mutable","name":"success","nameLocation":"4580:7:33","nodeType":"VariableDeclaration","scope":6897,"src":"4575:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6878,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"result","nameLocation":"4597:6:33","nodeType":"VariableDeclaration","scope":6897,"src":"4589:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6886,"initialValue":{"arguments":[{"id":6883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"4614:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"4617:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6882,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"4607:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:33"},{"expression":{"arguments":[{"id":6888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"4644:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"4653:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:33","memberName":"max","nodeType":"MemberAccess","src":"4661:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6887,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"4636:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6877,"id":6896,"nodeType":"Return","src":"4629:50:33"}]},"documentation":{"id":6869,"nodeType":"StructuredDocumentation","src":"4373:109:33","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6898,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:33","nodeType":"FunctionDefinition","parameters":{"id":6874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"mutability":"mutable","name":"a","nameLocation":"4518:1:33","nodeType":"VariableDeclaration","scope":6898,"src":"4510:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6873,"mutability":"mutable","name":"b","nameLocation":"4529:1:33","nodeType":"VariableDeclaration","scope":6898,"src":"4521:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:33"},"returnParameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6898,"src":"4555:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:33"},"scope":8257,"src":"4487:199:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6924,"nodeType":"Block","src":"5158:207:33","statements":[{"id":6923,"nodeType":"UncheckedBlock","src":"5168:191:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"5306:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"5312:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"5316:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6917,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"5337:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6915,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"5321:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"5321:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6909,"id":6922,"nodeType":"Return","src":"5299:49:33"}]}]},"documentation":{"id":6899,"nodeType":"StructuredDocumentation","src":"4692:374:33","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6925,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:33","nodeType":"FunctionDefinition","parameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"condition","nameLocation":"5093:9:33","nodeType":"VariableDeclaration","scope":6925,"src":"5088:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6900,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6903,"mutability":"mutable","name":"a","nameLocation":"5112:1:33","nodeType":"VariableDeclaration","scope":6925,"src":"5104:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6905,"mutability":"mutable","name":"b","nameLocation":"5123:1:33","nodeType":"VariableDeclaration","scope":6925,"src":"5115:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:33"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6925,"src":"5149:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:33"},"scope":8257,"src":"5071:294:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6943,"nodeType":"Block","src":"5502:44:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"5527:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"5531:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"5534:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"5537:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6935,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"5519:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6934,"id":6942,"nodeType":"Return","src":"5512:27:33"}]},"documentation":{"id":6926,"nodeType":"StructuredDocumentation","src":"5371:59:33","text":" @dev Returns the largest of two numbers."},"id":6944,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:33","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"a","nameLocation":"5456:1:33","nodeType":"VariableDeclaration","scope":6944,"src":"5448:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6930,"mutability":"mutable","name":"b","nameLocation":"5467:1:33","nodeType":"VariableDeclaration","scope":6944,"src":"5459:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6929,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:33"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6944,"src":"5493:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:33"},"scope":8257,"src":"5435:111:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"5684:44:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"5709:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"5713:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"5716:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"5719:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6954,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"5701:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6953,"id":6961,"nodeType":"Return","src":"5694:27:33"}]},"documentation":{"id":6945,"nodeType":"StructuredDocumentation","src":"5552:60:33","text":" @dev Returns the smallest of two numbers."},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:33","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6947,"mutability":"mutable","name":"a","nameLocation":"5638:1:33","nodeType":"VariableDeclaration","scope":6963,"src":"5630:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6946,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6949,"mutability":"mutable","name":"b","nameLocation":"5649:1:33","nodeType":"VariableDeclaration","scope":6963,"src":"5641:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:33"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6963,"src":"5675:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:33"},"scope":8257,"src":"5617:111:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6985,"nodeType":"Block","src":"5912:82:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5967:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6974,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"5971:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5977:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"5981:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6972,"id":6984,"nodeType":"Return","src":"5959:28:33"}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"5734:102:33","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6986,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:33","nodeType":"FunctionDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"a","nameLocation":"5866:1:33","nodeType":"VariableDeclaration","scope":6986,"src":"5858:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"b","nameLocation":"5877:1:33","nodeType":"VariableDeclaration","scope":6986,"src":"5869:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:33"},"returnParameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6986,"src":"5903:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6970,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:33"},"scope":8257,"src":"5841:153:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7026,"nodeType":"Block","src":"6286:633:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"6300:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7007,"nodeType":"IfStatement","src":"6296:150:33","trueBody":{"id":7006,"nodeType":"Block","src":"6308:138:33","statements":[{"expression":{"arguments":[{"expression":{"id":7002,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"6412:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:33","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"6412:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6999,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"6400:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:33","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"6400:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"ExpressionStatement","src":"6400:35:33"}]}},{"id":7025,"nodeType":"UncheckedBlock","src":"6829:84:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"6876:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7008,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"6860:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"6860:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"6887:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"6896:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6995,"id":7024,"nodeType":"Return","src":"6853:49:33"}]}]},"documentation":{"id":6987,"nodeType":"StructuredDocumentation","src":"6000:210:33","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":7027,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:33","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"a","nameLocation":"6240:1:33","nodeType":"VariableDeclaration","scope":7027,"src":"6232:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"b","nameLocation":"6251:1:33","nodeType":"VariableDeclaration","scope":7027,"src":"6243:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:33"},"returnParameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7027,"src":"6277:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:33"},"scope":8257,"src":"6215:704:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7162,"nodeType":"Block","src":"7340:3585:33","statements":[{"id":7161,"nodeType":"UncheckedBlock","src":"7350:3569:33","statements":[{"assignments":[7040,7042],"declarations":[{"constant":false,"id":7040,"mutability":"mutable","name":"high","nameLocation":"7383:4:33","nodeType":"VariableDeclaration","scope":7161,"src":"7375:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7039,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7042,"mutability":"mutable","name":"low","nameLocation":"7397:3:33","nodeType":"VariableDeclaration","scope":7161,"src":"7389:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7041,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7047,"initialValue":{"arguments":[{"id":7044,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"7411:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7045,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"7414:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7043,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"7404:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7048,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"7498:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"IfStatement","src":"7494:365:33","trueBody":{"id":7055,"nodeType":"Block","src":"7509:350:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7051,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"7827:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7052,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"7833:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7038,"id":7054,"nodeType":"Return","src":"7820:24:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"7969:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7058,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"7984:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7075,"nodeType":"IfStatement","src":"7965:142:33","trueBody":{"id":7074,"nodeType":"Block","src":"7990:117:33","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7064,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"8028:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7067,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"8046:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:33","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"8046:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7069,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"8070:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:33","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3852,"src":"8070:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7063,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"8020:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7060,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"8008:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:33","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"8008:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"ExpressionStatement","src":"8008:84:33"}]}},{"assignments":[7077],"declarations":[{"constant":false,"id":7077,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:33","nodeType":"VariableDeclaration","scope":7161,"src":"8359:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7076,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7078,"nodeType":"VariableDeclarationStatement","src":"8359:17:33"},{"AST":{"nodeType":"YulBlock","src":"8415:283:33","statements":[{"nodeType":"YulAssignment","src":"8484:38:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:33"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:33"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:33"},"nodeType":"YulFunctionCall","src":"8497:25:33"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:33"}]},{"nodeType":"YulAssignment","src":"8604:37:33","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:33"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:33"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:33"},"nodeType":"YulFunctionCall","src":"8622:18:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:33"},"nodeType":"YulFunctionCall","src":"8612:29:33"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:33"}]},{"nodeType":"YulAssignment","src":"8658:26:33","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:33"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:33"},"nodeType":"YulFunctionCall","src":"8665:19:33"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7034,"isOffset":false,"isSlot":false,"src":"8510:11:33","valueSize":1},{"declaration":7040,"isOffset":false,"isSlot":false,"src":"8604:4:33","valueSize":1},{"declaration":7040,"isOffset":false,"isSlot":false,"src":"8616:4:33","valueSize":1},{"declaration":7042,"isOffset":false,"isSlot":false,"src":"8636:3:33","valueSize":1},{"declaration":7042,"isOffset":false,"isSlot":false,"src":"8658:3:33","valueSize":1},{"declaration":7042,"isOffset":false,"isSlot":false,"src":"8669:3:33","valueSize":1},{"declaration":7077,"isOffset":false,"isSlot":false,"src":"8484:9:33","valueSize":1},{"declaration":7077,"isOffset":false,"isSlot":false,"src":"8625:9:33","valueSize":1},{"declaration":7077,"isOffset":false,"isSlot":false,"src":"8674:9:33","valueSize":1},{"declaration":7030,"isOffset":false,"isSlot":false,"src":"8504:1:33","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"8507:1:33","valueSize":1}],"flags":["memory-safe"],"id":7079,"nodeType":"InlineAssembly","src":"8390:308:33"},{"assignments":[7081],"declarations":[{"constant":false,"id":7081,"mutability":"mutable","name":"twos","nameLocation":"8910:4:33","nodeType":"VariableDeclaration","scope":7161,"src":"8902:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7080,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7088,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"8917:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"8936:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:33"},{"AST":{"nodeType":"YulBlock","src":"8987:359:33","statements":[{"nodeType":"YulAssignment","src":"9052:37:33","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:33"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:33"},"nodeType":"YulFunctionCall","src":"9067:22:33"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:33"}]},{"nodeType":"YulAssignment","src":"9153:21:33","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:33"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:33"},"nodeType":"YulFunctionCall","src":"9160:14:33"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:33"}]},{"nodeType":"YulAssignment","src":"9293:39:33","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:33","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:33"},"nodeType":"YulFunctionCall","src":"9309:12:33"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:33"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:33"},"nodeType":"YulFunctionCall","src":"9305:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:33"},"nodeType":"YulFunctionCall","src":"9301:31:33"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7034,"isOffset":false,"isSlot":false,"src":"9052:11:33","valueSize":1},{"declaration":7034,"isOffset":false,"isSlot":false,"src":"9071:11:33","valueSize":1},{"declaration":7042,"isOffset":false,"isSlot":false,"src":"9153:3:33","valueSize":1},{"declaration":7042,"isOffset":false,"isSlot":false,"src":"9164:3:33","valueSize":1},{"declaration":7081,"isOffset":false,"isSlot":false,"src":"9084:4:33","valueSize":1},{"declaration":7081,"isOffset":false,"isSlot":false,"src":"9169:4:33","valueSize":1},{"declaration":7081,"isOffset":false,"isSlot":false,"src":"9293:4:33","valueSize":1},{"declaration":7081,"isOffset":false,"isSlot":false,"src":"9316:4:33","valueSize":1},{"declaration":7081,"isOffset":false,"isSlot":false,"src":"9323:4:33","valueSize":1}],"flags":["memory-safe"],"id":7089,"nodeType":"InlineAssembly","src":"8962:384:33"},{"expression":{"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7090,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"9409:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7091,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"9416:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7092,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"9423:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7095,"nodeType":"ExpressionStatement","src":"9409:18:33"},{"assignments":[7097],"declarations":[{"constant":false,"id":7097,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:33","nodeType":"VariableDeclaration","scope":7161,"src":"9762:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7096,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7104,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7099,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"9785:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:33"},{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7105,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10018:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7107,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10033:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10047:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7112,"nodeType":"ExpressionStatement","src":"10018:36:33"},{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7113,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10088:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10103:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7116,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10117:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7120,"nodeType":"ExpressionStatement","src":"10088:36:33"},{"expression":{"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7121,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10160:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10175:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10189:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7128,"nodeType":"ExpressionStatement","src":"10160:36:33"},{"expression":{"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7129,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10231:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7131,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10246:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7132,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10260:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7136,"nodeType":"ExpressionStatement","src":"10231:36:33"},{"expression":{"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7137,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10304:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10319:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7140,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10333:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7144,"nodeType":"ExpressionStatement","src":"10304:36:33"},{"expression":{"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7145,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10378:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"10393:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7148,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10407:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7152,"nodeType":"ExpressionStatement","src":"10378:36:33"},{"expression":{"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"10859:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"10868:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7155,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"10874:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7158,"nodeType":"ExpressionStatement","src":"10859:22:33"},{"expression":{"id":7159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"10902:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7038,"id":7160,"nodeType":"Return","src":"10895:13:33"}]}]},"documentation":{"id":7028,"nodeType":"StructuredDocumentation","src":"6925:312:33","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":7163,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:33","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7030,"mutability":"mutable","name":"x","nameLocation":"7266:1:33","nodeType":"VariableDeclaration","scope":7163,"src":"7258:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7032,"mutability":"mutable","name":"y","nameLocation":"7277:1:33","nodeType":"VariableDeclaration","scope":7163,"src":"7269:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7031,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:33","nodeType":"VariableDeclaration","scope":7163,"src":"7280:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:33"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"result","nameLocation":"7332:6:33","nodeType":"VariableDeclaration","scope":7163,"src":"7324:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:33"},"scope":8257,"src":"7242:3683:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7199,"nodeType":"Block","src":"11164:128:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7179,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"11188:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7180,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"11191:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7181,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"11194:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7178,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[7163,7200],"referencedDeclaration":7163,"src":"11181:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7186,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"11242:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":7185,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"11225:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"11262:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7190,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"11265:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7191,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"11268:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7188,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:33","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"11209:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"11209:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7177,"id":7198,"nodeType":"Return","src":"11174:111:33"}]},"documentation":{"id":7164,"nodeType":"StructuredDocumentation","src":"10931:118:33","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":7200,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:33","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"x","nameLocation":"11078:1:33","nodeType":"VariableDeclaration","scope":7200,"src":"11070:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7168,"mutability":"mutable","name":"y","nameLocation":"11089:1:33","nodeType":"VariableDeclaration","scope":7200,"src":"11081:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7170,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:33","nodeType":"VariableDeclaration","scope":7200,"src":"11092:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7173,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:33","nodeType":"VariableDeclaration","scope":7200,"src":"11113:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":7172,"nodeType":"UserDefinedTypeName","pathNode":{"id":7171,"name":"Rounding","nameLocations":["11113:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"11113:8:33"},"referencedDeclaration":6648,"src":"11113:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:33"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7200,"src":"11155:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:33"},"scope":8257,"src":"11054:238:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7249,"nodeType":"Block","src":"11500:245:33","statements":[{"id":7248,"nodeType":"UncheckedBlock","src":"11510:229:33","statements":[{"assignments":[7213,7215],"declarations":[{"constant":false,"id":7213,"mutability":"mutable","name":"high","nameLocation":"11543:4:33","nodeType":"VariableDeclaration","scope":7248,"src":"11535:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7212,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"low","nameLocation":"11557:3:33","nodeType":"VariableDeclaration","scope":7248,"src":"11549:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7214,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7220,"initialValue":{"arguments":[{"id":7217,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"11571:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7218,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"11574:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"11564:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7221,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"11594:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7223,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"11607:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7234,"nodeType":"IfStatement","src":"11590:86:33","trueBody":{"id":7233,"nodeType":"Block","src":"11610:66:33","statements":[{"expression":{"arguments":[{"expression":{"id":7229,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"11640:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:33","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3852,"src":"11640:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7226,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"11628:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:33","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"11628:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7232,"nodeType":"ExpressionStatement","src":"11628:33:33"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"11697:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:33","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7237,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"11712:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":7239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7242,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"11719:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7243,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"11726:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7211,"id":7247,"nodeType":"Return","src":"11689:39:33"}]}]},"documentation":{"id":7201,"nodeType":"StructuredDocumentation","src":"11298:111:33","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":7250,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:33","nodeType":"FunctionDefinition","parameters":{"id":7208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"x","nameLocation":"11438:1:33","nodeType":"VariableDeclaration","scope":7250,"src":"11430:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7202,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7205,"mutability":"mutable","name":"y","nameLocation":"11449:1:33","nodeType":"VariableDeclaration","scope":7250,"src":"11441:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7207,"mutability":"mutable","name":"n","nameLocation":"11458:1:33","nodeType":"VariableDeclaration","scope":7250,"src":"11452:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7206,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:33"},"returnParameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7210,"mutability":"mutable","name":"result","nameLocation":"11492:6:33","nodeType":"VariableDeclaration","scope":7250,"src":"11484:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7209,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:33"},"scope":8257,"src":"11414:331:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7288,"nodeType":"Block","src":"11963:113:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7266,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"11987:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7267,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"11990:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7268,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"11993:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7265,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[7250,7289],"referencedDeclaration":7250,"src":"11980:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7273,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"12031:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":7272,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"12014:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7276,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"12051:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7277,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"12054:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7279,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"12062:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7275,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:33","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7270,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"11998:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"11998:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7264,"id":7287,"nodeType":"Return","src":"11973:96:33"}]},"documentation":{"id":7251,"nodeType":"StructuredDocumentation","src":"11751:109:33","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":7289,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:33","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7253,"mutability":"mutable","name":"x","nameLocation":"11889:1:33","nodeType":"VariableDeclaration","scope":7289,"src":"11881:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7255,"mutability":"mutable","name":"y","nameLocation":"11900:1:33","nodeType":"VariableDeclaration","scope":7289,"src":"11892:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7254,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7257,"mutability":"mutable","name":"n","nameLocation":"11909:1:33","nodeType":"VariableDeclaration","scope":7289,"src":"11903:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7256,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7260,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:33","nodeType":"VariableDeclaration","scope":7289,"src":"11912:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":7259,"nodeType":"UserDefinedTypeName","pathNode":{"id":7258,"name":"Rounding","nameLocations":["11912:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"11912:8:33"},"referencedDeclaration":6648,"src":"11912:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:33"},"returnParameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7289,"src":"11954:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7262,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:33"},"scope":8257,"src":"11865:211:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7385,"nodeType":"Block","src":"12710:1849:33","statements":[{"id":7384,"nodeType":"UncheckedBlock","src":"12720:1833:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7299,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"12748:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7304,"nodeType":"IfStatement","src":"12744:20:33","trueBody":{"expression":{"hexValue":"30","id":7302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7298,"id":7303,"nodeType":"Return","src":"12756:8:33"}},{"assignments":[7306],"declarations":[{"constant":false,"id":7306,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:33","nodeType":"VariableDeclaration","scope":7384,"src":"13235:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7305,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7310,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"13255:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":7308,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"13259:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:33"},{"assignments":[7312],"declarations":[{"constant":false,"id":7312,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:33","nodeType":"VariableDeclaration","scope":7384,"src":"13274:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7311,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7314,"initialValue":{"id":7313,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"13288:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:33"},{"assignments":[7316],"declarations":[{"constant":false,"id":7316,"mutability":"mutable","name":"x","nameLocation":"13432:1:33","nodeType":"VariableDeclaration","scope":7384,"src":"13425:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7315,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7318,"initialValue":{"hexValue":"30","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:33"},{"assignments":[7320],"declarations":[{"constant":false,"id":7320,"mutability":"mutable","name":"y","nameLocation":"13458:1:33","nodeType":"VariableDeclaration","scope":7384,"src":"13451:8:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7319,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7322,"initialValue":{"hexValue":"31","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:33"},{"body":{"id":7359,"nodeType":"Block","src":"13501:882:33","statements":[{"assignments":[7327],"declarations":[{"constant":false,"id":7327,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:33","nodeType":"VariableDeclaration","scope":7359,"src":"13519:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7326,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7331,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7328,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"13538:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7329,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"13544:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:33"},{"expression":{"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7332,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"13573:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7333,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"13578:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7334,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7335,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"13678:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7336,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"13923:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"13929:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7338,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"13941:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:33","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"ExpressionStatement","src":"13572:395:33"},{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7344,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"13987:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7345,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"13990:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7346,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7347,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"14072:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7348,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"14326:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7349,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"14330:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7352,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"14341:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7350,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:33","typeDescriptions":{}}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:33","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"ExpressionStatement","src":"13986:382:33"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7323,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"13485:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7360,"nodeType":"WhileStatement","src":"13478:905:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"14401:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7366,"nodeType":"IfStatement","src":"14397:22:33","trueBody":{"expression":{"hexValue":"30","id":7364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7298,"id":7365,"nodeType":"Return","src":"14411:8:33"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7368,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"14470:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7371,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"14477:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:33","subExpression":{"id":7374,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"14490:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:33","typeDescriptions":{}}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"14502:1:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:33","typeDescriptions":{}}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7367,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"14462:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7298,"id":7383,"nodeType":"Return","src":"14455:50:33"}]}]},"documentation":{"id":7290,"nodeType":"StructuredDocumentation","src":"12082:553:33","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":7386,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:33","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"a","nameLocation":"12664:1:33","nodeType":"VariableDeclaration","scope":7386,"src":"12656:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7294,"mutability":"mutable","name":"n","nameLocation":"12675:1:33","nodeType":"VariableDeclaration","scope":7386,"src":"12667:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:33"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7386,"src":"12701:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:33"},"scope":8257,"src":"12640:1919:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7406,"nodeType":"Block","src":"15159:82:33","statements":[{"id":7405,"nodeType":"UncheckedBlock","src":"15169:66:33","statements":[{"expression":{"arguments":[{"id":7398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"15212:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"15215:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":7400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7402,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"15222:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7396,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"15200:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8257_$","typeString":"type(library Math)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:33","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":7443,"src":"15200:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7395,"id":7404,"nodeType":"Return","src":"15193:31:33"}]}]},"documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"14565:514:33","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":7407,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:33","nodeType":"FunctionDefinition","parameters":{"id":7392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7389,"mutability":"mutable","name":"a","nameLocation":"15113:1:33","nodeType":"VariableDeclaration","scope":7407,"src":"15105:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7391,"mutability":"mutable","name":"p","nameLocation":"15124:1:33","nodeType":"VariableDeclaration","scope":7407,"src":"15116:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7390,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:33"},"returnParameters":{"id":7395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7407,"src":"15150:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7393,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:33"},"scope":8257,"src":"15084:157:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7442,"nodeType":"Block","src":"16011:174:33","statements":[{"assignments":[7420,7422],"declarations":[{"constant":false,"id":7420,"mutability":"mutable","name":"success","nameLocation":"16027:7:33","nodeType":"VariableDeclaration","scope":7442,"src":"16022:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7419,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7422,"mutability":"mutable","name":"result","nameLocation":"16044:6:33","nodeType":"VariableDeclaration","scope":7442,"src":"16036:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7428,"initialValue":{"arguments":[{"id":7424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"16064:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7425,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"16067:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7426,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"16070:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7423,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7467,7549],"referencedDeclaration":7467,"src":"16054:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:33"},{"condition":{"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:33","subExpression":{"id":7429,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7420,"src":"16087:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7439,"nodeType":"IfStatement","src":"16082:74:33","trueBody":{"id":7438,"nodeType":"Block","src":"16096:60:33","statements":[{"expression":{"arguments":[{"expression":{"id":7434,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"16122:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:33","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"16122:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7431,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"16110:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:33","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"16110:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7437,"nodeType":"ExpressionStatement","src":"16110:35:33"}]}},{"expression":{"id":7440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"16172:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7418,"id":7441,"nodeType":"Return","src":"16165:13:33"}]},"documentation":{"id":7408,"nodeType":"StructuredDocumentation","src":"15247:678:33","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":7443,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:33","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7410,"mutability":"mutable","name":"b","nameLocation":"15954:1:33","nodeType":"VariableDeclaration","scope":7443,"src":"15946:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7409,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7412,"mutability":"mutable","name":"e","nameLocation":"15965:1:33","nodeType":"VariableDeclaration","scope":7443,"src":"15957:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7411,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7414,"mutability":"mutable","name":"m","nameLocation":"15976:1:33","nodeType":"VariableDeclaration","scope":7443,"src":"15968:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:33"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7443,"src":"16002:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:33"},"scope":8257,"src":"15930:255:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7466,"nodeType":"Block","src":"17039:1493:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7457,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"17053:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7464,"nodeType":"IfStatement","src":"17049:29:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":7456,"id":7463,"nodeType":"Return","src":"17061:17:33"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:33","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:33","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:33"},"nodeType":"YulFunctionCall","src":"17138:11:33"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:33","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:33","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:33"},"nodeType":"YulFunctionCall","src":"18050:17:33"},"nodeType":"YulExpressionStatement","src":"18050:17:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:33"},"nodeType":"YulFunctionCall","src":"18087:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:33","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:33"},"nodeType":"YulFunctionCall","src":"18080:28:33"},"nodeType":"YulExpressionStatement","src":"18080:28:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:33","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:33"},"nodeType":"YulFunctionCall","src":"18128:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:33","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:33"},"nodeType":"YulFunctionCall","src":"18121:28:33"},"nodeType":"YulExpressionStatement","src":"18121:28:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:33","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:33"},"nodeType":"YulFunctionCall","src":"18169:14:33"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:33"},"nodeType":"YulFunctionCall","src":"18162:25:33"},"nodeType":"YulExpressionStatement","src":"18162:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:33","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:33"},"nodeType":"YulFunctionCall","src":"18207:14:33"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:33"},"nodeType":"YulFunctionCall","src":"18200:25:33"},"nodeType":"YulExpressionStatement","src":"18200:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:33","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:33"},"nodeType":"YulFunctionCall","src":"18245:14:33"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:33"},"nodeType":"YulFunctionCall","src":"18238:25:33"},"nodeType":"YulExpressionStatement","src":"18238:25:33"},{"nodeType":"YulAssignment","src":"18425:57:33","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:33"},"nodeType":"YulFunctionCall","src":"18447:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:33","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:33","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:33","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:33","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:33"},"nodeType":"YulFunctionCall","src":"18436:46:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:33"}]},{"nodeType":"YulAssignment","src":"18495:21:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:33","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:33"},"nodeType":"YulFunctionCall","src":"18505:11:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7446,"isOffset":false,"isSlot":false,"src":"18185:1:33","valueSize":1},{"declaration":7448,"isOffset":false,"isSlot":false,"src":"18223:1:33","valueSize":1},{"declaration":7450,"isOffset":false,"isSlot":false,"src":"18261:1:33","valueSize":1},{"declaration":7455,"isOffset":false,"isSlot":false,"src":"18495:6:33","valueSize":1},{"declaration":7453,"isOffset":false,"isSlot":false,"src":"18425:7:33","valueSize":1}],"flags":["memory-safe"],"id":7465,"nodeType":"InlineAssembly","src":"17088:1438:33"}]},"documentation":{"id":7444,"nodeType":"StructuredDocumentation","src":"16191:738:33","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":7467,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:33","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7446,"mutability":"mutable","name":"b","nameLocation":"16961:1:33","nodeType":"VariableDeclaration","scope":7467,"src":"16953:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7445,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7448,"mutability":"mutable","name":"e","nameLocation":"16972:1:33","nodeType":"VariableDeclaration","scope":7467,"src":"16964:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7450,"mutability":"mutable","name":"m","nameLocation":"16983:1:33","nodeType":"VariableDeclaration","scope":7467,"src":"16975:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7449,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:33"},"returnParameters":{"id":7456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"success","nameLocation":"17014:7:33","nodeType":"VariableDeclaration","scope":7467,"src":"17009:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7452,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7455,"mutability":"mutable","name":"result","nameLocation":"17031:6:33","nodeType":"VariableDeclaration","scope":7467,"src":"17023:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7454,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:33"},"scope":8257,"src":"16934:1598:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7502,"nodeType":"Block","src":"18729:179:33","statements":[{"assignments":[7480,7482],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"success","nameLocation":"18745:7:33","nodeType":"VariableDeclaration","scope":7502,"src":"18740:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7479,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7482,"mutability":"mutable","name":"result","nameLocation":"18767:6:33","nodeType":"VariableDeclaration","scope":7502,"src":"18754:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7481,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7488,"initialValue":{"arguments":[{"id":7484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"18787:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7485,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"18790:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7486,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"18793:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7483,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7467,7549],"referencedDeclaration":7549,"src":"18777:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:33"},{"condition":{"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:33","subExpression":{"id":7489,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"18810:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7499,"nodeType":"IfStatement","src":"18805:74:33","trueBody":{"id":7498,"nodeType":"Block","src":"18819:60:33","statements":[{"expression":{"arguments":[{"expression":{"id":7494,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"18845:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:33","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"18845:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7491,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"18833:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3889_$","typeString":"type(library Panic)"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:33","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"18833:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7497,"nodeType":"ExpressionStatement","src":"18833:35:33"}]}},{"expression":{"id":7500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"18895:6:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7478,"id":7501,"nodeType":"Return","src":"18888:13:33"}]},"documentation":{"id":7468,"nodeType":"StructuredDocumentation","src":"18538:85:33","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7503,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:33","nodeType":"FunctionDefinition","parameters":{"id":7475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"b","nameLocation":"18657:1:33","nodeType":"VariableDeclaration","scope":7503,"src":"18644:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7469,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7472,"mutability":"mutable","name":"e","nameLocation":"18673:1:33","nodeType":"VariableDeclaration","scope":7503,"src":"18660:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7471,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7474,"mutability":"mutable","name":"m","nameLocation":"18689:1:33","nodeType":"VariableDeclaration","scope":7503,"src":"18676:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7473,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:33"},"returnParameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7503,"src":"18715:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7476,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:33"},"scope":8257,"src":"18628:280:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7548,"nodeType":"Block","src":"19162:771:33","statements":[{"condition":{"arguments":[{"id":7518,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"19187:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7517,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"19176:10:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7527,"nodeType":"IfStatement","src":"19172:47:33","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:33","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7521,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7516,"id":7526,"nodeType":"Return","src":"19191:28:33"}},{"assignments":[7529],"declarations":[{"constant":false,"id":7529,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:33","nodeType":"VariableDeclaration","scope":7548,"src":"19230:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7528,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7532,"initialValue":{"expression":{"id":7530,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"19245:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:33","memberName":"length","nodeType":"MemberAccess","src":"19245:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:33"},{"expression":{"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19335:6:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"19361:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:33","memberName":"length","nodeType":"MemberAccess","src":"19361:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7538,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"19371:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:33","memberName":"length","nodeType":"MemberAccess","src":"19371:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7540,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"19381:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"19387:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7542,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"19390:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7543,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"19393:1:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:33","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7546,"nodeType":"ExpressionStatement","src":"19335:60:33"},{"AST":{"nodeType":"YulBlock","src":"19431:496:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:33","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:33"},"nodeType":"YulFunctionCall","src":"19460:17:33"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:33","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:33","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:33"},"nodeType":"YulFunctionCall","src":"19589:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:33","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:33"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:33"},"nodeType":"YulFunctionCall","src":"19611:13:33"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:33"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:33"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:33"},"nodeType":"YulFunctionCall","src":"19578:62:33"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:33"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:33"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:33"},"nodeType":"YulFunctionCall","src":"19789:20:33"},"nodeType":"YulExpressionStatement","src":"19789:20:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:33","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:33"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:33"},"nodeType":"YulFunctionCall","src":"19898:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:33"},"nodeType":"YulFunctionCall","src":"19885:32:33"},"nodeType":"YulExpressionStatement","src":"19885:32:33"}]},"evmVersion":"paris","externalReferences":[{"declaration":7529,"isOffset":false,"isSlot":false,"src":"19635:4:33","valueSize":1},{"declaration":7529,"isOffset":false,"isSlot":false,"src":"19804:4:33","valueSize":1},{"declaration":7529,"isOffset":false,"isSlot":false,"src":"19911:4:33","valueSize":1},{"declaration":7515,"isOffset":false,"isSlot":false,"src":"19464:6:33","valueSize":1},{"declaration":7515,"isOffset":false,"isSlot":false,"src":"19617:6:33","valueSize":1},{"declaration":7515,"isOffset":false,"isSlot":false,"src":"19796:6:33","valueSize":1},{"declaration":7513,"isOffset":false,"isSlot":false,"src":"19567:7:33","valueSize":1}],"flags":["memory-safe"],"id":7547,"nodeType":"InlineAssembly","src":"19406:521:33"}]},"documentation":{"id":7504,"nodeType":"StructuredDocumentation","src":"18914:88:33","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7549,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:33","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"b","nameLocation":"19048:1:33","nodeType":"VariableDeclaration","scope":7549,"src":"19035:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7505,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7508,"mutability":"mutable","name":"e","nameLocation":"19072:1:33","nodeType":"VariableDeclaration","scope":7549,"src":"19059:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7507,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7510,"mutability":"mutable","name":"m","nameLocation":"19096:1:33","nodeType":"VariableDeclaration","scope":7549,"src":"19083:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7509,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:33"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"success","nameLocation":"19132:7:33","nodeType":"VariableDeclaration","scope":7549,"src":"19127:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7512,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7515,"mutability":"mutable","name":"result","nameLocation":"19154:6:33","nodeType":"VariableDeclaration","scope":7549,"src":"19141:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7514,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:33"},"scope":8257,"src":"19007:926:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7581,"nodeType":"Block","src":"20088:176:33","statements":[{"body":{"id":7577,"nodeType":"Block","src":"20145:92:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7568,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"20163:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7570,"indexExpression":{"id":7569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"20173:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:33","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7576,"nodeType":"IfStatement","src":"20159:68:33","trueBody":{"id":7575,"nodeType":"Block","src":"20182:45:33","statements":[{"expression":{"hexValue":"66616c7365","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7556,"id":7574,"nodeType":"Return","src":"20200:12:33"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"20118:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7562,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"20122:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:33","memberName":"length","nodeType":"MemberAccess","src":"20122:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7578,"initializationExpression":{"assignments":[7558],"declarations":[{"constant":false,"id":7558,"mutability":"mutable","name":"i","nameLocation":"20111:1:33","nodeType":"VariableDeclaration","scope":7578,"src":"20103:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7557,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7560,"initialValue":{"hexValue":"30","id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:33"},"loopExpression":{"expression":{"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:33","subExpression":{"id":7565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"20142:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7567,"nodeType":"ExpressionStatement","src":"20140:3:33"},"nodeType":"ForStatement","src":"20098:139:33"},{"expression":{"hexValue":"74727565","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7556,"id":7580,"nodeType":"Return","src":"20246:11:33"}]},"documentation":{"id":7550,"nodeType":"StructuredDocumentation","src":"19939:72:33","text":" @dev Returns whether the provided byte array is zero."},"id":7582,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:33","nodeType":"FunctionDefinition","parameters":{"id":7553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:33","nodeType":"VariableDeclaration","scope":7582,"src":"20036:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7551,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:33"},"returnParameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7582,"src":"20082:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7554,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:33"},"scope":8257,"src":"20016:248:33","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7800,"nodeType":"Block","src":"20624:5124:33","statements":[{"id":7799,"nodeType":"UncheckedBlock","src":"20634:5108:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"20728:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7596,"nodeType":"IfStatement","src":"20724:53:33","trueBody":{"id":7595,"nodeType":"Block","src":"20736:41:33","statements":[{"expression":{"id":7593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"20761:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7589,"id":7594,"nodeType":"Return","src":"20754:8:33"}]}},{"assignments":[7598],"declarations":[{"constant":false,"id":7598,"mutability":"mutable","name":"aa","nameLocation":"21712:2:33","nodeType":"VariableDeclaration","scope":7799,"src":"21704:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7597,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7600,"initialValue":{"id":7599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"21717:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:33"},{"assignments":[7602],"declarations":[{"constant":false,"id":7602,"mutability":"mutable","name":"xn","nameLocation":"21740:2:33","nodeType":"VariableDeclaration","scope":7799,"src":"21732:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7601,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7604,"initialValue":{"hexValue":"31","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"21765:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:33","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:33","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7620,"nodeType":"IfStatement","src":"21761:92:33","trueBody":{"id":7619,"nodeType":"Block","src":"21783:70:33","statements":[{"expression":{"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7611,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"21801:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7614,"nodeType":"ExpressionStatement","src":"21801:10:33"},{"expression":{"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7615,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"21829:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7618,"nodeType":"ExpressionStatement","src":"21829:9:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7621,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"21870:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:33","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:33","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7636,"nodeType":"IfStatement","src":"21866:90:33","trueBody":{"id":7635,"nodeType":"Block","src":"21887:69:33","statements":[{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7627,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"21905:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7630,"nodeType":"ExpressionStatement","src":"21905:9:33"},{"expression":{"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7631,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"21932:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7634,"nodeType":"ExpressionStatement","src":"21932:9:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7637,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"21973:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:33","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:33","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7652,"nodeType":"IfStatement","src":"21969:90:33","trueBody":{"id":7651,"nodeType":"Block","src":"21990:69:33","statements":[{"expression":{"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7643,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22008:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7646,"nodeType":"ExpressionStatement","src":"22008:9:33"},{"expression":{"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7647,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22035:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7650,"nodeType":"ExpressionStatement","src":"22035:9:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7653,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22076:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:33","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:33","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7668,"nodeType":"IfStatement","src":"22072:89:33","trueBody":{"id":7667,"nodeType":"Block","src":"22093:68:33","statements":[{"expression":{"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7659,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22111:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7662,"nodeType":"ExpressionStatement","src":"22111:9:33"},{"expression":{"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7663,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22138:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7666,"nodeType":"ExpressionStatement","src":"22138:8:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7669,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22178:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:33","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:33","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7684,"nodeType":"IfStatement","src":"22174:87:33","trueBody":{"id":7683,"nodeType":"Block","src":"22194:67:33","statements":[{"expression":{"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7675,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22212:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7678,"nodeType":"ExpressionStatement","src":"22212:8:33"},{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22238:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7682,"nodeType":"ExpressionStatement","src":"22238:8:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22278:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7700,"nodeType":"IfStatement","src":"22274:87:33","trueBody":{"id":7699,"nodeType":"Block","src":"22294:67:33","statements":[{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7691,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22312:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7694,"nodeType":"ExpressionStatement","src":"22312:8:33"},{"expression":{"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22338:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7698,"nodeType":"ExpressionStatement","src":"22338:8:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7701,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"22378:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"22374:61:33","trueBody":{"id":7711,"nodeType":"Block","src":"22394:41:33","statements":[{"expression":{"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7707,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22412:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7710,"nodeType":"ExpressionStatement","src":"22412:8:33"}]}},{"expression":{"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7713,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22855:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7715,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"22865:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7721,"nodeType":"ExpressionStatement","src":"22855:18:33"},{"expression":{"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7722,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24760:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24766:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"24771:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24775:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7732,"nodeType":"ExpressionStatement","src":"24760:23:33"},{"expression":{"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7733,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24869:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7734,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24875:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"24880:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7736,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24884:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7743,"nodeType":"ExpressionStatement","src":"24869:23:33"},{"expression":{"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7744,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24980:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7745,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24986:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"24991:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7747,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"24995:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7754,"nodeType":"ExpressionStatement","src":"24980:23:33"},{"expression":{"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7755,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25089:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7756,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25095:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"25100:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7758,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25104:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7765,"nodeType":"ExpressionStatement","src":"25089:23:33"},{"expression":{"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7766,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25199:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7767,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25205:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"25210:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7769,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25214:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7776,"nodeType":"ExpressionStatement","src":"25199:23:33"},{"expression":{"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7777,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25309:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25315:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"25320:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7780,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25324:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7787,"nodeType":"ExpressionStatement","src":"25309:23:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7788,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25698:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25719:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"25724:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7793,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"25728:2:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"25703:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"25703:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7589,"id":7798,"nodeType":"Return","src":"25691:40:33"}]}]},"documentation":{"id":7583,"nodeType":"StructuredDocumentation","src":"20270:292:33","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7801,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:33","nodeType":"FunctionDefinition","parameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"a","nameLocation":"20589:1:33","nodeType":"VariableDeclaration","scope":7801,"src":"20581:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7584,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:33"},"returnParameters":{"id":7589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7801,"src":"20615:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7587,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:33"},"scope":8257,"src":"20567:5181:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7834,"nodeType":"Block","src":"25921:171:33","statements":[{"id":7833,"nodeType":"UncheckedBlock","src":"25931:155:33","statements":[{"assignments":[7813],"declarations":[{"constant":false,"id":7813,"mutability":"mutable","name":"result","nameLocation":"25963:6:33","nodeType":"VariableDeclaration","scope":7833,"src":"25955:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7817,"initialValue":{"arguments":[{"id":7815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25977:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7814,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7801,7835],"referencedDeclaration":7801,"src":"25972:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"26000:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7822,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"26042:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":7821,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"26025:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"26055:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"26064:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"26073:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7819,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26009:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26009:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7811,"id":7832,"nodeType":"Return","src":"25993:82:33"}]}]},"documentation":{"id":7802,"nodeType":"StructuredDocumentation","src":"25754:86:33","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7835,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:33","nodeType":"FunctionDefinition","parameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"a","nameLocation":"25867:1:33","nodeType":"VariableDeclaration","scope":7835,"src":"25859:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7803,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7807,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:33","nodeType":"VariableDeclaration","scope":7835,"src":"25870:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":7806,"nodeType":"UserDefinedTypeName","pathNode":{"id":7805,"name":"Rounding","nameLocations":["25870:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"25870:8:33"},"referencedDeclaration":6648,"src":"25870:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:33"},"returnParameters":{"id":7811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7835,"src":"25912:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:33"},"scope":8257,"src":"25845:247:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7925,"nodeType":"Block","src":"26281:2334:33","statements":[{"expression":{"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7843,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26363:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7846,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"26383:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:33","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7844,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26367:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26367:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:33","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7853,"nodeType":"ExpressionStatement","src":"26363:64:33"},{"expression":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7854,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26503:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7857,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"26525:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7858,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26530:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:33","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7855,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26508:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26508:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:33","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7867,"nodeType":"ExpressionStatement","src":"26503:56:33"},{"expression":{"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7868,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26634:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7871,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"26656:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7872,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26661:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:33","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7869,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26639:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26639:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:33","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7881,"nodeType":"ExpressionStatement","src":"26634:48:33"},{"expression":{"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7882,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26757:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7885,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"26779:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7886,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26784:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:33","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26762:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26762:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7895,"nodeType":"ExpressionStatement","src":"26757:44:33"},{"expression":{"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7896,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26874:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"26896:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7900,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26901:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:33","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26879:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26879:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7909,"nodeType":"ExpressionStatement","src":"26874:42:33"},{"expression":{"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7910,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"26988:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"27010:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7914,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"27015:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:33","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7911,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26993:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"26993:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7923,"nodeType":"ExpressionStatement","src":"26988:41:33"},{"AST":{"nodeType":"YulBlock","src":"28490:119:33","statements":[{"nodeType":"YulAssignment","src":"28504:95:33","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:33"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:33"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:33"},"nodeType":"YulFunctionCall","src":"28520:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:33","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:33"},"nodeType":"YulFunctionCall","src":"28515:83:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:33"},"nodeType":"YulFunctionCall","src":"28509:90:33"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7841,"isOffset":false,"isSlot":false,"src":"28504:1:33","valueSize":1},{"declaration":7841,"isOffset":false,"isSlot":false,"src":"28512:1:33","valueSize":1},{"declaration":7841,"isOffset":false,"isSlot":false,"src":"28524:1:33","valueSize":1},{"declaration":7838,"isOffset":false,"isSlot":false,"src":"28527:1:33","valueSize":1}],"flags":["memory-safe"],"id":7924,"nodeType":"InlineAssembly","src":"28465:144:33"}]},"documentation":{"id":7836,"nodeType":"StructuredDocumentation","src":"26098:119:33","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7926,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:33","nodeType":"FunctionDefinition","parameters":{"id":7839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7838,"mutability":"mutable","name":"x","nameLocation":"26244:1:33","nodeType":"VariableDeclaration","scope":7926,"src":"26236:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:33"},"returnParameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"r","nameLocation":"26278:1:33","nodeType":"VariableDeclaration","scope":7926,"src":"26270:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7840,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:33"},"scope":8257,"src":"26222:2393:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7959,"nodeType":"Block","src":"28848:175:33","statements":[{"id":7958,"nodeType":"UncheckedBlock","src":"28858:159:33","statements":[{"assignments":[7938],"declarations":[{"constant":false,"id":7938,"mutability":"mutable","name":"result","nameLocation":"28890:6:33","nodeType":"VariableDeclaration","scope":7958,"src":"28882:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7937,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7942,"initialValue":{"arguments":[{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"28904:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7939,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7926,7960],"referencedDeclaration":7926,"src":"28899:4:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"28931:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7947,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"28973:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":7946,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"28956:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"28991:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"29000:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7944,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"28940:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"28940:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7936,"id":7957,"nodeType":"Return","src":"28924:82:33"}]}]},"documentation":{"id":7927,"nodeType":"StructuredDocumentation","src":"28621:142:33","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7960,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:33","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"value","nameLocation":"28790:5:33","nodeType":"VariableDeclaration","scope":7960,"src":"28782:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7928,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7932,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:33","nodeType":"VariableDeclaration","scope":7960,"src":"28797:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":7931,"nodeType":"UserDefinedTypeName","pathNode":{"id":7930,"name":"Rounding","nameLocations":["28797:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"28797:8:33"},"referencedDeclaration":6648,"src":"28797:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:33"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7960,"src":"28839:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7934,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:33"},"scope":8257,"src":"28768:255:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8088,"nodeType":"Block","src":"29216:854:33","statements":[{"assignments":[7969],"declarations":[{"constant":false,"id":7969,"mutability":"mutable","name":"result","nameLocation":"29234:6:33","nodeType":"VariableDeclaration","scope":8088,"src":"29226:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7971,"initialValue":{"hexValue":"30","id":7970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:33"},{"id":8085,"nodeType":"UncheckedBlock","src":"29254:787:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29282:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7988,"nodeType":"IfStatement","src":"29278:103:33","trueBody":{"id":7987,"nodeType":"Block","src":"29301:80:33","statements":[{"expression":{"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29319:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7982,"nodeType":"ExpressionStatement","src":"29319:17:33"},{"expression":{"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29354:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7986,"nodeType":"ExpressionStatement","src":"29354:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29398:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8005,"nodeType":"IfStatement","src":"29394:103:33","trueBody":{"id":8004,"nodeType":"Block","src":"29417:80:33","statements":[{"expression":{"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29435:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7999,"nodeType":"ExpressionStatement","src":"29435:17:33"},{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29470:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8003,"nodeType":"ExpressionStatement","src":"29470:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29514:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":8009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8022,"nodeType":"IfStatement","src":"29510:103:33","trueBody":{"id":8021,"nodeType":"Block","src":"29533:80:33","statements":[{"expression":{"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29551:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":8014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:33","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8016,"nodeType":"ExpressionStatement","src":"29551:17:33"},{"expression":{"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29586:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8020,"nodeType":"ExpressionStatement","src":"29586:12:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29630:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":8026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8039,"nodeType":"IfStatement","src":"29626:100:33","trueBody":{"id":8038,"nodeType":"Block","src":"29648:78:33","statements":[{"expression":{"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29666:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":8030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8033,"nodeType":"ExpressionStatement","src":"29666:16:33"},{"expression":{"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29700:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8037,"nodeType":"ExpressionStatement","src":"29700:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29743:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":8043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":8042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8056,"nodeType":"IfStatement","src":"29739:100:33","trueBody":{"id":8055,"nodeType":"Block","src":"29761:78:33","statements":[{"expression":{"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29779:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":8048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":8047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8050,"nodeType":"ExpressionStatement","src":"29779:16:33"},{"expression":{"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29813:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":8052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8054,"nodeType":"ExpressionStatement","src":"29813:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29856:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8073,"nodeType":"IfStatement","src":"29852:100:33","trueBody":{"id":8072,"nodeType":"Block","src":"29874:78:33","statements":[{"expression":{"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29892:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:33","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8067,"nodeType":"ExpressionStatement","src":"29892:16:33"},{"expression":{"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"29926:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":8069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8071,"nodeType":"ExpressionStatement","src":"29926:11:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"29969:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8084,"nodeType":"IfStatement","src":"29965:66:33","trueBody":{"id":8083,"nodeType":"Block","src":"29987:44:33","statements":[{"expression":{"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"30005:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8082,"nodeType":"ExpressionStatement","src":"30005:11:33"}]}}]},{"expression":{"id":8086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"30057:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7967,"id":8087,"nodeType":"Return","src":"30050:13:33"}]},"documentation":{"id":7961,"nodeType":"StructuredDocumentation","src":"29029:120:33","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":8089,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:33","nodeType":"FunctionDefinition","parameters":{"id":7964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7963,"mutability":"mutable","name":"value","nameLocation":"29177:5:33","nodeType":"VariableDeclaration","scope":8089,"src":"29169:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7962,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:33"},"returnParameters":{"id":7967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8089,"src":"29207:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7965,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:33"},"scope":8257,"src":"29154:916:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8122,"nodeType":"Block","src":"30305:177:33","statements":[{"id":8121,"nodeType":"UncheckedBlock","src":"30315:161:33","statements":[{"assignments":[8101],"declarations":[{"constant":false,"id":8101,"mutability":"mutable","name":"result","nameLocation":"30347:6:33","nodeType":"VariableDeclaration","scope":8121,"src":"30339:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8100,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8105,"initialValue":{"arguments":[{"id":8103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"30362:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8102,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[8089,8123],"referencedDeclaration":8089,"src":"30356:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"30389:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8110,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"30431:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":8109,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"30414:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:33","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"30450:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"30459:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8107,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"30398:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"30398:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8099,"id":8120,"nodeType":"Return","src":"30382:83:33"}]}]},"documentation":{"id":8090,"nodeType":"StructuredDocumentation","src":"30076:143:33","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8123,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:33","nodeType":"FunctionDefinition","parameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8092,"mutability":"mutable","name":"value","nameLocation":"30247:5:33","nodeType":"VariableDeclaration","scope":8123,"src":"30239:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8091,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8095,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:33","nodeType":"VariableDeclaration","scope":8123,"src":"30254:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":8094,"nodeType":"UserDefinedTypeName","pathNode":{"id":8093,"name":"Rounding","nameLocations":["30254:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"30254:8:33"},"referencedDeclaration":6648,"src":"30254:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:33"},"returnParameters":{"id":8099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8123,"src":"30296:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8097,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:33"},"scope":8257,"src":"30224:258:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8199,"nodeType":"Block","src":"30800:675:33","statements":[{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8131,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"30882:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"30902:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":8135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:33","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8132,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"30886:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"30886:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:33","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8141,"nodeType":"ExpressionStatement","src":"30882:64:33"},{"expression":{"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8142,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31022:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8145,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"31044:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8146,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31049:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":8149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:33","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"31027:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"31027:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:33","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8155,"nodeType":"ExpressionStatement","src":"31022:56:33"},{"expression":{"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8156,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31153:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8159,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"31175:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8160,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31180:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":8163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:33","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8157,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"31158:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"31158:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":8166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:33","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8169,"nodeType":"ExpressionStatement","src":"31153:48:33"},{"expression":{"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8170,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31276:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8173,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"31298:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31303:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:33","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8171,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"31281:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"31281:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8183,"nodeType":"ExpressionStatement","src":"31276:44:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8184,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31426:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":8185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8190,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"31453:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8191,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"31458:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":8194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:33","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8188,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"31436:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"31436:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8130,"id":8198,"nodeType":"Return","src":"31418:50:33"}]},"documentation":{"id":8124,"nodeType":"StructuredDocumentation","src":"30488:246:33","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":8200,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:33","nodeType":"FunctionDefinition","parameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8126,"mutability":"mutable","name":"x","nameLocation":"30763:1:33","nodeType":"VariableDeclaration","scope":8200,"src":"30755:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8125,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:33"},"returnParameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"r","nameLocation":"30797:1:33","nodeType":"VariableDeclaration","scope":8200,"src":"30789:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8128,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:33"},"scope":8257,"src":"30739:736:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8236,"nodeType":"Block","src":"31712:184:33","statements":[{"id":8235,"nodeType":"UncheckedBlock","src":"31722:168:33","statements":[{"assignments":[8212],"declarations":[{"constant":false,"id":8212,"mutability":"mutable","name":"result","nameLocation":"31754:6:33","nodeType":"VariableDeclaration","scope":8235,"src":"31746:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8211,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8216,"initialValue":{"arguments":[{"id":8214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"31770:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8213,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[8200,8237],"referencedDeclaration":8200,"src":"31763:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"31797:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8221,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"31839:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":8220,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"31822:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6648_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"31858:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:33","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"31873:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"31806:8:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:33","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"31806:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8210,"id":8234,"nodeType":"Return","src":"31790:89:33"}]}]},"documentation":{"id":8201,"nodeType":"StructuredDocumentation","src":"31481:144:33","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8237,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:33","nodeType":"FunctionDefinition","parameters":{"id":8207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8203,"mutability":"mutable","name":"value","nameLocation":"31654:5:33","nodeType":"VariableDeclaration","scope":8237,"src":"31646:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8202,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8206,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:33","nodeType":"VariableDeclaration","scope":8237,"src":"31661:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":8205,"nodeType":"UserDefinedTypeName","pathNode":{"id":8204,"name":"Rounding","nameLocations":["31661:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"31661:8:33"},"referencedDeclaration":6648,"src":"31661:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:33"},"returnParameters":{"id":8210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8237,"src":"31703:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8208,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:33"},"scope":8257,"src":"31630:266:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8255,"nodeType":"Block","src":"32094:48:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8248,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"32117:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}],"id":8247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8246,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:33","typeDescriptions":{}}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8245,"id":8254,"nodeType":"Return","src":"32104:31:33"}]},"documentation":{"id":8238,"nodeType":"StructuredDocumentation","src":"31902:113:33","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":8256,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:33","nodeType":"FunctionDefinition","parameters":{"id":8242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8241,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:33","nodeType":"VariableDeclaration","scope":8256,"src":"32046:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"},"typeName":{"id":8240,"nodeType":"UserDefinedTypeName","pathNode":{"id":8239,"name":"Rounding","nameLocations":["32046:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":6648,"src":"32046:8:33"},"referencedDeclaration":6648,"src":"32046:8:33","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6648","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:33"},"returnParameters":{"id":8245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8256,"src":"32088:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8243,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:33"},"scope":8257,"src":"32020:122:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8258,"src":"281:31863:33","usedErrors":[],"usedEvents":[]}],"src":"103:32042:33"},"id":33},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[10022]},"id":10023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8259,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:34"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":8260,"nodeType":"StructuredDocumentation","src":"218:550:34","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":10022,"linearizedBaseContracts":[10022],"name":"SafeCast","nameLocation":"777:8:34","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"792:68:34","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":8267,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:34","nodeType":"ErrorDefinition","parameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8263,"mutability":"mutable","name":"bits","nameLocation":"908:4:34","nodeType":"VariableDeclaration","scope":8267,"src":"902:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8262,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8265,"mutability":"mutable","name":"value","nameLocation":"922:5:34","nodeType":"VariableDeclaration","scope":8267,"src":"914:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8264,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:34"},"src":"865:64:34"},{"documentation":{"id":8268,"nodeType":"StructuredDocumentation","src":"935:75:34","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":8272,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:34","nodeType":"ErrorDefinition","parameters":{"id":8271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8270,"mutability":"mutable","name":"value","nameLocation":"1056:5:34","nodeType":"VariableDeclaration","scope":8272,"src":"1049:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8269,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:34"},"src":"1015:48:34"},{"documentation":{"id":8273,"nodeType":"StructuredDocumentation","src":"1069:67:34","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":8279,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:34","nodeType":"ErrorDefinition","parameters":{"id":8278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"bits","nameLocation":"1183:4:34","nodeType":"VariableDeclaration","scope":8279,"src":"1177:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8274,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8277,"mutability":"mutable","name":"value","nameLocation":"1196:5:34","nodeType":"VariableDeclaration","scope":8279,"src":"1189:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8276,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:34"},"src":"1141:62:34"},{"documentation":{"id":8280,"nodeType":"StructuredDocumentation","src":"1209:75:34","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":8284,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:34","nodeType":"ErrorDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8282,"mutability":"mutable","name":"value","nameLocation":"1331:5:34","nodeType":"VariableDeclaration","scope":8284,"src":"1323:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:34"},"src":"1289:49:34"},{"body":{"id":8311,"nodeType":"Block","src":"1695:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"1709:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8294,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":8293,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:34","memberName":"max","nodeType":"MemberAccess","src":"1717:17:34","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8305,"nodeType":"IfStatement","src":"1705:105:34","trueBody":{"id":8304,"nodeType":"Block","src":"1736:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:34","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"1793:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8299,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"1757:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8303,"nodeType":"RevertStatement","src":"1750:49:34"}]}},{"expression":{"arguments":[{"id":8308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"1834:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8306,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:34","typeDescriptions":{}}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":8291,"id":8310,"nodeType":"Return","src":"1819:21:34"}]},"documentation":{"id":8285,"nodeType":"StructuredDocumentation","src":"1344:280:34","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8312,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:34","nodeType":"FunctionDefinition","parameters":{"id":8288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8287,"mutability":"mutable","name":"value","nameLocation":"1656:5:34","nodeType":"VariableDeclaration","scope":8312,"src":"1648:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:34"},"returnParameters":{"id":8291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8312,"src":"1686:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":8289,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:34","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:34"},"scope":10022,"src":"1629:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8339,"nodeType":"Block","src":"2204:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"2218:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8322,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":8321,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:34","memberName":"max","nodeType":"MemberAccess","src":"2226:17:34","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8333,"nodeType":"IfStatement","src":"2214:105:34","trueBody":{"id":8332,"nodeType":"Block","src":"2245:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:34","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"2302:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8327,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"2266:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8331,"nodeType":"RevertStatement","src":"2259:49:34"}]}},{"expression":{"arguments":[{"id":8336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"2343:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8334,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:34","typeDescriptions":{}}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":8319,"id":8338,"nodeType":"Return","src":"2328:21:34"}]},"documentation":{"id":8313,"nodeType":"StructuredDocumentation","src":"1853:280:34","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8340,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:34","nodeType":"FunctionDefinition","parameters":{"id":8316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8315,"mutability":"mutable","name":"value","nameLocation":"2165:5:34","nodeType":"VariableDeclaration","scope":8340,"src":"2157:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:34"},"returnParameters":{"id":8319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8340,"src":"2195:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":8317,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:34","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:34"},"scope":10022,"src":"2138:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8367,"nodeType":"Block","src":"2713:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"2727:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8350,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":8349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:34","memberName":"max","nodeType":"MemberAccess","src":"2735:17:34","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8361,"nodeType":"IfStatement","src":"2723:105:34","trueBody":{"id":8360,"nodeType":"Block","src":"2754:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:34","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"2811:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8355,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"2775:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8359,"nodeType":"RevertStatement","src":"2768:49:34"}]}},{"expression":{"arguments":[{"id":8364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"2852:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8362,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:34","typeDescriptions":{}}},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":8347,"id":8366,"nodeType":"Return","src":"2837:21:34"}]},"documentation":{"id":8341,"nodeType":"StructuredDocumentation","src":"2362:280:34","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8368,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:34","nodeType":"FunctionDefinition","parameters":{"id":8344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8343,"mutability":"mutable","name":"value","nameLocation":"2674:5:34","nodeType":"VariableDeclaration","scope":8368,"src":"2666:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:34"},"returnParameters":{"id":8347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8368,"src":"2704:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":8345,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:34","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:34"},"scope":10022,"src":"2647:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8395,"nodeType":"Block","src":"3222:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"3236:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8378,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:34","memberName":"max","nodeType":"MemberAccess","src":"3244:17:34","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8389,"nodeType":"IfStatement","src":"3232:105:34","trueBody":{"id":8388,"nodeType":"Block","src":"3263:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:34","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"3320:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8383,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"3284:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8387,"nodeType":"RevertStatement","src":"3277:49:34"}]}},{"expression":{"arguments":[{"id":8392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"3361:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8390,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:34","typeDescriptions":{}}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8375,"id":8394,"nodeType":"Return","src":"3346:21:34"}]},"documentation":{"id":8369,"nodeType":"StructuredDocumentation","src":"2871:280:34","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:34","nodeType":"FunctionDefinition","parameters":{"id":8372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8371,"mutability":"mutable","name":"value","nameLocation":"3183:5:34","nodeType":"VariableDeclaration","scope":8396,"src":"3175:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8370,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:34"},"returnParameters":{"id":8375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8396,"src":"3213:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8373,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:34","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:34"},"scope":10022,"src":"3156:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8423,"nodeType":"Block","src":"3731:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"3745:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8406,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:34","memberName":"max","nodeType":"MemberAccess","src":"3753:17:34","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8417,"nodeType":"IfStatement","src":"3741:105:34","trueBody":{"id":8416,"nodeType":"Block","src":"3772:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:34","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"3829:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8411,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"3793:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8415,"nodeType":"RevertStatement","src":"3786:49:34"}]}},{"expression":{"arguments":[{"id":8420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"3870:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8418,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:34","typeDescriptions":{}}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8403,"id":8422,"nodeType":"Return","src":"3855:21:34"}]},"documentation":{"id":8397,"nodeType":"StructuredDocumentation","src":"3380:280:34","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:34","nodeType":"FunctionDefinition","parameters":{"id":8400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8399,"mutability":"mutable","name":"value","nameLocation":"3692:5:34","nodeType":"VariableDeclaration","scope":8424,"src":"3684:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:34"},"returnParameters":{"id":8403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8424,"src":"3722:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8401,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:34","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:34"},"scope":10022,"src":"3665:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8451,"nodeType":"Block","src":"4240:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"4254:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8434,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8433,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:34","memberName":"max","nodeType":"MemberAccess","src":"4262:17:34","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8445,"nodeType":"IfStatement","src":"4250:105:34","trueBody":{"id":8444,"nodeType":"Block","src":"4281:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:34","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"4338:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8439,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"4302:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8443,"nodeType":"RevertStatement","src":"4295:49:34"}]}},{"expression":{"arguments":[{"id":8448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"4379:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8446,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:34","typeDescriptions":{}}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8431,"id":8450,"nodeType":"Return","src":"4364:21:34"}]},"documentation":{"id":8425,"nodeType":"StructuredDocumentation","src":"3889:280:34","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:34","nodeType":"FunctionDefinition","parameters":{"id":8428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8427,"mutability":"mutable","name":"value","nameLocation":"4201:5:34","nodeType":"VariableDeclaration","scope":8452,"src":"4193:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:34"},"returnParameters":{"id":8431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8452,"src":"4231:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8429,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:34","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:34"},"scope":10022,"src":"4174:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8479,"nodeType":"Block","src":"4749:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4763:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8462,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:34","memberName":"max","nodeType":"MemberAccess","src":"4771:17:34","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8473,"nodeType":"IfStatement","src":"4759:105:34","trueBody":{"id":8472,"nodeType":"Block","src":"4790:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:34","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4847:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8467,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"4811:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8471,"nodeType":"RevertStatement","src":"4804:49:34"}]}},{"expression":{"arguments":[{"id":8476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4888:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8474,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:34","typeDescriptions":{}}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8459,"id":8478,"nodeType":"Return","src":"4873:21:34"}]},"documentation":{"id":8453,"nodeType":"StructuredDocumentation","src":"4398:280:34","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8480,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:34","nodeType":"FunctionDefinition","parameters":{"id":8456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8455,"mutability":"mutable","name":"value","nameLocation":"4710:5:34","nodeType":"VariableDeclaration","scope":8480,"src":"4702:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:34"},"returnParameters":{"id":8459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8480,"src":"4740:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8457,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:34","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:34"},"scope":10022,"src":"4683:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8507,"nodeType":"Block","src":"5258:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"5272:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8490,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:34","memberName":"max","nodeType":"MemberAccess","src":"5280:17:34","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8501,"nodeType":"IfStatement","src":"5268:105:34","trueBody":{"id":8500,"nodeType":"Block","src":"5299:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:34","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"5356:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8495,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5320:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8499,"nodeType":"RevertStatement","src":"5313:49:34"}]}},{"expression":{"arguments":[{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"5397:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8502,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:34","typeDescriptions":{}}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8487,"id":8506,"nodeType":"Return","src":"5382:21:34"}]},"documentation":{"id":8481,"nodeType":"StructuredDocumentation","src":"4907:280:34","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8508,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:34","nodeType":"FunctionDefinition","parameters":{"id":8484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"value","nameLocation":"5219:5:34","nodeType":"VariableDeclaration","scope":8508,"src":"5211:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:34"},"returnParameters":{"id":8487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8508,"src":"5249:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8485,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:34","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:34"},"scope":10022,"src":"5192:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8535,"nodeType":"Block","src":"5767:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"5781:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8518,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:34","memberName":"max","nodeType":"MemberAccess","src":"5789:17:34","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8529,"nodeType":"IfStatement","src":"5777:105:34","trueBody":{"id":8528,"nodeType":"Block","src":"5808:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:34","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"5865:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8523,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5829:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8527,"nodeType":"RevertStatement","src":"5822:49:34"}]}},{"expression":{"arguments":[{"id":8532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"5906:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8530,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:34","typeDescriptions":{}}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8515,"id":8534,"nodeType":"Return","src":"5891:21:34"}]},"documentation":{"id":8509,"nodeType":"StructuredDocumentation","src":"5416:280:34","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8536,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:34","nodeType":"FunctionDefinition","parameters":{"id":8512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8511,"mutability":"mutable","name":"value","nameLocation":"5728:5:34","nodeType":"VariableDeclaration","scope":8536,"src":"5720:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8510,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:34"},"returnParameters":{"id":8515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8536,"src":"5758:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8513,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:34","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:34"},"scope":10022,"src":"5701:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8563,"nodeType":"Block","src":"6276:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"6290:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8546,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:34","memberName":"max","nodeType":"MemberAccess","src":"6298:17:34","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8557,"nodeType":"IfStatement","src":"6286:105:34","trueBody":{"id":8556,"nodeType":"Block","src":"6317:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:34","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"6374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8551,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"6338:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8555,"nodeType":"RevertStatement","src":"6331:49:34"}]}},{"expression":{"arguments":[{"id":8560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"6415:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8558,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:34","typeDescriptions":{}}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8543,"id":8562,"nodeType":"Return","src":"6400:21:34"}]},"documentation":{"id":8537,"nodeType":"StructuredDocumentation","src":"5925:280:34","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8564,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:34","nodeType":"FunctionDefinition","parameters":{"id":8540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8539,"mutability":"mutable","name":"value","nameLocation":"6237:5:34","nodeType":"VariableDeclaration","scope":8564,"src":"6229:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:34"},"returnParameters":{"id":8543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8564,"src":"6267:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8541,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:34","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:34"},"scope":10022,"src":"6210:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8591,"nodeType":"Block","src":"6785:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"6799:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8574,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:34","memberName":"max","nodeType":"MemberAccess","src":"6807:17:34","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8585,"nodeType":"IfStatement","src":"6795:105:34","trueBody":{"id":8584,"nodeType":"Block","src":"6826:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:34","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"6883:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8579,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"6847:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8583,"nodeType":"RevertStatement","src":"6840:49:34"}]}},{"expression":{"arguments":[{"id":8588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"6924:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8586,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:34","typeDescriptions":{}}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8571,"id":8590,"nodeType":"Return","src":"6909:21:34"}]},"documentation":{"id":8565,"nodeType":"StructuredDocumentation","src":"6434:280:34","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:34","nodeType":"FunctionDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8567,"mutability":"mutable","name":"value","nameLocation":"6746:5:34","nodeType":"VariableDeclaration","scope":8592,"src":"6738:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:34"},"returnParameters":{"id":8571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8592,"src":"6776:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8569,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:34","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:34"},"scope":10022,"src":"6719:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8619,"nodeType":"Block","src":"7294:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"7308:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8602,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:34","memberName":"max","nodeType":"MemberAccess","src":"7316:17:34","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8613,"nodeType":"IfStatement","src":"7304:105:34","trueBody":{"id":8612,"nodeType":"Block","src":"7335:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:34","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"7392:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8607,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"7356:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8611,"nodeType":"RevertStatement","src":"7349:49:34"}]}},{"expression":{"arguments":[{"id":8616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"7433:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8614,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:34","typeDescriptions":{}}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8599,"id":8618,"nodeType":"Return","src":"7418:21:34"}]},"documentation":{"id":8593,"nodeType":"StructuredDocumentation","src":"6943:280:34","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:34","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8595,"mutability":"mutable","name":"value","nameLocation":"7255:5:34","nodeType":"VariableDeclaration","scope":8620,"src":"7247:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8594,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:34"},"returnParameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8620,"src":"7285:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8597,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:34","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:34"},"scope":10022,"src":"7228:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8647,"nodeType":"Block","src":"7803:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"7817:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8630,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:34","memberName":"max","nodeType":"MemberAccess","src":"7825:17:34","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8641,"nodeType":"IfStatement","src":"7813:105:34","trueBody":{"id":8640,"nodeType":"Block","src":"7844:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:34","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"7901:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8635,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"7865:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8639,"nodeType":"RevertStatement","src":"7858:49:34"}]}},{"expression":{"arguments":[{"id":8644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"7942:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8642,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:34","typeDescriptions":{}}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8627,"id":8646,"nodeType":"Return","src":"7927:21:34"}]},"documentation":{"id":8621,"nodeType":"StructuredDocumentation","src":"7452:280:34","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:34","nodeType":"FunctionDefinition","parameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8623,"mutability":"mutable","name":"value","nameLocation":"7764:5:34","nodeType":"VariableDeclaration","scope":8648,"src":"7756:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8622,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:34"},"returnParameters":{"id":8627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8648,"src":"7794:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8625,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:34","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:34"},"scope":10022,"src":"7737:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8675,"nodeType":"Block","src":"8312:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"8326:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8658,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:34","memberName":"max","nodeType":"MemberAccess","src":"8334:17:34","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8669,"nodeType":"IfStatement","src":"8322:105:34","trueBody":{"id":8668,"nodeType":"Block","src":"8353:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:34","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"8410:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8663,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"8374:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8667,"nodeType":"RevertStatement","src":"8367:49:34"}]}},{"expression":{"arguments":[{"id":8672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"8451:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8670,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:34","typeDescriptions":{}}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8655,"id":8674,"nodeType":"Return","src":"8436:21:34"}]},"documentation":{"id":8649,"nodeType":"StructuredDocumentation","src":"7961:280:34","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8676,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:34","nodeType":"FunctionDefinition","parameters":{"id":8652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8651,"mutability":"mutable","name":"value","nameLocation":"8273:5:34","nodeType":"VariableDeclaration","scope":8676,"src":"8265:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:34"},"returnParameters":{"id":8655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8676,"src":"8303:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8653,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:34","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:34"},"scope":10022,"src":"8246:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8703,"nodeType":"Block","src":"8821:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"8835:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8686,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:34","memberName":"max","nodeType":"MemberAccess","src":"8843:17:34","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8697,"nodeType":"IfStatement","src":"8831:105:34","trueBody":{"id":8696,"nodeType":"Block","src":"8862:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:34","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"8919:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8691,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"8883:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8695,"nodeType":"RevertStatement","src":"8876:49:34"}]}},{"expression":{"arguments":[{"id":8700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8679,"src":"8960:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8698,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:34","typeDescriptions":{}}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8683,"id":8702,"nodeType":"Return","src":"8945:21:34"}]},"documentation":{"id":8677,"nodeType":"StructuredDocumentation","src":"8470:280:34","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:34","nodeType":"FunctionDefinition","parameters":{"id":8680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8679,"mutability":"mutable","name":"value","nameLocation":"8782:5:34","nodeType":"VariableDeclaration","scope":8704,"src":"8774:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:34"},"returnParameters":{"id":8683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8704,"src":"8812:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8681,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:34","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:34"},"scope":10022,"src":"8755:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8731,"nodeType":"Block","src":"9330:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9344:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8714,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:34","memberName":"max","nodeType":"MemberAccess","src":"9352:17:34","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8725,"nodeType":"IfStatement","src":"9340:105:34","trueBody":{"id":8724,"nodeType":"Block","src":"9371:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:34","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9428:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8719,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"9392:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8723,"nodeType":"RevertStatement","src":"9385:49:34"}]}},{"expression":{"arguments":[{"id":8728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"9469:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8726,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:34","typeDescriptions":{}}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8711,"id":8730,"nodeType":"Return","src":"9454:21:34"}]},"documentation":{"id":8705,"nodeType":"StructuredDocumentation","src":"8979:280:34","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:34","nodeType":"FunctionDefinition","parameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8707,"mutability":"mutable","name":"value","nameLocation":"9291:5:34","nodeType":"VariableDeclaration","scope":8732,"src":"9283:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:34"},"returnParameters":{"id":8711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8732,"src":"9321:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8709,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:34","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:34"},"scope":10022,"src":"9264:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8759,"nodeType":"Block","src":"9839:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8735,"src":"9853:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8742,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:34","memberName":"max","nodeType":"MemberAccess","src":"9861:17:34","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8753,"nodeType":"IfStatement","src":"9849:105:34","trueBody":{"id":8752,"nodeType":"Block","src":"9880:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:34","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8735,"src":"9937:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8747,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"9901:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8751,"nodeType":"RevertStatement","src":"9894:49:34"}]}},{"expression":{"arguments":[{"id":8756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8735,"src":"9978:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8754,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:34","typeDescriptions":{}}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8739,"id":8758,"nodeType":"Return","src":"9963:21:34"}]},"documentation":{"id":8733,"nodeType":"StructuredDocumentation","src":"9488:280:34","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:34","nodeType":"FunctionDefinition","parameters":{"id":8736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8735,"mutability":"mutable","name":"value","nameLocation":"9800:5:34","nodeType":"VariableDeclaration","scope":8760,"src":"9792:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8734,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:34"},"returnParameters":{"id":8739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8760,"src":"9830:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8737,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:34","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:34"},"scope":10022,"src":"9773:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8787,"nodeType":"Block","src":"10348:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10362:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8770,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8769,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:34","memberName":"max","nodeType":"MemberAccess","src":"10370:17:34","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8781,"nodeType":"IfStatement","src":"10358:105:34","trueBody":{"id":8780,"nodeType":"Block","src":"10389:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:34","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10446:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8775,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"10410:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8779,"nodeType":"RevertStatement","src":"10403:49:34"}]}},{"expression":{"arguments":[{"id":8784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8763,"src":"10487:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8782,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:34","typeDescriptions":{}}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8767,"id":8786,"nodeType":"Return","src":"10472:21:34"}]},"documentation":{"id":8761,"nodeType":"StructuredDocumentation","src":"9997:280:34","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:34","nodeType":"FunctionDefinition","parameters":{"id":8764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8763,"mutability":"mutable","name":"value","nameLocation":"10309:5:34","nodeType":"VariableDeclaration","scope":8788,"src":"10301:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:34"},"returnParameters":{"id":8767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8788,"src":"10339:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8765,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:34","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:34"},"scope":10022,"src":"10282:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8815,"nodeType":"Block","src":"10857:152:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"10871:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8798,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:34","memberName":"max","nodeType":"MemberAccess","src":"10879:17:34","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8809,"nodeType":"IfStatement","src":"10867:105:34","trueBody":{"id":8808,"nodeType":"Block","src":"10898:74:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:34","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"10955:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"10919:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8807,"nodeType":"RevertStatement","src":"10912:49:34"}]}},{"expression":{"arguments":[{"id":8812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"10996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8810,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:34","typeDescriptions":{}}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8795,"id":8814,"nodeType":"Return","src":"10981:21:34"}]},"documentation":{"id":8789,"nodeType":"StructuredDocumentation","src":"10506:280:34","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:34","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"value","nameLocation":"10818:5:34","nodeType":"VariableDeclaration","scope":8816,"src":"10810:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8790,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:34"},"returnParameters":{"id":8795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8816,"src":"10848:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8793,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:34","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:34"},"scope":10022,"src":"10791:218:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8843,"nodeType":"Block","src":"11360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"11374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8826,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:34","memberName":"max","nodeType":"MemberAccess","src":"11382:16:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8837,"nodeType":"IfStatement","src":"11370:103:34","trueBody":{"id":8836,"nodeType":"Block","src":"11400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"11456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"11421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8835,"nodeType":"RevertStatement","src":"11414:48:34"}]}},{"expression":{"arguments":[{"id":8840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"11496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8838,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:34","typeDescriptions":{}}},"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8823,"id":8842,"nodeType":"Return","src":"11482:20:34"}]},"documentation":{"id":8817,"nodeType":"StructuredDocumentation","src":"11015:276:34","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:34","nodeType":"FunctionDefinition","parameters":{"id":8820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8819,"mutability":"mutable","name":"value","nameLocation":"11322:5:34","nodeType":"VariableDeclaration","scope":8844,"src":"11314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8818,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:34"},"returnParameters":{"id":8823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8844,"src":"11352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8821,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:34"},"scope":10022,"src":"11296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8871,"nodeType":"Block","src":"11860:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"11874:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8854,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:34","memberName":"max","nodeType":"MemberAccess","src":"11882:16:34","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8865,"nodeType":"IfStatement","src":"11870:103:34","trueBody":{"id":8864,"nodeType":"Block","src":"11900:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:34","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"11956:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"11921:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8863,"nodeType":"RevertStatement","src":"11914:48:34"}]}},{"expression":{"arguments":[{"id":8868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"11996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8866,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:34","typeDescriptions":{}}},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8851,"id":8870,"nodeType":"Return","src":"11982:20:34"}]},"documentation":{"id":8845,"nodeType":"StructuredDocumentation","src":"11515:276:34","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:34","nodeType":"FunctionDefinition","parameters":{"id":8848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"value","nameLocation":"11822:5:34","nodeType":"VariableDeclaration","scope":8872,"src":"11814:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:34"},"returnParameters":{"id":8851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8872,"src":"11852:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8849,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:34","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:34"},"scope":10022,"src":"11796:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8899,"nodeType":"Block","src":"12360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"12374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8882,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:34","memberName":"max","nodeType":"MemberAccess","src":"12382:16:34","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8893,"nodeType":"IfStatement","src":"12370:103:34","trueBody":{"id":8892,"nodeType":"Block","src":"12400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"12456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8887,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"12421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8891,"nodeType":"RevertStatement","src":"12414:48:34"}]}},{"expression":{"arguments":[{"id":8896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8875,"src":"12496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8894,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:34","typeDescriptions":{}}},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8879,"id":8898,"nodeType":"Return","src":"12482:20:34"}]},"documentation":{"id":8873,"nodeType":"StructuredDocumentation","src":"12015:276:34","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:34","nodeType":"FunctionDefinition","parameters":{"id":8876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8875,"mutability":"mutable","name":"value","nameLocation":"12322:5:34","nodeType":"VariableDeclaration","scope":8900,"src":"12314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8874,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:34"},"returnParameters":{"id":8879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8900,"src":"12352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8877,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:34","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:34"},"scope":10022,"src":"12296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8927,"nodeType":"Block","src":"12860:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"12874:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8910,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:34","memberName":"max","nodeType":"MemberAccess","src":"12882:16:34","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8921,"nodeType":"IfStatement","src":"12870:103:34","trueBody":{"id":8920,"nodeType":"Block","src":"12900:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:34","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"12956:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8915,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"12921:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8919,"nodeType":"RevertStatement","src":"12914:48:34"}]}},{"expression":{"arguments":[{"id":8924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"12996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8922,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:34","typeDescriptions":{}}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8907,"id":8926,"nodeType":"Return","src":"12982:20:34"}]},"documentation":{"id":8901,"nodeType":"StructuredDocumentation","src":"12515:276:34","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8928,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:34","nodeType":"FunctionDefinition","parameters":{"id":8904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8903,"mutability":"mutable","name":"value","nameLocation":"12822:5:34","nodeType":"VariableDeclaration","scope":8928,"src":"12814:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:34"},"returnParameters":{"id":8907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8928,"src":"12852:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8905,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:34","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:34"},"scope":10022,"src":"12796:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8955,"nodeType":"Block","src":"13360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"13374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8938,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:34","memberName":"max","nodeType":"MemberAccess","src":"13382:16:34","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8949,"nodeType":"IfStatement","src":"13370:103:34","trueBody":{"id":8948,"nodeType":"Block","src":"13400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"13456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8943,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"13421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8947,"nodeType":"RevertStatement","src":"13414:48:34"}]}},{"expression":{"arguments":[{"id":8952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"13496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8950,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:34","typeDescriptions":{}}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8935,"id":8954,"nodeType":"Return","src":"13482:20:34"}]},"documentation":{"id":8929,"nodeType":"StructuredDocumentation","src":"13015:276:34","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:34","nodeType":"FunctionDefinition","parameters":{"id":8932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8931,"mutability":"mutable","name":"value","nameLocation":"13322:5:34","nodeType":"VariableDeclaration","scope":8956,"src":"13314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8930,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:34"},"returnParameters":{"id":8935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8956,"src":"13352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8933,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:34","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:34"},"scope":10022,"src":"13296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8983,"nodeType":"Block","src":"13860:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"13874:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8966,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:34","memberName":"max","nodeType":"MemberAccess","src":"13882:16:34","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8977,"nodeType":"IfStatement","src":"13870:103:34","trueBody":{"id":8976,"nodeType":"Block","src":"13900:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:34","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"13956:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8971,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"13921:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8975,"nodeType":"RevertStatement","src":"13914:48:34"}]}},{"expression":{"arguments":[{"id":8980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8959,"src":"13996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8978,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:34","typeDescriptions":{}}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8963,"id":8982,"nodeType":"Return","src":"13982:20:34"}]},"documentation":{"id":8957,"nodeType":"StructuredDocumentation","src":"13515:276:34","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:34","nodeType":"FunctionDefinition","parameters":{"id":8960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8959,"mutability":"mutable","name":"value","nameLocation":"13822:5:34","nodeType":"VariableDeclaration","scope":8984,"src":"13814:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:34"},"returnParameters":{"id":8963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8984,"src":"13852:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8961,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:34","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:34"},"scope":10022,"src":"13796:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9011,"nodeType":"Block","src":"14360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"14374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8994,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8993,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:34","memberName":"max","nodeType":"MemberAccess","src":"14382:16:34","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9005,"nodeType":"IfStatement","src":"14370:103:34","trueBody":{"id":9004,"nodeType":"Block","src":"14400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"14456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8999,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"14421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9003,"nodeType":"RevertStatement","src":"14414:48:34"}]}},{"expression":{"arguments":[{"id":9008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8987,"src":"14496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9006,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:34","typeDescriptions":{}}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8991,"id":9010,"nodeType":"Return","src":"14482:20:34"}]},"documentation":{"id":8985,"nodeType":"StructuredDocumentation","src":"14015:276:34","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:34","nodeType":"FunctionDefinition","parameters":{"id":8988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8987,"mutability":"mutable","name":"value","nameLocation":"14322:5:34","nodeType":"VariableDeclaration","scope":9012,"src":"14314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8986,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:34"},"returnParameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9012,"src":"14352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8989,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:34","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:34"},"scope":10022,"src":"14296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9039,"nodeType":"Block","src":"14860:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"14874:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":9022,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":9021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":9025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:34","memberName":"max","nodeType":"MemberAccess","src":"14882:16:34","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9033,"nodeType":"IfStatement","src":"14870:103:34","trueBody":{"id":9032,"nodeType":"Block","src":"14900:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:34","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"14956:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9027,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"14921:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9031,"nodeType":"RevertStatement","src":"14914:48:34"}]}},{"expression":{"arguments":[{"id":9036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"14996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":9034,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:34","typeDescriptions":{}}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":9019,"id":9038,"nodeType":"Return","src":"14982:20:34"}]},"documentation":{"id":9013,"nodeType":"StructuredDocumentation","src":"14515:276:34","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9040,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:34","nodeType":"FunctionDefinition","parameters":{"id":9016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"mutability":"mutable","name":"value","nameLocation":"14822:5:34","nodeType":"VariableDeclaration","scope":9040,"src":"14814:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9014,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:34"},"returnParameters":{"id":9019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9040,"src":"14852:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9017,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:34","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:34"},"scope":10022,"src":"14796:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9067,"nodeType":"Block","src":"15360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9043,"src":"15374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9050,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":9049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:34","memberName":"max","nodeType":"MemberAccess","src":"15382:16:34","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9061,"nodeType":"IfStatement","src":"15370:103:34","trueBody":{"id":9060,"nodeType":"Block","src":"15400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9043,"src":"15456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9055,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"15421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9059,"nodeType":"RevertStatement","src":"15414:48:34"}]}},{"expression":{"arguments":[{"id":9064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9043,"src":"15496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9062,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:34","typeDescriptions":{}}},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9047,"id":9066,"nodeType":"Return","src":"15482:20:34"}]},"documentation":{"id":9041,"nodeType":"StructuredDocumentation","src":"15015:276:34","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9068,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:34","nodeType":"FunctionDefinition","parameters":{"id":9044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9043,"mutability":"mutable","name":"value","nameLocation":"15322:5:34","nodeType":"VariableDeclaration","scope":9068,"src":"15314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9042,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:34"},"returnParameters":{"id":9047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9068,"src":"15352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9045,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:34","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:34"},"scope":10022,"src":"15296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9095,"nodeType":"Block","src":"15860:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"15874:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9078,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":9077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:34","memberName":"max","nodeType":"MemberAccess","src":"15882:16:34","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9089,"nodeType":"IfStatement","src":"15870:103:34","trueBody":{"id":9088,"nodeType":"Block","src":"15900:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:34","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"15956:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9083,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"15921:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9087,"nodeType":"RevertStatement","src":"15914:48:34"}]}},{"expression":{"arguments":[{"id":9092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"15996:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9090,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:34","typeDescriptions":{}}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":9075,"id":9094,"nodeType":"Return","src":"15982:20:34"}]},"documentation":{"id":9069,"nodeType":"StructuredDocumentation","src":"15515:276:34","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:34","nodeType":"FunctionDefinition","parameters":{"id":9072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9071,"mutability":"mutable","name":"value","nameLocation":"15822:5:34","nodeType":"VariableDeclaration","scope":9096,"src":"15814:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9070,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:34"},"returnParameters":{"id":9075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9096,"src":"15852:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":9073,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:34","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:34"},"scope":10022,"src":"15796:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9123,"nodeType":"Block","src":"16360:149:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"16374:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9106,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":9105,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:34","memberName":"max","nodeType":"MemberAccess","src":"16382:16:34","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9117,"nodeType":"IfStatement","src":"16370:103:34","trueBody":{"id":9116,"nodeType":"Block","src":"16400:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:34","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"16456:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9111,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"16421:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9115,"nodeType":"RevertStatement","src":"16414:48:34"}]}},{"expression":{"arguments":[{"id":9120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9099,"src":"16496:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9118,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:34","typeDescriptions":{}}},"id":9121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9103,"id":9122,"nodeType":"Return","src":"16482:20:34"}]},"documentation":{"id":9097,"nodeType":"StructuredDocumentation","src":"16015:276:34","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9124,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:34","nodeType":"FunctionDefinition","parameters":{"id":9100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9099,"mutability":"mutable","name":"value","nameLocation":"16322:5:34","nodeType":"VariableDeclaration","scope":9124,"src":"16314:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9098,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:34"},"returnParameters":{"id":9103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9124,"src":"16352:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9101,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:34","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:34"},"scope":10022,"src":"16296:213:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9151,"nodeType":"Block","src":"16854:146:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"16868:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9134,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":9133,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":9137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:34","memberName":"max","nodeType":"MemberAccess","src":"16876:15:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9145,"nodeType":"IfStatement","src":"16864:101:34","trueBody":{"id":9144,"nodeType":"Block","src":"16893:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:34","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"16948:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9139,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"16914:30:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9143,"nodeType":"RevertStatement","src":"16907:47:34"}]}},{"expression":{"arguments":[{"id":9148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"16987:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9146,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:34","typeDescriptions":{}}},"id":9149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9131,"id":9150,"nodeType":"Return","src":"16974:19:34"}]},"documentation":{"id":9125,"nodeType":"StructuredDocumentation","src":"16515:272:34","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:34","nodeType":"FunctionDefinition","parameters":{"id":9128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9127,"mutability":"mutable","name":"value","nameLocation":"16817:5:34","nodeType":"VariableDeclaration","scope":9152,"src":"16809:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9126,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:34"},"returnParameters":{"id":9131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9152,"src":"16847:5:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9129,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:34"},"scope":10022,"src":"16792:208:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9174,"nodeType":"Block","src":"17236:128:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"17250:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":9161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9168,"nodeType":"IfStatement","src":"17246:81:34","trueBody":{"id":9167,"nodeType":"Block","src":"17261:66:34","statements":[{"errorCall":{"arguments":[{"id":9164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"17310:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9163,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"17282:27:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9166,"nodeType":"RevertStatement","src":"17275:41:34"}]}},{"expression":{"arguments":[{"id":9171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"17351:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9169,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:34","typeDescriptions":{}}},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9159,"id":9173,"nodeType":"Return","src":"17336:21:34"}]},"documentation":{"id":9153,"nodeType":"StructuredDocumentation","src":"17006:160:34","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":9175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:34","nodeType":"FunctionDefinition","parameters":{"id":9156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9155,"mutability":"mutable","name":"value","nameLocation":"17197:5:34","nodeType":"VariableDeclaration","scope":9175,"src":"17190:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9154,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:34"},"returnParameters":{"id":9159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9175,"src":"17227:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9157,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:34"},"scope":10022,"src":"17171:193:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9200,"nodeType":"Block","src":"17761:150:34","statements":[{"expression":{"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"17771:10:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"17791:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":9184,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:34","typeDescriptions":{}}},"id":9187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":9189,"nodeType":"ExpressionStatement","src":"17771:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"17811:10:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"17825:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9199,"nodeType":"IfStatement","src":"17807:98:34","trueBody":{"id":9198,"nodeType":"Block","src":"17832:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":9194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:34","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":9195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9178,"src":"17888:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"17853:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9197,"nodeType":"RevertStatement","src":"17846:48:34"}]}}]},"documentation":{"id":9176,"nodeType":"StructuredDocumentation","src":"17370:312:34","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":9201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:34","nodeType":"FunctionDefinition","parameters":{"id":9179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9178,"mutability":"mutable","name":"value","nameLocation":"17712:5:34","nodeType":"VariableDeclaration","scope":9201,"src":"17705:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9177,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:34"},"returnParameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:34","nodeType":"VariableDeclaration","scope":9201,"src":"17742:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":9180,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:34","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:34"},"scope":10022,"src":"17687:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9226,"nodeType":"Block","src":"18308:150:34","statements":[{"expression":{"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"18318:10:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"18338:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":9210,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:34","typeDescriptions":{}}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":9215,"nodeType":"ExpressionStatement","src":"18318:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"18358:10:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"18372:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9225,"nodeType":"IfStatement","src":"18354:98:34","trueBody":{"id":9224,"nodeType":"Block","src":"18379:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":9220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:34","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":9221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"18435:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"18400:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9223,"nodeType":"RevertStatement","src":"18393:48:34"}]}}]},"documentation":{"id":9202,"nodeType":"StructuredDocumentation","src":"17917:312:34","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":9227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:34","nodeType":"FunctionDefinition","parameters":{"id":9205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"mutability":"mutable","name":"value","nameLocation":"18259:5:34","nodeType":"VariableDeclaration","scope":9227,"src":"18252:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9203,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:34"},"returnParameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9207,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:34","nodeType":"VariableDeclaration","scope":9227,"src":"18289:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":9206,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:34","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:34"},"scope":10022,"src":"18234:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9252,"nodeType":"Block","src":"18855:150:34","statements":[{"expression":{"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"18865:10:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"18885:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":9236,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:34","typeDescriptions":{}}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":9241,"nodeType":"ExpressionStatement","src":"18865:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"18905:10:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"18919:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9251,"nodeType":"IfStatement","src":"18901:98:34","trueBody":{"id":9250,"nodeType":"Block","src":"18926:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":9246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:34","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":9247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"18982:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"18947:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9249,"nodeType":"RevertStatement","src":"18940:48:34"}]}}]},"documentation":{"id":9228,"nodeType":"StructuredDocumentation","src":"18464:312:34","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":9253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:34","nodeType":"FunctionDefinition","parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"value","nameLocation":"18806:5:34","nodeType":"VariableDeclaration","scope":9253,"src":"18799:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9229,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:34"},"returnParameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:34","nodeType":"VariableDeclaration","scope":9253,"src":"18836:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":9232,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:34","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:34"},"scope":10022,"src":"18781:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9278,"nodeType":"Block","src":"19402:150:34","statements":[{"expression":{"id":9266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"19412:10:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"19432:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":9262,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:34","typeDescriptions":{}}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":9267,"nodeType":"ExpressionStatement","src":"19412:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"19452:10:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"19466:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9277,"nodeType":"IfStatement","src":"19448:98:34","trueBody":{"id":9276,"nodeType":"Block","src":"19473:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":9272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:34","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":9273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"19529:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"19494:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9275,"nodeType":"RevertStatement","src":"19487:48:34"}]}}]},"documentation":{"id":9254,"nodeType":"StructuredDocumentation","src":"19011:312:34","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":9279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:34","nodeType":"FunctionDefinition","parameters":{"id":9257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9256,"mutability":"mutable","name":"value","nameLocation":"19353:5:34","nodeType":"VariableDeclaration","scope":9279,"src":"19346:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9255,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:34"},"returnParameters":{"id":9260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9259,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:34","nodeType":"VariableDeclaration","scope":9279,"src":"19383:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":9258,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:34","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:34"},"scope":10022,"src":"19328:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9304,"nodeType":"Block","src":"19949:150:34","statements":[{"expression":{"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"19959:10:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"19979:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":9288,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:34","typeDescriptions":{}}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":9293,"nodeType":"ExpressionStatement","src":"19959:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"19999:10:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"20013:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9303,"nodeType":"IfStatement","src":"19995:98:34","trueBody":{"id":9302,"nodeType":"Block","src":"20020:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":9298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:34","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":9299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"20076:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"20041:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9301,"nodeType":"RevertStatement","src":"20034:48:34"}]}}]},"documentation":{"id":9280,"nodeType":"StructuredDocumentation","src":"19558:312:34","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":9305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:34","nodeType":"FunctionDefinition","parameters":{"id":9283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"mutability":"mutable","name":"value","nameLocation":"19900:5:34","nodeType":"VariableDeclaration","scope":9305,"src":"19893:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9281,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:34"},"returnParameters":{"id":9286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9285,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:34","nodeType":"VariableDeclaration","scope":9305,"src":"19930:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":9284,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:34","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:34"},"scope":10022,"src":"19875:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9330,"nodeType":"Block","src":"20496:150:34","statements":[{"expression":{"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"20506:10:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"20526:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":9314,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:34","typeDescriptions":{}}},"id":9317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":9319,"nodeType":"ExpressionStatement","src":"20506:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"20546:10:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"20560:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9329,"nodeType":"IfStatement","src":"20542:98:34","trueBody":{"id":9328,"nodeType":"Block","src":"20567:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":9324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:34","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":9325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"20623:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"20588:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9327,"nodeType":"RevertStatement","src":"20581:48:34"}]}}]},"documentation":{"id":9306,"nodeType":"StructuredDocumentation","src":"20105:312:34","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":9331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:34","nodeType":"FunctionDefinition","parameters":{"id":9309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9308,"mutability":"mutable","name":"value","nameLocation":"20447:5:34","nodeType":"VariableDeclaration","scope":9331,"src":"20440:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9307,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:34"},"returnParameters":{"id":9312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:34","nodeType":"VariableDeclaration","scope":9331,"src":"20477:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":9310,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:34","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:34"},"scope":10022,"src":"20422:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9356,"nodeType":"Block","src":"21043:150:34","statements":[{"expression":{"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"21053:10:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"21073:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":9340,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:34","typeDescriptions":{}}},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":9345,"nodeType":"ExpressionStatement","src":"21053:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"21093:10:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"21107:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9355,"nodeType":"IfStatement","src":"21089:98:34","trueBody":{"id":9354,"nodeType":"Block","src":"21114:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":9350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:34","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":9351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9334,"src":"21170:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"21135:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9353,"nodeType":"RevertStatement","src":"21128:48:34"}]}}]},"documentation":{"id":9332,"nodeType":"StructuredDocumentation","src":"20652:312:34","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":9357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:34","nodeType":"FunctionDefinition","parameters":{"id":9335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9334,"mutability":"mutable","name":"value","nameLocation":"20994:5:34","nodeType":"VariableDeclaration","scope":9357,"src":"20987:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9333,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:34"},"returnParameters":{"id":9338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:34","nodeType":"VariableDeclaration","scope":9357,"src":"21024:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":9336,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:34","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:34"},"scope":10022,"src":"20969:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9382,"nodeType":"Block","src":"21590:150:34","statements":[{"expression":{"id":9370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"21600:10:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"21620:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":9366,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:34","typeDescriptions":{}}},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":9371,"nodeType":"ExpressionStatement","src":"21600:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"21640:10:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"21654:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9381,"nodeType":"IfStatement","src":"21636:98:34","trueBody":{"id":9380,"nodeType":"Block","src":"21661:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:34","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9360,"src":"21717:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"21682:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9379,"nodeType":"RevertStatement","src":"21675:48:34"}]}}]},"documentation":{"id":9358,"nodeType":"StructuredDocumentation","src":"21199:312:34","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:34","nodeType":"FunctionDefinition","parameters":{"id":9361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9360,"mutability":"mutable","name":"value","nameLocation":"21541:5:34","nodeType":"VariableDeclaration","scope":9383,"src":"21534:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9359,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:34"},"returnParameters":{"id":9364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:34","nodeType":"VariableDeclaration","scope":9383,"src":"21571:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":9362,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:34","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:34"},"scope":10022,"src":"21516:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9408,"nodeType":"Block","src":"22137:150:34","statements":[{"expression":{"id":9396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"22147:10:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"22167:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9392,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:34","typeDescriptions":{}}},"id":9395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9397,"nodeType":"ExpressionStatement","src":"22147:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"22187:10:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"22201:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9407,"nodeType":"IfStatement","src":"22183:98:34","trueBody":{"id":9406,"nodeType":"Block","src":"22208:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:34","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"22264:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"22229:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9405,"nodeType":"RevertStatement","src":"22222:48:34"}]}}]},"documentation":{"id":9384,"nodeType":"StructuredDocumentation","src":"21746:312:34","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:34","nodeType":"FunctionDefinition","parameters":{"id":9387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9386,"mutability":"mutable","name":"value","nameLocation":"22088:5:34","nodeType":"VariableDeclaration","scope":9409,"src":"22081:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9385,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:34"},"returnParameters":{"id":9390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9389,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:34","nodeType":"VariableDeclaration","scope":9409,"src":"22118:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9388,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:34","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:34"},"scope":10022,"src":"22063:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9434,"nodeType":"Block","src":"22684:150:34","statements":[{"expression":{"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"22694:10:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"22714:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9418,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:34","typeDescriptions":{}}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9423,"nodeType":"ExpressionStatement","src":"22694:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"22734:10:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"22748:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9433,"nodeType":"IfStatement","src":"22730:98:34","trueBody":{"id":9432,"nodeType":"Block","src":"22755:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:34","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9412,"src":"22811:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"22776:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9431,"nodeType":"RevertStatement","src":"22769:48:34"}]}}]},"documentation":{"id":9410,"nodeType":"StructuredDocumentation","src":"22293:312:34","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:34","nodeType":"FunctionDefinition","parameters":{"id":9413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9412,"mutability":"mutable","name":"value","nameLocation":"22635:5:34","nodeType":"VariableDeclaration","scope":9435,"src":"22628:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9411,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:34"},"returnParameters":{"id":9416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9415,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:34","nodeType":"VariableDeclaration","scope":9435,"src":"22665:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9414,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:34","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:34"},"scope":10022,"src":"22610:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9460,"nodeType":"Block","src":"23231:150:34","statements":[{"expression":{"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"23241:10:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"23261:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9444,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:34","typeDescriptions":{}}},"id":9447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9449,"nodeType":"ExpressionStatement","src":"23241:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"23281:10:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"23295:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9459,"nodeType":"IfStatement","src":"23277:98:34","trueBody":{"id":9458,"nodeType":"Block","src":"23302:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:34","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"23358:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"23323:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9457,"nodeType":"RevertStatement","src":"23316:48:34"}]}}]},"documentation":{"id":9436,"nodeType":"StructuredDocumentation","src":"22840:312:34","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:34","nodeType":"FunctionDefinition","parameters":{"id":9439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9438,"mutability":"mutable","name":"value","nameLocation":"23182:5:34","nodeType":"VariableDeclaration","scope":9461,"src":"23175:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9437,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:34"},"returnParameters":{"id":9442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:34","nodeType":"VariableDeclaration","scope":9461,"src":"23212:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9440,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:34","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:34"},"scope":10022,"src":"23157:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9486,"nodeType":"Block","src":"23778:150:34","statements":[{"expression":{"id":9474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"23788:10:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"23808:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9470,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:34","typeDescriptions":{}}},"id":9473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9475,"nodeType":"ExpressionStatement","src":"23788:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"23828:10:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"23842:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9485,"nodeType":"IfStatement","src":"23824:98:34","trueBody":{"id":9484,"nodeType":"Block","src":"23849:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:34","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"23905:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"23870:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9483,"nodeType":"RevertStatement","src":"23863:48:34"}]}}]},"documentation":{"id":9462,"nodeType":"StructuredDocumentation","src":"23387:312:34","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:34","nodeType":"FunctionDefinition","parameters":{"id":9465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9464,"mutability":"mutable","name":"value","nameLocation":"23729:5:34","nodeType":"VariableDeclaration","scope":9487,"src":"23722:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9463,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:34"},"returnParameters":{"id":9468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9467,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:34","nodeType":"VariableDeclaration","scope":9487,"src":"23759:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9466,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:34","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:34"},"scope":10022,"src":"23704:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9512,"nodeType":"Block","src":"24325:150:34","statements":[{"expression":{"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9493,"src":"24335:10:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"24355:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9496,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:34","typeDescriptions":{}}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9501,"nodeType":"ExpressionStatement","src":"24335:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9493,"src":"24375:10:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"24389:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9511,"nodeType":"IfStatement","src":"24371:98:34","trueBody":{"id":9510,"nodeType":"Block","src":"24396:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:34","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"24452:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"24417:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9509,"nodeType":"RevertStatement","src":"24410:48:34"}]}}]},"documentation":{"id":9488,"nodeType":"StructuredDocumentation","src":"23934:312:34","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:34","nodeType":"FunctionDefinition","parameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"mutability":"mutable","name":"value","nameLocation":"24276:5:34","nodeType":"VariableDeclaration","scope":9513,"src":"24269:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9489,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:34"},"returnParameters":{"id":9494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9493,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:34","nodeType":"VariableDeclaration","scope":9513,"src":"24306:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9492,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:34","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:34"},"scope":10022,"src":"24251:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9538,"nodeType":"Block","src":"24872:150:34","statements":[{"expression":{"id":9526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"24882:10:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"24902:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9522,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:34","typeDescriptions":{}}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9527,"nodeType":"ExpressionStatement","src":"24882:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"24922:10:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"24936:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9537,"nodeType":"IfStatement","src":"24918:98:34","trueBody":{"id":9536,"nodeType":"Block","src":"24943:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:34","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"24999:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"24964:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9535,"nodeType":"RevertStatement","src":"24957:48:34"}]}}]},"documentation":{"id":9514,"nodeType":"StructuredDocumentation","src":"24481:312:34","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:34","nodeType":"FunctionDefinition","parameters":{"id":9517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9516,"mutability":"mutable","name":"value","nameLocation":"24823:5:34","nodeType":"VariableDeclaration","scope":9539,"src":"24816:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9515,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:34"},"returnParameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:34","nodeType":"VariableDeclaration","scope":9539,"src":"24853:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9518,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:34","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:34"},"scope":10022,"src":"24798:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9564,"nodeType":"Block","src":"25419:150:34","statements":[{"expression":{"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"25429:10:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"25449:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9548,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:34","typeDescriptions":{}}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9553,"nodeType":"ExpressionStatement","src":"25429:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"25469:10:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"25483:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9563,"nodeType":"IfStatement","src":"25465:98:34","trueBody":{"id":9562,"nodeType":"Block","src":"25490:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:34","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9542,"src":"25546:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"25511:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9561,"nodeType":"RevertStatement","src":"25504:48:34"}]}}]},"documentation":{"id":9540,"nodeType":"StructuredDocumentation","src":"25028:312:34","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:34","nodeType":"FunctionDefinition","parameters":{"id":9543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9542,"mutability":"mutable","name":"value","nameLocation":"25370:5:34","nodeType":"VariableDeclaration","scope":9565,"src":"25363:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9541,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:34"},"returnParameters":{"id":9546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9545,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:34","nodeType":"VariableDeclaration","scope":9565,"src":"25400:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9544,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:34","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:34"},"scope":10022,"src":"25345:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9590,"nodeType":"Block","src":"25966:150:34","statements":[{"expression":{"id":9578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"25976:10:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"25996:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9574,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:34","typeDescriptions":{}}},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9579,"nodeType":"ExpressionStatement","src":"25976:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"26016:10:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"26030:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9589,"nodeType":"IfStatement","src":"26012:98:34","trueBody":{"id":9588,"nodeType":"Block","src":"26037:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:34","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9568,"src":"26093:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"26058:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9587,"nodeType":"RevertStatement","src":"26051:48:34"}]}}]},"documentation":{"id":9566,"nodeType":"StructuredDocumentation","src":"25575:312:34","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:34","nodeType":"FunctionDefinition","parameters":{"id":9569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9568,"mutability":"mutable","name":"value","nameLocation":"25917:5:34","nodeType":"VariableDeclaration","scope":9591,"src":"25910:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9567,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:34"},"returnParameters":{"id":9572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9571,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:34","nodeType":"VariableDeclaration","scope":9591,"src":"25947:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9570,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:34","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:34"},"scope":10022,"src":"25892:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9616,"nodeType":"Block","src":"26513:150:34","statements":[{"expression":{"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"26523:10:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9594,"src":"26543:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9600,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:34","typeDescriptions":{}}},"id":9603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9605,"nodeType":"ExpressionStatement","src":"26523:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"26563:10:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9594,"src":"26577:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9615,"nodeType":"IfStatement","src":"26559:98:34","trueBody":{"id":9614,"nodeType":"Block","src":"26584:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:34","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9594,"src":"26640:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"26605:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9613,"nodeType":"RevertStatement","src":"26598:48:34"}]}}]},"documentation":{"id":9592,"nodeType":"StructuredDocumentation","src":"26122:312:34","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:34","nodeType":"FunctionDefinition","parameters":{"id":9595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9594,"mutability":"mutable","name":"value","nameLocation":"26464:5:34","nodeType":"VariableDeclaration","scope":9617,"src":"26457:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9593,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:34"},"returnParameters":{"id":9598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9597,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:34","nodeType":"VariableDeclaration","scope":9617,"src":"26494:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9596,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:34","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:34"},"scope":10022,"src":"26439:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9642,"nodeType":"Block","src":"27060:150:34","statements":[{"expression":{"id":9630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"27070:10:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"27090:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9626,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:34","typeDescriptions":{}}},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9631,"nodeType":"ExpressionStatement","src":"27070:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"27110:10:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"27124:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9641,"nodeType":"IfStatement","src":"27106:98:34","trueBody":{"id":9640,"nodeType":"Block","src":"27131:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:34","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"27187:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"27152:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9639,"nodeType":"RevertStatement","src":"27145:48:34"}]}}]},"documentation":{"id":9618,"nodeType":"StructuredDocumentation","src":"26669:312:34","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:34","nodeType":"FunctionDefinition","parameters":{"id":9621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9620,"mutability":"mutable","name":"value","nameLocation":"27011:5:34","nodeType":"VariableDeclaration","scope":9643,"src":"27004:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9619,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:34"},"returnParameters":{"id":9624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9623,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:34","nodeType":"VariableDeclaration","scope":9643,"src":"27041:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9622,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:34","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:34"},"scope":10022,"src":"26986:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9668,"nodeType":"Block","src":"27607:150:34","statements":[{"expression":{"id":9656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"27617:10:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"27637:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9652,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:34","typeDescriptions":{}}},"id":9655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9657,"nodeType":"ExpressionStatement","src":"27617:26:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"27657:10:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"27671:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9667,"nodeType":"IfStatement","src":"27653:98:34","trueBody":{"id":9666,"nodeType":"Block","src":"27678:73:34","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:34","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"27734:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"27699:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9665,"nodeType":"RevertStatement","src":"27692:48:34"}]}}]},"documentation":{"id":9644,"nodeType":"StructuredDocumentation","src":"27216:312:34","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:34","nodeType":"FunctionDefinition","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9646,"mutability":"mutable","name":"value","nameLocation":"27558:5:34","nodeType":"VariableDeclaration","scope":9669,"src":"27551:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9645,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:34"},"returnParameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:34","nodeType":"VariableDeclaration","scope":9669,"src":"27588:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9648,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:34","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:34"},"scope":10022,"src":"27533:224:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9694,"nodeType":"Block","src":"28147:148:34","statements":[{"expression":{"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"28157:10:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"28176:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9678,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:34","typeDescriptions":{}}},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9683,"nodeType":"ExpressionStatement","src":"28157:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"28196:10:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"28210:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9693,"nodeType":"IfStatement","src":"28192:97:34","trueBody":{"id":9692,"nodeType":"Block","src":"28217:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:34","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"28272:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"28238:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9691,"nodeType":"RevertStatement","src":"28231:47:34"}]}}]},"documentation":{"id":9670,"nodeType":"StructuredDocumentation","src":"27763:307:34","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:34","nodeType":"FunctionDefinition","parameters":{"id":9673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9672,"mutability":"mutable","name":"value","nameLocation":"28099:5:34","nodeType":"VariableDeclaration","scope":9695,"src":"28092:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9671,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:34"},"returnParameters":{"id":9676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9675,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:34","nodeType":"VariableDeclaration","scope":9695,"src":"28129:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9674,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:34","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:34"},"scope":10022,"src":"28075:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9720,"nodeType":"Block","src":"28685:148:34","statements":[{"expression":{"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"28695:10:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9698,"src":"28714:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9704,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:34","typeDescriptions":{}}},"id":9707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9709,"nodeType":"ExpressionStatement","src":"28695:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"28734:10:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9698,"src":"28748:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9719,"nodeType":"IfStatement","src":"28730:97:34","trueBody":{"id":9718,"nodeType":"Block","src":"28755:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:34","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9698,"src":"28810:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"28776:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9717,"nodeType":"RevertStatement","src":"28769:47:34"}]}}]},"documentation":{"id":9696,"nodeType":"StructuredDocumentation","src":"28301:307:34","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:34","nodeType":"FunctionDefinition","parameters":{"id":9699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9698,"mutability":"mutable","name":"value","nameLocation":"28637:5:34","nodeType":"VariableDeclaration","scope":9721,"src":"28630:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9697,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:34"},"returnParameters":{"id":9702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9701,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:34","nodeType":"VariableDeclaration","scope":9721,"src":"28667:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9700,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:34","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:34"},"scope":10022,"src":"28613:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9746,"nodeType":"Block","src":"29223:148:34","statements":[{"expression":{"id":9734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"29233:10:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"29252:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9730,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:34","typeDescriptions":{}}},"id":9733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9735,"nodeType":"ExpressionStatement","src":"29233:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"29272:10:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"29286:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9745,"nodeType":"IfStatement","src":"29268:97:34","trueBody":{"id":9744,"nodeType":"Block","src":"29293:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:34","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"29348:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"29314:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9743,"nodeType":"RevertStatement","src":"29307:47:34"}]}}]},"documentation":{"id":9722,"nodeType":"StructuredDocumentation","src":"28839:307:34","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:34","nodeType":"FunctionDefinition","parameters":{"id":9725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9724,"mutability":"mutable","name":"value","nameLocation":"29175:5:34","nodeType":"VariableDeclaration","scope":9747,"src":"29168:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9723,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:34"},"returnParameters":{"id":9728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9727,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:34","nodeType":"VariableDeclaration","scope":9747,"src":"29205:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9726,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:34","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:34"},"scope":10022,"src":"29151:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9772,"nodeType":"Block","src":"29761:148:34","statements":[{"expression":{"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"29771:10:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"29790:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9756,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:34","typeDescriptions":{}}},"id":9759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9761,"nodeType":"ExpressionStatement","src":"29771:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"29810:10:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"29824:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9771,"nodeType":"IfStatement","src":"29806:97:34","trueBody":{"id":9770,"nodeType":"Block","src":"29831:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:34","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"29886:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"29852:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9769,"nodeType":"RevertStatement","src":"29845:47:34"}]}}]},"documentation":{"id":9748,"nodeType":"StructuredDocumentation","src":"29377:307:34","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:34","nodeType":"FunctionDefinition","parameters":{"id":9751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9750,"mutability":"mutable","name":"value","nameLocation":"29713:5:34","nodeType":"VariableDeclaration","scope":9773,"src":"29706:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9749,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:34"},"returnParameters":{"id":9754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9753,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:34","nodeType":"VariableDeclaration","scope":9773,"src":"29743:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9752,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:34","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:34"},"scope":10022,"src":"29689:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9798,"nodeType":"Block","src":"30299:148:34","statements":[{"expression":{"id":9786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"30309:10:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"30328:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9782,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:34","typeDescriptions":{}}},"id":9785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9787,"nodeType":"ExpressionStatement","src":"30309:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"30348:10:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"30362:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9797,"nodeType":"IfStatement","src":"30344:97:34","trueBody":{"id":9796,"nodeType":"Block","src":"30369:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:34","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"30424:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"30390:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9795,"nodeType":"RevertStatement","src":"30383:47:34"}]}}]},"documentation":{"id":9774,"nodeType":"StructuredDocumentation","src":"29915:307:34","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:34","nodeType":"FunctionDefinition","parameters":{"id":9777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9776,"mutability":"mutable","name":"value","nameLocation":"30251:5:34","nodeType":"VariableDeclaration","scope":9799,"src":"30244:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9775,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:34"},"returnParameters":{"id":9780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9779,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:34","nodeType":"VariableDeclaration","scope":9799,"src":"30281:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9778,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:34","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:34"},"scope":10022,"src":"30227:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9824,"nodeType":"Block","src":"30837:148:34","statements":[{"expression":{"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"30847:10:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9802,"src":"30866:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9808,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:34","typeDescriptions":{}}},"id":9811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9813,"nodeType":"ExpressionStatement","src":"30847:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"30886:10:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9802,"src":"30900:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9823,"nodeType":"IfStatement","src":"30882:97:34","trueBody":{"id":9822,"nodeType":"Block","src":"30907:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:34","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9802,"src":"30962:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"30928:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9821,"nodeType":"RevertStatement","src":"30921:47:34"}]}}]},"documentation":{"id":9800,"nodeType":"StructuredDocumentation","src":"30453:307:34","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:34","nodeType":"FunctionDefinition","parameters":{"id":9803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9802,"mutability":"mutable","name":"value","nameLocation":"30789:5:34","nodeType":"VariableDeclaration","scope":9825,"src":"30782:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9801,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:34"},"returnParameters":{"id":9806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9805,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:34","nodeType":"VariableDeclaration","scope":9825,"src":"30819:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9804,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:34","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:34"},"scope":10022,"src":"30765:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9850,"nodeType":"Block","src":"31375:148:34","statements":[{"expression":{"id":9838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"31385:10:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"31404:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9834,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:34","typeDescriptions":{}}},"id":9837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9839,"nodeType":"ExpressionStatement","src":"31385:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"31424:10:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"31438:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9849,"nodeType":"IfStatement","src":"31420:97:34","trueBody":{"id":9848,"nodeType":"Block","src":"31445:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:34","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"31500:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9843,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"31466:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9847,"nodeType":"RevertStatement","src":"31459:47:34"}]}}]},"documentation":{"id":9826,"nodeType":"StructuredDocumentation","src":"30991:307:34","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9851,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:34","nodeType":"FunctionDefinition","parameters":{"id":9829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9828,"mutability":"mutable","name":"value","nameLocation":"31327:5:34","nodeType":"VariableDeclaration","scope":9851,"src":"31320:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9827,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:34"},"returnParameters":{"id":9832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9831,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:34","nodeType":"VariableDeclaration","scope":9851,"src":"31357:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9830,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:34","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:34"},"scope":10022,"src":"31303:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9876,"nodeType":"Block","src":"31913:148:34","statements":[{"expression":{"id":9864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"31923:10:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"31942:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9860,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:34","typeDescriptions":{}}},"id":9863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9865,"nodeType":"ExpressionStatement","src":"31923:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9866,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"31962:10:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"31976:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9875,"nodeType":"IfStatement","src":"31958:97:34","trueBody":{"id":9874,"nodeType":"Block","src":"31983:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:34","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"32038:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9869,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"32004:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9873,"nodeType":"RevertStatement","src":"31997:47:34"}]}}]},"documentation":{"id":9852,"nodeType":"StructuredDocumentation","src":"31529:307:34","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9877,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:34","nodeType":"FunctionDefinition","parameters":{"id":9855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9854,"mutability":"mutable","name":"value","nameLocation":"31865:5:34","nodeType":"VariableDeclaration","scope":9877,"src":"31858:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9853,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:34"},"returnParameters":{"id":9858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9857,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:34","nodeType":"VariableDeclaration","scope":9877,"src":"31895:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9856,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:34","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:34"},"scope":10022,"src":"31841:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9902,"nodeType":"Block","src":"32451:148:34","statements":[{"expression":{"id":9890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"32461:10:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"32480:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9886,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:34","typeDescriptions":{}}},"id":9889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9891,"nodeType":"ExpressionStatement","src":"32461:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9892,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"32500:10:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"32514:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9901,"nodeType":"IfStatement","src":"32496:97:34","trueBody":{"id":9900,"nodeType":"Block","src":"32521:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:34","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"32576:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9895,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"32542:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9899,"nodeType":"RevertStatement","src":"32535:47:34"}]}}]},"documentation":{"id":9878,"nodeType":"StructuredDocumentation","src":"32067:307:34","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9903,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:34","nodeType":"FunctionDefinition","parameters":{"id":9881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9880,"mutability":"mutable","name":"value","nameLocation":"32403:5:34","nodeType":"VariableDeclaration","scope":9903,"src":"32396:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9879,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:34"},"returnParameters":{"id":9884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9883,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:34","nodeType":"VariableDeclaration","scope":9903,"src":"32433:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9882,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:34","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:34"},"scope":10022,"src":"32379:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9928,"nodeType":"Block","src":"32989:148:34","statements":[{"expression":{"id":9916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"32999:10:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"33018:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9912,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:34","typeDescriptions":{}}},"id":9915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9917,"nodeType":"ExpressionStatement","src":"32999:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9918,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"33038:10:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"33052:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9927,"nodeType":"IfStatement","src":"33034:97:34","trueBody":{"id":9926,"nodeType":"Block","src":"33059:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:34","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"33114:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9921,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"33080:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9925,"nodeType":"RevertStatement","src":"33073:47:34"}]}}]},"documentation":{"id":9904,"nodeType":"StructuredDocumentation","src":"32605:307:34","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:34","nodeType":"FunctionDefinition","parameters":{"id":9907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9906,"mutability":"mutable","name":"value","nameLocation":"32941:5:34","nodeType":"VariableDeclaration","scope":9929,"src":"32934:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9905,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:34"},"returnParameters":{"id":9910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9909,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:34","nodeType":"VariableDeclaration","scope":9929,"src":"32971:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9908,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:34","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:34"},"scope":10022,"src":"32917:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9954,"nodeType":"Block","src":"33527:148:34","statements":[{"expression":{"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"33537:10:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"33556:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9938,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:34","typeDescriptions":{}}},"id":9941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9943,"nodeType":"ExpressionStatement","src":"33537:25:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9944,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"33576:10:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"33590:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9953,"nodeType":"IfStatement","src":"33572:97:34","trueBody":{"id":9952,"nodeType":"Block","src":"33597:72:34","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:34","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"33652:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9947,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"33618:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9951,"nodeType":"RevertStatement","src":"33611:47:34"}]}}]},"documentation":{"id":9930,"nodeType":"StructuredDocumentation","src":"33143:307:34","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:34","nodeType":"FunctionDefinition","parameters":{"id":9933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9932,"mutability":"mutable","name":"value","nameLocation":"33479:5:34","nodeType":"VariableDeclaration","scope":9955,"src":"33472:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9931,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:34"},"returnParameters":{"id":9936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9935,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:34","nodeType":"VariableDeclaration","scope":9955,"src":"33509:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9934,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:34","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:34"},"scope":10022,"src":"33455:220:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9980,"nodeType":"Block","src":"34058:146:34","statements":[{"expression":{"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"34068:10:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"34086:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9964,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:34","typeDescriptions":{}}},"id":9967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9969,"nodeType":"ExpressionStatement","src":"34068:24:34"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9970,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"34106:10:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"34120:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9979,"nodeType":"IfStatement","src":"34102:96:34","trueBody":{"id":9978,"nodeType":"Block","src":"34127:71:34","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:34","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"34181:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9973,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"34148:29:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9977,"nodeType":"RevertStatement","src":"34141:46:34"}]}}]},"documentation":{"id":9956,"nodeType":"StructuredDocumentation","src":"33681:302:34","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9981,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:34","nodeType":"FunctionDefinition","parameters":{"id":9959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9958,"mutability":"mutable","name":"value","nameLocation":"34011:5:34","nodeType":"VariableDeclaration","scope":9981,"src":"34004:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9957,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:34"},"returnParameters":{"id":9962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9961,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:34","nodeType":"VariableDeclaration","scope":9981,"src":"34041:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9960,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:34","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:34"},"scope":10022,"src":"33988:216:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10010,"nodeType":"Block","src":"34444:250:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9984,"src":"34557:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9993,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:34","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:34","memberName":"max","nodeType":"MemberAccess","src":"34573:16:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9990,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:34","typeDescriptions":{}}},"id":9997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10004,"nodeType":"IfStatement","src":"34553:105:34","trueBody":{"id":10003,"nodeType":"Block","src":"34592:66:34","statements":[{"errorCall":{"arguments":[{"id":10000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9984,"src":"34641:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9999,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8284,"src":"34613:27:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":10001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10002,"nodeType":"RevertStatement","src":"34606:41:34"}]}},{"expression":{"arguments":[{"id":10007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9984,"src":"34681:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10005,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:34","typeDescriptions":{}}},"id":10008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9988,"id":10009,"nodeType":"Return","src":"34667:20:34"}]},"documentation":{"id":9982,"nodeType":"StructuredDocumentation","src":"34210:165:34","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":10011,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:34","nodeType":"FunctionDefinition","parameters":{"id":9985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9984,"mutability":"mutable","name":"value","nameLocation":"34406:5:34","nodeType":"VariableDeclaration","scope":10011,"src":"34398:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9983,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:34"},"returnParameters":{"id":9988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10011,"src":"34436:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9986,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:34"},"scope":10022,"src":"34380:314:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10020,"nodeType":"Block","src":"34853:87:34","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:34","statements":[{"nodeType":"YulAssignment","src":"34902:22:34","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:34"},"nodeType":"YulFunctionCall","src":"34914:9:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:34"},"nodeType":"YulFunctionCall","src":"34907:17:34"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10014,"isOffset":false,"isSlot":false,"src":"34921:1:34","valueSize":1},{"declaration":10017,"isOffset":false,"isSlot":false,"src":"34902:1:34","valueSize":1}],"flags":["memory-safe"],"id":10019,"nodeType":"InlineAssembly","src":"34863:71:34"}]},"documentation":{"id":10012,"nodeType":"StructuredDocumentation","src":"34700:90:34","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":10021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:34","nodeType":"FunctionDefinition","parameters":{"id":10015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10014,"mutability":"mutable","name":"b","nameLocation":"34816:1:34","nodeType":"VariableDeclaration","scope":10021,"src":"34811:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10013,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:34"},"returnParameters":{"id":10018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10017,"mutability":"mutable","name":"u","nameLocation":"34850:1:34","nodeType":"VariableDeclaration","scope":10021,"src":"34842:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10016,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:34"},"scope":10022,"src":"34795:145:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10023,"src":"769:34173:34","usedErrors":[8267,8272,8279,8284],"usedEvents":[]}],"src":"192:34751:34"},"id":34},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[10022],"SignedMath":[10166]},"id":10167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10024,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:35"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":10026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10167,"sourceUnit":10023,"src":"135:40:35","symbolAliases":[{"foreign":{"id":10025,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"143:8:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":10027,"nodeType":"StructuredDocumentation","src":"177:80:35","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":10166,"linearizedBaseContracts":[10166],"name":"SignedMath","nameLocation":"266:10:35","nodeType":"ContractDefinition","nodes":[{"body":{"id":10056,"nodeType":"Block","src":"746:215:35","statements":[{"id":10055,"nodeType":"UncheckedBlock","src":"756:199:35","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10034,"src":"894:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10032,"src":"900:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10034,"src":"904:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":10048,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"932:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":10046,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"916:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10022_$","typeString":"type(library SafeCast)"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:35","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10021,"src":"916:15:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":10049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10044,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:35","typeDescriptions":{}}},"id":10050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10038,"id":10054,"nodeType":"Return","src":"887:57:35"}]}]},"documentation":{"id":10028,"nodeType":"StructuredDocumentation","src":"283:374:35","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":10057,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:35","nodeType":"FunctionDefinition","parameters":{"id":10035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10030,"mutability":"mutable","name":"condition","nameLocation":"684:9:35","nodeType":"VariableDeclaration","scope":10057,"src":"679:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10029,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10032,"mutability":"mutable","name":"a","nameLocation":"702:1:35","nodeType":"VariableDeclaration","scope":10057,"src":"695:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10031,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10034,"mutability":"mutable","name":"b","nameLocation":"712:1:35","nodeType":"VariableDeclaration","scope":10057,"src":"705:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10033,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:35"},"returnParameters":{"id":10038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10057,"src":"738:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10036,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:35"},"scope":10166,"src":"662:299:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10075,"nodeType":"Block","src":"1102:44:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10060,"src":"1127:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"1131:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10060,"src":"1134:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10062,"src":"1137:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10067,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"1119:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10066,"id":10074,"nodeType":"Return","src":"1112:27:35"}]},"documentation":{"id":10058,"nodeType":"StructuredDocumentation","src":"967:66:35","text":" @dev Returns the largest of two signed numbers."},"id":10076,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:35","nodeType":"FunctionDefinition","parameters":{"id":10063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10060,"mutability":"mutable","name":"a","nameLocation":"1058:1:35","nodeType":"VariableDeclaration","scope":10076,"src":"1051:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10059,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10062,"mutability":"mutable","name":"b","nameLocation":"1068:1:35","nodeType":"VariableDeclaration","scope":10076,"src":"1061:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10061,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:35"},"returnParameters":{"id":10066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10076,"src":"1094:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10064,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:35"},"scope":10166,"src":"1038:108:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10094,"nodeType":"Block","src":"1288:44:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"1313:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10088,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10081,"src":"1317:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"1320:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10081,"src":"1323:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10086,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"1305:7:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10085,"id":10093,"nodeType":"Return","src":"1298:27:35"}]},"documentation":{"id":10077,"nodeType":"StructuredDocumentation","src":"1152:67:35","text":" @dev Returns the smallest of two signed numbers."},"id":10095,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:35","nodeType":"FunctionDefinition","parameters":{"id":10082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10079,"mutability":"mutable","name":"a","nameLocation":"1244:1:35","nodeType":"VariableDeclaration","scope":10095,"src":"1237:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10078,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10081,"mutability":"mutable","name":"b","nameLocation":"1254:1:35","nodeType":"VariableDeclaration","scope":10095,"src":"1247:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10080,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:35"},"returnParameters":{"id":10085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10095,"src":"1280:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10083,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:35"},"scope":10166,"src":"1224:108:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10138,"nodeType":"Block","src":"1537:162:35","statements":[{"assignments":[10106],"declarations":[{"constant":false,"id":10106,"mutability":"mutable","name":"x","nameLocation":"1606:1:35","nodeType":"VariableDeclaration","scope":10138,"src":"1599:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10105,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10119,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10098,"src":"1611:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10108,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"1615:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10098,"src":"1622:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"1626:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":10115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:35"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10120,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"1651:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10125,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"1671:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:35","typeDescriptions":{}}},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10121,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:35","typeDescriptions":{}}},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10098,"src":"1685:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10100,"src":"1689:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10104,"id":10137,"nodeType":"Return","src":"1644:48:35"}]},"documentation":{"id":10096,"nodeType":"StructuredDocumentation","src":"1338:126:35","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":10139,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:35","nodeType":"FunctionDefinition","parameters":{"id":10101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10098,"mutability":"mutable","name":"a","nameLocation":"1493:1:35","nodeType":"VariableDeclaration","scope":10139,"src":"1486:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10097,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10100,"mutability":"mutable","name":"b","nameLocation":"1503:1:35","nodeType":"VariableDeclaration","scope":10139,"src":"1496:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10099,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:35"},"returnParameters":{"id":10104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10139,"src":"1529:6:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10102,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:35"},"scope":10166,"src":"1469:230:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10164,"nodeType":"Block","src":"1843:767:35","statements":[{"id":10163,"nodeType":"UncheckedBlock","src":"1853:751:35","statements":[{"assignments":[10148],"declarations":[{"constant":false,"id":10148,"mutability":"mutable","name":"mask","nameLocation":"2424:4:35","nodeType":"VariableDeclaration","scope":10163,"src":"2417:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10147,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10152,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10149,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"2431:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10155,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"2576:1:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10156,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"2580:4:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10159,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"2588:4:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:35","typeDescriptions":{}}},"id":10161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10146,"id":10162,"nodeType":"Return","src":"2560:33:35"}]}]},"documentation":{"id":10140,"nodeType":"StructuredDocumentation","src":"1705:78:35","text":" @dev Returns the absolute unsigned value of a signed value."},"id":10165,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:35","nodeType":"FunctionDefinition","parameters":{"id":10143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10142,"mutability":"mutable","name":"n","nameLocation":"1808:1:35","nodeType":"VariableDeclaration","scope":10165,"src":"1801:8:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10141,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:35"},"returnParameters":{"id":10146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10165,"src":"1834:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:35"},"scope":10166,"src":"1788:822:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10167,"src":"258:2354:35","usedErrors":[],"usedEvents":[]}],"src":"109:2504:35"},"id":35},"contracts/GameEcosystem.sol":{"ast":{"absolutePath":"contracts/GameEcosystem.sol","exportedSymbols":{"AccessControl":[295],"Arrays":[3707],"Context":[3769],"ERC1155":[1605],"ERC1155Utils":[1940],"ERC165":[6624],"GameEcosystem":[11075],"IAccessControl":[378],"IERC1155":[1728],"IERC1155Errors":[688],"IERC1155MetadataURI":[1786],"IERC165":[6636],"IERC20":[2533],"Math":[8257],"Panic":[3889],"Pausable":[3997],"ReentrancyGuard":[4066],"SafeCast":[10022]},"id":11076,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10168,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:36"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":10169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":1606,"src":"58:59:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":2534,"src":"118:56:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":10171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":296,"src":"175:58:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":10172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":3998,"src":"234:52:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":4067,"src":"287:59:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":10174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11076,"sourceUnit":8258,"src":"347:53:36","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10176,"name":"ERC1155","nameLocations":["829:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"829:7:36"},"id":10177,"nodeType":"InheritanceSpecifier","src":"829:7:36"},{"baseName":{"id":10178,"name":"AccessControl","nameLocations":["838:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"838:13:36"},"id":10179,"nodeType":"InheritanceSpecifier","src":"838:13:36"},{"baseName":{"id":10180,"name":"Pausable","nameLocations":["853:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"853:8:36"},"id":10181,"nodeType":"InheritanceSpecifier","src":"853:8:36"},{"baseName":{"id":10182,"name":"ReentrancyGuard","nameLocations":["863:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"863:15:36"},"id":10183,"nodeType":"InheritanceSpecifier","src":"863:15:36"}],"canonicalName":"GameEcosystem","contractDependencies":[],"contractKind":"contract","documentation":{"id":10175,"nodeType":"StructuredDocumentation","src":"403:399:36","text":" @title GameEcosystem\n @dev Improved contract architecture using ERC-1155 for game tokens\n Key improvements:\n - Uses ERC-1155 instead of deploying separate ERC-20 contracts (massive gas savings)\n - Enhanced security with proper access controls and reentrancy protection\n - Optimized data structures and gas-efficient operations\n - Simplified flow with better reserve management"},"fullyImplemented":true,"id":11075,"linearizedBaseContracts":[11075,4066,3997,295,1605,688,1786,1728,6624,6636,378,3769],"name":"GameEcosystem","nameLocation":"812:13:36","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10186,"libraryName":{"id":10184,"name":"Math","nameLocations":["891:4:36"],"nodeType":"IdentifierPath","referencedDeclaration":8257,"src":"891:4:36"},"nodeType":"UsingForDirective","src":"885:23:36","typeName":{"id":10185,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"cb327b8b","id":10191,"mutability":"constant","name":"RATE_MANAGER_ROLE","nameLocation":"981:17:36","nodeType":"VariableDeclaration","scope":11075,"src":"957:74:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"957:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"524154455f4d414e414745525f524f4c45","id":10189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1011:19:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2","typeString":"literal_string \"RATE_MANAGER_ROLE\""},"value":"RATE_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2","typeString":"literal_string \"RATE_MANAGER_ROLE\""}],"id":10188,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1001:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1001:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":10196,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1061:11:36","nodeType":"VariableDeclaration","scope":11075,"src":"1037:62:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1037:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":10194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1085:13:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":10193,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1075:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1075:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"20df4359","id":10201,"mutability":"constant","name":"EMERGENCY_ROLE","nameLocation":"1129:14:36","nodeType":"VariableDeclaration","scope":11075,"src":"1105:68:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1105:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f524f4c45","id":10199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1156:16:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""},"value":"EMERGENCY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""}],"id":10198,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1146:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1146:27:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"8760550d","id":10206,"mutability":"constant","name":"MIN_XP_LOCK_AMOUNT","nameLocation":"1208:18:36","nodeType":"VariableDeclaration","scope":11075,"src":"1184:56:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":10205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":10203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1229:4:36","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":10204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:4:36","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1229:11:36","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"df525b7d","id":10209,"mutability":"constant","name":"MAX_GAME_TOKEN_DECIMALS","nameLocation":"1310:23:36","nodeType":"VariableDeclaration","scope":11075,"src":"1286:52:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":10208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:2:36","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":true,"functionSelector":"ccd34cd5","id":10212,"mutability":"constant","name":"PRECISION_FACTOR","nameLocation":"1368:16:36","nodeType":"VariableDeclaration","scope":11075,"src":"1344:47:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":10211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1387:4:36","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"6d8061b8","id":10215,"mutability":"immutable","name":"cridaToken","nameLocation":"1503:10:36","nodeType":"VariableDeclaration","scope":11075,"src":"1479:34:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"},"typeName":{"id":10214,"nodeType":"UserDefinedTypeName","pathNode":{"id":10213,"name":"IERC20","nameLocations":["1479:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"1479:6:36"},"referencedDeclaration":2533,"src":"1479:6:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"ae5014b1","id":10218,"mutability":"immutable","name":"xpToken","nameLocation":"1543:7:36","nodeType":"VariableDeclaration","scope":11075,"src":"1519:31:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"},"typeName":{"id":10217,"nodeType":"UserDefinedTypeName","pathNode":{"id":10216,"name":"IERC20","nameLocations":["1519:6:36"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"1519:6:36"},"referencedDeclaration":2533,"src":"1519:6:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"6dd9cbd4","id":10221,"mutability":"mutable","name":"cridaToXpRate","nameLocation":"1576:13:36","nodeType":"VariableDeclaration","scope":11075,"src":"1561:35:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1561:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":10220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1592:4:36","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"b135bbb0","id":10224,"mutability":"mutable","name":"nextGameId","nameLocation":"1663:10:36","nodeType":"VariableDeclaration","scope":11075,"src":"1648:29:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":10223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"cb4cd556","id":10228,"mutability":"mutable","name":"userLockedCrida","nameLocation":"1796:15:36","nodeType":"VariableDeclaration","scope":11075,"src":"1761:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":10227,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10225,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1761:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"e8321987","id":10230,"mutability":"mutable","name":"totalLockedCrida","nameLocation":"1832:16:36","nodeType":"VariableDeclaration","scope":11075,"src":"1817:31:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"GameEcosystem.GameTokenInfo","id":10247,"members":[{"constant":false,"id":10232,"mutability":"mutable","name":"creator","nameLocation":"1945:7:36","nodeType":"VariableDeclaration","scope":10247,"src":"1937:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10231,"name":"address","nodeType":"ElementaryTypeName","src":"1937:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10234,"mutability":"mutable","name":"name","nameLocation":"1969:4:36","nodeType":"VariableDeclaration","scope":10247,"src":"1962:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":10233,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10236,"mutability":"mutable","name":"symbol","nameLocation":"1990:6:36","nodeType":"VariableDeclaration","scope":10247,"src":"1983:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":10235,"name":"string","nodeType":"ElementaryTypeName","src":"1983:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10238,"mutability":"mutable","name":"decimals","nameLocation":"2012:8:36","nodeType":"VariableDeclaration","scope":10247,"src":"2006:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10237,"name":"uint8","nodeType":"ElementaryTypeName","src":"2006:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":10240,"mutability":"mutable","name":"initialSupply","nameLocation":"2038:13:36","nodeType":"VariableDeclaration","scope":10247,"src":"2030:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10242,"mutability":"mutable","name":"xpLocked","nameLocation":"2069:8:36","nodeType":"VariableDeclaration","scope":10247,"src":"2061:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10244,"mutability":"mutable","name":"currentSupply","nameLocation":"2095:13:36","nodeType":"VariableDeclaration","scope":10247,"src":"2087:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2087:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10246,"mutability":"mutable","name":"active","nameLocation":"2123:6:36","nodeType":"VariableDeclaration","scope":10247,"src":"2118:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10245,"name":"bool","nodeType":"ElementaryTypeName","src":"2118:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GameTokenInfo","nameLocation":"1913:13:36","nodeType":"StructDefinition","scope":11075,"src":"1906:230:36","visibility":"public"},{"constant":false,"functionSelector":"bf034b69","id":10252,"mutability":"mutable","name":"gameTokens","nameLocation":"2187:10:36","nodeType":"VariableDeclaration","scope":11075,"src":"2146:51:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo)"},"typeName":{"id":10251,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2146:33:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10250,"nodeType":"UserDefinedTypeName","pathNode":{"id":10249,"name":"GameTokenInfo","nameLocations":["2165:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":10247,"src":"2165:13:36"},"referencedDeclaration":10247,"src":"2165:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"c21c64a7","id":10257,"mutability":"mutable","name":"userGameTokens","nameLocation":"2240:14:36","nodeType":"VariableDeclaration","scope":11075,"src":"2203:51:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":10256,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10253,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2203:29:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":10254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2222:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10255,"nodeType":"ArrayTypeName","src":"2222:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"6d8554e2","id":10259,"mutability":"mutable","name":"xpReserves","nameLocation":"2341:10:36","nodeType":"VariableDeclaration","scope":11075,"src":"2326:25:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2326:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"728ef7f9f5da04913a2539a83b1d7620e12ed0fb6ca88328bdba350f977cff0f","id":10267,"name":"CridaLocked","nameLocation":"2446:11:36","nodeType":"EventDefinition","parameters":{"id":10266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10261,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2474:4:36","nodeType":"VariableDeclaration","scope":10267,"src":"2458:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10260,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10263,"indexed":false,"mutability":"mutable","name":"cridaAmount","nameLocation":"2488:11:36","nodeType":"VariableDeclaration","scope":10267,"src":"2480:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10265,"indexed":false,"mutability":"mutable","name":"xpMinted","nameLocation":"2509:8:36","nodeType":"VariableDeclaration","scope":10267,"src":"2501:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2501:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2457:61:36"},"src":"2440:79:36"},{"anonymous":false,"eventSelector":"209e4cc824c27fb4d0b3d56450b5cdead204b21bfb8286755c4865b577a8a28f","id":10281,"name":"GameTokenCreated","nameLocation":"2530:16:36","nodeType":"EventDefinition","parameters":{"id":10280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10269,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2572:6:36","nodeType":"VariableDeclaration","scope":10281,"src":"2556:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10271,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"2604:7:36","nodeType":"VariableDeclaration","scope":10281,"src":"2588:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10270,"name":"address","nodeType":"ElementaryTypeName","src":"2588:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10273,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2628:4:36","nodeType":"VariableDeclaration","scope":10281,"src":"2621:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10272,"name":"string","nodeType":"ElementaryTypeName","src":"2621:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10275,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"2649:6:36","nodeType":"VariableDeclaration","scope":10281,"src":"2642:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10274,"name":"string","nodeType":"ElementaryTypeName","src":"2642:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10277,"indexed":false,"mutability":"mutable","name":"xpLocked","nameLocation":"2673:8:36","nodeType":"VariableDeclaration","scope":10281,"src":"2665:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10279,"indexed":false,"mutability":"mutable","name":"initialSupply","nameLocation":"2699:13:36","nodeType":"VariableDeclaration","scope":10281,"src":"2691:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2691:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:172:36"},"src":"2524:195:36"},{"anonymous":false,"eventSelector":"efd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca6","id":10291,"name":"GameTokenBurned","nameLocation":"2730:15:36","nodeType":"EventDefinition","parameters":{"id":10290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10283,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"2771:6:36","nodeType":"VariableDeclaration","scope":10291,"src":"2755:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2755:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10285,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2803:4:36","nodeType":"VariableDeclaration","scope":10291,"src":"2787:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10284,"name":"address","nodeType":"ElementaryTypeName","src":"2787:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10287,"indexed":false,"mutability":"mutable","name":"burnAmount","nameLocation":"2825:10:36","nodeType":"VariableDeclaration","scope":10291,"src":"2817:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10289,"indexed":false,"mutability":"mutable","name":"xpReturned","nameLocation":"2853:10:36","nodeType":"VariableDeclaration","scope":10291,"src":"2845:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2845:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2745:124:36"},"src":"2724:146:36"},{"anonymous":false,"eventSelector":"b38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d1916","id":10297,"name":"RateUpdated","nameLocation":"2881:11:36","nodeType":"EventDefinition","parameters":{"id":10296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10293,"indexed":false,"mutability":"mutable","name":"oldRate","nameLocation":"2901:7:36","nodeType":"VariableDeclaration","scope":10297,"src":"2893:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10295,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"2918:7:36","nodeType":"VariableDeclaration","scope":10297,"src":"2910:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2910:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2892:34:36"},"src":"2875:52:36"},{"anonymous":false,"eventSelector":"f24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504","id":10305,"name":"EmergencyWithdraw","nameLocation":"2938:17:36","nodeType":"EventDefinition","parameters":{"id":10304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10299,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2972:5:36","nodeType":"VariableDeclaration","scope":10305,"src":"2956:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10298,"name":"address","nodeType":"ElementaryTypeName","src":"2956:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10301,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2995:2:36","nodeType":"VariableDeclaration","scope":10305,"src":"2979:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10300,"name":"address","nodeType":"ElementaryTypeName","src":"2979:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10303,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3007:6:36","nodeType":"VariableDeclaration","scope":10305,"src":"2999:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10302,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2955:59:36"},"src":"2932:83:36"},{"errorSelector":"1f2a2005","id":10307,"name":"ZeroAmount","nameLocation":"3071:10:36","nodeType":"ErrorDefinition","parameters":{"id":10306,"nodeType":"ParameterList","parameters":[],"src":"3081:2:36"},"src":"3065:19:36"},{"errorSelector":"299dcf9a","id":10309,"name":"ZeroRate","nameLocation":"3095:8:36","nodeType":"ErrorDefinition","parameters":{"id":10308,"nodeType":"ParameterList","parameters":[],"src":"3103:2:36"},"src":"3089:17:36"},{"errorSelector":"bb97cc9b","id":10311,"name":"InvalidGameId","nameLocation":"3117:13:36","nodeType":"ErrorDefinition","parameters":{"id":10310,"nodeType":"ParameterList","parameters":[],"src":"3130:2:36"},"src":"3111:22:36"},{"errorSelector":"0e6a1a76","id":10313,"name":"GameTokenNotActive","nameLocation":"3144:18:36","nodeType":"ErrorDefinition","parameters":{"id":10312,"nodeType":"ParameterList","parameters":[],"src":"3162:2:36"},"src":"3138:27:36"},{"errorSelector":"31d2f709","id":10315,"name":"InsufficientXpReserves","nameLocation":"3176:22:36","nodeType":"ErrorDefinition","parameters":{"id":10314,"nodeType":"ParameterList","parameters":[],"src":"3198:2:36"},"src":"3170:31:36"},{"errorSelector":"d25598a0","id":10317,"name":"InvalidDecimals","nameLocation":"3212:15:36","nodeType":"ErrorDefinition","parameters":{"id":10316,"nodeType":"ParameterList","parameters":[],"src":"3227:2:36"},"src":"3206:24:36"},{"errorSelector":"680b6caf","id":10319,"name":"NameTooLong","nameLocation":"3241:11:36","nodeType":"ErrorDefinition","parameters":{"id":10318,"nodeType":"ParameterList","parameters":[],"src":"3252:2:36"},"src":"3235:20:36"},{"errorSelector":"1124f78b","id":10321,"name":"SymbolTooLong","nameLocation":"3266:13:36","nodeType":"ErrorDefinition","parameters":{"id":10320,"nodeType":"ParameterList","parameters":[],"src":"3279:2:36"},"src":"3260:22:36"},{"errorSelector":"5945ea56","id":10323,"name":"InsufficientAmount","nameLocation":"3293:18:36","nodeType":"ErrorDefinition","parameters":{"id":10322,"nodeType":"ParameterList","parameters":[],"src":"3311:2:36"},"src":"3287:27:36"},{"errorSelector":"90b8ec18","id":10325,"name":"TransferFailed","nameLocation":"3325:14:36","nodeType":"ErrorDefinition","parameters":{"id":10324,"nodeType":"ParameterList","parameters":[],"src":"3339:2:36"},"src":"3319:23:36"},{"body":{"id":10391,"nodeType":"Block","src":"3512:409:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10337,"name":"_cridaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"3526:11:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3549:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3541:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10338,"name":"address","nodeType":"ElementaryTypeName","src":"3541:7:36","typeDescriptions":{}}},"id":10341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3526:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10343,"name":"_xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"3555:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3567:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10344,"name":"address","nodeType":"ElementaryTypeName","src":"3567:7:36","typeDescriptions":{}}},"id":10347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3555:22:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3526:51:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10354,"nodeType":"IfStatement","src":"3522:101:36","trueBody":{"id":10353,"nodeType":"Block","src":"3579:44:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10350,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10307,"src":"3600:10:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3600:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10352,"nodeType":"RevertStatement","src":"3593:19:36"}]}},{"expression":{"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10355,"name":"cridaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"3641:10:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10357,"name":"_cridaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"3661:11:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10356,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"3654:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3654:19:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"src":"3641:32:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10360,"nodeType":"ExpressionStatement","src":"3641:32:36"},{"expression":{"id":10365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10361,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"3683:7:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10363,"name":"_xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"3700:8:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10362,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"3693:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":10364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3693:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"src":"3683:26:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10366,"nodeType":"ExpressionStatement","src":"3683:26:36"},{"expression":{"arguments":[{"id":10368,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3739:18:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3759:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3759:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10367,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3728:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3728:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10372,"nodeType":"ExpressionStatement","src":"3728:42:36"},{"expression":{"arguments":[{"id":10374,"name":"RATE_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"3791:17:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3810:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3814:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3810:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10373,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3780:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3780:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10378,"nodeType":"ExpressionStatement","src":"3780:41:36"},{"expression":{"arguments":[{"id":10380,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10196,"src":"3842:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3855:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3859:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3855:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10379,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3831:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:35:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10384,"nodeType":"ExpressionStatement","src":"3831:35:36"},{"expression":{"arguments":[{"id":10386,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"3887:14:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":10387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3903:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3907:6:36","memberName":"sender","nodeType":"MemberAccess","src":"3903:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10385,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3876:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":10389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:38:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10390,"nodeType":"ExpressionStatement","src":"3876:38:36"}]},"id":10392,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10334,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10331,"src":"3506:4:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":10335,"kind":"baseConstructorSpecifier","modifierName":{"id":10333,"name":"ERC1155","nameLocations":["3498:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"3498:7:36"},"nodeType":"ModifierInvocation","src":"3498:13:36"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10327,"mutability":"mutable","name":"_cridaToken","nameLocation":"3426:11:36","nodeType":"VariableDeclaration","scope":10392,"src":"3418:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10326,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10329,"mutability":"mutable","name":"_xpToken","nameLocation":"3455:8:36","nodeType":"VariableDeclaration","scope":10392,"src":"3447:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10328,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10331,"mutability":"mutable","name":"_uri","nameLocation":"3487:4:36","nodeType":"VariableDeclaration","scope":10392,"src":"3473:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10330,"name":"string","nodeType":"ElementaryTypeName","src":"3473:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3408:89:36"},"returnParameters":{"id":10336,"nodeType":"ParameterList","parameters":[],"src":"3512:0:36"},"scope":11075,"src":"3397:524:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10464,"nodeType":"Block","src":"4215:715:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10402,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4229:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4244:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4229:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10408,"nodeType":"IfStatement","src":"4225:41:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10405,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10307,"src":"4254:10:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4254:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10407,"nodeType":"RevertStatement","src":"4247:19:36"}},{"assignments":[10410],"declarations":[{"constant":false,"id":10410,"mutability":"mutable","name":"xpAmount","nameLocation":"4340:8:36","nodeType":"VariableDeclaration","scope":10464,"src":"4332:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4332:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10417,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10411,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4352:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10412,"name":"cridaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"4366:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4352:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4351:29:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10415,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10212,"src":"4383:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4351:48:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4332:67:36"},{"condition":{"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4458:64:36","subExpression":{"arguments":[{"expression":{"id":10420,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4483:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4487:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4483:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4503:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_GameEcosystem_$11075","typeString":"contract GameEcosystem"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameEcosystem_$11075","typeString":"contract GameEcosystem"}],"id":10423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10422,"name":"address","nodeType":"ElementaryTypeName","src":"4495:7:36","typeDescriptions":{}}},"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10426,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4510:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10418,"name":"cridaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"4459:10:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4470:12:36","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"4459:23:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":10427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:63:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10433,"nodeType":"IfStatement","src":"4454:118:36","trueBody":{"id":10432,"nodeType":"Block","src":"4524:48:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10429,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"4545:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4545:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10431,"nodeType":"RevertStatement","src":"4538:23:36"}]}},{"expression":{"id":10439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10434,"name":"userLockedCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10228,"src":"4628:15:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10437,"indexExpression":{"expression":{"id":10435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4644:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4648:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4644:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4628:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10438,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4659:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4628:42:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10440,"nodeType":"ExpressionStatement","src":"4628:42:36"},{"expression":{"id":10443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10441,"name":"totalLockedCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10230,"src":"4680:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10442,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4700:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4680:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10444,"nodeType":"ExpressionStatement","src":"4680:31:36"},{"condition":{"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4765:39:36","subExpression":{"arguments":[{"expression":{"id":10447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4783:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4787:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4783:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10449,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10410,"src":"4795:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10445,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"4766:7:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4774:8:36","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"4766:16:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:38:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10456,"nodeType":"IfStatement","src":"4761:93:36","trueBody":{"id":10455,"nodeType":"Block","src":"4806:48:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10452,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"4827:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10454,"nodeType":"RevertStatement","src":"4820:23:36"}]}},{"eventCall":{"arguments":[{"expression":{"id":10458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4889:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4893:6:36","memberName":"sender","nodeType":"MemberAccess","src":"4889:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10460,"name":"amountCrida","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10395,"src":"4901:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10461,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10410,"src":"4914:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10457,"name":"CridaLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10267,"src":"4877:11:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":10462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:46:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10463,"nodeType":"EmitStatement","src":"4872:51:36"}]},"documentation":{"id":10393,"nodeType":"StructuredDocumentation","src":"3985:117:36","text":" @dev Lock CRIDA tokens and mint XP tokens\n @param amountCrida Amount of CRIDA tokens to lock"},"functionSelector":"97e05e86","id":10465,"implemented":true,"kind":"function","modifiers":[{"id":10398,"kind":"modifierInvocation","modifierName":{"id":10397,"name":"whenNotPaused","nameLocations":["4174:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"4174:13:36"},"nodeType":"ModifierInvocation","src":"4174:13:36"},{"id":10400,"kind":"modifierInvocation","modifierName":{"id":10399,"name":"nonReentrant","nameLocations":["4197:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"4197:12:36"},"nodeType":"ModifierInvocation","src":"4197:12:36"}],"name":"lockCrida","nameLocation":"4116:9:36","nodeType":"FunctionDefinition","parameters":{"id":10396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10395,"mutability":"mutable","name":"amountCrida","nameLocation":"4134:11:36","nodeType":"VariableDeclaration","scope":10465,"src":"4126:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10394,"name":"uint256","nodeType":"ElementaryTypeName","src":"4126:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4125:21:36"},"returnParameters":{"id":10401,"nodeType":"ParameterList","parameters":[],"src":"4215:0:36"},"scope":11075,"src":"4107:823:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10597,"nodeType":"Block","src":"5506:1387:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10483,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"5520:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10484,"name":"MIN_XP_LOCK_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10206,"src":"5531:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5520:29:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10489,"nodeType":"IfStatement","src":"5516:62:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10486,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10323,"src":"5558:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10488,"nodeType":"RevertStatement","src":"5551:27:36"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10490,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"5592:8:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10491,"name":"MAX_GAME_TOKEN_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10209,"src":"5603:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5592:34:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10496,"nodeType":"IfStatement","src":"5588:64:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10493,"name":"InvalidDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"5635:15:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10495,"nodeType":"RevertStatement","src":"5628:24:36"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10499,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"5672:4:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5666:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10497,"name":"bytes","nodeType":"ElementaryTypeName","src":"5666:5:36","typeDescriptions":{}}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5666:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":10501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5678:6:36","memberName":"length","nodeType":"MemberAccess","src":"5666:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3530","id":10502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5687:2:36","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"5666:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10507,"nodeType":"IfStatement","src":"5662:49:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10504,"name":"NameTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"5698:11:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5698:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10506,"nodeType":"RevertStatement","src":"5691:20:36"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10510,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"5731:6:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":10509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5725:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10508,"name":"bytes","nodeType":"ElementaryTypeName","src":"5725:5:36","typeDescriptions":{}}},"id":10511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5725:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":10512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:36","memberName":"length","nodeType":"MemberAccess","src":"5725:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130","id":10513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5748:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"5725:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10518,"nodeType":"IfStatement","src":"5721:53:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10515,"name":"SymbolTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"5759:13:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5759:15:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10517,"nodeType":"RevertStatement","src":"5752:22:36"}},{"condition":{"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5842:58:36","subExpression":{"arguments":[{"expression":{"id":10521,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5864:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5868:6:36","memberName":"sender","nodeType":"MemberAccess","src":"5864:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10525,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5884:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_GameEcosystem_$11075","typeString":"contract GameEcosystem"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameEcosystem_$11075","typeString":"contract GameEcosystem"}],"id":10524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5876:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10523,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:36","typeDescriptions":{}}},"id":10526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5876:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10527,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"5891:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10519,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"5843:7:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5851:12:36","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"5843:20:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":10528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5843:57:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10534,"nodeType":"IfStatement","src":"5838:112:36","trueBody":{"id":10533,"nodeType":"Block","src":"5902:48:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10530,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"5923:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5923:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10532,"nodeType":"RevertStatement","src":"5916:23:36"}]}},{"expression":{"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10535,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"5998:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10536,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6012:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5998:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10538,"nodeType":"ExpressionStatement","src":"5998:22:36"},{"expression":{"id":10542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10539,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"6039:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6048:12:36","subExpression":{"id":10540,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10224,"src":"6048:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6039:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10543,"nodeType":"ExpressionStatement","src":"6039:21:36"},{"assignments":[10545],"declarations":[{"constant":false,"id":10545,"mutability":"mutable","name":"initialSupply","nameLocation":"6155:13:36","nodeType":"VariableDeclaration","scope":10597,"src":"6147:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10544,"name":"uint256","nodeType":"ElementaryTypeName","src":"6147:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10554,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10546,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6171:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6183:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":10548,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6189:8:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6183:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6182:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6171:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10552,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10212,"src":"6201:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6171:46:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6147:70:36"},{"expression":{"id":10569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10555,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"6269:10:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo storage ref)"}},"id":10557,"indexExpression":{"id":10556,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"6280:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6269:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":10559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6327:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6331:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6327:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10561,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"6357:4:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10562,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"6383:6:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10563,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10474,"src":"6413:8:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":10564,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"6450:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10565,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6487:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10566,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"6524:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":10567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6559:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10558,"name":"GameTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10247,"src":"6290:13:36","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameTokenInfo_$10247_storage_ptr_$","typeString":"type(struct GameEcosystem.GameTokenInfo storage pointer)"}},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6318:7:36","6351:4:36","6375:6:36","6403:8:36","6435:13:36","6477:8:36","6509:13:36","6551:6:36"],"names":["creator","name","symbol","decimals","initialSupply","xpLocked","currentSupply","active"],"nodeType":"FunctionCall","src":"6290:284:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo memory"}},"src":"6269:305:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"id":10570,"nodeType":"ExpressionStatement","src":"6269:305:36"},{"expression":{"arguments":[{"id":10576,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"6661:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":10571,"name":"userGameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"6629:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":10574,"indexExpression":{"expression":{"id":10572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6644:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6648:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6644:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6629:26:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6656:4:36","memberName":"push","nodeType":"MemberAccess","src":"6629:31:36","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6629:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10578,"nodeType":"ExpressionStatement","src":"6629:39:36"},{"expression":{"arguments":[{"expression":{"id":10580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6749:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6753:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6749:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10582,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"6761:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10583,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"6769:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6784:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10579,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"6743:5:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":10585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6743:44:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10586,"nodeType":"ExpressionStatement","src":"6743:44:36"},{"eventCall":{"arguments":[{"id":10588,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10481,"src":"6828:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6836:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6840:6:36","memberName":"sender","nodeType":"MemberAccess","src":"6836:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10591,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"6848:4:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10592,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"6854:6:36","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":10593,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10468,"src":"6862:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10594,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"6872:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10587,"name":"GameTokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10281,"src":"6811:16:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,string memory,uint256,uint256)"}},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6811:75:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10596,"nodeType":"EmitStatement","src":"6806:80:36"}]},"documentation":{"id":10466,"nodeType":"StructuredDocumentation","src":"4999:258:36","text":" @dev Create a new game token by locking XP tokens\n @param xpAmount Amount of XP tokens to lock\n @param name Name of the game token\n @param symbol Symbol of the game token\n @param decimals Decimals for the game token"},"functionSelector":"fd44d274","id":10598,"implemented":true,"kind":"function","modifiers":[{"id":10477,"kind":"modifierInvocation","modifierName":{"id":10476,"name":"whenNotPaused","nameLocations":["5432:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"5432:13:36"},"nodeType":"ModifierInvocation","src":"5432:13:36"},{"id":10479,"kind":"modifierInvocation","modifierName":{"id":10478,"name":"nonReentrant","nameLocations":["5455:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"5455:12:36"},"nodeType":"ModifierInvocation","src":"5455:12:36"}],"name":"createGameToken","nameLocation":"5271:15:36","nodeType":"FunctionDefinition","parameters":{"id":10475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10468,"mutability":"mutable","name":"xpAmount","nameLocation":"5304:8:36","nodeType":"VariableDeclaration","scope":10598,"src":"5296:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5296:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10470,"mutability":"mutable","name":"name","nameLocation":"5338:4:36","nodeType":"VariableDeclaration","scope":10598,"src":"5322:20:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10469,"name":"string","nodeType":"ElementaryTypeName","src":"5322:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10472,"mutability":"mutable","name":"symbol","nameLocation":"5368:6:36","nodeType":"VariableDeclaration","scope":10598,"src":"5352:22:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":10471,"name":"string","nodeType":"ElementaryTypeName","src":"5352:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10474,"mutability":"mutable","name":"decimals","nameLocation":"5390:8:36","nodeType":"VariableDeclaration","scope":10598,"src":"5384:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10473,"name":"uint8","nodeType":"ElementaryTypeName","src":"5384:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5286:118:36"},"returnParameters":{"id":10482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10481,"mutability":"mutable","name":"gameId","nameLocation":"5494:6:36","nodeType":"VariableDeclaration","scope":10598,"src":"5486:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5486:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5485:16:36"},"scope":11075,"src":"5262:1631:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10708,"nodeType":"Block","src":"7270:1052:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10610,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7284:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7298:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7284:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10616,"nodeType":"IfStatement","src":"7280:40:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10613,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10307,"src":"7308:10:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7308:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10615,"nodeType":"RevertStatement","src":"7301:19:36"}},{"assignments":[10619],"declarations":[{"constant":false,"id":10619,"mutability":"mutable","name":"gameInfo","nameLocation":"7361:8:36","nodeType":"VariableDeclaration","scope":10708,"src":"7339:30:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"},"typeName":{"id":10618,"nodeType":"UserDefinedTypeName","pathNode":{"id":10617,"name":"GameTokenInfo","nameLocations":["7339:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":10247,"src":"7339:13:36"},"referencedDeclaration":10247,"src":"7339:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"}},"visibility":"internal"}],"id":10623,"initialValue":{"baseExpression":{"id":10620,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"7372:10:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo storage ref)"}},"id":10622,"indexExpression":{"id":10621,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"7383:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7372:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7339:51:36"},{"condition":{"id":10626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7404:16:36","subExpression":{"expression":{"id":10624,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10619,"src":"7405:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7414:6:36","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10246,"src":"7405:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10630,"nodeType":"IfStatement","src":"7400:49:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10627,"name":"GameTokenNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10313,"src":"7429:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7429:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10629,"nodeType":"RevertStatement","src":"7422:27:36"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10631,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"7463:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7473:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7463:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10634,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"7478:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10635,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10224,"src":"7488:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7478:20:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7463:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10641,"nodeType":"IfStatement","src":"7459:63:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10638,"name":"InvalidGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"7507:13:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7507:15:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10640,"nodeType":"RevertStatement","src":"7500:22:36"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":10643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7600:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7604:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7600:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10645,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"7612:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10642,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7590:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:29:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10647,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7622:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7590:42:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10652,"nodeType":"IfStatement","src":"7586:75:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10649,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10323,"src":"7641:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7641:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10651,"nodeType":"RevertStatement","src":"7634:27:36"}},{"assignments":[10654],"declarations":[{"constant":false,"id":10654,"mutability":"mutable","name":"xpToReturn","nameLocation":"7737:10:36","nodeType":"VariableDeclaration","scope":10708,"src":"7729:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7729:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10663,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10655,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7751:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":10656,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10619,"src":"7764:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7773:8:36","memberName":"xpLocked","nodeType":"MemberAccess","referencedDeclaration":10242,"src":"7764:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7751:30:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7750:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":10660,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10619,"src":"7785:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7794:13:36","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":10240,"src":"7785:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7750:57:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7729:78:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10664,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"7830:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10665,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10654,"src":"7843:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7830:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10670,"nodeType":"IfStatement","src":"7826:60:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10667,"name":"InsufficientXpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10315,"src":"7862:22:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7862:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10669,"nodeType":"RevertStatement","src":"7855:31:36"}},{"expression":{"arguments":[{"expression":{"id":10672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7939:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7943:6:36","memberName":"sender","nodeType":"MemberAccess","src":"7939:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10674,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"7951:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10675,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"7959:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10671,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"7933:5:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":10676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7933:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10677,"nodeType":"ExpressionStatement","src":"7933:37:36"},{"expression":{"id":10682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10678,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10619,"src":"8013:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8022:13:36","memberName":"currentSupply","nodeType":"MemberAccess","referencedDeclaration":10244,"src":"8013:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10681,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"8039:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8013:36:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10683,"nodeType":"ExpressionStatement","src":"8013:36:36"},{"expression":{"id":10686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10684,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"8059:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":10685,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10654,"src":"8073:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8059:24:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10687,"nodeType":"ExpressionStatement","src":"8059:24:36"},{"condition":{"id":10694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8142:41:36","subExpression":{"arguments":[{"expression":{"id":10690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8160:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8164:6:36","memberName":"sender","nodeType":"MemberAccess","src":"8160:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10692,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10654,"src":"8172:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10688,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"8143:7:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8151:8:36","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"8143:16:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10699,"nodeType":"IfStatement","src":"8138:95:36","trueBody":{"id":10698,"nodeType":"Block","src":"8185:48:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10695,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"8206:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8206:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10697,"nodeType":"RevertStatement","src":"8199:23:36"}]}},{"eventCall":{"arguments":[{"id":10701,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"8272:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10702,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8280:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8284:6:36","memberName":"sender","nodeType":"MemberAccess","src":"8280:10:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10704,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"8292:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10705,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10654,"src":"8304:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10700,"name":"GameTokenBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10291,"src":"8256:15:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":10706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:59:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10707,"nodeType":"EmitStatement","src":"8251:64:36"}]},"documentation":{"id":10599,"nodeType":"StructuredDocumentation","src":"6972:166:36","text":" @dev Burn game tokens to reclaim XP tokens\n @param gameId ID of the game token to burn\n @param burnAmount Amount of game tokens to burn"},"functionSelector":"5ed6c1db","id":10709,"implemented":true,"kind":"function","modifiers":[{"id":10606,"kind":"modifierInvocation","modifierName":{"id":10605,"name":"whenNotPaused","nameLocations":["7229:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"7229:13:36"},"nodeType":"ModifierInvocation","src":"7229:13:36"},{"id":10608,"kind":"modifierInvocation","modifierName":{"id":10607,"name":"nonReentrant","nameLocations":["7252:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"7252:12:36"},"nodeType":"ModifierInvocation","src":"7252:12:36"}],"name":"burnGameToken","nameLocation":"7152:13:36","nodeType":"FunctionDefinition","parameters":{"id":10604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10601,"mutability":"mutable","name":"gameId","nameLocation":"7174:6:36","nodeType":"VariableDeclaration","scope":10709,"src":"7166:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10600,"name":"uint256","nodeType":"ElementaryTypeName","src":"7166:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10603,"mutability":"mutable","name":"burnAmount","nameLocation":"7190:10:36","nodeType":"VariableDeclaration","scope":10709,"src":"7182:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7182:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7165:36:36"},"returnParameters":{"id":10609,"nodeType":"ParameterList","parameters":[],"src":"7270:0:36"},"scope":11075,"src":"7143:1179:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10738,"nodeType":"Block","src":"8578:188:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10718,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10712,"src":"8592:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8603:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8592:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10724,"nodeType":"IfStatement","src":"8588:35:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10721,"name":"ZeroRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10309,"src":"8613:8:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8613:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10723,"nodeType":"RevertStatement","src":"8606:17:36"}},{"assignments":[10726],"declarations":[{"constant":false,"id":10726,"mutability":"mutable","name":"oldRate","nameLocation":"8650:7:36","nodeType":"VariableDeclaration","scope":10738,"src":"8642:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10725,"name":"uint256","nodeType":"ElementaryTypeName","src":"8642:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10728,"initialValue":{"id":10727,"name":"cridaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"8660:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8642:31:36"},{"expression":{"id":10731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10729,"name":"cridaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"8683:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10730,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10712,"src":"8699:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:23:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10732,"nodeType":"ExpressionStatement","src":"8683:23:36"},{"eventCall":{"arguments":[{"id":10734,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10726,"src":"8742:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10735,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10712,"src":"8751:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10733,"name":"RateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10297,"src":"8730:11:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":10736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:29:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10737,"nodeType":"EmitStatement","src":"8725:34:36"}]},"documentation":{"id":10710,"nodeType":"StructuredDocumentation","src":"8381:121:36","text":" @dev Update CRIDA to XP conversion rate\n @param newRate New rate (with PRECISION_FACTOR scaling)"},"functionSelector":"34fcf437","id":10739,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10715,"name":"RATE_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"8559:17:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10716,"kind":"modifierInvocation","modifierName":{"id":10714,"name":"onlyRole","nameLocations":["8550:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8550:8:36"},"nodeType":"ModifierInvocation","src":"8550:27:36"}],"name":"setRate","nameLocation":"8516:7:36","nodeType":"FunctionDefinition","parameters":{"id":10713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10712,"mutability":"mutable","name":"newRate","nameLocation":"8532:7:36","nodeType":"VariableDeclaration","scope":10739,"src":"8524:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10711,"name":"uint256","nodeType":"ElementaryTypeName","src":"8524:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8523:17:36"},"returnParameters":{"id":10717,"nodeType":"ParameterList","parameters":[],"src":"8578:0:36"},"scope":11075,"src":"8507:259:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10749,"nodeType":"Block","src":"8878:25:36","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10746,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"8888:6:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8888:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10748,"nodeType":"ExpressionStatement","src":"8888:8:36"}]},"documentation":{"id":10740,"nodeType":"StructuredDocumentation","src":"8776:49:36","text":" @dev Pause contract operations"},"functionSelector":"8456cb59","id":10750,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10743,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10196,"src":"8865:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10744,"kind":"modifierInvocation","modifierName":{"id":10742,"name":"onlyRole","nameLocations":["8856:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8856:8:36"},"nodeType":"ModifierInvocation","src":"8856:21:36"}],"name":"pause","nameLocation":"8839:5:36","nodeType":"FunctionDefinition","parameters":{"id":10741,"nodeType":"ParameterList","parameters":[],"src":"8844:2:36"},"returnParameters":{"id":10745,"nodeType":"ParameterList","parameters":[],"src":"8878:0:36"},"scope":11075,"src":"8830:73:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10760,"nodeType":"Block","src":"9019:27:36","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10757,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"9029:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10759,"nodeType":"ExpressionStatement","src":"9029:10:36"}]},"documentation":{"id":10751,"nodeType":"StructuredDocumentation","src":"8913:51:36","text":" @dev Unpause contract operations"},"functionSelector":"3f4ba83a","id":10761,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10754,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10196,"src":"9006:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10755,"kind":"modifierInvocation","modifierName":{"id":10753,"name":"onlyRole","nameLocations":["8997:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8997:8:36"},"nodeType":"ModifierInvocation","src":"8997:21:36"}],"name":"unpause","nameLocation":"8978:7:36","nodeType":"FunctionDefinition","parameters":{"id":10752,"nodeType":"ParameterList","parameters":[],"src":"8985:2:36"},"returnParameters":{"id":10756,"nodeType":"ParameterList","parameters":[],"src":"9019:0:36"},"scope":11075,"src":"8969:77:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10830,"nodeType":"Block","src":"9395:482:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"9409:2:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9415:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10775,"name":"address","nodeType":"ElementaryTypeName","src":"9415:7:36","typeDescriptions":{}}},"id":10778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9415:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9409:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10783,"nodeType":"IfStatement","src":"9405:41:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10780,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10307,"src":"9434:10:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9434:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10782,"nodeType":"RevertStatement","src":"9427:19:36"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10784,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"9469:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9486:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9478:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10785,"name":"address","nodeType":"ElementaryTypeName","src":"9478:7:36","typeDescriptions":{}}},"id":10788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9469:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10822,"nodeType":"Block","src":"9654:157:36","statements":[{"condition":{"id":10816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9708:35:36","subExpression":{"arguments":[{"id":10813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"9732:2:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10814,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10768,"src":"9736:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10810,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"9716:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10809,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"9709:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":10811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":10812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9723:8:36","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"9709:22:36","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10821,"nodeType":"IfStatement","src":"9704:97:36","trueBody":{"id":10820,"nodeType":"Block","src":"9745:56:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10817,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"9770:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10819,"nodeType":"RevertStatement","src":"9763:23:36"}]}}]},"id":10823,"nodeType":"IfStatement","src":"9465:346:36","trueBody":{"id":10808,"nodeType":"Block","src":"9490:158:36","statements":[{"assignments":[10791,null],"declarations":[{"constant":false,"id":10791,"mutability":"mutable","name":"success","nameLocation":"9538:7:36","nodeType":"VariableDeclaration","scope":10808,"src":"9533:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10790,"name":"bool","nodeType":"ElementaryTypeName","src":"9533:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10801,"initialValue":{"arguments":[{"hexValue":"","id":10799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9583:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":10794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"9559:2:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9551:8:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10792,"name":"address","nodeType":"ElementaryTypeName","src":"9551:8:36","stateMutability":"payable","typeDescriptions":{}}},"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9551:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9563:4:36","memberName":"call","nodeType":"MemberAccess","src":"9551:16:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10768,"src":"9575:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9551:31:36","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9551:35:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9532:54:36"},{"condition":{"id":10803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9604:8:36","subExpression":{"id":10802,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10791,"src":"9605:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10807,"nodeType":"IfStatement","src":"9600:37:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10804,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10325,"src":"9621:14:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10806,"nodeType":"RevertStatement","src":"9614:23:36"}}]}},{"eventCall":{"arguments":[{"id":10825,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10764,"src":"9852:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10826,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10766,"src":"9859:2:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10827,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10768,"src":"9863:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10824,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10305,"src":"9834:17:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9834:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10829,"nodeType":"EmitStatement","src":"9829:41:36"}]},"documentation":{"id":10762,"nodeType":"StructuredDocumentation","src":"9056:200:36","text":" @dev Emergency withdraw function for stuck tokens\n @param token Address of token to withdraw\n @param to Address to send tokens to\n @param amount Amount to withdraw"},"functionSelector":"e63ea408","id":10831,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10771,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"9379:14:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10772,"kind":"modifierInvocation","modifierName":{"id":10770,"name":"onlyRole","nameLocations":["9370:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9370:8:36"},"nodeType":"ModifierInvocation","src":"9370:24:36"}],"name":"emergencyWithdraw","nameLocation":"9270:17:36","nodeType":"FunctionDefinition","parameters":{"id":10769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10764,"mutability":"mutable","name":"token","nameLocation":"9305:5:36","nodeType":"VariableDeclaration","scope":10831,"src":"9297:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10763,"name":"address","nodeType":"ElementaryTypeName","src":"9297:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10766,"mutability":"mutable","name":"to","nameLocation":"9328:2:36","nodeType":"VariableDeclaration","scope":10831,"src":"9320:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10765,"name":"address","nodeType":"ElementaryTypeName","src":"9320:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10768,"mutability":"mutable","name":"amount","nameLocation":"9348:6:36","nodeType":"VariableDeclaration","scope":10831,"src":"9340:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10767,"name":"uint256","nodeType":"ElementaryTypeName","src":"9340:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9287:73:36"},"returnParameters":{"id":10773,"nodeType":"ParameterList","parameters":[],"src":"9395:0:36"},"scope":11075,"src":"9261:616:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10844,"nodeType":"Block","src":"10151:42:36","statements":[{"expression":{"baseExpression":{"id":10840,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"10168:10:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo storage ref)"}},"id":10842,"indexExpression":{"id":10841,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10834,"src":"10179:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10168:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"functionReturnParameters":10839,"id":10843,"nodeType":"Return","src":"10161:25:36"}]},"documentation":{"id":10832,"nodeType":"StructuredDocumentation","src":"9935:92:36","text":" @dev Get game token information\n @param gameId ID of the game token"},"functionSelector":"5e79c1dc","id":10845,"implemented":true,"kind":"function","modifiers":[],"name":"getGameTokenInfo","nameLocation":"10041:16:36","nodeType":"FunctionDefinition","parameters":{"id":10835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10834,"mutability":"mutable","name":"gameId","nameLocation":"10066:6:36","nodeType":"VariableDeclaration","scope":10845,"src":"10058:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10833,"name":"uint256","nodeType":"ElementaryTypeName","src":"10058:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10057:16:36"},"returnParameters":{"id":10839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10845,"src":"10124:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo"},"typeName":{"id":10837,"nodeType":"UserDefinedTypeName","pathNode":{"id":10836,"name":"GameTokenInfo","nameLocations":["10124:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":10247,"src":"10124:13:36"},"referencedDeclaration":10247,"src":"10124:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"}},"visibility":"internal"}],"src":"10123:22:36"},"scope":11075,"src":"10032:161:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10858,"nodeType":"Block","src":"10415:44:36","statements":[{"expression":{"baseExpression":{"id":10854,"name":"userGameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"10432:14:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":10856,"indexExpression":{"id":10855,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10848,"src":"10447:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10432:20:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":10853,"id":10857,"nodeType":"Return","src":"10425:27:36"}]},"documentation":{"id":10846,"nodeType":"StructuredDocumentation","src":"10203:93:36","text":" @dev Get user's created game tokens\n @param user Address of the user"},"functionSelector":"546fdad4","id":10859,"implemented":true,"kind":"function","modifiers":[],"name":"getUserGameTokens","nameLocation":"10310:17:36","nodeType":"FunctionDefinition","parameters":{"id":10849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10848,"mutability":"mutable","name":"user","nameLocation":"10336:4:36","nodeType":"VariableDeclaration","scope":10859,"src":"10328:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10847,"name":"address","nodeType":"ElementaryTypeName","src":"10328:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10327:14:36"},"returnParameters":{"id":10853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10859,"src":"10392:16:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10392:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10851,"nodeType":"ArrayTypeName","src":"10392:9:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10391:18:36"},"scope":11075,"src":"10301:158:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10874,"nodeType":"Block","src":"10701:72:36","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10867,"name":"cridaAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10862,"src":"10719:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10868,"name":"cridaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"10733:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10719:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10718:29:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10871,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10212,"src":"10750:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10718:48:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10866,"id":10873,"nodeType":"Return","src":"10711:55:36"}]},"documentation":{"id":10860,"nodeType":"StructuredDocumentation","src":"10469:115:36","text":" @dev Calculate XP amount for given CRIDA amount\n @param cridaAmount Amount of CRIDA tokens"},"functionSelector":"74b334c5","id":10875,"implemented":true,"kind":"function","modifiers":[],"name":"calculateXpAmount","nameLocation":"10598:17:36","nodeType":"FunctionDefinition","parameters":{"id":10863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10862,"mutability":"mutable","name":"cridaAmount","nameLocation":"10624:11:36","nodeType":"VariableDeclaration","scope":10875,"src":"10616:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10861,"name":"uint256","nodeType":"ElementaryTypeName","src":"10616:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10615:21:36"},"returnParameters":{"id":10866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10875,"src":"10687:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10686:9:36"},"scope":11075,"src":"10589:184:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10912,"nodeType":"Block","src":"11064:222:36","statements":[{"assignments":[10887],"declarations":[{"constant":false,"id":10887,"mutability":"mutable","name":"gameInfo","nameLocation":"11096:8:36","nodeType":"VariableDeclaration","scope":10912,"src":"11074:30:36","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"},"typeName":{"id":10886,"nodeType":"UserDefinedTypeName","pathNode":{"id":10885,"name":"GameTokenInfo","nameLocations":["11074:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":10247,"src":"11074:13:36"},"referencedDeclaration":10247,"src":"11074:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"}},"visibility":"internal"}],"id":10891,"initialValue":{"baseExpression":{"id":10888,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"11107:10:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo storage ref)"}},"id":10890,"indexExpression":{"id":10889,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10878,"src":"11118:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11107:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11074:51:36"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11139:16:36","subExpression":{"expression":{"id":10892,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"11140:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11149:6:36","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10246,"src":"11140:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10895,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"11159:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11168:13:36","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":10240,"src":"11159:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11185:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11159:27:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11139:47:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10902,"nodeType":"IfStatement","src":"11135:61:36","trueBody":{"expression":{"hexValue":"30","id":10900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11195:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10884,"id":10901,"nodeType":"Return","src":"11188:8:36"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10903,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10880,"src":"11223:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":10904,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"11236:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:8:36","memberName":"xpLocked","nodeType":"MemberAccess","referencedDeclaration":10242,"src":"11236:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11223:30:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11222:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":10908,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"11257:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo storage pointer"}},"id":10909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11266:13:36","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":10240,"src":"11257:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11222:57:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10884,"id":10911,"nodeType":"Return","src":"11215:64:36"}]},"documentation":{"id":10876,"nodeType":"StructuredDocumentation","src":"10783:149:36","text":" @dev Calculate XP return for burning game tokens\n @param gameId ID of the game token\n @param burnAmount Amount to burn"},"functionSelector":"3b420a73","id":10913,"implemented":true,"kind":"function","modifiers":[],"name":"calculateXpReturn","nameLocation":"10946:17:36","nodeType":"FunctionDefinition","parameters":{"id":10881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10878,"mutability":"mutable","name":"gameId","nameLocation":"10972:6:36","nodeType":"VariableDeclaration","scope":10913,"src":"10964:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10964:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10880,"mutability":"mutable","name":"burnAmount","nameLocation":"10988:10:36","nodeType":"VariableDeclaration","scope":10913,"src":"10980:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10879,"name":"uint256","nodeType":"ElementaryTypeName","src":"10980:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10963:36:36"},"returnParameters":{"id":10884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10913,"src":"11050:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11050:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11049:9:36"},"scope":11075,"src":"10937:349:36","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[62,780],"body":{"id":10928,"nodeType":"Block","src":"11496:60:36","statements":[{"expression":{"arguments":[{"id":10925,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10915,"src":"11537:11:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10923,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11513:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GameEcosystem_$11075_$","typeString":"type(contract super GameEcosystem)"}},"id":10924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11519:17:36","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"11513:23:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10922,"id":10927,"nodeType":"Return","src":"11506:43:36"}]},"functionSelector":"01ffc9a7","id":10929,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"11357:17:36","nodeType":"FunctionDefinition","overrides":{"id":10919,"nodeType":"OverrideSpecifier","overrides":[{"id":10917,"name":"ERC1155","nameLocations":["11443:7:36"],"nodeType":"IdentifierPath","referencedDeclaration":1605,"src":"11443:7:36"},{"id":10918,"name":"AccessControl","nameLocations":["11452:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"11452:13:36"}],"src":"11434:32:36"},"parameters":{"id":10916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10915,"mutability":"mutable","name":"interfaceId","nameLocation":"11382:11:36","nodeType":"VariableDeclaration","scope":10929,"src":"11375:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10914,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11375:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"11374:20:36"},"returnParameters":{"id":10922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10929,"src":"11485:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10920,"name":"bool","nodeType":"ElementaryTypeName","src":"11485:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11484:6:36"},"scope":11075,"src":"11348:208:36","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[791],"body":{"id":10980,"nodeType":"Block","src":"11726:466:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10938,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10932,"src":"11740:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11750:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11740:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10941,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10932,"src":"11755:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10942,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10224,"src":"11765:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11755:20:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11740:35:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10947,"nodeType":"IfStatement","src":"11736:50:36","trueBody":{"expression":{"hexValue":"","id":10945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11784:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":10937,"id":10946,"nodeType":"Return","src":"11777:9:36"}},{"assignments":[10950],"declarations":[{"constant":false,"id":10950,"mutability":"mutable","name":"gameInfo","nameLocation":"11826:8:36","nodeType":"VariableDeclaration","scope":10980,"src":"11805:29:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo"},"typeName":{"id":10949,"nodeType":"UserDefinedTypeName","pathNode":{"id":10948,"name":"GameTokenInfo","nameLocations":["11805:13:36"],"nodeType":"IdentifierPath","referencedDeclaration":10247,"src":"11805:13:36"},"referencedDeclaration":10247,"src":"11805:13:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage_ptr","typeString":"struct GameEcosystem.GameTokenInfo"}},"visibility":"internal"}],"id":10954,"initialValue":{"baseExpression":{"id":10951,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"11837:10:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$10247_storage_$","typeString":"mapping(uint256 => struct GameEcosystem.GameTokenInfo storage ref)"}},"id":10953,"indexExpression":{"id":10952,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10932,"src":"11848:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11837:18:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_storage","typeString":"struct GameEcosystem.GameTokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11805:50:36"},{"condition":{"id":10957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11869:16:36","subExpression":{"expression":{"id":10955,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"11870:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo memory"}},"id":10956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11879:6:36","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10246,"src":"11870:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10960,"nodeType":"IfStatement","src":"11865:31:36","trueBody":{"expression":{"hexValue":"","id":10958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11894:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":10937,"id":10959,"nodeType":"Return","src":"11887:9:36"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a22","id":10965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12039:11:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},"value":"{\"name\":\""},{"expression":{"id":10966,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"12052:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo memory"}},"id":10967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12061:4:36","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":10234,"src":"12052:13:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c2273796d626f6c223a22","id":10968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12080:14:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5340a53db9406a49e889e395f995bffe402fb090771dc22c4cb4d709cfb172b","typeString":"literal_string \"\",\"symbol\":\"\""},"value":"\",\"symbol\":\""},{"expression":{"id":10969,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"12096:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo memory"}},"id":10970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12105:6:36","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":10236,"src":"12096:15:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c22646563696d616c73223a","id":10971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12125:15:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa5fce05436e21ab659c3dcf223d10fe867709725ec0abcf5ba2f34394cd0538","typeString":"literal_string \"\",\"decimals\":\""},"value":"\",\"decimals\":"},{"arguments":[{"expression":{"id":10973,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10950,"src":"12151:8:36","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$10247_memory_ptr","typeString":"struct GameEcosystem.GameTokenInfo memory"}},"id":10974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12160:8:36","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":10238,"src":"12151:17:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10972,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11074,"src":"12142:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":10975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12142:27:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d","id":10976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12171:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_e5340a53db9406a49e889e395f995bffe402fb090771dc22c4cb4d709cfb172b","typeString":"literal_string \"\",\"symbol\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_aa5fce05436e21ab659c3dcf223d10fe867709725ec0abcf5ba2f34394cd0538","typeString":"literal_string \"\",\"decimals\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":10963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12009:3:36","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12013:12:36","memberName":"encodePacked","nodeType":"MemberAccess","src":"12009:16:36","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12009:175:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10961,"name":"string","nodeType":"ElementaryTypeName","src":"12002:6:36","typeDescriptions":{}}},"id":10978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:183:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10937,"id":10979,"nodeType":"Return","src":"11995:190:36"}]},"documentation":{"id":10930,"nodeType":"StructuredDocumentation","src":"11566:81:36","text":" @dev Override URI function to provide metadata for game tokens"},"functionSelector":"0e89341c","id":10981,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"11661:3:36","nodeType":"FunctionDefinition","overrides":{"id":10934,"nodeType":"OverrideSpecifier","overrides":[],"src":"11693:8:36"},"parameters":{"id":10933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10932,"mutability":"mutable","name":"gameId","nameLocation":"11673:6:36","nodeType":"VariableDeclaration","scope":10981,"src":"11665:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10931,"name":"uint256","nodeType":"ElementaryTypeName","src":"11665:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11664:16:36"},"returnParameters":{"id":10937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10981,"src":"11711:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10935,"name":"string","nodeType":"ElementaryTypeName","src":"11711:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11710:15:36"},"scope":11075,"src":"11652:540:36","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11073,"nodeType":"Block","src":"12321:479:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10988,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12335:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12341:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12335:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10993,"nodeType":"IfStatement","src":"12331:23:36","trueBody":{"expression":{"hexValue":"30","id":10991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12351:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":10987,"id":10992,"nodeType":"Return","src":"12344:10:36"}},{"assignments":[10995],"declarations":[{"constant":false,"id":10995,"mutability":"mutable","name":"j","nameLocation":"12381:1:36","nodeType":"VariableDeclaration","scope":11073,"src":"12373:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10994,"name":"uint256","nodeType":"ElementaryTypeName","src":"12373:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10997,"initialValue":{"id":10996,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12385:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12373:14:36"},{"assignments":[10999],"declarations":[{"constant":false,"id":10999,"mutability":"mutable","name":"len","nameLocation":"12405:3:36","nodeType":"VariableDeclaration","scope":11073,"src":"12397:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10998,"name":"uint256","nodeType":"ElementaryTypeName","src":"12397:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11000,"nodeType":"VariableDeclarationStatement","src":"12397:11:36"},{"body":{"id":11011,"nodeType":"Block","src":"12433:51:36","statements":[{"expression":{"id":11005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12447:5:36","subExpression":{"id":11004,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10999,"src":"12447:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11006,"nodeType":"ExpressionStatement","src":"12447:5:36"},{"expression":{"id":11009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11007,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10995,"src":"12466:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":11008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12471:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12466:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11010,"nodeType":"ExpressionStatement","src":"12466:7:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11001,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10995,"src":"12425:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":11002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12430:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12425:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11012,"nodeType":"WhileStatement","src":"12418:66:36"},{"assignments":[11014],"declarations":[{"constant":false,"id":11014,"mutability":"mutable","name":"bstr","nameLocation":"12515:4:36","nodeType":"VariableDeclaration","scope":11073,"src":"12502:17:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11013,"name":"bytes","nodeType":"ElementaryTypeName","src":"12502:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":11019,"initialValue":{"arguments":[{"id":11017,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10999,"src":"12532:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12522:9:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":11015,"name":"bytes","nodeType":"ElementaryTypeName","src":"12526:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":11018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12522:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12502:34:36"},{"assignments":[11021],"declarations":[{"constant":false,"id":11021,"mutability":"mutable","name":"k","nameLocation":"12554:1:36","nodeType":"VariableDeclaration","scope":11073,"src":"12546:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12546:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11023,"initialValue":{"id":11022,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10999,"src":"12558:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12546:15:36"},{"body":{"id":11066,"nodeType":"Block","src":"12587:178:36","statements":[{"expression":{"id":11031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11027,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11021,"src":"12601:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11028,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11021,"src":"12605:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":11029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12609:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12605:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12601:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11032,"nodeType":"ExpressionStatement","src":"12601:9:36"},{"assignments":[11034],"declarations":[{"constant":false,"id":11034,"mutability":"mutable","name":"temp","nameLocation":"12630:4:36","nodeType":"VariableDeclaration","scope":11066,"src":"12624:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11033,"name":"uint8","nodeType":"ElementaryTypeName","src":"12624:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":11048,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":11046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":11035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12638:2:36","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11038,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12649:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11039,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12654:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":11040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12659:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12654:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":11042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12664:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12654:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12649:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12643:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":11036,"name":"uint8","nodeType":"ElementaryTypeName","src":"12643:5:36","typeDescriptions":{}}},"id":11045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12643:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12638:29:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":11047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12637:31:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12624:44:36"},{"assignments":[11050],"declarations":[{"constant":false,"id":11050,"mutability":"mutable","name":"b1","nameLocation":"12689:2:36","nodeType":"VariableDeclaration","scope":11066,"src":"12682:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":11049,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12682:6:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":11055,"initialValue":{"arguments":[{"id":11053,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"12701:4:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":11052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12694:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":11051,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12694:6:36","typeDescriptions":{}}},"id":11054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12694:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"12682:24:36"},{"expression":{"id":11060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11056,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11014,"src":"12720:4:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":11058,"indexExpression":{"id":11057,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11021,"src":"12725:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12720:7:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11059,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11050,"src":"12730:2:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"12720:12:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":11061,"nodeType":"ExpressionStatement","src":"12720:12:36"},{"expression":{"id":11064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11062,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12746:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":11063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12752:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"12746:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11065,"nodeType":"ExpressionStatement","src":"12746:8:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11024,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10983,"src":"12578:2:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":11025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12584:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12578:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11067,"nodeType":"WhileStatement","src":"12571:194:36"},{"expression":{"arguments":[{"id":11070,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11014,"src":"12788:4:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12781:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":11068,"name":"string","nodeType":"ElementaryTypeName","src":"12781:6:36","typeDescriptions":{}}},"id":11071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12781:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":10987,"id":11072,"nodeType":"Return","src":"12774:19:36"}]},"id":11074,"implemented":true,"kind":"function","modifiers":[],"name":"uint2str","nameLocation":"12262:8:36","nodeType":"FunctionDefinition","parameters":{"id":10984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10983,"mutability":"mutable","name":"_i","nameLocation":"12279:2:36","nodeType":"VariableDeclaration","scope":11074,"src":"12271:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10982,"name":"uint256","nodeType":"ElementaryTypeName","src":"12271:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12270:12:36"},"returnParameters":{"id":10987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11074,"src":"12306:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10985,"name":"string","nodeType":"ElementaryTypeName","src":"12306:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12305:15:36"},"scope":11075,"src":"12253:547:36","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":11076,"src":"803:11999:36","usedErrors":[305,308,653,658,663,670,675,680,687,3911,3914,4011,10307,10309,10311,10313,10315,10317,10319,10321,10323,10325],"usedEvents":[317,326,335,1625,1640,1649,1656,3903,3908,10267,10281,10291,10297,10305]}],"src":"32:12771:36"},"id":36},"contracts/GameToken.sol":{"ast":{"absolutePath":"contracts/GameToken.sol","exportedSymbols":{"Context":[3769],"ERC20":[2455],"GameToken":[11348],"IERC20":[2533],"IERC20Errors":[593],"IERC20Metadata":[2793],"Ownable":[526],"ReentrancyGuard":[4066]},"id":11349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11077,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:37"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":11078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11349,"sourceUnit":2456,"src":"58:55:37","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11349,"sourceUnit":2534,"src":"114:56:37","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":11080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11349,"sourceUnit":527,"src":"171:52:37","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":11081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11349,"sourceUnit":4067,"src":"224:59:37","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11083,"name":"ERC20","nameLocations":["505:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"505:5:37"},"id":11084,"nodeType":"InheritanceSpecifier","src":"505:5:37"},{"baseName":{"id":11085,"name":"Ownable","nameLocations":["512:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"512:7:37"},"id":11086,"nodeType":"InheritanceSpecifier","src":"512:7:37"},{"baseName":{"id":11087,"name":"ReentrancyGuard","nameLocations":["521:15:37"],"nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"521:15:37"},"id":11088,"nodeType":"InheritanceSpecifier","src":"521:15:37"}],"canonicalName":"GameToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":11082,"nodeType":"StructuredDocumentation","src":"285:197:37","text":" @title GameToken\n @dev Optimized ERC-20 game token with enhanced security\n Each game gets its own instance of this contract\n Optimized for gas efficiency while maintaining security"},"fullyImplemented":true,"id":11348,"linearizedBaseContracts":[11348,4066,526,2455,593,2793,2533,3769],"name":"GameToken","nameLocation":"492:9:37","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11090,"mutability":"immutable","name":"_decimals","nameLocation":"636:9:37","nodeType":"VariableDeclaration","scope":11348,"src":"612:33:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11089,"name":"uint8","nodeType":"ElementaryTypeName","src":"612:5:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"functionSelector":"c45a0155","id":11092,"mutability":"immutable","name":"factory","nameLocation":"676:7:37","nodeType":"VariableDeclaration","scope":11348,"src":"651:32:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11091,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d7c81b55","id":11094,"mutability":"immutable","name":"gameId","nameLocation":"759:6:37","nodeType":"VariableDeclaration","scope":11348,"src":"734:31:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11093,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d89135cd","id":11096,"mutability":"mutable","name":"totalBurned","nameLocation":"866:11:37","nodeType":"VariableDeclaration","scope":11348,"src":"851:26:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11095,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5dc96d16","id":11099,"mutability":"mutable","name":"burnEnabled","nameLocation":"931:11:37","nodeType":"VariableDeclaration","scope":11348,"src":"919:30:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11097,"name":"bool","nodeType":"ElementaryTypeName","src":"919:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":11098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"945:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"anonymous":false,"eventSelector":"ccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00","id":11107,"name":"TokensBurned","nameLocation":"1035:12:37","nodeType":"EventDefinition","parameters":{"id":11106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11101,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1064:4:37","nodeType":"VariableDeclaration","scope":11107,"src":"1048:20:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11100,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11103,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1078:6:37","nodeType":"VariableDeclaration","scope":11107,"src":"1070:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11105,"indexed":false,"mutability":"mutable","name":"totalBurned","nameLocation":"1094:11:37","nodeType":"VariableDeclaration","scope":11107,"src":"1086:19:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1047:59:37"},"src":"1029:78:37"},{"anonymous":false,"eventSelector":"1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd","id":11111,"name":"BurnStatusChanged","nameLocation":"1118:17:37","nodeType":"EventDefinition","parameters":{"id":11110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11109,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"1141:7:37","nodeType":"VariableDeclaration","scope":11111,"src":"1136:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11108,"name":"bool","nodeType":"ElementaryTypeName","src":"1136:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1135:14:37"},"src":"1112:38:37"},{"errorSelector":"a9c455db","id":11113,"name":"UnauthorizedBurner","nameLocation":"1206:18:37","nodeType":"ErrorDefinition","parameters":{"id":11112,"nodeType":"ParameterList","parameters":[],"src":"1224:2:37"},"src":"1200:27:37"},{"errorSelector":"be20705f","id":11115,"name":"BurnDisabled","nameLocation":"1238:12:37","nodeType":"ErrorDefinition","parameters":{"id":11114,"nodeType":"ParameterList","parameters":[],"src":"1250:2:37"},"src":"1232:21:37"},{"errorSelector":"1f2a2005","id":11117,"name":"ZeroAmount","nameLocation":"1264:10:37","nodeType":"ErrorDefinition","parameters":{"id":11116,"nodeType":"ParameterList","parameters":[],"src":"1274:2:37"},"src":"1258:19:37"},{"errorSelector":"f4d678b8","id":11119,"name":"InsufficientBalance","nameLocation":"1288:19:37","nodeType":"ErrorDefinition","parameters":{"id":11118,"nodeType":"ParameterList","parameters":[],"src":"1307:2:37"},"src":"1282:28:37"},{"body":{"id":11130,"nodeType":"Block","src":"1386:82:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1400:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1404:6:37","memberName":"sender","nodeType":"MemberAccess","src":"1400:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":11123,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11092,"src":"1414:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1400:21:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11128,"nodeType":"IfStatement","src":"1396:54:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11125,"name":"UnauthorizedBurner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11113,"src":"1430:18:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11127,"nodeType":"RevertStatement","src":"1423:27:37"}},{"id":11129,"nodeType":"PlaceholderStatement","src":"1460:1:37"}]},"id":11131,"name":"onlyFactory","nameLocation":"1372:11:37","nodeType":"ModifierDefinition","parameters":{"id":11120,"nodeType":"ParameterList","parameters":[],"src":"1383:2:37"},"src":"1363:105:37","virtual":false,"visibility":"internal"},{"body":{"id":11140,"nodeType":"Block","src":"1501:67:37","statements":[{"condition":{"id":11134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1515:12:37","subExpression":{"id":11133,"name":"burnEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11099,"src":"1516:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11138,"nodeType":"IfStatement","src":"1511:39:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11135,"name":"BurnDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11115,"src":"1536:12:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:14:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11137,"nodeType":"RevertStatement","src":"1529:21:37"}},{"id":11139,"nodeType":"PlaceholderStatement","src":"1560:1:37"}]},"id":11141,"name":"burnAllowed","nameLocation":"1487:11:37","nodeType":"ModifierDefinition","parameters":{"id":11132,"nodeType":"ParameterList","parameters":[],"src":"1498:2:37"},"src":"1478:90:37","virtual":false,"visibility":"internal"},{"body":{"id":11182,"nodeType":"Block","src":"1864:178:37","statements":[{"expression":{"id":11167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11165,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11090,"src":"1874:9:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11166,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11147,"src":"1886:9:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1874:21:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":11168,"nodeType":"ExpressionStatement","src":"1874:21:37"},{"expression":{"id":11171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11169,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11092,"src":"1905:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11170,"name":"factory_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11153,"src":"1915:8:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1905:18:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11172,"nodeType":"ExpressionStatement","src":"1905:18:37"},{"expression":{"id":11175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11173,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11094,"src":"1933:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11174,"name":"gameId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11155,"src":"1942:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:16:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11176,"nodeType":"ExpressionStatement","src":"1933:16:37"},{"expression":{"arguments":[{"id":11178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11151,"src":"2014:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11179,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11149,"src":"2021:13:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11177,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2008:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:27:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11181,"nodeType":"ExpressionStatement","src":"2008:27:37"}]},"id":11183,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":11158,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11143,"src":"1835:4:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":11159,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11145,"src":"1841:6:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":11160,"kind":"baseConstructorSpecifier","modifierName":{"id":11157,"name":"ERC20","nameLocations":["1829:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1829:5:37"},"nodeType":"ModifierInvocation","src":"1829:19:37"},{"arguments":[{"id":11162,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11151,"src":"1857:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":11163,"kind":"baseConstructorSpecifier","modifierName":{"id":11161,"name":"Ownable","nameLocations":["1849:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"1849:7:37"},"nodeType":"ModifierInvocation","src":"1849:14:37"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11143,"mutability":"mutable","name":"name","nameLocation":"1658:4:37","nodeType":"VariableDeclaration","scope":11183,"src":"1644:18:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11142,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11145,"mutability":"mutable","name":"symbol","nameLocation":"1686:6:37","nodeType":"VariableDeclaration","scope":11183,"src":"1672:20:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11144,"name":"string","nodeType":"ElementaryTypeName","src":"1672:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11147,"mutability":"mutable","name":"decimals_","nameLocation":"1708:9:37","nodeType":"VariableDeclaration","scope":11183,"src":"1702:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11146,"name":"uint8","nodeType":"ElementaryTypeName","src":"1702:5:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11149,"mutability":"mutable","name":"initialSupply","nameLocation":"1735:13:37","nodeType":"VariableDeclaration","scope":11183,"src":"1727:21:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1727:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11151,"mutability":"mutable","name":"owner","nameLocation":"1766:5:37","nodeType":"VariableDeclaration","scope":11183,"src":"1758:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11150,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11153,"mutability":"mutable","name":"factory_","nameLocation":"1789:8:37","nodeType":"VariableDeclaration","scope":11183,"src":"1781:16:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11152,"name":"address","nodeType":"ElementaryTypeName","src":"1781:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11155,"mutability":"mutable","name":"gameId_","nameLocation":"1815:7:37","nodeType":"VariableDeclaration","scope":11183,"src":"1807:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1634:194:37"},"returnParameters":{"id":11164,"nodeType":"ParameterList","parameters":[],"src":"1864:0:37"},"scope":11348,"src":"1623:419:37","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2019],"body":{"id":11191,"nodeType":"Block","src":"2157:33:37","statements":[{"expression":{"id":11189,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11090,"src":"2174:9:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":11188,"id":11190,"nodeType":"Return","src":"2167:16:37"}]},"functionSelector":"313ce567","id":11192,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2109:8:37","nodeType":"FunctionDefinition","overrides":{"id":11185,"nodeType":"OverrideSpecifier","overrides":[],"src":"2132:8:37"},"parameters":{"id":11184,"nodeType":"ParameterList","parameters":[],"src":"2117:2:37"},"returnParameters":{"id":11188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11192,"src":"2150:5:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11186,"name":"uint8","nodeType":"ElementaryTypeName","src":"2150:5:37","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2149:7:37"},"scope":11348,"src":"2100:90:37","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11237,"nodeType":"Block","src":"2560:355:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"2574:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2584:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2574:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11212,"nodeType":"IfStatement","src":"2570:36:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11209,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11117,"src":"2594:10:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2594:12:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11211,"nodeType":"RevertStatement","src":"2587:19:37"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":11214,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11195,"src":"2630:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11213,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2620:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":11215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:15:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11216,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"2638:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2620:24:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11221,"nodeType":"IfStatement","src":"2616:58:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11218,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11119,"src":"2653:19:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:21:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11220,"nodeType":"RevertStatement","src":"2646:28:37"}},{"expression":{"id":11224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11222,"name":"totalBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11096,"src":"2763:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11223,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"2778:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2763:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11225,"nodeType":"ExpressionStatement","src":"2763:21:37"},{"expression":{"arguments":[{"id":11227,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11195,"src":"2832:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11228,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"2838:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11226,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2826:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:19:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11230,"nodeType":"ExpressionStatement","src":"2826:19:37"},{"eventCall":{"arguments":[{"id":11232,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11195,"src":"2882:4:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"2888:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11234,"name":"totalBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11096,"src":"2896:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11231,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"2869:12:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:39:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11236,"nodeType":"EmitStatement","src":"2864:44:37"}]},"documentation":{"id":11193,"nodeType":"StructuredDocumentation","src":"2248:172:37","text":" @dev Burn tokens from a specific account (called by factory)\n @param from Address to burn tokens from\n @param amount Amount of tokens to burn"},"functionSelector":"79cc6790","id":11238,"implemented":true,"kind":"function","modifiers":[{"id":11200,"kind":"modifierInvocation","modifierName":{"id":11199,"name":"onlyFactory","nameLocations":["2500:11:37"],"nodeType":"IdentifierPath","referencedDeclaration":11131,"src":"2500:11:37"},"nodeType":"ModifierInvocation","src":"2500:11:37"},{"id":11202,"kind":"modifierInvocation","modifierName":{"id":11201,"name":"burnAllowed","nameLocations":["2521:11:37"],"nodeType":"IdentifierPath","referencedDeclaration":11141,"src":"2521:11:37"},"nodeType":"ModifierInvocation","src":"2521:11:37"},{"id":11204,"kind":"modifierInvocation","modifierName":{"id":11203,"name":"nonReentrant","nameLocations":["2542:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"2542:12:37"},"nodeType":"ModifierInvocation","src":"2542:12:37"}],"name":"burnFrom","nameLocation":"2434:8:37","nodeType":"FunctionDefinition","parameters":{"id":11198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11195,"mutability":"mutable","name":"from","nameLocation":"2451:4:37","nodeType":"VariableDeclaration","scope":11238,"src":"2443:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11194,"name":"address","nodeType":"ElementaryTypeName","src":"2443:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11197,"mutability":"mutable","name":"amount","nameLocation":"2465:6:37","nodeType":"VariableDeclaration","scope":11238,"src":"2457:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2442:30:37"},"returnParameters":{"id":11205,"nodeType":"ParameterList","parameters":[],"src":"2560:0:37"},"scope":11348,"src":"2425:490:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11272,"nodeType":"Block","src":"3109:197:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11248,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11241,"src":"3123:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3123:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11254,"nodeType":"IfStatement","src":"3119:36:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11251,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11117,"src":"3143:10:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:12:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11253,"nodeType":"RevertStatement","src":"3136:19:37"}},{"expression":{"id":11257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11255,"name":"totalBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11096,"src":"3174:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11256,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11241,"src":"3189:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3174:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11258,"nodeType":"ExpressionStatement","src":"3174:21:37"},{"expression":{"arguments":[{"expression":{"id":11260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3211:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3215:6:37","memberName":"sender","nodeType":"MemberAccess","src":"3211:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11262,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11241,"src":"3223:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11259,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"3205:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11264,"nodeType":"ExpressionStatement","src":"3205:25:37"},{"eventCall":{"arguments":[{"expression":{"id":11266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3267:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:6:37","memberName":"sender","nodeType":"MemberAccess","src":"3267:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11241,"src":"3279:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11269,"name":"totalBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11096,"src":"3287:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11265,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"3254:12:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3254:45:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11271,"nodeType":"EmitStatement","src":"3249:50:37"}]},"documentation":{"id":11239,"nodeType":"StructuredDocumentation","src":"2925:115:37","text":" @dev Allow users to burn their own tokens directly\n @param amount Amount of tokens to burn"},"functionSelector":"42966c68","id":11273,"implemented":true,"kind":"function","modifiers":[{"id":11244,"kind":"modifierInvocation","modifierName":{"id":11243,"name":"burnAllowed","nameLocations":["3084:11:37"],"nodeType":"IdentifierPath","referencedDeclaration":11141,"src":"3084:11:37"},"nodeType":"ModifierInvocation","src":"3084:11:37"},{"id":11246,"kind":"modifierInvocation","modifierName":{"id":11245,"name":"nonReentrant","nameLocations":["3096:12:37"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"3096:12:37"},"nodeType":"ModifierInvocation","src":"3096:12:37"}],"name":"burn","nameLocation":"3054:4:37","nodeType":"FunctionDefinition","parameters":{"id":11242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11241,"mutability":"mutable","name":"amount","nameLocation":"3067:6:37","nodeType":"VariableDeclaration","scope":11273,"src":"3059:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3059:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3058:16:37"},"returnParameters":{"id":11247,"nodeType":"ParameterList","parameters":[],"src":"3109:0:37"},"scope":11348,"src":"3045:261:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11289,"nodeType":"Block","src":"3549:79:37","statements":[{"expression":{"id":11283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11281,"name":"burnEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11099,"src":"3559:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11282,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11276,"src":"3573:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3559:21:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11284,"nodeType":"ExpressionStatement","src":"3559:21:37"},{"eventCall":{"arguments":[{"id":11286,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11276,"src":"3613:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11285,"name":"BurnStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11111,"src":"3595:17:37","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":11287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3595:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11288,"nodeType":"EmitStatement","src":"3590:31:37"}]},"documentation":{"id":11274,"nodeType":"StructuredDocumentation","src":"3365:122:37","text":" @dev Enable/disable burning (emergency control)\n @param enabled Whether burning should be enabled"},"functionSelector":"7b2c835f","id":11290,"implemented":true,"kind":"function","modifiers":[{"id":11279,"kind":"modifierInvocation","modifierName":{"id":11278,"name":"onlyOwner","nameLocations":["3539:9:37"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"3539:9:37"},"nodeType":"ModifierInvocation","src":"3539:9:37"}],"name":"setBurnEnabled","nameLocation":"3501:14:37","nodeType":"FunctionDefinition","parameters":{"id":11277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11276,"mutability":"mutable","name":"enabled","nameLocation":"3521:7:37","nodeType":"VariableDeclaration","scope":11290,"src":"3516:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11275,"name":"bool","nodeType":"ElementaryTypeName","src":"3516:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3515:14:37"},"returnParameters":{"id":11280,"nodeType":"ParameterList","parameters":[],"src":"3549:0:37"},"scope":11348,"src":"3492:136:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11346,"nodeType":"Block","src":"3985:361:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11295,"src":"3999:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4013:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4005:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11303,"name":"address","nodeType":"ElementaryTypeName","src":"4005:7:37","typeDescriptions":{}}},"id":11306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4005:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3999:16:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11311,"nodeType":"IfStatement","src":"3995:41:37","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11308,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11117,"src":"4024:10:37","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4024:12:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11310,"nodeType":"RevertStatement","src":"4017:19:37"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"4059:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4076:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4068:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11313,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:37","typeDescriptions":{}}},"id":11316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4068:10:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4059:19:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":11344,"nodeType":"Block","src":"4245:95:37","statements":[{"expression":{"arguments":[{"id":11340,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11295,"src":"4318:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11341,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11297,"src":"4322:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11337,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11293,"src":"4302:5:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11336,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"4295:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":11338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4295:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4309:8:37","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"4295:22:37","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4295:34:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11343,"nodeType":"ExpressionStatement","src":"4295:34:37"}]},"id":11345,"nodeType":"IfStatement","src":"4055:285:37","trueBody":{"id":11335,"nodeType":"Block","src":"4080:159:37","statements":[{"assignments":[11319,null],"declarations":[{"constant":false,"id":11319,"mutability":"mutable","name":"success","nameLocation":"4127:7:37","nodeType":"VariableDeclaration","scope":11335,"src":"4122:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11318,"name":"bool","nodeType":"ElementaryTypeName","src":"4122:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":11329,"initialValue":{"arguments":[{"hexValue":"","id":11327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4172:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":11322,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11295,"src":"4148:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4140:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":11320,"name":"address","nodeType":"ElementaryTypeName","src":"4140:8:37","stateMutability":"payable","typeDescriptions":{}}},"id":11323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4140:11:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":11324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4152:4:37","memberName":"call","nodeType":"MemberAccess","src":"4140:16:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":11325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11297,"src":"4164:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4140:31:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":11328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4140:35:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4121:54:37"},{"expression":{"arguments":[{"id":11331,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11319,"src":"4197:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":11332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4206:21:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":11330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4189:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4189:39:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11334,"nodeType":"ExpressionStatement","src":"4189:39:37"}]}}]},"documentation":{"id":11291,"nodeType":"StructuredDocumentation","src":"3638:224:37","text":" @dev Emergency function to recover stuck tokens\n @param token Address of token to recover (address(0) for ETH)\n @param to Address to send recovered tokens\n @param amount Amount to recover"},"functionSelector":"ad1329d1","id":11347,"implemented":true,"kind":"function","modifiers":[{"id":11300,"kind":"modifierInvocation","modifierName":{"id":11299,"name":"onlyOwner","nameLocations":["3975:9:37"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"3975:9:37"},"nodeType":"ModifierInvocation","src":"3975:9:37"}],"name":"emergencyRecover","nameLocation":"3876:16:37","nodeType":"FunctionDefinition","parameters":{"id":11298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11293,"mutability":"mutable","name":"token","nameLocation":"3910:5:37","nodeType":"VariableDeclaration","scope":11347,"src":"3902:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11292,"name":"address","nodeType":"ElementaryTypeName","src":"3902:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11295,"mutability":"mutable","name":"to","nameLocation":"3933:2:37","nodeType":"VariableDeclaration","scope":11347,"src":"3925:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11294,"name":"address","nodeType":"ElementaryTypeName","src":"3925:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11297,"mutability":"mutable","name":"amount","nameLocation":"3953:6:37","nodeType":"VariableDeclaration","scope":11347,"src":"3945:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3945:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:73:37"},"returnParameters":{"id":11301,"nodeType":"ParameterList","parameters":[],"src":"3985:0:37"},"scope":11348,"src":"3867:479:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":11349,"src":"483:3865:37","usedErrors":[392,397,563,568,573,582,587,592,4011,11113,11115,11117,11119],"usedEvents":[403,2467,2476,11107,11111]}],"src":"32:4317:37"},"id":37},"contracts/GameTokenFactory.sol":{"ast":{"absolutePath":"contracts/GameTokenFactory.sol","exportedSymbols":{"AccessControl":[295],"Context":[3769],"ERC165":[6624],"ERC20":[2455],"GameToken":[11348],"GameTokenFactory":[12261],"IAccessControl":[378],"IERC20":[2533],"IERC20Errors":[593],"IERC20Metadata":[2793],"Math":[8257],"Ownable":[526],"Panic":[3889],"Pausable":[3997],"ReentrancyGuard":[4066],"SafeCast":[10022]},"id":12262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11350,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:38"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":11351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":296,"src":"58:58:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":11352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":3998,"src":"117:52:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":11353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":4067,"src":"170:59:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":11354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":8258,"src":"230:53:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":2534,"src":"284:56:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/GameToken.sol","file":"./GameToken.sol","id":11356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12262,"sourceUnit":11349,"src":"341:25:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11358,"name":"AccessControl","nameLocations":["859:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"859:13:38"},"id":11359,"nodeType":"InheritanceSpecifier","src":"859:13:38"},{"baseName":{"id":11360,"name":"Pausable","nameLocations":["874:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":3997,"src":"874:8:38"},"id":11361,"nodeType":"InheritanceSpecifier","src":"874:8:38"},{"baseName":{"id":11362,"name":"ReentrancyGuard","nameLocations":["884:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"884:15:38"},"id":11363,"nodeType":"InheritanceSpecifier","src":"884:15:38"}],"canonicalName":"GameTokenFactory","contractDependencies":[11348],"contractKind":"contract","documentation":{"id":11357,"nodeType":"StructuredDocumentation","src":"368:461:38","text":" @title GameTokenFactory\n @dev Enhanced factory contract maintaining original flow with improved security\n Key improvements:\n - Enhanced security with reentrancy protection and access controls\n - Gas optimizations through packed structs and efficient operations\n - Comprehensive input validation and error handling\n - Emergency controls and reserve management\n - Maintains original flow: CREDA → XP → Deploy GameToken → Burn → XP"},"fullyImplemented":true,"id":12261,"linearizedBaseContracts":[12261,4066,3997,295,6624,6636,378,3769],"name":"GameTokenFactory","nameLocation":"839:16:38","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11366,"libraryName":{"id":11364,"name":"Math","nameLocations":["912:4:38"],"nodeType":"IdentifierPath","referencedDeclaration":8257,"src":"912:4:38"},"nodeType":"UsingForDirective","src":"906:23:38","typeName":{"id":11365,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"cb327b8b","id":11371,"mutability":"constant","name":"RATE_MANAGER_ROLE","nameLocation":"1002:17:38","nodeType":"VariableDeclaration","scope":12261,"src":"978:74:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"978:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"524154455f4d414e414745525f524f4c45","id":11369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:19:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2","typeString":"literal_string \"RATE_MANAGER_ROLE\""},"value":"RATE_MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2","typeString":"literal_string \"RATE_MANAGER_ROLE\""}],"id":11368,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:30:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":11376,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1082:11:38","nodeType":"VariableDeclaration","scope":12261,"src":"1058:62:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1058:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":11374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1106:13:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":11373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1096:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"20df4359","id":11381,"mutability":"constant","name":"EMERGENCY_ROLE","nameLocation":"1150:14:38","nodeType":"VariableDeclaration","scope":12261,"src":"1126:68:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1126:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f524f4c45","id":11379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1177:16:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""},"value":"EMERGENCY_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26","typeString":"literal_string \"EMERGENCY_ROLE\""}],"id":11378,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1167:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":11380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:27:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"8760550d","id":11386,"mutability":"constant","name":"MIN_XP_LOCK_AMOUNT","nameLocation":"1229:18:38","nodeType":"VariableDeclaration","scope":12261,"src":"1205:56:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":11385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":11383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1250:4:38","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":11384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:4:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1250:11:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"df525b7d","id":11389,"mutability":"constant","name":"MAX_GAME_TOKEN_DECIMALS","nameLocation":"1331:23:38","nodeType":"VariableDeclaration","scope":12261,"src":"1307:52:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":11388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:2:38","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":true,"functionSelector":"ccd34cd5","id":11392,"mutability":"constant","name":"PRECISION_FACTOR","nameLocation":"1389:16:38","nodeType":"VariableDeclaration","scope":12261,"src":"1365:47:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":11391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:4:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":true,"functionSelector":"86074985","id":11395,"mutability":"constant","name":"MAX_NAME_LENGTH","nameLocation":"1470:15:38","nodeType":"VariableDeclaration","scope":12261,"src":"1446:44:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":11394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1488:2:38","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"functionSelector":"e3d89171","id":11398,"mutability":"constant","name":"MAX_SYMBOL_LENGTH","nameLocation":"1520:17:38","nodeType":"VariableDeclaration","scope":12261,"src":"1496:46:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":11397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1540:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"ecdf8fc4","id":11401,"mutability":"immutable","name":"credaToken","nameLocation":"1626:10:38","nodeType":"VariableDeclaration","scope":12261,"src":"1602:34:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"},"typeName":{"id":11400,"nodeType":"UserDefinedTypeName","pathNode":{"id":11399,"name":"IERC20","nameLocations":["1602:6:38"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"1602:6:38"},"referencedDeclaration":2533,"src":"1602:6:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"ae5014b1","id":11404,"mutability":"immutable","name":"xpToken","nameLocation":"1666:7:38","nodeType":"VariableDeclaration","scope":12261,"src":"1642:31:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"},"typeName":{"id":11403,"nodeType":"UserDefinedTypeName","pathNode":{"id":11402,"name":"IERC20","nameLocations":["1642:6:38"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"1642:6:38"},"referencedDeclaration":2533,"src":"1642:6:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"238d4af8","id":11407,"mutability":"mutable","name":"credaToXpRate","nameLocation":"1699:13:38","nodeType":"VariableDeclaration","scope":12261,"src":"1684:35:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":11406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:4:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"b135bbb0","id":11410,"mutability":"mutable","name":"nextGameId","nameLocation":"1786:10:38","nodeType":"VariableDeclaration","scope":12261,"src":"1771:29:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":11409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"07819945","id":11414,"mutability":"mutable","name":"userLockedCreda","nameLocation":"1919:15:38","nodeType":"VariableDeclaration","scope":12261,"src":"1884:50:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":11413,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11411,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1884:27:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"aa6450ce","id":11416,"mutability":"mutable","name":"totalLockedCreda","nameLocation":"1955:16:38","nodeType":"VariableDeclaration","scope":12261,"src":"1940:31:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1940:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"GameTokenFactory.GameTokenInfo","id":11427,"members":[{"constant":false,"id":11418,"mutability":"mutable","name":"tokenAddress","nameLocation":"2076:12:38","nodeType":"VariableDeclaration","scope":11427,"src":"2068:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11417,"name":"address","nodeType":"ElementaryTypeName","src":"2068:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11420,"mutability":"mutable","name":"creator","nameLocation":"2121:7:38","nodeType":"VariableDeclaration","scope":11427,"src":"2113:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11419,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11422,"mutability":"mutable","name":"xpLocked","nameLocation":"2165:8:38","nodeType":"VariableDeclaration","scope":11427,"src":"2158:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":11421,"name":"uint88","nodeType":"ElementaryTypeName","src":"2158:6:38","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"},{"constant":false,"id":11424,"mutability":"mutable","name":"decimals","nameLocation":"2231:8:38","nodeType":"VariableDeclaration","scope":11427,"src":"2225:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11423,"name":"uint8","nodeType":"ElementaryTypeName","src":"2225:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11426,"mutability":"mutable","name":"active","nameLocation":"2272:6:38","nodeType":"VariableDeclaration","scope":11427,"src":"2267:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11425,"name":"bool","nodeType":"ElementaryTypeName","src":"2267:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"GameTokenInfo","nameLocation":"2044:13:38","nodeType":"StructDefinition","scope":12261,"src":"2037:322:38","visibility":"public"},{"canonicalName":"GameTokenFactory.GameTokenMetadata","id":11436,"members":[{"constant":false,"id":11429,"mutability":"mutable","name":"name","nameLocation":"2472:4:38","nodeType":"VariableDeclaration","scope":11436,"src":"2465:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11428,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11431,"mutability":"mutable","name":"symbol","nameLocation":"2493:6:38","nodeType":"VariableDeclaration","scope":11436,"src":"2486:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11430,"name":"string","nodeType":"ElementaryTypeName","src":"2486:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11433,"mutability":"mutable","name":"initialSupply","nameLocation":"2517:13:38","nodeType":"VariableDeclaration","scope":11436,"src":"2509:21:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11435,"mutability":"mutable","name":"creationTime","nameLocation":"2548:12:38","nodeType":"VariableDeclaration","scope":11436,"src":"2540:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2540:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GameTokenMetadata","nameLocation":"2437:17:38","nodeType":"StructDefinition","scope":12261,"src":"2430:137:38","visibility":"public"},{"constant":false,"functionSelector":"bf034b69","id":11441,"mutability":"mutable","name":"gameTokens","nameLocation":"2618:10:38","nodeType":"VariableDeclaration","scope":12261,"src":"2577:51:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo)"},"typeName":{"id":11440,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2585:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2577:33:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11439,"nodeType":"UserDefinedTypeName","pathNode":{"id":11438,"name":"GameTokenInfo","nameLocations":["2596:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":11427,"src":"2596:13:38"},"referencedDeclaration":11427,"src":"2596:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"05a61954","id":11446,"mutability":"mutable","name":"gameTokenMetadata","nameLocation":"2679:17:38","nodeType":"VariableDeclaration","scope":12261,"src":"2634:62:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata)"},"typeName":{"id":11445,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2642:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2634:37:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11444,"nodeType":"UserDefinedTypeName","pathNode":{"id":11443,"name":"GameTokenMetadata","nameLocations":["2653:17:38"],"nodeType":"IdentifierPath","referencedDeclaration":11436,"src":"2653:17:38"},"referencedDeclaration":11436,"src":"2653:17:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"}}},"visibility":"public"},{"constant":false,"functionSelector":"c21c64a7","id":11451,"mutability":"mutable","name":"userGameTokens","nameLocation":"2739:14:38","nodeType":"VariableDeclaration","scope":12261,"src":"2702:51:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":11450,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11447,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2702:29:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":11448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11449,"nodeType":"ArrayTypeName","src":"2721:9:38","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"1bf44cb0","id":11457,"mutability":"mutable","name":"userGameNames","nameLocation":"2841:13:38","nodeType":"VariableDeclaration","scope":12261,"src":"2790:64:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"typeName":{"id":11456,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11452,"name":"address","nodeType":"ElementaryTypeName","src":"2798:7:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2790:43:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11455,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11453,"name":"string","nodeType":"ElementaryTypeName","src":"2817:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2809:23:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11454,"name":"bool","nodeType":"ElementaryTypeName","src":"2827:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"6d8554e2","id":11459,"mutability":"mutable","name":"xpReserves","nameLocation":"2946:10:38","nodeType":"VariableDeclaration","scope":12261,"src":"2931:25:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2931:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"9f7ba93b5a3c052166a93cfb443d72d1fec4f82bb913b1383b8f26c10fb7941e","id":11467,"name":"CredaLocked","nameLocation":"3051:11:38","nodeType":"EventDefinition","parameters":{"id":11466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11461,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3079:4:38","nodeType":"VariableDeclaration","scope":11467,"src":"3063:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11460,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11463,"indexed":false,"mutability":"mutable","name":"credaAmount","nameLocation":"3093:11:38","nodeType":"VariableDeclaration","scope":11467,"src":"3085:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3085:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11465,"indexed":false,"mutability":"mutable","name":"xpMinted","nameLocation":"3114:8:38","nodeType":"VariableDeclaration","scope":11467,"src":"3106:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3062:61:38"},"src":"3045:79:38"},{"anonymous":false,"eventSelector":"36b9329ca62bde49b750d7ab93525ccc2ff4ced5c2745cd242894377ec4b5d05","id":11483,"name":"GameTokenCreated","nameLocation":"3135:16:38","nodeType":"EventDefinition","parameters":{"id":11482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11469,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"3177:6:38","nodeType":"VariableDeclaration","scope":11483,"src":"3161:22:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3161:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11471,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"3209:7:38","nodeType":"VariableDeclaration","scope":11483,"src":"3193:23:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11470,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11473,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"3242:12:38","nodeType":"VariableDeclaration","scope":11483,"src":"3226:28:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11472,"name":"address","nodeType":"ElementaryTypeName","src":"3226:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11475,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"3271:4:38","nodeType":"VariableDeclaration","scope":11483,"src":"3264:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11474,"name":"string","nodeType":"ElementaryTypeName","src":"3264:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11477,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"3292:6:38","nodeType":"VariableDeclaration","scope":11483,"src":"3285:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11476,"name":"string","nodeType":"ElementaryTypeName","src":"3285:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11479,"indexed":false,"mutability":"mutable","name":"xpLocked","nameLocation":"3316:8:38","nodeType":"VariableDeclaration","scope":11483,"src":"3308:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11478,"name":"uint256","nodeType":"ElementaryTypeName","src":"3308:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11481,"indexed":false,"mutability":"mutable","name":"initialSupply","nameLocation":"3342:13:38","nodeType":"VariableDeclaration","scope":11483,"src":"3334:21:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3151:210:38"},"src":"3129:233:38"},{"anonymous":false,"eventSelector":"efd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca6","id":11493,"name":"GameTokenBurned","nameLocation":"3373:15:38","nodeType":"EventDefinition","parameters":{"id":11492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11485,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"3414:6:38","nodeType":"VariableDeclaration","scope":11493,"src":"3398:22:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11487,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3446:4:38","nodeType":"VariableDeclaration","scope":11493,"src":"3430:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11486,"name":"address","nodeType":"ElementaryTypeName","src":"3430:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11489,"indexed":false,"mutability":"mutable","name":"burnAmount","nameLocation":"3468:10:38","nodeType":"VariableDeclaration","scope":11493,"src":"3460:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11488,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11491,"indexed":false,"mutability":"mutable","name":"xpReturned","nameLocation":"3496:10:38","nodeType":"VariableDeclaration","scope":11493,"src":"3488:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3388:124:38"},"src":"3367:146:38"},{"anonymous":false,"eventSelector":"b38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d1916","id":11499,"name":"RateUpdated","nameLocation":"3524:11:38","nodeType":"EventDefinition","parameters":{"id":11498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11495,"indexed":false,"mutability":"mutable","name":"oldRate","nameLocation":"3544:7:38","nodeType":"VariableDeclaration","scope":11499,"src":"3536:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3536:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11497,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"3561:7:38","nodeType":"VariableDeclaration","scope":11499,"src":"3553:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3553:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3535:34:38"},"src":"3518:52:38"},{"anonymous":false,"eventSelector":"f24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504","id":11507,"name":"EmergencyWithdraw","nameLocation":"3581:17:38","nodeType":"EventDefinition","parameters":{"id":11506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11501,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3615:5:38","nodeType":"VariableDeclaration","scope":11507,"src":"3599:21:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11500,"name":"address","nodeType":"ElementaryTypeName","src":"3599:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11503,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3638:2:38","nodeType":"VariableDeclaration","scope":11507,"src":"3622:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11502,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11505,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3650:6:38","nodeType":"VariableDeclaration","scope":11507,"src":"3642:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3642:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3598:59:38"},"src":"3575:83:38"},{"errorSelector":"1f2a2005","id":11509,"name":"ZeroAmount","nameLocation":"3714:10:38","nodeType":"ErrorDefinition","parameters":{"id":11508,"nodeType":"ParameterList","parameters":[],"src":"3724:2:38"},"src":"3708:19:38"},{"errorSelector":"299dcf9a","id":11511,"name":"ZeroRate","nameLocation":"3738:8:38","nodeType":"ErrorDefinition","parameters":{"id":11510,"nodeType":"ParameterList","parameters":[],"src":"3746:2:38"},"src":"3732:17:38"},{"errorSelector":"bb97cc9b","id":11513,"name":"InvalidGameId","nameLocation":"3760:13:38","nodeType":"ErrorDefinition","parameters":{"id":11512,"nodeType":"ParameterList","parameters":[],"src":"3773:2:38"},"src":"3754:22:38"},{"errorSelector":"0e6a1a76","id":11515,"name":"GameTokenNotActive","nameLocation":"3787:18:38","nodeType":"ErrorDefinition","parameters":{"id":11514,"nodeType":"ParameterList","parameters":[],"src":"3805:2:38"},"src":"3781:27:38"},{"errorSelector":"31d2f709","id":11517,"name":"InsufficientXpReserves","nameLocation":"3819:22:38","nodeType":"ErrorDefinition","parameters":{"id":11516,"nodeType":"ParameterList","parameters":[],"src":"3841:2:38"},"src":"3813:31:38"},{"errorSelector":"d25598a0","id":11519,"name":"InvalidDecimals","nameLocation":"3855:15:38","nodeType":"ErrorDefinition","parameters":{"id":11518,"nodeType":"ParameterList","parameters":[],"src":"3870:2:38"},"src":"3849:24:38"},{"errorSelector":"680b6caf","id":11521,"name":"NameTooLong","nameLocation":"3884:11:38","nodeType":"ErrorDefinition","parameters":{"id":11520,"nodeType":"ParameterList","parameters":[],"src":"3895:2:38"},"src":"3878:20:38"},{"errorSelector":"1124f78b","id":11523,"name":"SymbolTooLong","nameLocation":"3909:13:38","nodeType":"ErrorDefinition","parameters":{"id":11522,"nodeType":"ParameterList","parameters":[],"src":"3922:2:38"},"src":"3903:22:38"},{"errorSelector":"5945ea56","id":11525,"name":"InsufficientAmount","nameLocation":"3936:18:38","nodeType":"ErrorDefinition","parameters":{"id":11524,"nodeType":"ParameterList","parameters":[],"src":"3954:2:38"},"src":"3930:27:38"},{"errorSelector":"90b8ec18","id":11527,"name":"TransferFailed","nameLocation":"3968:14:38","nodeType":"ErrorDefinition","parameters":{"id":11526,"nodeType":"ParameterList","parameters":[],"src":"3982:2:38"},"src":"3962:23:38"},{"errorSelector":"65d7bc1d","id":11529,"name":"DuplicateGameName","nameLocation":"3996:17:38","nodeType":"ErrorDefinition","parameters":{"id":11528,"nodeType":"ParameterList","parameters":[],"src":"4013:2:38"},"src":"3990:26:38"},{"errorSelector":"2d755ec0","id":11531,"name":"GameTokenDeploymentFailed","nameLocation":"4027:25:38","nodeType":"ErrorDefinition","parameters":{"id":11530,"nodeType":"ParameterList","parameters":[],"src":"4052:2:38"},"src":"4021:34:38"},{"errorSelector":"e6c4247b","id":11533,"name":"InvalidAddress","nameLocation":"4066:14:38","nodeType":"ErrorDefinition","parameters":{"id":11532,"nodeType":"ParameterList","parameters":[],"src":"4080:2:38"},"src":"4060:23:38"},{"body":{"id":11594,"nodeType":"Block","src":"4211:413:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11540,"name":"_credaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4225:11:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11541,"name":"address","nodeType":"ElementaryTypeName","src":"4240:7:38","typeDescriptions":{}}},"id":11544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4225:25:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11546,"name":"_xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11537,"src":"4254:8:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":11549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4274:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4266:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11547,"name":"address","nodeType":"ElementaryTypeName","src":"4266:7:38","typeDescriptions":{}}},"id":11550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4266:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4254:22:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4225:51:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11557,"nodeType":"IfStatement","src":"4221:105:38","trueBody":{"id":11556,"nodeType":"Block","src":"4278:48:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11553,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11533,"src":"4299:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11555,"nodeType":"RevertStatement","src":"4292:23:38"}]}},{"expression":{"id":11562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11558,"name":"credaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11401,"src":"4344:10:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11560,"name":"_credaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4364:11:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11559,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"4357:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":11561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4357:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"src":"4344:32:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11563,"nodeType":"ExpressionStatement","src":"4344:32:38"},{"expression":{"id":11568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11564,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11404,"src":"4386:7:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11566,"name":"_xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11537,"src":"4403:8:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11565,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"4396:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":11567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"src":"4386:26:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11569,"nodeType":"ExpressionStatement","src":"4386:26:38"},{"expression":{"arguments":[{"id":11571,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4442:18:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4462:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4466:6:38","memberName":"sender","nodeType":"MemberAccess","src":"4462:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11570,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4431:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:42:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11575,"nodeType":"ExpressionStatement","src":"4431:42:38"},{"expression":{"arguments":[{"id":11577,"name":"RATE_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11371,"src":"4494:17:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4513:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4517:6:38","memberName":"sender","nodeType":"MemberAccess","src":"4513:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11576,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4483:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:41:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11581,"nodeType":"ExpressionStatement","src":"4483:41:38"},{"expression":{"arguments":[{"id":11583,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11376,"src":"4545:11:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4558:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:38","memberName":"sender","nodeType":"MemberAccess","src":"4558:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11582,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4534:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11587,"nodeType":"ExpressionStatement","src":"4534:35:38"},{"expression":{"arguments":[{"id":11589,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11381,"src":"4590:14:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4606:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4610:6:38","memberName":"sender","nodeType":"MemberAccess","src":"4606:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11588,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4579:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4579:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11593,"nodeType":"ExpressionStatement","src":"4579:38:38"}]},"id":11595,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11535,"mutability":"mutable","name":"_credaToken","nameLocation":"4167:11:38","nodeType":"VariableDeclaration","scope":11595,"src":"4159:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11534,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11537,"mutability":"mutable","name":"_xpToken","nameLocation":"4196:8:38","nodeType":"VariableDeclaration","scope":11595,"src":"4188:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11536,"name":"address","nodeType":"ElementaryTypeName","src":"4188:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4149:61:38"},"returnParameters":{"id":11539,"nodeType":"ParameterList","parameters":[],"src":"4211:0:38"},"scope":12261,"src":"4138:486:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11667,"nodeType":"Block","src":"4921:715:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11605,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"4935:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4935:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11611,"nodeType":"IfStatement","src":"4931:41:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11608,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11509,"src":"4960:10:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4960:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11610,"nodeType":"RevertStatement","src":"4953:19:38"}},{"assignments":[11613],"declarations":[{"constant":false,"id":11613,"mutability":"mutable","name":"xpAmount","nameLocation":"5046:8:38","nodeType":"VariableDeclaration","scope":11667,"src":"5038:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11612,"name":"uint256","nodeType":"ElementaryTypeName","src":"5038:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11620,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11614,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5058:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":11615,"name":"credaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11407,"src":"5072:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5058:27:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5057:29:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11618,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11392,"src":"5089:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5057:48:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5038:67:38"},{"condition":{"id":11631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5164:64:38","subExpression":{"arguments":[{"expression":{"id":11623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5189:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5193:6:38","memberName":"sender","nodeType":"MemberAccess","src":"5189:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11627,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5209:4:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}],"id":11626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5201:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11625,"name":"address","nodeType":"ElementaryTypeName","src":"5201:7:38","typeDescriptions":{}}},"id":11628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5201:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11629,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5216:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11621,"name":"credaToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11401,"src":"5165:10:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:12:38","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"5165:23:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":11630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5165:63:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11636,"nodeType":"IfStatement","src":"5160:118:38","trueBody":{"id":11635,"nodeType":"Block","src":"5230:48:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11632,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"5251:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5251:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11634,"nodeType":"RevertStatement","src":"5244:23:38"}]}},{"expression":{"id":11642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11637,"name":"userLockedCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11414,"src":"5334:15:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":11640,"indexExpression":{"expression":{"id":11638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5350:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5354:6:38","memberName":"sender","nodeType":"MemberAccess","src":"5350:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5334:27:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11641,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5365:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5334:42:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11643,"nodeType":"ExpressionStatement","src":"5334:42:38"},{"expression":{"id":11646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11644,"name":"totalLockedCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11416,"src":"5386:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11645,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5406:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5386:31:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11647,"nodeType":"ExpressionStatement","src":"5386:31:38"},{"condition":{"id":11654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5471:39:38","subExpression":{"arguments":[{"expression":{"id":11650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5489:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5493:6:38","memberName":"sender","nodeType":"MemberAccess","src":"5489:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11652,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11613,"src":"5501:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11648,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11404,"src":"5472:7:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:8:38","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"5472:16:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11659,"nodeType":"IfStatement","src":"5467:93:38","trueBody":{"id":11658,"nodeType":"Block","src":"5512:48:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11655,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"5533:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11657,"nodeType":"RevertStatement","src":"5526:23:38"}]}},{"eventCall":{"arguments":[{"expression":{"id":11661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5595:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5599:6:38","memberName":"sender","nodeType":"MemberAccess","src":"5595:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11663,"name":"amountCreda","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5607:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11664,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11613,"src":"5620:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11660,"name":"CredaLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11467,"src":"5583:11:38","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5583:46:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11666,"nodeType":"EmitStatement","src":"5578:51:38"}]},"documentation":{"id":11596,"nodeType":"StructuredDocumentation","src":"4688:120:38","text":" @dev Lock CREDA tokens and receive XP tokens\n @param amountCreda Amount of CREDA tokens to lock"},"functionSelector":"bec697db","id":11668,"implemented":true,"kind":"function","modifiers":[{"id":11601,"kind":"modifierInvocation","modifierName":{"id":11600,"name":"whenNotPaused","nameLocations":["4880:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"4880:13:38"},"nodeType":"ModifierInvocation","src":"4880:13:38"},{"id":11603,"kind":"modifierInvocation","modifierName":{"id":11602,"name":"nonReentrant","nameLocations":["4903:12:38"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"4903:12:38"},"nodeType":"ModifierInvocation","src":"4903:12:38"}],"name":"lockCreda","nameLocation":"4822:9:38","nodeType":"FunctionDefinition","parameters":{"id":11599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11598,"mutability":"mutable","name":"amountCreda","nameLocation":"4840:11:38","nodeType":"VariableDeclaration","scope":11668,"src":"4832:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4832:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4831:21:38"},"returnParameters":{"id":11604,"nodeType":"ParameterList","parameters":[],"src":"4921:0:38"},"scope":12261,"src":"4813:823:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11892,"nodeType":"Block","src":"6241:2355:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11688,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"6283:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11689,"name":"MIN_XP_LOCK_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11386,"src":"6294:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6283:29:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11694,"nodeType":"IfStatement","src":"6279:62:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11691,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11525,"src":"6321:18:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6321:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11693,"nodeType":"RevertStatement","src":"6314:27:38"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11695,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11677,"src":"6355:8:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":11696,"name":"MAX_GAME_TOKEN_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11389,"src":"6366:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6355:34:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11701,"nodeType":"IfStatement","src":"6351:64:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11698,"name":"InvalidDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11519,"src":"6398:15:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6398:17:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11700,"nodeType":"RevertStatement","src":"6391:24:38"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11704,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"6435:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6429:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11702,"name":"bytes","nodeType":"ElementaryTypeName","src":"6429:5:38","typeDescriptions":{}}},"id":11705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6429:11:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6441:6:38","memberName":"length","nodeType":"MemberAccess","src":"6429:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6451:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6429:23:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11711,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"6462:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11709,"name":"bytes","nodeType":"ElementaryTypeName","src":"6456:5:38","typeDescriptions":{}}},"id":11712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6456:11:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6468:6:38","memberName":"length","nodeType":"MemberAccess","src":"6456:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":11714,"name":"MAX_NAME_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11395,"src":"6477:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6456:36:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:63:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11720,"nodeType":"IfStatement","src":"6425:89:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11717,"name":"NameTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11521,"src":"6501:11:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11719,"nodeType":"RevertStatement","src":"6494:20:38"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11723,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11675,"src":"6534:6:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6528:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11721,"name":"bytes","nodeType":"ElementaryTypeName","src":"6528:5:38","typeDescriptions":{}}},"id":11724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6528:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6542:6:38","memberName":"length","nodeType":"MemberAccess","src":"6528:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6552:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6528:25:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11730,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11675,"src":"6563:6:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":11729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6557:5:38","typeDescriptions":{}}},"id":11731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":11732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6571:6:38","memberName":"length","nodeType":"MemberAccess","src":"6557:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":11733,"name":"MAX_SYMBOL_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11398,"src":"6580:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6557:40:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6528:69:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11739,"nodeType":"IfStatement","src":"6524:97:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11736,"name":"SymbolTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11523,"src":"6606:13:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6606:15:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11738,"nodeType":"RevertStatement","src":"6599:22:38"}},{"condition":{"baseExpression":{"baseExpression":{"id":11740,"name":"userGameNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11457,"src":"6635:13:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":11743,"indexExpression":{"expression":{"id":11741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6649:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6653:6:38","memberName":"sender","nodeType":"MemberAccess","src":"6649:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6635:25:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":11745,"indexExpression":{"id":11744,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"6661:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6635:31:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11749,"nodeType":"IfStatement","src":"6631:63:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11746,"name":"DuplicateGameName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11529,"src":"6675:17:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6675:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11748,"nodeType":"RevertStatement","src":"6668:26:38"}},{"condition":{"id":11760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6762:58:38","subExpression":{"arguments":[{"expression":{"id":11752,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6784:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6788:6:38","memberName":"sender","nodeType":"MemberAccess","src":"6784:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11756,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6804:4:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}],"id":11755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6796:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11754,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:38","typeDescriptions":{}}},"id":11757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6796:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11758,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"6811:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11750,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11404,"src":"6763:7:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6771:12:38","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"6763:20:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":11759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6763:57:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11765,"nodeType":"IfStatement","src":"6758:112:38","trueBody":{"id":11764,"nodeType":"Block","src":"6822:48:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11761,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"6843:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11763,"nodeType":"RevertStatement","src":"6836:23:38"}]}},{"expression":{"id":11768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11766,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11459,"src":"6918:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11767,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"6932:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6918:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11769,"nodeType":"ExpressionStatement","src":"6918:22:38"},{"expression":{"id":11773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11770,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"6959:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6968:12:38","subExpression":{"id":11771,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11410,"src":"6968:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6959:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11774,"nodeType":"ExpressionStatement","src":"6959:21:38"},{"assignments":[11776],"declarations":[{"constant":false,"id":11776,"mutability":"mutable","name":"initialSupply","nameLocation":"7075:13:38","nodeType":"VariableDeclaration","scope":11892,"src":"7067:21:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11775,"name":"uint256","nodeType":"ElementaryTypeName","src":"7067:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11785,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11777,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"7091:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":11778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7103:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":11779,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11677,"src":"7109:8:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7103:14:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7102:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7091:27:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":11783,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11392,"src":"7121:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7091:46:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7067:70:38"},{"clauses":[{"block":{"id":11812,"nodeType":"Block","src":"7432:57:38","statements":[{"expression":{"id":11810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11805,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11686,"src":"7446:12:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11808,"name":"newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11803,"src":"7469:8:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}],"id":11807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7461:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11806,"name":"address","nodeType":"ElementaryTypeName","src":"7461:7:38","typeDescriptions":{}}},"id":11809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7461:17:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7446:32:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11811,"nodeType":"ExpressionStatement","src":"7446:32:38"}]},"errorName":"","id":11813,"nodeType":"TryCatchClause","parameters":{"id":11804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11803,"mutability":"mutable","name":"newToken","nameLocation":"7422:8:38","nodeType":"VariableDeclaration","scope":11813,"src":"7412:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"},"typeName":{"id":11802,"nodeType":"UserDefinedTypeName","pathNode":{"id":11801,"name":"GameToken","nameLocations":["7412:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":11348,"src":"7412:9:38"},"referencedDeclaration":11348,"src":"7412:9:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}},"visibility":"internal"}],"src":"7411:20:38"},"src":"7403:86:38"},{"block":{"id":11833,"nodeType":"Block","src":"7496:263:38","statements":[{"expression":{"id":11816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11814,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11459,"src":"7564:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":11815,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"7578:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7564:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11817,"nodeType":"ExpressionStatement","src":"7564:22:38"},{"condition":{"id":11824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7604:39:38","subExpression":{"arguments":[{"expression":{"id":11820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7622:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7626:6:38","memberName":"sender","nodeType":"MemberAccess","src":"7622:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11822,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"7634:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11818,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11404,"src":"7605:7:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7613:8:38","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"7605:16:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11829,"nodeType":"IfStatement","src":"7600:101:38","trueBody":{"id":11828,"nodeType":"Block","src":"7645:56:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11825,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"7670:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11827,"nodeType":"RevertStatement","src":"7663:23:38"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11830,"name":"GameTokenDeploymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11531,"src":"7721:25:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7721:27:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11832,"nodeType":"RevertStatement","src":"7714:34:38"}]},"errorName":"","id":11834,"nodeType":"TryCatchClause","src":"7490:269:38"}],"externalCall":{"arguments":[{"id":11789,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"7228:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11790,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11675,"src":"7246:6:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11791,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11677,"src":"7266:8:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":11792,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11776,"src":"7288:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7315:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7319:6:38","memberName":"sender","nodeType":"MemberAccess","src":"7315:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11797,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7356:4:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GameTokenFactory_$12261","typeString":"contract GameTokenFactory"}],"id":11796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7348:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11795,"name":"address","nodeType":"ElementaryTypeName","src":"7348:7:38","typeDescriptions":{}}},"id":11798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7348:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11799,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"7386:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"7201:13:38","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_contract$_GameToken_$11348_$","typeString":"function (string memory,string memory,uint8,uint256,address,address,uint256) returns (contract GameToken)"},"typeName":{"id":11787,"nodeType":"UserDefinedTypeName","pathNode":{"id":11786,"name":"GameToken","nameLocations":["7205:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":11348,"src":"7205:9:38"},"referencedDeclaration":11348,"src":"7205:9:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}}},"id":11800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:201:38","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}},"id":11835,"nodeType":"TryStatement","src":"7197:562:38"},{"expression":{"id":11850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11836,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11441,"src":"7826:10:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo storage ref)"}},"id":11838,"indexExpression":{"id":11837,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"7837:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7826:18:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage","typeString":"struct GameTokenFactory.GameTokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11840,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11686,"src":"7889:12:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":11841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7924:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:38","memberName":"sender","nodeType":"MemberAccess","src":"7924:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11845,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"7965:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7958:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":11843,"name":"uint88","nodeType":"ElementaryTypeName","src":"7958:6:38","typeDescriptions":{}}},"id":11846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7958:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"id":11847,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11677,"src":"8029:8:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"74727565","id":11848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8059:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint88","typeString":"uint88"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11839,"name":"GameTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11427,"src":"7847:13:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameTokenInfo_$11427_storage_ptr_$","typeString":"type(struct GameTokenFactory.GameTokenInfo storage pointer)"}},"id":11849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7875:12:38","7915:7:38","7948:8:38","8019:8:38","8051:6:38"],"names":["tokenAddress","creator","xpLocked","decimals","active"],"nodeType":"FunctionCall","src":"7847:227:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo memory"}},"src":"7826:248:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage","typeString":"struct GameTokenFactory.GameTokenInfo storage ref"}},"id":11851,"nodeType":"ExpressionStatement","src":"7826:248:38"},{"expression":{"id":11862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11852,"name":"gameTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11446,"src":"8130:17:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata storage ref)"}},"id":11854,"indexExpression":{"id":11853,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"8148:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8130:25:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage","typeString":"struct GameTokenFactory.GameTokenMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11856,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"8196:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11857,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11675,"src":"8222:6:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11858,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11776,"src":"8257:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8298:5:38","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8304:9:38","memberName":"timestamp","nodeType":"MemberAccess","src":"8298:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11855,"name":"GameTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11436,"src":"8158:17:38","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameTokenMetadata_$11436_storage_ptr_$","typeString":"type(struct GameTokenFactory.GameTokenMetadata storage pointer)"}},"id":11861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8190:4:38","8214:6:38","8242:13:38","8284:12:38"],"names":["name","symbol","initialSupply","creationTime"],"nodeType":"FunctionCall","src":"8158:166:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"src":"8130:194:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage","typeString":"struct GameTokenFactory.GameTokenMetadata storage ref"}},"id":11863,"nodeType":"ExpressionStatement","src":"8130:194:38"},{"expression":{"arguments":[{"id":11869,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"8421:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":11864,"name":"userGameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11451,"src":"8389:14:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":11867,"indexExpression":{"expression":{"id":11865,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8404:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8408:6:38","memberName":"sender","nodeType":"MemberAccess","src":"8404:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8389:26:38","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":11868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8416:4:38","memberName":"push","nodeType":"MemberAccess","src":"8389:31:38","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":11870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:39:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11871,"nodeType":"ExpressionStatement","src":"8389:39:38"},{"expression":{"id":11879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":11872,"name":"userGameNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11457,"src":"8438:13:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":11876,"indexExpression":{"expression":{"id":11873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8452:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8456:6:38","memberName":"sender","nodeType":"MemberAccess","src":"8452:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8438:25:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":11877,"indexExpression":{"id":11875,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"8464:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8438:31:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8472:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8438:38:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11880,"nodeType":"ExpressionStatement","src":"8438:38:38"},{"eventCall":{"arguments":[{"id":11882,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11684,"src":"8517:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8525:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8529:6:38","memberName":"sender","nodeType":"MemberAccess","src":"8525:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11885,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11686,"src":"8537:12:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11886,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11673,"src":"8551:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11887,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11675,"src":"8557:6:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":11888,"name":"xpAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11671,"src":"8565:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11889,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11776,"src":"8575:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11881,"name":"GameTokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11483,"src":"8500:16:38","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,string memory,string memory,uint256,uint256)"}},"id":11890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:89:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11891,"nodeType":"EmitStatement","src":"8495:94:38"}]},"documentation":{"id":11669,"nodeType":"StructuredDocumentation","src":"5705:265:38","text":" @dev Create a new ERC-20 game token by locking XP tokens\n @param xpAmount Amount of XP tokens to lock\n @param name Name of the game token\n @param symbol Symbol of the game token\n @param decimals Decimals for the game token"},"functionSelector":"fd44d274","id":11893,"implemented":true,"kind":"function","modifiers":[{"id":11680,"kind":"modifierInvocation","modifierName":{"id":11679,"name":"whenNotPaused","nameLocations":["6145:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"6145:13:38"},"nodeType":"ModifierInvocation","src":"6145:13:38"},{"id":11682,"kind":"modifierInvocation","modifierName":{"id":11681,"name":"nonReentrant","nameLocations":["6168:12:38"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"6168:12:38"},"nodeType":"ModifierInvocation","src":"6168:12:38"}],"name":"createGameToken","nameLocation":"5984:15:38","nodeType":"FunctionDefinition","parameters":{"id":11678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11671,"mutability":"mutable","name":"xpAmount","nameLocation":"6017:8:38","nodeType":"VariableDeclaration","scope":11893,"src":"6009:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6009:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11673,"mutability":"mutable","name":"name","nameLocation":"6051:4:38","nodeType":"VariableDeclaration","scope":11893,"src":"6035:20:38","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11672,"name":"string","nodeType":"ElementaryTypeName","src":"6035:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11675,"mutability":"mutable","name":"symbol","nameLocation":"6081:6:38","nodeType":"VariableDeclaration","scope":11893,"src":"6065:22:38","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11674,"name":"string","nodeType":"ElementaryTypeName","src":"6065:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11677,"mutability":"mutable","name":"decimals","nameLocation":"6103:8:38","nodeType":"VariableDeclaration","scope":11893,"src":"6097:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11676,"name":"uint8","nodeType":"ElementaryTypeName","src":"6097:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5999:118:38"},"returnParameters":{"id":11687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11684,"mutability":"mutable","name":"gameId","nameLocation":"6207:6:38","nodeType":"VariableDeclaration","scope":11893,"src":"6199:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6199:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11686,"mutability":"mutable","name":"tokenAddress","nameLocation":"6223:12:38","nodeType":"VariableDeclaration","scope":11893,"src":"6215:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11685,"name":"address","nodeType":"ElementaryTypeName","src":"6215:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:38:38"},"scope":12261,"src":"5975:2621:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12005,"nodeType":"Block","src":"8973:1049:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11905,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"8987:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8987:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11911,"nodeType":"IfStatement","src":"8983:40:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11908,"name":"ZeroAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11509,"src":"9011:10:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9011:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11910,"nodeType":"RevertStatement","src":"9004:19:38"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11912,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"9037:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9047:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9037:11:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11915,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"9052:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":11916,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11410,"src":"9062:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9052:20:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9037:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11922,"nodeType":"IfStatement","src":"9033:63:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11919,"name":"InvalidGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11513,"src":"9081:13:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:15:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11921,"nodeType":"RevertStatement","src":"9074:22:38"}},{"assignments":[11925],"declarations":[{"constant":false,"id":11925,"mutability":"mutable","name":"gameInfo","nameLocation":"9137:8:38","nodeType":"VariableDeclaration","scope":12005,"src":"9115:30:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"},"typeName":{"id":11924,"nodeType":"UserDefinedTypeName","pathNode":{"id":11923,"name":"GameTokenInfo","nameLocations":["9115:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":11427,"src":"9115:13:38"},"referencedDeclaration":11427,"src":"9115:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"}},"visibility":"internal"}],"id":11929,"initialValue":{"baseExpression":{"id":11926,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11441,"src":"9148:10:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo storage ref)"}},"id":11928,"indexExpression":{"id":11927,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"9159:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9148:18:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage","typeString":"struct GameTokenFactory.GameTokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9115:51:38"},{"condition":{"id":11932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9180:16:38","subExpression":{"expression":{"id":11930,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11925,"src":"9181:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo storage pointer"}},"id":11931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9190:6:38","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":11426,"src":"9181:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11936,"nodeType":"IfStatement","src":"9176:49:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11933,"name":"GameTokenNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11515,"src":"9205:18:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9205:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11935,"nodeType":"RevertStatement","src":"9198:27:38"}},{"assignments":[11939],"declarations":[{"constant":false,"id":11939,"mutability":"mutable","name":"metadata","nameLocation":"9269:8:38","nodeType":"VariableDeclaration","scope":12005,"src":"9244:33:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"},"typeName":{"id":11938,"nodeType":"UserDefinedTypeName","pathNode":{"id":11937,"name":"GameTokenMetadata","nameLocations":["9244:17:38"],"nodeType":"IdentifierPath","referencedDeclaration":11436,"src":"9244:17:38"},"referencedDeclaration":11436,"src":"9244:17:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"}},"visibility":"internal"}],"id":11943,"initialValue":{"baseExpression":{"id":11940,"name":"gameTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11446,"src":"9280:17:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata storage ref)"}},"id":11942,"indexExpression":{"id":11941,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"9298:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9280:25:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage","typeString":"struct GameTokenFactory.GameTokenMetadata storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9244:61:38"},{"assignments":[11945],"declarations":[{"constant":false,"id":11945,"mutability":"mutable","name":"xpToReturn","nameLocation":"9381:10:38","nodeType":"VariableDeclaration","scope":12005,"src":"9373:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9373:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11946,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"9395:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"expression":{"id":11949,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11925,"src":"9416:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo storage pointer"}},"id":11950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9425:8:38","memberName":"xpLocked","nodeType":"MemberAccess","referencedDeclaration":11422,"src":"9416:17:38","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint88","typeString":"uint88"}],"id":11948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9408:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11947,"name":"uint256","nodeType":"ElementaryTypeName","src":"9408:7:38","typeDescriptions":{}}},"id":11951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9408:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:39:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9394:41:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":11954,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11939,"src":"9438:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"id":11955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9447:13:38","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":11433,"src":"9438:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9394:66:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9373:87:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11958,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11459,"src":"9483:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11959,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11945,"src":"9496:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:23:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11964,"nodeType":"IfStatement","src":"9479:60:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11961,"name":"InsufficientXpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11517,"src":"9515:22:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9515:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11963,"nodeType":"RevertStatement","src":"9508:31:38"}},{"assignments":[11967],"declarations":[{"constant":false,"id":11967,"mutability":"mutable","name":"gameToken","nameLocation":"9620:9:38","nodeType":"VariableDeclaration","scope":12005,"src":"9610:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"},"typeName":{"id":11966,"nodeType":"UserDefinedTypeName","pathNode":{"id":11965,"name":"GameToken","nameLocations":["9610:9:38"],"nodeType":"IdentifierPath","referencedDeclaration":11348,"src":"9610:9:38"},"referencedDeclaration":11348,"src":"9610:9:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}},"visibility":"internal"}],"id":11972,"initialValue":{"arguments":[{"expression":{"id":11969,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11925,"src":"9642:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo storage pointer"}},"id":11970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9651:12:38","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":11418,"src":"9642:21:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11968,"name":"GameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11348,"src":"9632:9:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GameToken_$11348_$","typeString":"type(contract GameToken)"}},"id":11971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9632:32:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}},"nodeType":"VariableDeclarationStatement","src":"9610:54:38"},{"expression":{"arguments":[{"expression":{"id":11976,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9693:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9697:6:38","memberName":"sender","nodeType":"MemberAccess","src":"9693:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11978,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"9705:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11973,"name":"gameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11967,"src":"9674:9:38","typeDescriptions":{"typeIdentifier":"t_contract$_GameToken_$11348","typeString":"contract GameToken"}},"id":11975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9684:8:38","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":11238,"src":"9674:18:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":11979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:42:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11980,"nodeType":"ExpressionStatement","src":"9674:42:38"},{"expression":{"id":11983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11981,"name":"xpReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11459,"src":"9759:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":11982,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11945,"src":"9773:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9759:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11984,"nodeType":"ExpressionStatement","src":"9759:24:38"},{"condition":{"id":11991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9842:41:38","subExpression":{"arguments":[{"expression":{"id":11987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9860:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9864:6:38","memberName":"sender","nodeType":"MemberAccess","src":"9860:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11989,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11945,"src":"9872:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11985,"name":"xpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11404,"src":"9843:7:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":11986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9851:8:38","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"9843:16:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9843:40:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11996,"nodeType":"IfStatement","src":"9838:95:38","trueBody":{"id":11995,"nodeType":"Block","src":"9885:48:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":11992,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"9906:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11994,"nodeType":"RevertStatement","src":"9899:23:38"}]}},{"eventCall":{"arguments":[{"id":11998,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"9972:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":11999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9980:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9984:6:38","memberName":"sender","nodeType":"MemberAccess","src":"9980:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12001,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"9992:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12002,"name":"xpToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11945,"src":"10004:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11997,"name":"GameTokenBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11493,"src":"9956:15:38","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":12003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:59:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12004,"nodeType":"EmitStatement","src":"9951:64:38"}]},"documentation":{"id":11894,"nodeType":"StructuredDocumentation","src":"8675:166:38","text":" @dev Burn game tokens to reclaim XP tokens\n @param gameId ID of the game token to burn\n @param burnAmount Amount of game tokens to burn"},"functionSelector":"5ed6c1db","id":12006,"implemented":true,"kind":"function","modifiers":[{"id":11901,"kind":"modifierInvocation","modifierName":{"id":11900,"name":"whenNotPaused","nameLocations":["8932:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":3922,"src":"8932:13:38"},"nodeType":"ModifierInvocation","src":"8932:13:38"},{"id":11903,"kind":"modifierInvocation","modifierName":{"id":11902,"name":"nonReentrant","nameLocations":["8955:12:38"],"nodeType":"IdentifierPath","referencedDeclaration":4030,"src":"8955:12:38"},"nodeType":"ModifierInvocation","src":"8955:12:38"}],"name":"burnGameToken","nameLocation":"8855:13:38","nodeType":"FunctionDefinition","parameters":{"id":11899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11896,"mutability":"mutable","name":"gameId","nameLocation":"8877:6:38","nodeType":"VariableDeclaration","scope":12006,"src":"8869:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11898,"mutability":"mutable","name":"burnAmount","nameLocation":"8893:10:38","nodeType":"VariableDeclaration","scope":12006,"src":"8885:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11897,"name":"uint256","nodeType":"ElementaryTypeName","src":"8885:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8868:36:38"},"returnParameters":{"id":11904,"nodeType":"ParameterList","parameters":[],"src":"8973:0:38"},"scope":12261,"src":"8846:1176:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12035,"nodeType":"Block","src":"10278:188:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12015,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12009,"src":"10292:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10303:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10292:12:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12021,"nodeType":"IfStatement","src":"10288:35:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":12018,"name":"ZeroRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11511,"src":"10313:8:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":12019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10313:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12020,"nodeType":"RevertStatement","src":"10306:17:38"}},{"assignments":[12023],"declarations":[{"constant":false,"id":12023,"mutability":"mutable","name":"oldRate","nameLocation":"10350:7:38","nodeType":"VariableDeclaration","scope":12035,"src":"10342:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12022,"name":"uint256","nodeType":"ElementaryTypeName","src":"10342:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12025,"initialValue":{"id":12024,"name":"credaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11407,"src":"10360:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10342:31:38"},{"expression":{"id":12028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12026,"name":"credaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11407,"src":"10383:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12027,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12009,"src":"10399:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10383:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12029,"nodeType":"ExpressionStatement","src":"10383:23:38"},{"eventCall":{"arguments":[{"id":12031,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12023,"src":"10442:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12032,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12009,"src":"10451:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12030,"name":"RateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11499,"src":"10430:11:38","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":12033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10430:29:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12034,"nodeType":"EmitStatement","src":"10425:34:38"}]},"documentation":{"id":12007,"nodeType":"StructuredDocumentation","src":"10081:121:38","text":" @dev Update CREDA to XP conversion rate\n @param newRate New rate (with PRECISION_FACTOR scaling)"},"functionSelector":"34fcf437","id":12036,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12012,"name":"RATE_MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11371,"src":"10259:17:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12013,"kind":"modifierInvocation","modifierName":{"id":12011,"name":"onlyRole","nameLocations":["10250:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10250:8:38"},"nodeType":"ModifierInvocation","src":"10250:27:38"}],"name":"setRate","nameLocation":"10216:7:38","nodeType":"FunctionDefinition","parameters":{"id":12010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12009,"mutability":"mutable","name":"newRate","nameLocation":"10232:7:38","nodeType":"VariableDeclaration","scope":12036,"src":"10224:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12008,"name":"uint256","nodeType":"ElementaryTypeName","src":"10224:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10223:17:38"},"returnParameters":{"id":12014,"nodeType":"ParameterList","parameters":[],"src":"10278:0:38"},"scope":12261,"src":"10207:259:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12046,"nodeType":"Block","src":"10578:25:38","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12043,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"10588:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10588:8:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12045,"nodeType":"ExpressionStatement","src":"10588:8:38"}]},"documentation":{"id":12037,"nodeType":"StructuredDocumentation","src":"10476:49:38","text":" @dev Pause contract operations"},"functionSelector":"8456cb59","id":12047,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12040,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11376,"src":"10565:11:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12041,"kind":"modifierInvocation","modifierName":{"id":12039,"name":"onlyRole","nameLocations":["10556:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10556:8:38"},"nodeType":"ModifierInvocation","src":"10556:21:38"}],"name":"pause","nameLocation":"10539:5:38","nodeType":"FunctionDefinition","parameters":{"id":12038,"nodeType":"ParameterList","parameters":[],"src":"10544:2:38"},"returnParameters":{"id":12042,"nodeType":"ParameterList","parameters":[],"src":"10578:0:38"},"scope":12261,"src":"10530:73:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12057,"nodeType":"Block","src":"10719:27:38","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12054,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"10729:8:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12056,"nodeType":"ExpressionStatement","src":"10729:10:38"}]},"documentation":{"id":12048,"nodeType":"StructuredDocumentation","src":"10613:51:38","text":" @dev Unpause contract operations"},"functionSelector":"3f4ba83a","id":12058,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12051,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11376,"src":"10706:11:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12052,"kind":"modifierInvocation","modifierName":{"id":12050,"name":"onlyRole","nameLocations":["10697:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10697:8:38"},"nodeType":"ModifierInvocation","src":"10697:21:38"}],"name":"unpause","nameLocation":"10678:7:38","nodeType":"FunctionDefinition","parameters":{"id":12049,"nodeType":"ParameterList","parameters":[],"src":"10685:2:38"},"returnParameters":{"id":12053,"nodeType":"ParameterList","parameters":[],"src":"10719:0:38"},"scope":12261,"src":"10669:77:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12127,"nodeType":"Block","src":"11095:486:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12071,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12063,"src":"11109:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":12074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11123:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11115:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12072,"name":"address","nodeType":"ElementaryTypeName","src":"11115:7:38","typeDescriptions":{}}},"id":12075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11115:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11109:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12080,"nodeType":"IfStatement","src":"11105:45:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":12077,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11533,"src":"11134:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":12078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11134:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12079,"nodeType":"RevertStatement","src":"11127:23:38"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12081,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12061,"src":"11173:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":12084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11190:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11182:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12082,"name":"address","nodeType":"ElementaryTypeName","src":"11182:7:38","typeDescriptions":{}}},"id":12085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11173:19:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12119,"nodeType":"Block","src":"11358:157:38","statements":[{"condition":{"id":12113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11412:35:38","subExpression":{"arguments":[{"id":12110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12063,"src":"11436:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12065,"src":"11440:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":12107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12061,"src":"11420:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12106,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"11413:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2533_$","typeString":"type(contract IERC20)"}},"id":12108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11413:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2533","typeString":"contract IERC20"}},"id":12109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11427:8:38","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2500,"src":"11413:22:38","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":12112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11413:34:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12118,"nodeType":"IfStatement","src":"11408:97:38","trueBody":{"id":12117,"nodeType":"Block","src":"11449:56:38","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":12114,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"11474:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":12115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11474:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12116,"nodeType":"RevertStatement","src":"11467:23:38"}]}}]},"id":12120,"nodeType":"IfStatement","src":"11169:346:38","trueBody":{"id":12105,"nodeType":"Block","src":"11194:158:38","statements":[{"assignments":[12088,null],"declarations":[{"constant":false,"id":12088,"mutability":"mutable","name":"success","nameLocation":"11242:7:38","nodeType":"VariableDeclaration","scope":12105,"src":"11237:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12087,"name":"bool","nodeType":"ElementaryTypeName","src":"11237:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":12098,"initialValue":{"arguments":[{"hexValue":"","id":12096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11287:2:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":12091,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12063,"src":"11263:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11255:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":12089,"name":"address","nodeType":"ElementaryTypeName","src":"11255:8:38","stateMutability":"payable","typeDescriptions":{}}},"id":12092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:11:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":12093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11267:4:38","memberName":"call","nodeType":"MemberAccess","src":"11255:16:38","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":12095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":12094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12065,"src":"11279:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11255:31:38","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":12097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11236:54:38"},{"condition":{"id":12100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11308:8:38","subExpression":{"id":12099,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12088,"src":"11309:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12104,"nodeType":"IfStatement","src":"11304:37:38","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":12101,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11527,"src":"11325:14:38","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":12102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12103,"nodeType":"RevertStatement","src":"11318:23:38"}}]}},{"eventCall":{"arguments":[{"id":12122,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12061,"src":"11556:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12123,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12063,"src":"11563:2:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12065,"src":"11567:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12121,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"11538:17:38","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":12125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11538:36:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12126,"nodeType":"EmitStatement","src":"11533:41:38"}]},"documentation":{"id":12059,"nodeType":"StructuredDocumentation","src":"10756:200:38","text":" @dev Emergency withdraw function for stuck tokens\n @param token Address of token to withdraw\n @param to Address to send tokens to\n @param amount Amount to withdraw"},"functionSelector":"e63ea408","id":12128,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12068,"name":"EMERGENCY_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11381,"src":"11079:14:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12069,"kind":"modifierInvocation","modifierName":{"id":12067,"name":"onlyRole","nameLocations":["11070:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"11070:8:38"},"nodeType":"ModifierInvocation","src":"11070:24:38"}],"name":"emergencyWithdraw","nameLocation":"10970:17:38","nodeType":"FunctionDefinition","parameters":{"id":12066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12061,"mutability":"mutable","name":"token","nameLocation":"11005:5:38","nodeType":"VariableDeclaration","scope":12128,"src":"10997:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12060,"name":"address","nodeType":"ElementaryTypeName","src":"10997:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12063,"mutability":"mutable","name":"to","nameLocation":"11028:2:38","nodeType":"VariableDeclaration","scope":12128,"src":"11020:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12062,"name":"address","nodeType":"ElementaryTypeName","src":"11020:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12065,"mutability":"mutable","name":"amount","nameLocation":"11048:6:38","nodeType":"VariableDeclaration","scope":12128,"src":"11040:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12064,"name":"uint256","nodeType":"ElementaryTypeName","src":"11040:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10987:73:38"},"returnParameters":{"id":12070,"nodeType":"ParameterList","parameters":[],"src":"11095:0:38"},"scope":12261,"src":"10961:620:38","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12152,"nodeType":"Block","src":"11938:88:38","statements":[{"expression":{"id":12144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12140,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12135,"src":"11948:4:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":12141,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11441,"src":"11955:10:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo storage ref)"}},"id":12143,"indexExpression":{"id":12142,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12131,"src":"11966:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11955:18:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage","typeString":"struct GameTokenFactory.GameTokenInfo storage ref"}},"src":"11948:25:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo memory"}},"id":12145,"nodeType":"ExpressionStatement","src":"11948:25:38"},{"expression":{"id":12150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12146,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12138,"src":"11983:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":12147,"name":"gameTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11446,"src":"11994:17:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata storage ref)"}},"id":12149,"indexExpression":{"id":12148,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12131,"src":"12012:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11994:25:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage","typeString":"struct GameTokenFactory.GameTokenMetadata storage ref"}},"src":"11983:36:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"id":12151,"nodeType":"ExpressionStatement","src":"11983:36:38"}]},"documentation":{"id":12129,"nodeType":"StructuredDocumentation","src":"11639:101:38","text":" @dev Get complete game token information\n @param gameId ID of the game token"},"functionSelector":"5e79c1dc","id":12153,"implemented":true,"kind":"function","modifiers":[],"name":"getGameTokenInfo","nameLocation":"11754:16:38","nodeType":"FunctionDefinition","parameters":{"id":12132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12131,"mutability":"mutable","name":"gameId","nameLocation":"11779:6:38","nodeType":"VariableDeclaration","scope":12153,"src":"11771:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12130,"name":"uint256","nodeType":"ElementaryTypeName","src":"11771:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11770:16:38"},"returnParameters":{"id":12139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12135,"mutability":"mutable","name":"info","nameLocation":"11871:4:38","nodeType":"VariableDeclaration","scope":12153,"src":"11850:25:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"},"typeName":{"id":12134,"nodeType":"UserDefinedTypeName","pathNode":{"id":12133,"name":"GameTokenInfo","nameLocations":["11850:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":11427,"src":"11850:13:38"},"referencedDeclaration":11427,"src":"11850:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"}},"visibility":"internal"},{"constant":false,"id":12138,"mutability":"mutable","name":"metadata","nameLocation":"11914:8:38","nodeType":"VariableDeclaration","scope":12153,"src":"11889:33:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"},"typeName":{"id":12137,"nodeType":"UserDefinedTypeName","pathNode":{"id":12136,"name":"GameTokenMetadata","nameLocations":["11889:17:38"],"nodeType":"IdentifierPath","referencedDeclaration":11436,"src":"11889:17:38"},"referencedDeclaration":11436,"src":"11889:17:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"}},"visibility":"internal"}],"src":"11836:96:38"},"scope":12261,"src":"11745:281:38","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12166,"nodeType":"Block","src":"12248:44:38","statements":[{"expression":{"baseExpression":{"id":12162,"name":"userGameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11451,"src":"12265:14:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":12164,"indexExpression":{"id":12163,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12156,"src":"12280:4:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12265:20:38","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":12161,"id":12165,"nodeType":"Return","src":"12258:27:38"}]},"documentation":{"id":12154,"nodeType":"StructuredDocumentation","src":"12036:93:38","text":" @dev Get user's created game tokens\n @param user Address of the user"},"functionSelector":"546fdad4","id":12167,"implemented":true,"kind":"function","modifiers":[],"name":"getUserGameTokens","nameLocation":"12143:17:38","nodeType":"FunctionDefinition","parameters":{"id":12157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12156,"mutability":"mutable","name":"user","nameLocation":"12169:4:38","nodeType":"VariableDeclaration","scope":12167,"src":"12161:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12155,"name":"address","nodeType":"ElementaryTypeName","src":"12161:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12160:14:38"},"returnParameters":{"id":12161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12167,"src":"12225:16:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12158,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12159,"nodeType":"ArrayTypeName","src":"12225:9:38","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12224:18:38"},"scope":12261,"src":"12134:158:38","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12182,"nodeType":"Block","src":"12534:72:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12175,"name":"credaAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12170,"src":"12552:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":12176,"name":"credaToXpRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11407,"src":"12566:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12552:27:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12551:29:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12179,"name":"PRECISION_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11392,"src":"12583:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12551:48:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12174,"id":12181,"nodeType":"Return","src":"12544:55:38"}]},"documentation":{"id":12168,"nodeType":"StructuredDocumentation","src":"12302:115:38","text":" @dev Calculate XP amount for given CREDA amount\n @param credaAmount Amount of CREDA tokens"},"functionSelector":"74b334c5","id":12183,"implemented":true,"kind":"function","modifiers":[],"name":"calculateXpAmount","nameLocation":"12431:17:38","nodeType":"FunctionDefinition","parameters":{"id":12171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12170,"mutability":"mutable","name":"credaAmount","nameLocation":"12457:11:38","nodeType":"VariableDeclaration","scope":12183,"src":"12449:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12169,"name":"uint256","nodeType":"ElementaryTypeName","src":"12449:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12448:21:38"},"returnParameters":{"id":12174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12183,"src":"12520:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12520:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12519:9:38"},"scope":12261,"src":"12422:184:38","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12242,"nodeType":"Block","src":"12897:398:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":12199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12193,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12186,"src":"12911:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12921:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12911:11:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12196,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12186,"src":"12926:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":12197,"name":"nextGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11410,"src":"12936:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12926:20:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12911:35:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12202,"nodeType":"IfStatement","src":"12907:49:38","trueBody":{"expression":{"hexValue":"30","id":12200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12955:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":12192,"id":12201,"nodeType":"Return","src":"12948:8:38"}},{"assignments":[12205],"declarations":[{"constant":false,"id":12205,"mutability":"mutable","name":"gameInfo","nameLocation":"12996:8:38","nodeType":"VariableDeclaration","scope":12242,"src":"12975:29:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"},"typeName":{"id":12204,"nodeType":"UserDefinedTypeName","pathNode":{"id":12203,"name":"GameTokenInfo","nameLocations":["12975:13:38"],"nodeType":"IdentifierPath","referencedDeclaration":11427,"src":"12975:13:38"},"referencedDeclaration":11427,"src":"12975:13:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage_ptr","typeString":"struct GameTokenFactory.GameTokenInfo"}},"visibility":"internal"}],"id":12209,"initialValue":{"baseExpression":{"id":12206,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11441,"src":"13007:10:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenInfo_$11427_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenInfo storage ref)"}},"id":12208,"indexExpression":{"id":12207,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12186,"src":"13018:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13007:18:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_storage","typeString":"struct GameTokenFactory.GameTokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12975:50:38"},{"condition":{"id":12212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13039:16:38","subExpression":{"expression":{"id":12210,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12205,"src":"13040:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo memory"}},"id":12211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13049:6:38","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":11426,"src":"13040:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12215,"nodeType":"IfStatement","src":"13035:30:38","trueBody":{"expression":{"hexValue":"30","id":12213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13064:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":12192,"id":12214,"nodeType":"Return","src":"13057:8:38"}},{"assignments":[12218],"declarations":[{"constant":false,"id":12218,"mutability":"mutable","name":"metadata","nameLocation":"13109:8:38","nodeType":"VariableDeclaration","scope":12242,"src":"13084:33:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"},"typeName":{"id":12217,"nodeType":"UserDefinedTypeName","pathNode":{"id":12216,"name":"GameTokenMetadata","nameLocations":["13084:17:38"],"nodeType":"IdentifierPath","referencedDeclaration":11436,"src":"13084:17:38"},"referencedDeclaration":11436,"src":"13084:17:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata"}},"visibility":"internal"}],"id":12222,"initialValue":{"baseExpression":{"id":12219,"name":"gameTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11446,"src":"13120:17:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_GameTokenMetadata_$11436_storage_$","typeString":"mapping(uint256 => struct GameTokenFactory.GameTokenMetadata storage ref)"}},"id":12221,"indexExpression":{"id":12220,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12186,"src":"13138:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13120:25:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_storage","typeString":"struct GameTokenFactory.GameTokenMetadata storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13084:61:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12223,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12218,"src":"13159:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"id":12224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13168:13:38","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":11433,"src":"13159:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13185:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13159:27:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12229,"nodeType":"IfStatement","src":"13155:41:38","trueBody":{"expression":{"hexValue":"30","id":12227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13195:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":12192,"id":12228,"nodeType":"Return","src":"13188:8:38"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12230,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12188,"src":"13223:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"expression":{"id":12233,"name":"gameInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12205,"src":"13244:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenInfo_$11427_memory_ptr","typeString":"struct GameTokenFactory.GameTokenInfo memory"}},"id":12234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13253:8:38","memberName":"xpLocked","nodeType":"MemberAccess","referencedDeclaration":11422,"src":"13244:17:38","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint88","typeString":"uint88"}],"id":12232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13236:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":12231,"name":"uint256","nodeType":"ElementaryTypeName","src":"13236:7:38","typeDescriptions":{}}},"id":12235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13223:39:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13222:41:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":12238,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12218,"src":"13266:8:38","typeDescriptions":{"typeIdentifier":"t_struct$_GameTokenMetadata_$11436_memory_ptr","typeString":"struct GameTokenFactory.GameTokenMetadata memory"}},"id":12239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13275:13:38","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":11433,"src":"13266:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13222:66:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12192,"id":12241,"nodeType":"Return","src":"13215:73:38"}]},"documentation":{"id":12184,"nodeType":"StructuredDocumentation","src":"12616:149:38","text":" @dev Calculate XP return for burning game tokens\n @param gameId ID of the game token\n @param burnAmount Amount to burn"},"functionSelector":"3b420a73","id":12243,"implemented":true,"kind":"function","modifiers":[],"name":"calculateXpReturn","nameLocation":"12779:17:38","nodeType":"FunctionDefinition","parameters":{"id":12189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12186,"mutability":"mutable","name":"gameId","nameLocation":"12805:6:38","nodeType":"VariableDeclaration","scope":12243,"src":"12797:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12797:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12188,"mutability":"mutable","name":"burnAmount","nameLocation":"12821:10:38","nodeType":"VariableDeclaration","scope":12243,"src":"12813:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12187,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12796:36:38"},"returnParameters":{"id":12192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12243,"src":"12883:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12190,"name":"uint256","nodeType":"ElementaryTypeName","src":"12883:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12882:9:38"},"scope":12261,"src":"12770:525:38","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12259,"nodeType":"Block","src":"13569:49:38","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":12253,"name":"userGameNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11457,"src":"13586:13:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$","typeString":"mapping(address => mapping(string memory => bool))"}},"id":12255,"indexExpression":{"id":12254,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12246,"src":"13600:4:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13586:19:38","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":12257,"indexExpression":{"id":12256,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12248,"src":"13606:4:38","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13586:25:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":12252,"id":12258,"nodeType":"Return","src":"13579:32:38"}]},"documentation":{"id":12244,"nodeType":"StructuredDocumentation","src":"13305:138:38","text":" @dev Check if user has already used a game name\n @param user Address of the user\n @param name Name to check"},"functionSelector":"f7157558","id":12260,"implemented":true,"kind":"function","modifiers":[],"name":"isGameNameUsed","nameLocation":"13457:14:38","nodeType":"FunctionDefinition","parameters":{"id":12249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12246,"mutability":"mutable","name":"user","nameLocation":"13480:4:38","nodeType":"VariableDeclaration","scope":12260,"src":"13472:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12245,"name":"address","nodeType":"ElementaryTypeName","src":"13472:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12248,"mutability":"mutable","name":"name","nameLocation":"13502:4:38","nodeType":"VariableDeclaration","scope":12260,"src":"13486:20:38","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12247,"name":"string","nodeType":"ElementaryTypeName","src":"13486:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13471:36:38"},"returnParameters":{"id":12252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12260,"src":"13558:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12250,"name":"bool","nodeType":"ElementaryTypeName","src":"13558:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13557:6:38"},"scope":12261,"src":"13448:170:38","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":12262,"src":"830:12790:38","usedErrors":[305,308,3911,3914,4011,11509,11511,11513,11515,11517,11519,11521,11523,11525,11527,11529,11531,11533],"usedEvents":[317,326,335,3903,3908,11467,11483,11493,11499,11507]}],"src":"32:13589:38"},"id":38},"contracts/Token.sol":{"ast":{"absolutePath":"contracts/Token.sol","exportedSymbols":{"AccessControl":[295],"ERC20":[2455],"ERC20Burnable":[2579],"ERC20Pausable":[2613],"ERC20Permit":[2767],"MyToken":[12395]},"id":12396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":12263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"81:24:39"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":12265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12396,"sourceUnit":296,"src":"107:79:39","symbolAliases":[{"foreign":{"id":12264,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"115:13:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":12267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12396,"sourceUnit":2456,"src":"187:68:39","symbolAliases":[{"foreign":{"id":12266,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"195:5:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":12269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12396,"sourceUnit":2580,"src":"256:95:39","symbolAliases":[{"foreign":{"id":12268,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"264:13:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":12271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12396,"sourceUnit":2614,"src":"352:95:39","symbolAliases":[{"foreign":{"id":12270,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"360:13:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":12273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12396,"sourceUnit":2768,"src":"448:91:39","symbolAliases":[{"foreign":{"id":12272,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"456:11:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12274,"name":"ERC20","nameLocations":["561:5:39"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"561:5:39"},"id":12275,"nodeType":"InheritanceSpecifier","src":"561:5:39"},{"baseName":{"id":12276,"name":"ERC20Burnable","nameLocations":["568:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":2579,"src":"568:13:39"},"id":12277,"nodeType":"InheritanceSpecifier","src":"568:13:39"},{"baseName":{"id":12278,"name":"ERC20Pausable","nameLocations":["583:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":2613,"src":"583:13:39"},"id":12279,"nodeType":"InheritanceSpecifier","src":"583:13:39"},{"baseName":{"id":12280,"name":"AccessControl","nameLocations":["598:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"598:13:39"},"id":12281,"nodeType":"InheritanceSpecifier","src":"598:13:39"},{"baseName":{"id":12282,"name":"ERC20Permit","nameLocations":["613:11:39"],"nodeType":"IdentifierPath","referencedDeclaration":2767,"src":"613:11:39"},"id":12283,"nodeType":"InheritanceSpecifier","src":"613:11:39"}],"canonicalName":"MyToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":12395,"linearizedBaseContracts":[12395,2767,3837,6514,551,2829,295,6624,6636,378,2613,3997,2579,2455,593,2793,2533,3769],"name":"MyToken","nameLocation":"550:7:39","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":12288,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"655:11:39","nodeType":"VariableDeclaration","scope":12395,"src":"631:62:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"631:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":12286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"679:13:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":12285,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"669:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"669:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":12293,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"723:11:39","nodeType":"VariableDeclaration","scope":12395,"src":"699:62:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"699:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":12291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"747:13:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":12290,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"737:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"737:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":12336,"nodeType":"Block","src":"920:198:39","statements":[{"expression":{"arguments":[{"id":12312,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12295,"src":"936:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030303030","id":12313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:8:39","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":12314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"958:2:39","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":12315,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"964:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":12316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"964:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"958:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"947:27:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12311,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"930:5:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12320,"nodeType":"ExpressionStatement","src":"930:45:39"},{"expression":{"arguments":[{"id":12322,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"996:18:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12323,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12297,"src":"1016:12:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":12321,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"985:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":12324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:44:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12325,"nodeType":"ExpressionStatement","src":"985:44:39"},{"expression":{"arguments":[{"id":12327,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12288,"src":"1050:11:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12328,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12299,"src":"1063:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":12326,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1039:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":12329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1039:31:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12330,"nodeType":"ExpressionStatement","src":"1039:31:39"},{"expression":{"arguments":[{"id":12332,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12293,"src":"1091:11:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":12333,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12301,"src":"1104:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":12331,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1080:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":12334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1080:31:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12335,"nodeType":"ExpressionStatement","src":"1080:31:39"}]},"id":12337,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79546f6b656e","id":12304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"867:9:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"},{"hexValue":"4d544b","id":12305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"878:5:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e","typeString":"literal_string \"MTK\""},"value":"MTK"}],"id":12306,"kind":"baseConstructorSpecifier","modifierName":{"id":12303,"name":"ERC20","nameLocations":["861:5:39"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"861:5:39"},"nodeType":"ModifierInvocation","src":"861:23:39"},{"arguments":[{"hexValue":"4d79546f6b656e","id":12308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"905:9:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"}],"id":12309,"kind":"baseConstructorSpecifier","modifierName":{"id":12307,"name":"ERC20Permit","nameLocations":["893:11:39"],"nodeType":"IdentifierPath","referencedDeclaration":2767,"src":"893:11:39"},"nodeType":"ModifierInvocation","src":"893:22:39"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":12302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12295,"mutability":"mutable","name":"recipient","nameLocation":"788:9:39","nodeType":"VariableDeclaration","scope":12337,"src":"780:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12294,"name":"address","nodeType":"ElementaryTypeName","src":"780:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12297,"mutability":"mutable","name":"defaultAdmin","nameLocation":"807:12:39","nodeType":"VariableDeclaration","scope":12337,"src":"799:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12296,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12299,"mutability":"mutable","name":"pauser","nameLocation":"829:6:39","nodeType":"VariableDeclaration","scope":12337,"src":"821:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12298,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12301,"mutability":"mutable","name":"minter","nameLocation":"845:6:39","nodeType":"VariableDeclaration","scope":12337,"src":"837:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12300,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"779:73:39"},"returnParameters":{"id":12310,"nodeType":"ParameterList","parameters":[],"src":"920:0:39"},"scope":12395,"src":"768:350:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12346,"nodeType":"Block","src":"1170:25:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12343,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"1180:6:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:8:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12345,"nodeType":"ExpressionStatement","src":"1180:8:39"}]},"functionSelector":"8456cb59","id":12347,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12340,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12288,"src":"1157:11:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12341,"kind":"modifierInvocation","modifierName":{"id":12339,"name":"onlyRole","nameLocations":["1148:8:39"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1148:8:39"},"nodeType":"ModifierInvocation","src":"1148:21:39"}],"name":"pause","nameLocation":"1133:5:39","nodeType":"FunctionDefinition","parameters":{"id":12338,"nodeType":"ParameterList","parameters":[],"src":"1138:2:39"},"returnParameters":{"id":12342,"nodeType":"ParameterList","parameters":[],"src":"1170:0:39"},"scope":12395,"src":"1124:71:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12356,"nodeType":"Block","src":"1249:27:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12353,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"1259:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1259:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12355,"nodeType":"ExpressionStatement","src":"1259:10:39"}]},"functionSelector":"3f4ba83a","id":12357,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12350,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12288,"src":"1236:11:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12351,"kind":"modifierInvocation","modifierName":{"id":12349,"name":"onlyRole","nameLocations":["1227:8:39"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1227:8:39"},"nodeType":"ModifierInvocation","src":"1227:21:39"}],"name":"unpause","nameLocation":"1210:7:39","nodeType":"FunctionDefinition","parameters":{"id":12348,"nodeType":"ParameterList","parameters":[],"src":"1217:2:39"},"returnParameters":{"id":12352,"nodeType":"ParameterList","parameters":[],"src":"1249:0:39"},"scope":12395,"src":"1201:75:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12372,"nodeType":"Block","src":"1353:34:39","statements":[{"expression":{"arguments":[{"id":12368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12359,"src":"1369:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12361,"src":"1373:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12367,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1363:5:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1363:17:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12371,"nodeType":"ExpressionStatement","src":"1363:17:39"}]},"functionSelector":"40c10f19","id":12373,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":12364,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12293,"src":"1340:11:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":12365,"kind":"modifierInvocation","modifierName":{"id":12363,"name":"onlyRole","nameLocations":["1331:8:39"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1331:8:39"},"nodeType":"ModifierInvocation","src":"1331:21:39"}],"name":"mint","nameLocation":"1291:4:39","nodeType":"FunctionDefinition","parameters":{"id":12362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12359,"mutability":"mutable","name":"to","nameLocation":"1304:2:39","nodeType":"VariableDeclaration","scope":12373,"src":"1296:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12358,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12361,"mutability":"mutable","name":"amount","nameLocation":"1316:6:39","nodeType":"VariableDeclaration","scope":12373,"src":"1308:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:28:39"},"returnParameters":{"id":12366,"nodeType":"ParameterList","parameters":[],"src":"1353:0:39"},"scope":12395,"src":"1282:105:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2262,2612],"body":{"id":12393,"nodeType":"Block","src":"1579:47:39","statements":[{"expression":{"arguments":[{"id":12388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12375,"src":"1603:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12389,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12377,"src":"1609:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12379,"src":"1613:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12385,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1589:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$12395_$","typeString":"type(contract super MyToken)"}},"id":12387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1595:7:39","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2612,"src":"1589:13:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":12391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:30:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12392,"nodeType":"ExpressionStatement","src":"1589:30:39"}]},"id":12394,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1470:7:39","nodeType":"FunctionDefinition","overrides":{"id":12383,"nodeType":"OverrideSpecifier","overrides":[{"id":12381,"name":"ERC20","nameLocations":["1553:5:39"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1553:5:39"},{"id":12382,"name":"ERC20Pausable","nameLocations":["1560:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":2613,"src":"1560:13:39"}],"src":"1544:30:39"},"parameters":{"id":12380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12375,"mutability":"mutable","name":"from","nameLocation":"1486:4:39","nodeType":"VariableDeclaration","scope":12394,"src":"1478:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12374,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12377,"mutability":"mutable","name":"to","nameLocation":"1500:2:39","nodeType":"VariableDeclaration","scope":12394,"src":"1492:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12376,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12379,"mutability":"mutable","name":"value","nameLocation":"1512:5:39","nodeType":"VariableDeclaration","scope":12394,"src":"1504:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:41:39"},"returnParameters":{"id":12384,"nodeType":"ParameterList","parameters":[],"src":"1579:0:39"},"scope":12395,"src":"1461:165:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":12396,"src":"541:1087:39","usedErrors":[305,308,563,568,573,582,587,592,2644,2651,3779,3911,3914,4080,4082,5950,5955,5960],"usedEvents":[317,326,335,531,2467,2476,3903,3908]}],"src":"81:1548:39"},"id":39},"contracts/mocks/MockERC20.sol":{"ast":{"absolutePath":"contracts/mocks/MockERC20.sol","exportedSymbols":{"Context":[3769],"ERC20":[2455],"IERC20":[2533],"IERC20Errors":[593],"IERC20Metadata":[2793],"MockERC20":[12465]},"id":12466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":12397,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:40"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":12398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12466,"sourceUnit":2456,"src":"58:55:40","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12400,"name":"ERC20","nameLocations":["211:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"211:5:40"},"id":12401,"nodeType":"InheritanceSpecifier","src":"211:5:40"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":12399,"nodeType":"StructuredDocumentation","src":"115:73:40","text":" @title MockERC20\n @dev Mock ERC20 token for testing purposes"},"fullyImplemented":true,"id":12465,"linearizedBaseContracts":[12465,2455,593,2793,2533,3769],"name":"MockERC20","nameLocation":"198:9:40","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":12403,"mutability":"mutable","name":"_decimals","nameLocation":"237:9:40","nodeType":"VariableDeclaration","scope":12465,"src":"223:23:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12402,"name":"uint8","nodeType":"ElementaryTypeName","src":"223:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":12428,"nodeType":"Block","src":"413:84:40","statements":[{"expression":{"id":12420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12418,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12403,"src":"423:9:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12419,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12409,"src":"435:13:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"423:25:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":12421,"nodeType":"ExpressionStatement","src":"423:25:40"},{"expression":{"arguments":[{"expression":{"id":12423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"464:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"468:6:40","memberName":"sender","nodeType":"MemberAccess","src":"464:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12425,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12411,"src":"476:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12422,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"458:5:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:32:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12427,"nodeType":"ExpressionStatement","src":"458:32:40"}]},"id":12429,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":12414,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12405,"src":"399:4:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":12415,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12407,"src":"405:6:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":12416,"kind":"baseConstructorSpecifier","modifierName":{"id":12413,"name":"ERC20","nameLocations":["393:5:40"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"393:5:40"},"nodeType":"ModifierInvocation","src":"393:19:40"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":12412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12405,"mutability":"mutable","name":"name","nameLocation":"292:4:40","nodeType":"VariableDeclaration","scope":12429,"src":"278:18:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12404,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12407,"mutability":"mutable","name":"symbol","nameLocation":"320:6:40","nodeType":"VariableDeclaration","scope":12429,"src":"306:20:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12406,"name":"string","nodeType":"ElementaryTypeName","src":"306:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12409,"mutability":"mutable","name":"tokenDecimals","nameLocation":"342:13:40","nodeType":"VariableDeclaration","scope":12429,"src":"336:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12408,"name":"uint8","nodeType":"ElementaryTypeName","src":"336:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12411,"mutability":"mutable","name":"initialSupply","nameLocation":"373:13:40","nodeType":"VariableDeclaration","scope":12429,"src":"365:21:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12410,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:124:40"},"returnParameters":{"id":12417,"nodeType":"ParameterList","parameters":[],"src":"413:0:40"},"scope":12465,"src":"257:240:40","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2019],"body":{"id":12437,"nodeType":"Block","src":"564:33:40","statements":[{"expression":{"id":12435,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12403,"src":"581:9:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":12434,"id":12436,"nodeType":"Return","src":"574:16:40"}]},"functionSelector":"313ce567","id":12438,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"516:8:40","nodeType":"FunctionDefinition","overrides":{"id":12431,"nodeType":"OverrideSpecifier","overrides":[],"src":"539:8:40"},"parameters":{"id":12430,"nodeType":"ParameterList","parameters":[],"src":"524:2:40"},"returnParameters":{"id":12434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12438,"src":"557:5:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12432,"name":"uint8","nodeType":"ElementaryTypeName","src":"557:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"556:7:40"},"scope":12465,"src":"507:90:40","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":12450,"nodeType":"Block","src":"658:34:40","statements":[{"expression":{"arguments":[{"id":12446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12440,"src":"674:2:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12442,"src":"678:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12445,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"668:5:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"668:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12449,"nodeType":"ExpressionStatement","src":"668:17:40"}]},"functionSelector":"40c10f19","id":12451,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"616:4:40","nodeType":"FunctionDefinition","parameters":{"id":12443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12440,"mutability":"mutable","name":"to","nameLocation":"629:2:40","nodeType":"VariableDeclaration","scope":12451,"src":"621:10:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12439,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12442,"mutability":"mutable","name":"amount","nameLocation":"641:6:40","nodeType":"VariableDeclaration","scope":12451,"src":"633:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12441,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"620:28:40"},"returnParameters":{"id":12444,"nodeType":"ParameterList","parameters":[],"src":"658:0:40"},"scope":12465,"src":"607:85:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12463,"nodeType":"Block","src":"755:36:40","statements":[{"expression":{"arguments":[{"id":12459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12453,"src":"771:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12460,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12455,"src":"777:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12458,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"765:5:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":12461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"765:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12462,"nodeType":"ExpressionStatement","src":"765:19:40"}]},"functionSelector":"9dc29fac","id":12464,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"711:4:40","nodeType":"FunctionDefinition","parameters":{"id":12456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12453,"mutability":"mutable","name":"from","nameLocation":"724:4:40","nodeType":"VariableDeclaration","scope":12464,"src":"716:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12452,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12455,"mutability":"mutable","name":"amount","nameLocation":"738:6:40","nodeType":"VariableDeclaration","scope":12464,"src":"730:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12454,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"715:30:40"},"returnParameters":{"id":12457,"nodeType":"ParameterList","parameters":[],"src":"755:0:40"},"scope":12465,"src":"702:89:40","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":12466,"src":"189:604:40","usedErrors":[563,568,573,582,587,592],"usedEvents":[2467,2476]}],"src":"32:762:40"},"id":40}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220629c12e4f6053c5ef78c8b5f964045e7328c6a6da48e0533c3bd8ecba871117c64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x9C12E4 0xF6 SDIV EXTCODECOPY 0x5E 0xF7 DUP13 DUP12 PUSH0 SWAP7 BLOCKHASH GASLIMIT 0xE7 ORIGIN DUP13 PUSH11 0x6DA48E0533C3BD8ECBA871 GT PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"439:3110:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220629c12e4f6053c5ef78c8b5f964045e7328c6a6da48e0533c3bd8ecba871117c64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x9C12E4 0xF6 SDIV EXTCODECOPY 0x5E 0xF7 DUP13 DUP12 PUSH0 SWAP7 BLOCKHASH GASLIMIT 0xE7 ORIGIN DUP13 PUSH11 0x6DA48E0533C3BD8ECBA871 GT PUSH29 0x64736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"439:3110:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122055280296780d6f8df40e9b3d4f0469a6b6655101668503663e4d178dba83c05d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x28 MUL SWAP7 PUSH25 0xD6F8DF40E9B3D4F0469A6B6655101668503663E4D178DBA83 0xC0 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122055280296780d6f8df40e9b3d4f0469a6b6655101668503663e4d178dba83c05d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x28 MUL SWAP7 PUSH25 0xD6F8DF40E9B3D4F0469A6B6655101668503663E4D178DBA83 0xC0 0x5D PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a5213f433903448268aca091d8e104e49bef6d65b8c9874a4552d73eab099afe64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x21 EXTCODEHASH NUMBER CODECOPY SUB PREVRANDAO DUP3 PUSH9 0xACA091D8E104E49BEF PUSH14 0x65B8C9874A4552D73EAB099AFE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a5213f433903448268aca091d8e104e49bef6d65b8c9874a4552d73eab099afe64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0x21 EXTCODEHASH NUMBER CODECOPY SUB PREVRANDAO DUP3 PUSH9 0xACA091D8E104E49BEF PUSH14 0x65B8C9874A4552D73EAB099AFE64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f0207ad9e362a615aa90358e523b6ce04d4e69f6202f53043b8bdd8f730f26b364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH27 0xD9E362A615AA90358E523B6CE04D4E69F6202F53043B8BDD8F730F 0x26 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f0207ad9e362a615aa90358e523b6ce04d4e69f6202f53043b8bdd8f730f26b364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH27 0xD9E362A615AA90358E523B6CE04D4E69F6202F53043B8BDD8F730F 0x26 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:33:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:33:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:34:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:34:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:35:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:35:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/GameEcosystem.sol":{"GameEcosystem":{"abi":[{"inputs":[{"internalType":"address","name":"_cridaToken","type":"address"},{"internalType":"address","name":"_xpToken","type":"address"},{"internalType":"string","name":"_uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"GameTokenNotActive","type":"error"},{"inputs":[],"name":"InsufficientAmount","type":"error"},{"inputs":[],"name":"InsufficientXpReserves","type":"error"},{"inputs":[],"name":"InvalidDecimals","type":"error"},{"inputs":[],"name":"InvalidGameId","type":"error"},{"inputs":[],"name":"NameTooLong","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SymbolTooLong","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"ZeroAmount","type":"error"},{"inputs":[],"name":"ZeroRate","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"cridaAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xpMinted","type":"uint256"}],"name":"CridaLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xpReturned","type":"uint256"}],"name":"GameTokenBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"uint256","name":"xpLocked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"initialSupply","type":"uint256"}],"name":"GameTokenCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"RateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_GAME_TOKEN_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_XP_LOCK_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RATE_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnGameToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"cridaAmount","type":"uint256"}],"name":"calculateXpAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"calculateXpReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"xpAmount","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"createGameToken","outputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cridaToXpRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cridaToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gameTokens","outputs":[{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"uint256","name":"xpLocked","type":"uint256"},{"internalType":"uint256","name":"currentSupply","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameTokenInfo","outputs":[{"components":[{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"uint256","name":"xpLocked","type":"uint256"},{"internalType":"uint256","name":"currentSupply","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct GameEcosystem.GameTokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserGameTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountCrida","type":"uint256"}],"name":"lockCrida","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLockedCrida","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userGameTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userLockedCrida","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xpReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xpToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":787,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":749,"id":null,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":1258,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_3627":{"entryPoint":808,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_3628":{"entryPoint":937,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_3629":{"entryPoint":1100,"id":256,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c060405234620002e857620033d4803803806200001d81620002ed565b928339810190606081830312620002e857620000398162000313565b9060206200004981830162000313565b604083015190926001600160401b039190828211620002e8570191601f90868285011215620002e8578351838111620002bd57601f19946200009182850187168401620002ed565b98828a52838383010111620002e857829060005b838110620002d3575050600091890101528651928311620002bd57600254936001948581811c91168015620002b2575b838210146200029c5783811162000250575b5081928411600114620001e55750508192939495600092620001d9575b5050600019600383901b1c191690821b176002555b6005819055670de0b6b3a76400006006556007556001600160a01b0391821680158015620001ce575b620001bc576080521660a052620001593362000328565b506200016533620003a9565b5062000171336200044c565b506200017d33620004ea565b50604051612e2b9081620005898239608051818181610ea6015261109e015260a051818181610d82015281816111320152818161130d01526123c90152f35b604051631f2a200560e01b8152600490fd5b508282161562000142565b01519050388062000104565b839291921696600260005282600020926000905b898210620002385750508385969798106200021e575b505050811b0160025562000119565b015160001960f88460031b161c191690553880806200020f565b808785968294968601518155019501930190620001f9565b6002600052826000208480870160051c82019285881062000292575b0160051c019086905b82811062000285575050620000e7565b6000815501869062000275565b925081926200026c565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000d5565b634e487b7160e01b600052604160045260246000fd5b8181018301518b8201840152849201620000a5565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002bd57604052565b51906001600160a01b0382168203620002e857565b6001600160a01b031660008181527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff602052604081205490919060ff16620003a55781805260036020526040822081835260205260408220600160ff198254161790553391600080516020620033b48339815191528180a4600190565b5090565b6001600160a01b031660008181527fce96a28fb06ca29ce31a17de45a1073cd88b8170e4a67f7f416f721e36bde95c60205260408120549091907f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b29060ff16620004475780835260036020526040832082845260205260408320600160ff19825416179055600080516020620033b4833981519152339380a4600190565b505090565b6001600160a01b031660008181527f30adeb818ef77f204f5a603c30fa5332397b6e28fb3b7f9d937ae6a6914716de60205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16620004475780835260036020526040832082845260205260408320600160ff19825416179055600080516020620033b4833981519152339380a4600190565b6001600160a01b031660008181527f4a18c22192f7476ec84391fce95952ace1237d522de16c98159f6d46d423ef3660205260408120549091907fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff16620004475780835260036020526040832082845260205260408320600160ff19825416179055600080516020620033b4833981519152339380a460019056fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146102a657806301ffc9a7146102a15780630e89341c1461029c57806320df435914610297578063248a9ca3146102925780632eb2c2d61461028d5780632f2ff15d1461028857806334fcf4371461028357806336568abe1461027e5780633b420a73146102795780633f4ba83a146102745780634e1273f41461026f578063546fdad41461026a5780635c975abb146102655780635e79c1dc146102605780635ed6c1db1461025b5780636d8061b8146102565780636d8554e2146102515780636dd9cbd41461024c57806374b334c5146102475780638456cb59146102425780638760550d1461023d57806391d148541461023857806397e05e8614610233578063a217fddf1461022e578063a22cb46514610229578063ae5014b114610224578063b135bbb01461021f578063bf034b691461021a578063c21c64a714610215578063cb327b8b14610210578063cb4cd5561461020b578063ccd34cd514610206578063d547741f14610201578063df525b7d146101fc578063e63ab1e9146101f7578063e63ea408146101f2578063e8321987146101ed578063e985e9c5146101e8578063f242432a146101e35763fd44d274146101de57600080fd5b6119ca565b61187e565b61182d565b61180f565b6116c2565b611687565b61166b565b61162c565b611609565b6115cf565b611594565b61153c565b611492565b61133c565b6112f7565b61123b565b611215565b611014565b610fc2565b610f9e565b610f44565b610f11565b610ef3565b610ed5565b610e90565b610c62565b610b6f565b610ac7565b610a4f565b610995565b6108e6565b6108bd565b610876565b610794565b610755565b61062c565b610491565b610456565b61041f565b61034f565b6102f0565b600435906001600160a01b03821682036102c157565b600080fd5b602435906001600160a01b03821682036102c157565b35906001600160a01b03821682036102c157565b346102c15760403660031901126102c157602061033461030e6102ab565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b03198116036102c157565b346102c15760203660031901126102c157602060043561036e8161033d565b63ffffffff60e01b16637965db0b60e01b8114908115610394575b506040519015158152f35b636cdb3d1360e11b8114915081156103c6575b81156103b5575b5038610389565b6301ffc9a760e01b149050386103ae565b6303a24d0760e21b811491506103a7565b60005b8381106103ea5750506000910152565b81810151838201526020016103da565b90602091610413815180928185528580860191016103d7565b601f01601f1916010190565b346102c15760203660031901126102c15761045261043e600435612be8565b6040519182916020835260208301906103fa565b0390f35b346102c15760003660031901126102c15760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b346102c15760203660031901126102c15760043560005260036020526020600160406000200154604051908152f35b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176104f357604052565b6104c0565b6020810190811067ffffffffffffffff8211176104f357604052565b90601f8019910116810190811067ffffffffffffffff8211176104f357604052565b60405190610543826104d6565b565b67ffffffffffffffff81116104f35760051b60200190565b81601f820112156102c15780359161057483610545565b926105826040519485610514565b808452602092838086019260051b8201019283116102c1578301905b8282106105ac575050505090565b8135815290830190830161059e565b67ffffffffffffffff81116104f357601f01601f191660200190565b9291926105e3826105bb565b916105f16040519384610514565b8294818452818301116102c1578281602093846000960137010152565b9080601f830112156102c157816020610629933591016105d7565b90565b346102c15760a03660031901126102c1576106456102ab565b61064d6102c6565b906044359167ffffffffffffffff908184116102c1576106726004943690860161055d565b906064358381116102c15761068a903690870161055d565b926084359081116102c1576106a2903690870161060e565b936001600160a01b03808216903382141580610731575b610704578316156106ec57156106d5576106d39550611d39565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff16156106b9565b346102c15760403660031901126102c1576106d36004356107746102c6565b9080600052600360205261078f600160406000200154611ae9565b611b0a565b346102c15760203660031901126102c1573360009081527fce96a28fb06ca29ce31a17de45a1073cd88b8170e4a67f7f416f721e36bde95c6020526040902054600435907f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b29060ff1615610858575080156108465760068054908290556040805191825260208201929092527fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d19169190a1005b6040516314cee7cd60e11b8152600490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b346102c15760403660031901126102c15761088f6102c6565b336001600160a01b038216036108ab576106d390600435611ba4565b60405163334bd91960e11b8152600490fd5b346102c15760403660031901126102c15760206108de602435600435612b80565b604051908152f35b346102c15760003660031901126102c1576108ff611a33565b60045460ff81161561093e5760ff19166004557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b90815180825260208080930193019160005b828110610970575050505090565b835185529381019392810192600101610962565b906020610629928181520190610950565b346102c15760403660031901126102c15760043567ffffffffffffffff8082116102c157366023830112156102c15781600401356109d281610545565b926109e06040519485610514565b81845260209160248386019160051b830101913683116102c157602401905b828210610a3857856024358681116102c15761045291610a26610a2c92369060040161055d565b90611c74565b60405191829182610984565b838091610a44846102dc565b8152019101906109ff565b346102c1576020806003193601126102c1576001600160a01b03610a716102ab565b16600052600b8152604060002090604051908181845491828152019360005281600020916000905b828210610ab05761045285610a2c81890382610514565b835486529485019460019384019390910190610a99565b346102c15760003660031901126102c157602060ff600454166040519015158152f35b610629906020815260018060a01b038351166020820152602083015160e0610b39610b23610100938460408701526101208601906103fa565b6040870151858203601f190160608701526103fa565b606086015160ff16608085015294608081015160a085015260a081015160c085015260c081015182850152015191019015159052565b346102c15760203660031901126102c157610452604060e08151610b92816104d6565b6000918183809352606060208201526060858201528260608201528260808201528260a08201528260c082015201526004358152600a60205220610c56610c4d6007610bdc610536565b84546001600160a01b0316815293610bf660018201611394565b6020860152610c0760028201611394565b6040860152610c27610c1d600383015460ff1690565b60ff166060870152565b60048101546080860152600581015460a0860152600681015460c0860152015460ff1690565b151560e0830152565b60405191829182610aea565b346102c1576040806003193601126102c157600480359060243592610c85612315565b610c8d612333565b8315610e8357610ca783600052600a602052604060002090565b91610cbd610cb9600785015460ff1690565b1590565b610e755783158015610e69575b610e5b5784610cfe33610ce7876000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b5410610e4d57610d1f610d156005850154876122cd565b82850154906122e0565b9283600c5410610e3e57600690610d37878733612953565b01610d43868254612946565b9055610d59610d5484600c54612946565b600c55565b815163a9059cbb60e01b81523382820190815260208181018690529082908190604001038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610e3957600091610e0b575b5015610dfd575051928352602083015233917fefd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca690604090a36106d36001600555565b90516312171d8360e31b8152fd5b610e2c915060203d8111610e32575b610e248183610514565b810190612300565b38610dbb565b503d610e1a565b611feb565b5090516331d2f70960e01b8152fd5b9051632ca2f52b60e11b8152fd5b905163bb97cc9b60e01b8152fd5b50600754841015610cca565b90516307350d3b60e11b8152fd5b51631f2a200560e01b8152fd5b346102c15760003660031901126102c1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102c15760003660031901126102c1576020600c54604051908152f35b346102c15760003660031901126102c1576020600654604051908152f35b346102c15760203660031901126102c1576020670de0b6b3a7640000610f3b6006546004356122cd565b04604051908152f35b346102c15760003660031901126102c157610f5d611a33565b610f65612315565b600160ff1960045416176004557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102c15760003660031901126102c1576020604051683635c9adc5dea000008152f35b346102c15760403660031901126102c157602060ff611008610fe26102c6565b6004356000526003845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346102c1576020806003193601126102c1576004803590611033612315565b61103b612333565b81156112065761105e611050600654846122cd565b670de0b6b3a7640000900490565b604080516323b872dd60e01b815233848201908152306020820152918201859052600095929392916001600160a01b03919083908290819003606001818a7f000000000000000000000000000000000000000000000000000000000000000087165af1908115610e395787916111e9575b50156111d8573360009081526008602052604090206110ef868254611f40565b905561110561110086600954611f40565b600955565b6040805163a9059cbb60e01b8152338582019081526020810187905290928492849283918b9183910103927f0000000000000000000000000000000000000000000000000000000000000000165af1918215610e395786926111bb575b5050156111ac575060408051928352602083019190915233917f728ef7f9f5da04913a2539a83b1d7620e12ed0fb6ca88328bdba350f977cff0f9190a26111a96001600555565b80f35b6040516312171d8360e31b8152fd5b6111d19250803d10610e3257610e248183610514565b3880611162565b6040516312171d8360e31b81528390fd5b6112009150833d8511610e3257610e248183610514565b386110cf565b604051631f2a200560e01b8152fd5b346102c15760003660031901126102c157602060405160008152f35b801515036102c157565b346102c15760403660031901126102c1576112546102ab565b60243561126081611231565b6001600160a01b0382169182156112df578161129e6112af9233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b346102c15760003660031901126102c1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102c15760003660031901126102c1576020600754604051908152f35b90600182811c9216801561138a575b602083101461137457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611369565b90604051918260008254926113a88461135a565b90818452600194858116908160001461141557506001146113d2575b505061054392500383610514565b9093915060005260209081600020936000915b8183106113fd575050610543935082010138806113c4565b855488840185015294850194879450918301916113e5565b91505061054394506020925060ff191682840152151560051b82010138806113c4565b96939897949160e096936114676114759260ff9460018060a01b03168b526101008060208d01528b01906103fa565b9089820360408b01526103fa565b98166060870152608086015260a085015260c08401521515910152565b346102c15760203660031901126102c1576004356000908152600a6020526040902080546001600160a01b03166104526114ce60018401611394565b926114db60028201611394565b9060ff600382015416600482015460058301549160ff60076006860154950154169460405198899889611438565b634e487b7160e01b600052603260045260246000fd5b80548210156115375760005260206000200190600090565b611509565b346102c15760403660031901126102c1576115556102ab565b6001600160a01b03166000908152600b60205260409020805460243591908210156102c1576020916115869161151f565b90546040519160031b1c8152f35b346102c15760003660031901126102c15760206040517f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b28152f35b346102c15760203660031901126102c1576001600160a01b036115f06102ab565b1660005260086020526020604060002054604051908152f35b346102c15760003660031901126102c1576020604051670de0b6b3a76400008152f35b346102c15760403660031901126102c1576106d360043561164b6102c6565b90806000526003602052611666600160406000200154611ae9565b611ba4565b346102c15760003660031901126102c157602060405160128152f35b346102c15760003660031901126102c15760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b346102c15760603660031901126102c1576116db6102ab565b6116e36102c6565b6044356116ee611a91565b6001600160a01b03828116939084156117fd57169181908361176f5750600080808093875af161171c61200a565b501561175d576117587ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504915b6040519081529081906020820190565b0390a3005b6040516312171d8360e31b8152600490fd5b60405163a9059cbb60e01b81526001600160a01b0391909116600482015260248101919091526020816044816000875af1908115610e39576000916117df575b501561175d576117587ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f388332850491611748565b6117f7915060203d8111610e3257610e248183610514565b386117af565b604051631f2a200560e01b8152600490fd5b346102c15760003660031901126102c1576020600954604051908152f35b346102c15760403660031901126102c157602060ff61100861184d6102ab565b6118556102c6565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346102c15760a03660031901126102c1576118976102ab565b61189f6102c6565b60843567ffffffffffffffff81116102c1576118bf90369060040161060e565b906001600160a01b03838116903382141580611978575b611951578216156119385715611920576106d3926119186064356044359160405192600184526020840152604083019160018352606084015260808301604052565b929091611d39565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff16156118d6565b9181601f840112156102c15782359167ffffffffffffffff83116102c157602083818601950101116102c157565b346102c15760803660031901126102c15767ffffffffffffffff6024358181116102c1576119fc90369060040161199c565b916044359081116102c157611a1590369060040161199c565b6064359160ff831683036102c1576104529461174894600435612356565b3360009081527f30adeb818ef77f204f5a603c30fa5332397b6e28fb3b7f9d937ae6a6914716de602052604090207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff905b5416156108585750565b3360009081527f4a18c22192f7476ec84391fce95952ace1237d522de16c98159f6d46d423ef36602052604090207fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff90611a87565b6000818152600360209081526040808320338452909152902060ff90611a87565b600090808252600360205260ff611b3684604085209060018060a01b0316600052602052604060002090565b5416611b9e578082526003602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600360205260ff611bd084604085209060018060a01b0316600052602052604060002090565b541615611b9e578082526003602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b634e487b7160e01b600052601160045260246000fd5b6000198114611c5b5760010190565b611c36565b80518210156115375760209160051b010190565b91909180518351808203611d17575050805190611c9082610545565b91611c9e6040519384610514565b808352611cad601f1991610545565b0190602091368385013760005b8151811015611d0f57600581901b8281018401519087018401516000908152602081815260408083206001600160a01b0390941683529290522054611d0a9190611d048287611c60565b52611c4c565b611cba565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b949190918151845190818103611d1757505060005b8251811015611e4a57600581901b83810160209081015191870101516001600160a01b03929186908a8516611dc3575b611d91948216611d96575b505050611c4c565b611d4e565b611db991610ce7611db1926000526000602052604060002090565b918254611f40565b9055388581611d89565b9192939050611de08a610ce7846000526000602052604060002090565b54838110611e135791879184611d9196959403611e0b8d610ce7856000526000602052604060002090565b559450611d7e565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611ef5576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116611ebe575b5050505050565b8451600103611ee457602080611eda9601519201519233612134565b3880808080611eb7565b611ef094919233612280565b611eda565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611f38888c83611f4d565b0390a4611ea8565b91908201809211611c5b57565b9091611f6461062993604084526040840190610950565b916020818403910152610950565b908160209103126102c157516106298161033d565b909260a0926106299594600180861b03168352600060208401526040830152606082015281608082015201906103fa565b919261062995949160a094600180871b0380921685521660208401526040830152606082015281608082015201906103fa565b6040513d6000823e3d90fd5b60405190612004826104f8565b60008252565b3d15612035573d9061201b826105bb565b916120296040519384610514565b82523d6000602084013e565b606090565b9293919093843b61204c575050505050565b60209161206f604051948593849363f23a6e6160e01b9889865260048601611f87565b038160006001600160a01b0388165af160009181612104575b506120c7578261209661200a565b80519190826120c057604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b031916036120e157503880808080611eb7565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b61212691925060203d811161212d575b61211e8183610514565b810190611f72565b9038612088565b503d612114565b939290949194853b612149575b505050505050565b61216c602093604051958694859463f23a6e6160e01b998a875260048701611fb8565b038160006001600160a01b0388165af1600091816121ae575b50612193578261209661200a565b6001600160e01b031916036120e15750388080808080612141565b6121c791925060203d811161212d5761211e8183610514565b9038612185565b926121fd610629959361220b9360018060a01b031686526000602087015260a0604087015260a0860190610950565b908482036060860152610950565b9160808184039101526103fa565b939061062995936121fd9161220b9460018060a01b03809216885216602087015260a0604087015260a0860190610950565b9293919093843b61225d575050505050565b60209161206f604051948593849363bc197c8160e01b98898652600486016121ce565b939290949194853b61229457505050505050565b61216c602093604051958694859463bc197c8160e01b998a875260048701612219565b90600a820291808304600a1490151715611c5b57565b81810292918115918404141715611c5b57565b81156122ea570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126102c1575161062981611231565b60ff6004541661232157565b60405163d93c066560e01b8152600490fd5b600260055414612344576002600555565b604051633ee5aeb560e01b8152600490fd5b949193929093612364612315565b61236c612333565b683635c9adc5dea00000861061257157601260ff84161161255f576032811161254d57600a841161253b576040516323b872dd60e01b81523360048201523060248201526044810187905260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115610e395760009161251d575b501561175d576125107f209e4cc824c27fb4d0b3d56450b5cdead204b21bfb8286755c4865b577a8a28f93612434610d5489600c54611f40565b60075497889661244b61244689611c4c565b600755565b6124d561246361105061245d86612583565b856122cd565b9361249d61246f610536565b3381529161247e368a8f6105d7565b602084015261248e36868c6105d7565b604084015260ff166060830152565b8460808201528360a08201528460c08201526124bc60e0820160019052565b6124d08a600052600a602052604060002090565b6126b7565b336000908152600b602052604090206124ef90899061275f565b6125026124fa611ff7565b848a336127f1565b604051958695339a876127ba565b0390a36106296001600555565b612535915060203d8111610e3257610e248183610514565b386123fa565b604051631124f78b60e01b8152600490fd5b60405163680b6caf60e01b8152600490fd5b604051630692acc560e51b8152600490fd5b604051632ca2f52b60e11b8152600490fd5b60ff16604d8111611c5b57600a0a90565b90601f81116125a257505050565b600091825260208220906020601f850160051c830194106125de575b601f0160051c01915b8281106125d357505050565b8181556001016125c7565b90925082906125be565b919091825167ffffffffffffffff81116104f3576126108161260a845461135a565b84612594565b602080601f831160011461264c575081929394600092612641575b50508160011b916000199060031b1c1916179055565b01519050388061262b565b90601f1983169561266285600052602060002090565b926000905b88821061269f57505083600195969710612686575b505050811b019055565b015160001960f88460031b161c1916905538808061267c565b80600185968294968601518155019501930190612667565b815181546001600160a01b0319166001600160a01b039091161781556105439160079061274c9060e0906126f26020820151600187016125e8565b6127036040820151600287016125e8565b612727612714606083015160ff1690565b600387019060ff1660ff19825416179055565b6080810151600486015560a0810151600586015560c081015160068601550151151590565b91019060ff801983541691151516179055565b8054680100000000000000008110156104f3576127819160018201815561151f565b819291549060031b91821b91600019901b1916179055565b908060209392818452848401376000828201840152601f01601f1916010190565b9290936127d96060956127e79499989799608087526080870191612799565b918483036020860152612799565b9460408201520152565b6001600160a01b038116939290919084156119385761282d60405192600184526020840152604083019160018352606084015260808301604052565b928151845190818103611d1757505060005b8251811015612884578061287f9160051b612878611db187610ce7602080868b010151958c010151946000526000602052604060002090565b9055611c4c565b61283f565b5092919360018251146000146128fb5760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b80516001036128f1579060208061054395930151910151913361203a565b610543933361224b565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061292f888883611f4d565b0390a46128d3565b600019810191908211611c5b57565b91908203918211611c5b57565b6001600160a01b0381169290919083156119205761298e60405192600184526020840152604083019160018352606084015260808301604052565b9190604094600086516129a0816104f8565b528151845190818103612ad457505060005b8251811015612a4d578060051b602080828601015191870101516129e486610ce7846000526000602052604060002090565b54818110612a175786610ce7612a12959493612a0c9303936000526000602052604060002090565b55611c4c565b6129b2565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514612aa25760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291612a9d9183611f4d565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b90610543612b776007612b06610536565b85546001600160a01b0316815294612b2060018201611394565b6020870152612b3160028201611394565b6040870152612b51612b47600383015460ff1690565b60ff166060880152565b60048101546080870152600581015460a0870152600681015460c0870152015460ff1690565b151560e0840152565b600052600a602052604060002060ff600782015416158015612bc5575b612bbe576004612bb5610629936005840154906122cd565b910154906122e0565b5050600090565b50600481015415612b9d565b90612be4602092828151948592016103d7565b0190565b80158015612ce4575b612cdb57612c0c612c1191600052600a602052604060002090565b612af5565b612c21610cb960e0830151151590565b612cdb5761062981612ccd612cc06020612c8f95015192612c89612ca7612c62612c5d612c576060604087015196015160ff1690565b60ff1690565b612d12565b92612c89604051998a98612c8960208b01600990683d913730b6b2911d1160b91b81520190565b90612bd1565b6b11161139bcb6b137b6111d1160a11b8152600c0190565b6c1116113232b1b4b6b0b639911d60991b8152600d0190565b607d60f81b815260010190565b03601f198101835282610514565b50610629611ff7565b50600754811015612bf1565b60ff166030019060ff8211611c5b57565b908151811015611537570160200190565b8015612dc6578060008281935b612db2575081612d2e846105bb565b93612d3c6040519586610514565b808552601f19612d4b826105bb565b01366020870137905b612d5e5750505090565b612d6790612937565b9182612daa612da1612d91612d8c612c57600a870496612d86886122b7565b90612946565b612cf0565b60f81b6001600160f81b03191690565b841a9186612d01565b539182612d54565b92612dbe600a91611c4c565b930480612d1f565b506040516040810181811067ffffffffffffffff8211176104f35760405260018152600360fc1b60208201529056fea264697066735822122013e382b7353f13894daae4d39b99f298b4de4c6cbdf79dc82417526b424271f764736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2E8 JUMPI PUSH3 0x33D4 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x2ED JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH3 0x2E8 JUMPI PUSH3 0x39 DUP2 PUSH3 0x313 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH3 0x49 DUP2 DUP4 ADD PUSH3 0x313 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP3 GT PUSH3 0x2E8 JUMPI ADD SWAP2 PUSH1 0x1F SWAP1 DUP7 DUP3 DUP6 ADD SLT ISZERO PUSH3 0x2E8 JUMPI DUP4 MLOAD DUP4 DUP2 GT PUSH3 0x2BD JUMPI PUSH1 0x1F NOT SWAP5 PUSH3 0x91 DUP3 DUP6 ADD DUP8 AND DUP5 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP9 DUP3 DUP11 MSTORE DUP4 DUP4 DUP4 ADD ADD GT PUSH3 0x2E8 JUMPI DUP3 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x2D3 JUMPI POP POP PUSH1 0x0 SWAP2 DUP10 ADD ADD MSTORE DUP7 MLOAD SWAP3 DUP4 GT PUSH3 0x2BD JUMPI PUSH1 0x2 SLOAD SWAP4 PUSH1 0x1 SWAP5 DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2B2 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x29C JUMPI DUP4 DUP2 GT PUSH3 0x250 JUMPI JUMPDEST POP DUP2 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E5 JUMPI POP POP DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x1D9 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 ISZERO DUP1 ISZERO PUSH3 0x1CE JUMPI JUMPDEST PUSH3 0x1BC JUMPI PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH3 0x159 CALLER PUSH3 0x328 JUMP JUMPDEST POP PUSH3 0x165 CALLER PUSH3 0x3A9 JUMP JUMPDEST POP PUSH3 0x171 CALLER PUSH3 0x44C JUMP JUMPDEST POP PUSH3 0x17D CALLER PUSH3 0x4EA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E2B SWAP1 DUP2 PUSH3 0x589 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xEA6 ADD MSTORE PUSH2 0x109E ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD82 ADD MSTORE DUP2 DUP2 PUSH2 0x1132 ADD MSTORE DUP2 DUP2 PUSH2 0x130D ADD MSTORE PUSH2 0x23C9 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP3 DUP3 AND ISZERO PUSH3 0x142 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x104 JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 AND SWAP7 PUSH1 0x2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH3 0x238 JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x21E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x119 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x20F JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x1F9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP6 DUP9 LT PUSH3 0x292 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x285 JUMPI POP POP PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x275 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x26C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xD5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP12 DUP3 ADD DUP5 ADD MSTORE DUP5 SWAP3 ADD PUSH3 0xA5 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x2E8 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x3A5 JUMPI DUP2 DUP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x33B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xCE96A28FB06CA29CE31A17DE45A1073CD88B8170E4A67F7F416F721E36BDE95C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP1 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x33B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x30ADEB818EF77F204F5A603C30FA5332397B6E28FB3B7F9D937AE6A6914716DE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP1 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x33B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4A18C22192F7476EC84391FCE95952ACE1237D522DE16C98159F6D46D423EF36 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP1 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x33B4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3B420A73 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x546FDAD4 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x5E79C1DC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x5ED6C1DB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x6D8061B8 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6D8554E2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6DD9CBD4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x74B334C5 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8760550D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x97E05E86 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xAE5014B1 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB135BBB0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC21C64A7 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xCB327B8B EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xCB4CD556 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xDF525B7D EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xE8321987 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1E3 JUMPI PUSH4 0xFD44D274 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x187E JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x162C JUMP JUMPDEST PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x133C JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xF44 JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH2 0x334 PUSH2 0x30E PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x36E DUP2 PUSH2 0x33D JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x394 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3C6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3B5 JUMPI JUMPDEST POP CODESIZE PUSH2 0x389 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3AE JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x413 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x452 PUSH2 0x43E PUSH1 0x4 CALLDATALOAD PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x543 DUP3 PUSH2 0x4D6 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x574 DUP4 PUSH2 0x545 JUMP JUMPDEST SWAP3 PUSH2 0x582 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2C1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x5AC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x59E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x5E3 DUP3 PUSH2 0x5BB JUMP JUMPDEST SWAP2 PUSH2 0x5F1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x629 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x5D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x645 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x2C1 JUMPI PUSH2 0x672 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x68A SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x55D JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x6A2 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x60E JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x731 JUMPI JUMPDEST PUSH2 0x704 JUMPI DUP4 AND ISZERO PUSH2 0x6EC JUMPI ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6D3 SWAP6 POP PUSH2 0x1D39 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B9 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x6D3 PUSH1 0x4 CALLDATALOAD PUSH2 0x774 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x78F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x1B0A JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE96A28FB06CA29CE31A17DE45A1073CD88B8170E4A67F7F416F721E36BDE95C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI POP DUP1 ISZERO PUSH2 0x846 JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB38780DDDE1F073D91C150DE2696F3F7085883648BA21CC5EF01029CB21D1916 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14CEE7CD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x88F PUSH2 0x2C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8AB JUMPI PUSH2 0x6D3 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH2 0x8DE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x8FF PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x93E JUMPI PUSH1 0xFF NOT AND PUSH1 0x4 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x970 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x962 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x629 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x2C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x9D2 DUP2 PUSH2 0x545 JUMP JUMPDEST SWAP3 PUSH2 0x9E0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x514 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2C1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA38 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x452 SWAP2 PUSH2 0xA26 PUSH2 0xA2C SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x984 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xA44 DUP5 PUSH2 0x2DC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9FF JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA71 PUSH2 0x2AB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAB0 JUMPI PUSH2 0x452 DUP6 PUSH2 0xA2C DUP2 DUP10 SUB DUP3 PUSH2 0x514 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA99 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x629 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xE0 PUSH2 0xB39 PUSH2 0xB23 PUSH2 0x100 SWAP4 DUP5 PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH1 0x80 DUP6 ADD MSTORE SWAP5 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x452 PUSH1 0x40 PUSH1 0xE0 DUP2 MLOAD PUSH2 0xB92 DUP2 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xC56 PUSH2 0xC4D PUSH1 0x7 PUSH2 0xBDC PUSH2 0x536 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP4 PUSH2 0xBF6 PUSH1 0x1 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC07 PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xC27 PUSH2 0xC1D PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xAEA JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0xC85 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x2333 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE83 JUMPI PUSH2 0xCA7 DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xCBD PUSH2 0xCB9 PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xE75 JUMPI DUP4 ISZERO DUP1 ISZERO PUSH2 0xE69 JUMPI JUMPDEST PUSH2 0xE5B JUMPI DUP5 PUSH2 0xCFE CALLER PUSH2 0xCE7 DUP8 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD LT PUSH2 0xE4D JUMPI PUSH2 0xD1F PUSH2 0xD15 PUSH1 0x5 DUP6 ADD SLOAD DUP8 PUSH2 0x22CD JUMP JUMPDEST DUP3 DUP6 ADD SLOAD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0xC SLOAD LT PUSH2 0xE3E JUMPI PUSH1 0x6 SWAP1 PUSH2 0xD37 DUP8 DUP8 CALLER PUSH2 0x2953 JUMP JUMPDEST ADD PUSH2 0xD43 DUP7 DUP3 SLOAD PUSH2 0x2946 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD59 PUSH2 0xD54 DUP5 PUSH1 0xC SLOAD PUSH2 0x2946 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xE0B JUMPI JUMPDEST POP ISZERO PUSH2 0xDFD JUMPI POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xEFD5D515529A8F76C5944B1D953CDE6B2C61C8B81E144C964AEB038714CABCA6 SWAP1 PUSH1 0x40 SWAP1 LOG3 PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0xE2C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI JUMPDEST PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2300 JUMP JUMPDEST CODESIZE PUSH2 0xDBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST POP SWAP1 MLOAD PUSH4 0x31D2F709 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBB97CC9B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x7 SLOAD DUP5 LT ISZERO PUSH2 0xCCA JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x7350D3B PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF3B PUSH1 0x6 SLOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x22CD JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0xF5D PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0xF65 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1008 PUSH2 0xFE2 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x1033 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x103B PUSH2 0x2333 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1206 JUMPI PUSH2 0x105E PUSH2 0x1050 PUSH1 0x6 SLOAD DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP6 SWAP3 SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD DUP2 DUP11 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI DUP8 SWAP2 PUSH2 0x11E9 JUMPI JUMPDEST POP ISZERO PUSH2 0x11D8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x10EF DUP7 DUP3 SLOAD PUSH2 0x1F40 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1105 PUSH2 0x1100 DUP7 PUSH1 0x9 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 DUP5 SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP12 SWAP2 DUP4 SWAP2 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xE39 JUMPI DUP7 SWAP3 PUSH2 0x11BB JUMPI JUMPDEST POP POP ISZERO PUSH2 0x11AC JUMPI POP PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0x728EF7F9F5DA04913A2539A83B1D7620E12ED0FB6CA88328BDBA350F977CFF0F SWAP2 SWAP1 LOG2 PUSH2 0x11A9 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0x11D1 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x1200 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1254 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1260 DUP2 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x12DF JUMPI DUP2 PUSH2 0x129E PUSH2 0x12AF SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x138A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1374 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1369 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x13A8 DUP5 PUSH2 0x135A JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1415 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13D2 JUMPI JUMPDEST POP POP PUSH2 0x543 SWAP3 POP SUB DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x13FD JUMPI POP POP PUSH2 0x543 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13C4 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x543 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13C4 JUMP JUMPDEST SWAP7 SWAP4 SWAP9 SWAP8 SWAP5 SWAP2 PUSH1 0xE0 SWAP7 SWAP4 PUSH2 0x1467 PUSH2 0x1475 SWAP3 PUSH1 0xFF SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST SWAP9 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x452 PUSH2 0x14CE PUSH1 0x1 DUP5 ADD PUSH2 0x1394 JUMP JUMPDEST SWAP3 PUSH2 0x14DB PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 PUSH2 0x1438 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1537 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1509 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1555 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1586 SWAP2 PUSH2 0x151F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15F0 PUSH2 0x2AB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x6D3 PUSH1 0x4 CALLDATALOAD PUSH2 0x164B PUSH2 0x2C6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1666 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x1BA4 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x16DB PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x16E3 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x16EE PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP4 SWAP1 DUP5 ISZERO PUSH2 0x17FD JUMPI AND SWAP2 DUP2 SWAP1 DUP4 PUSH2 0x176F JUMPI POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 DUP8 GAS CALL PUSH2 0x171C PUSH2 0x200A JUMP JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x1758 PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17DF JUMPI JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x1758 PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x17F7 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1008 PUSH2 0x184D PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x1855 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1897 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x189F PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x18BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x60E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1978 JUMPI JUMPDEST PUSH2 0x1951 JUMPI DUP3 AND ISZERO PUSH2 0x1938 JUMPI ISZERO PUSH2 0x1920 JUMPI PUSH2 0x6D3 SWAP3 PUSH2 0x1918 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18D6 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x19FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x1A15 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x199C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x2C1 JUMPI PUSH2 0x452 SWAP5 PUSH2 0x1748 SWAP5 PUSH1 0x4 CALLDATALOAD PUSH2 0x2356 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30ADEB818EF77F204F5A603C30FA5332397B6E28FB3B7F9D937AE6A6914716DE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x858 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A18C22192F7476EC84391FCE95952ACE1237D522DE16C98159F6D46D423EF36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1B36 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x1B9E JUMPI DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1BD0 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1B9E JUMPI DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1C5B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C36 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1537 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1D17 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1C90 DUP3 PUSH2 0x545 JUMP JUMPDEST SWAP2 PUSH2 0x1C9E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1CAD PUSH1 0x1F NOT SWAP2 PUSH2 0x545 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 SWAP2 CALLDATASIZE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x1D04 DUP3 DUP8 PUSH2 0x1C60 JUMP JUMPDEST MSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1CBA JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1D17 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E4A JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x1DC3 JUMPI JUMPDEST PUSH2 0x1D91 SWAP5 DUP3 AND PUSH2 0x1D96 JUMPI JUMPDEST POP POP POP PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DB9 SWAP2 PUSH2 0xCE7 PUSH2 0x1DB1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1F40 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x1D89 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1DE0 DUP11 PUSH2 0xCE7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1E13 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1D91 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1E0B DUP14 PUSH2 0xCE7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EBE JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1EE4 JUMPI PUSH1 0x20 DUP1 PUSH2 0x1EDA SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x2134 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1EF0 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1F38 DUP9 DUP13 DUP4 PUSH2 0x1F4D JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1F64 PUSH2 0x629 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x950 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C1 JUMPI MLOAD PUSH2 0x629 DUP2 PUSH2 0x33D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x629 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x629 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2004 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2035 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x201B DUP3 PUSH2 0x5BB JUMP JUMPDEST SWAP2 PUSH2 0x2029 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x204C JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x206F PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1F87 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2104 JUMPI JUMPDEST POP PUSH2 0x20C7 JUMPI DUP3 PUSH2 0x2096 PUSH2 0x200A JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x20E1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x2126 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x212D JUMPI JUMPDEST PUSH2 0x211E DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2088 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2114 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2149 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216C PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1FB8 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x21AE JUMPI JUMPDEST POP PUSH2 0x2193 JUMPI DUP3 PUSH2 0x2096 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x20E1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x21C7 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x212D JUMPI PUSH2 0x211E DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH2 0x21FD PUSH2 0x629 SWAP6 SWAP4 PUSH2 0x220B SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x950 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x629 SWAP6 SWAP4 PUSH2 0x21FD SWAP2 PUSH2 0x220B SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x225D JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x206F PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2294 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216C PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x2219 JUMP JUMPDEST SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1C5B JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1C5B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x22EA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C1 JUMPI MLOAD PUSH2 0x629 DUP2 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH2 0x2321 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x2344 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH2 0x2364 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x236C PUSH2 0x2333 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP7 LT PUSH2 0x2571 JUMPI PUSH1 0x12 PUSH1 0xFF DUP5 AND GT PUSH2 0x255F JUMPI PUSH1 0x32 DUP2 GT PUSH2 0x254D JUMPI PUSH1 0xA DUP5 GT PUSH2 0x253B JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x251D JUMPI JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x2510 PUSH32 0x209E4CC824C27FB4D0B3D56450B5CDEAD204B21BFB8286755C4865B577A8A28F SWAP4 PUSH2 0x2434 PUSH2 0xD54 DUP10 PUSH1 0xC SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP8 DUP9 SWAP7 PUSH2 0x244B PUSH2 0x2446 DUP10 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x24D5 PUSH2 0x2463 PUSH2 0x1050 PUSH2 0x245D DUP7 PUSH2 0x2583 JUMP JUMPDEST DUP6 PUSH2 0x22CD JUMP JUMPDEST SWAP4 PUSH2 0x249D PUSH2 0x246F PUSH2 0x536 JUMP JUMPDEST CALLER DUP2 MSTORE SWAP2 PUSH2 0x247E CALLDATASIZE DUP11 DUP16 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x248E CALLDATASIZE DUP7 DUP13 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x24BC PUSH1 0xE0 DUP3 ADD PUSH1 0x1 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x24D0 DUP11 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x26B7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x24EF SWAP1 DUP10 SWAP1 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2502 PUSH2 0x24FA PUSH2 0x1FF7 JUMP JUMPDEST DUP5 DUP11 CALLER PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 CALLER SWAP11 DUP8 PUSH2 0x27BA JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x629 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x2535 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1124F78B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x680B6CAF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x692ACC5 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1C5B JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x25A2 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x25DE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x25D3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x25BE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH2 0x2610 DUP2 PUSH2 0x260A DUP5 SLOAD PUSH2 0x135A JUMP JUMPDEST DUP5 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x264C JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2641 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2662 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x269F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2686 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x267C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2667 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH2 0x543 SWAP2 PUSH1 0x7 SWAP1 PUSH2 0x274C SWAP1 PUSH1 0xE0 SWAP1 PUSH2 0x26F2 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP8 ADD PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x2703 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP8 ADD PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x2727 PUSH2 0x2714 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SWAP1 PUSH1 0xFF AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP7 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x2781 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x151F JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x27D9 PUSH1 0x60 SWAP6 PUSH2 0x27E7 SWAP5 SWAP10 SWAP9 SWAP8 SWAP10 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 PUSH2 0x2799 JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2799 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0x1938 JUMPI PUSH2 0x282D PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1D17 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2884 JUMPI DUP1 PUSH2 0x287F SWAP2 PUSH1 0x5 SHL PUSH2 0x2878 PUSH2 0x1DB1 DUP8 PUSH2 0xCE7 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x283F JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x28FB JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x28F1 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x543 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x203A JUMP JUMPDEST PUSH2 0x543 SWAP4 CALLER PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x292F DUP9 DUP9 DUP4 PUSH2 0x1F4D JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x28D3 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x1920 JUMPI PUSH2 0x298E PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x29A0 DUP2 PUSH2 0x4F8 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x2AD4 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2A4D JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x29E4 DUP7 PUSH2 0xCE7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x2A17 JUMPI DUP7 PUSH2 0xCE7 PUSH2 0x2A12 SWAP6 SWAP5 SWAP4 PUSH2 0x2A0C SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x29B2 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x2AA2 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x2A9D SWAP2 DUP4 PUSH2 0x1F4D JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x543 PUSH2 0x2B77 PUSH1 0x7 PUSH2 0x2B06 PUSH2 0x536 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP5 PUSH2 0x2B20 PUSH1 0x1 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x2B31 PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x2B51 PUSH2 0x2B47 PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO DUP1 ISZERO PUSH2 0x2BC5 JUMPI JUMPDEST PUSH2 0x2BBE JUMPI PUSH1 0x4 PUSH2 0x2BB5 PUSH2 0x629 SWAP4 PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SLOAD ISZERO PUSH2 0x2B9D JUMP JUMPDEST SWAP1 PUSH2 0x2BE4 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x3D7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x2CE4 JUMPI JUMPDEST PUSH2 0x2CDB JUMPI PUSH2 0x2C0C PUSH2 0x2C11 SWAP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2AF5 JUMP JUMPDEST PUSH2 0x2C21 PUSH2 0xCB9 PUSH1 0xE0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CDB JUMPI PUSH2 0x629 DUP2 PUSH2 0x2CCD PUSH2 0x2CC0 PUSH1 0x20 PUSH2 0x2C8F SWAP6 ADD MLOAD SWAP3 PUSH2 0x2C89 PUSH2 0x2CA7 PUSH2 0x2C62 PUSH2 0x2C5D PUSH2 0x2C57 PUSH1 0x60 PUSH1 0x40 DUP8 ADD MLOAD SWAP7 ADD MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2D12 JUMP JUMPDEST SWAP3 PUSH2 0x2C89 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 PUSH2 0x2C89 PUSH1 0x20 DUP12 ADD PUSH1 0x9 SWAP1 PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BD1 JUMP JUMPDEST PUSH12 0x11161139BCB6B137B6111D11 PUSH1 0xA1 SHL DUP2 MSTORE PUSH1 0xC ADD SWAP1 JUMP JUMPDEST PUSH13 0x1116113232B1B4B6B0B639911D PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD SWAP1 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x514 JUMP JUMPDEST POP PUSH2 0x629 PUSH2 0x1FF7 JUMP JUMPDEST POP PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x30 ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1537 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC6 JUMPI DUP1 PUSH1 0x0 DUP3 DUP2 SWAP4 JUMPDEST PUSH2 0x2DB2 JUMPI POP DUP2 PUSH2 0x2D2E DUP5 PUSH2 0x5BB JUMP JUMPDEST SWAP4 PUSH2 0x2D3C PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x1F NOT PUSH2 0x2D4B DUP3 PUSH2 0x5BB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP1 JUMPDEST PUSH2 0x2D5E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D67 SWAP1 PUSH2 0x2937 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2DAA PUSH2 0x2DA1 PUSH2 0x2D91 PUSH2 0x2D8C PUSH2 0x2C57 PUSH1 0xA DUP8 DIV SWAP7 PUSH2 0x2D86 DUP9 PUSH2 0x22B7 JUMP JUMPDEST SWAP1 PUSH2 0x2946 JUMP JUMPDEST PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE SWAP2 DUP7 PUSH2 0x2D01 JUMP JUMPDEST MSTORE8 SWAP2 DUP3 PUSH2 0x2D54 JUMP JUMPDEST SWAP3 PUSH2 0x2DBE PUSH1 0xA SWAP2 PUSH2 0x1C4C JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x2D1F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xE3 DUP3 0xB7 CALLDATALOAD EXTCODEHASH SGT DUP10 0x4D 0xAA 0xE4 0xD3 SWAP12 SWAP10 CALLCODE SWAP9 0xB4 0xDE 0x4C PUSH13 0xBDF79DC82417526B424271F764 PUSH20 0x6F6C634300081400332F8788117E7EFF1D82E926 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0D00000000000000 ","sourceMap":"803:11999:36:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;10356:13:5;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;-1:-1:-1;;;;803:11999:36;;;;;;;;;;;10356:13:5;803:11999:36;;2061:21:23;803:11999:36;;;1592:4;;803:11999;1676:1;803:11999;-1:-1:-1;;;;;803:11999:36;;;3526:25;;:51;;;;803:11999;3522:101;;3641:32;;803:11999;;3683:26;3728:42;3759:10;3728:42;:::i;:::-;;3780:41;3759:10;3780:41;:::i;:::-;;3831:35;3759:10;3831:35;:::i;:::-;;3876:38;3759:10;3876:38;:::i;:::-;;803:11999;;;;;;;;3641:32;803:11999;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3522:101;803:11999;;-1:-1:-1;;;3600:12:36;;;;;3526:51;803:11999;;;;3555:22;3526:51;;803:11999;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;10356:13:5;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;10356:13:5;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10356:13:5;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;-1:-1:-1;;803:11999:36;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;803:11999:36;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;2954:6:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;735:10:19;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;803:11999:36;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;803:11999:36;-1:-1:-1;803:11999:36;;;;;;;;;;-1:-1:-1;;803:11999:36;1001:30;;803:11999;;;;;;;2954:6:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;803:11999:36;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;803:11999:36;-1:-1:-1;803:11999:36;;;;;;;;;;-1:-1:-1;;803:11999:36;1075:24;;803:11999;;;;;;;2954:6:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;803:11999:36;6424:11:0;:::o;6179:316::-;-1:-1:-1;;;;;803:11999:36;-1:-1:-1;803:11999:36;;;;;;;;;;-1:-1:-1;;803:11999:36;1146:27;;803:11999;;;;;;;2954:6:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;803:11999:36;6424:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_14521":{"entryPoint":683,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_14526":{"entryPoint":710,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":1373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":8050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":6556,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":8729,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes_27187":{"entryPoint":8654,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":8120,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes_27186":{"entryPoint":8071,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_string_string_uint8_uint256_uint256_uint256_bool":{"entryPoint":5176,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":8013,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":11217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":10137,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_string_calldata_uint256_uint256":{"entryPoint":10170,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8e2f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_aa5f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e534":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_GameTokenInfo":{"entryPoint":2794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1334,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":8183,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1349,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":10079,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":8000,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint8":{"entryPoint":11504,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":8928,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256_14550":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":9603,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8909,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256_14652":{"entryPoint":8887,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10566,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_14650":{"entryPoint":10551,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":9620,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5012,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":9704,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":983,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_GameTokenInfo_to_struct_GameTokenInfo":{"entryPoint":9911,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":4629,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_EMERGENCY_ROLE":{"entryPoint":1110,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_GAME_TOKEN_DECIMALS":{"entryPoint":5739,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MIN_XP_LOCK_AMOUNT":{"entryPoint":3998,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PAUSER_ROLE":{"entryPoint":5767,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PRECISION_FACTOR":{"entryPoint":5641,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_RATE_MANAGER_ROLE":{"entryPoint":5524,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":752,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2453,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnGameToken":{"entryPoint":3170,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_calculateXpAmount":{"entryPoint":3857,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_calculateXpReturn":{"entryPoint":2237,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createGameToken":{"entryPoint":6602,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_cridaToXpRate":{"entryPoint":3827,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_cridaToken":{"entryPoint":3728,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyWithdraw":{"entryPoint":5826,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_gameTokens":{"entryPoint":5266,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getGameTokenInfo":{"entryPoint":2927,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1169,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserGameTokens":{"entryPoint":2639,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":1877,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":4034,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":6189,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lockCrida":{"entryPoint":4116,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nextGameId":{"entryPoint":4924,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":3908,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":2759,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":2166,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":5676,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1580,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":6270,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":4667,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setRate":{"entryPoint":1940,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":847,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalLockedCrida":{"entryPoint":6159,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":2278,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":1055,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_userGameTokens":{"entryPoint":5436,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_userLockedCrida":{"entryPoint":5583,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_xpReserves":{"entryPoint":3797,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_xpToken":{"entryPoint":4855,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4954,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":8202,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1300,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14538":{"entryPoint":1238,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_22702":{"entryPoint":1272,"id":null,"parameterSlots":1,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1604,"parameterSlots":2,"returnSlots":2},"fun_balanceOf":{"entryPoint":null,"id":808,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":7284,"id":878,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":10579,"id":1509,"parameterSlots":3,"returnSlots":0},"fun_calculateXpReturn":{"entryPoint":11136,"id":10913,"parameterSlots":2,"returnSlots":1},"fun_checkOnERC1155BatchReceived":{"entryPoint":8832,"id":1939,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155BatchReceived_22705":{"entryPoint":8779,"id":1939,"parameterSlots":5,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":8500,"id":1865,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received_22706":{"entryPoint":8250,"id":1865,"parameterSlots":5,"returnSlots":0},"fun_checkRole":{"entryPoint":6889,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_14535":{"entryPoint":6707,"id":93,"parameterSlots":0,"returnSlots":0},"fun_checkRole_14563":{"entryPoint":6801,"id":93,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":6922,"id":256,"parameterSlots":2,"returnSlots":1},"fun_mint":{"entryPoint":10225,"id":1418,"parameterSlots":4,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":4054,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9011,"id":4046,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":8981,"id":3951,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":7076,"id":294,"parameterSlots":2,"returnSlots":1},"fun_uint2str":{"entryPoint":11538,"id":11074,"parameterSlots":1,"returnSlots":1},"fun_updateWithAcceptanceCheck":{"entryPoint":7481,"id":1234,"parameterSlots":5,"returnSlots":0},"fun_uri":{"entryPoint":11240,"id":10981,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":7244,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_uint256_dyn_storage_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_array_uint256_dyn_storage_of_address_14551":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_uint256_dyn_storage_of_address_14596":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_GameTokenInfo_storage_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_GameTokenInfo_storage_of_uint256_14542":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":11521,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":7264,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_whenNotPaused":{"entryPoint":9046,"id":3922,"parameterSlots":6,"returnSlots":1},"panic_error_0x11":{"entryPoint":7222,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5385,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_reference_type_struct_GameTokenInfo":{"entryPoint":10997,"id":null,"parameterSlots":1,"returnSlots":1},"revert_forward":{"entryPoint":8171,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":5407,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_14544":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_14591":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_bool":{"entryPoint":4657,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":829,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool_14594":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"10215":[{"length":32,"start":3750},{"length":32,"start":4254}],"10218":[{"length":32,"start":3458},{"length":32,"start":4402},{"length":32,"start":4877},{"length":32,"start":9161}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146102a657806301ffc9a7146102a15780630e89341c1461029c57806320df435914610297578063248a9ca3146102925780632eb2c2d61461028d5780632f2ff15d1461028857806334fcf4371461028357806336568abe1461027e5780633b420a73146102795780633f4ba83a146102745780634e1273f41461026f578063546fdad41461026a5780635c975abb146102655780635e79c1dc146102605780635ed6c1db1461025b5780636d8061b8146102565780636d8554e2146102515780636dd9cbd41461024c57806374b334c5146102475780638456cb59146102425780638760550d1461023d57806391d148541461023857806397e05e8614610233578063a217fddf1461022e578063a22cb46514610229578063ae5014b114610224578063b135bbb01461021f578063bf034b691461021a578063c21c64a714610215578063cb327b8b14610210578063cb4cd5561461020b578063ccd34cd514610206578063d547741f14610201578063df525b7d146101fc578063e63ab1e9146101f7578063e63ea408146101f2578063e8321987146101ed578063e985e9c5146101e8578063f242432a146101e35763fd44d274146101de57600080fd5b6119ca565b61187e565b61182d565b61180f565b6116c2565b611687565b61166b565b61162c565b611609565b6115cf565b611594565b61153c565b611492565b61133c565b6112f7565b61123b565b611215565b611014565b610fc2565b610f9e565b610f44565b610f11565b610ef3565b610ed5565b610e90565b610c62565b610b6f565b610ac7565b610a4f565b610995565b6108e6565b6108bd565b610876565b610794565b610755565b61062c565b610491565b610456565b61041f565b61034f565b6102f0565b600435906001600160a01b03821682036102c157565b600080fd5b602435906001600160a01b03821682036102c157565b35906001600160a01b03821682036102c157565b346102c15760403660031901126102c157602061033461030e6102ab565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b03198116036102c157565b346102c15760203660031901126102c157602060043561036e8161033d565b63ffffffff60e01b16637965db0b60e01b8114908115610394575b506040519015158152f35b636cdb3d1360e11b8114915081156103c6575b81156103b5575b5038610389565b6301ffc9a760e01b149050386103ae565b6303a24d0760e21b811491506103a7565b60005b8381106103ea5750506000910152565b81810151838201526020016103da565b90602091610413815180928185528580860191016103d7565b601f01601f1916010190565b346102c15760203660031901126102c15761045261043e600435612be8565b6040519182916020835260208301906103fa565b0390f35b346102c15760003660031901126102c15760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b346102c15760203660031901126102c15760043560005260036020526020600160406000200154604051908152f35b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176104f357604052565b6104c0565b6020810190811067ffffffffffffffff8211176104f357604052565b90601f8019910116810190811067ffffffffffffffff8211176104f357604052565b60405190610543826104d6565b565b67ffffffffffffffff81116104f35760051b60200190565b81601f820112156102c15780359161057483610545565b926105826040519485610514565b808452602092838086019260051b8201019283116102c1578301905b8282106105ac575050505090565b8135815290830190830161059e565b67ffffffffffffffff81116104f357601f01601f191660200190565b9291926105e3826105bb565b916105f16040519384610514565b8294818452818301116102c1578281602093846000960137010152565b9080601f830112156102c157816020610629933591016105d7565b90565b346102c15760a03660031901126102c1576106456102ab565b61064d6102c6565b906044359167ffffffffffffffff908184116102c1576106726004943690860161055d565b906064358381116102c15761068a903690870161055d565b926084359081116102c1576106a2903690870161060e565b936001600160a01b03808216903382141580610731575b610704578316156106ec57156106d5576106d39550611d39565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff16156106b9565b346102c15760403660031901126102c1576106d36004356107746102c6565b9080600052600360205261078f600160406000200154611ae9565b611b0a565b346102c15760203660031901126102c1573360009081527fce96a28fb06ca29ce31a17de45a1073cd88b8170e4a67f7f416f721e36bde95c6020526040902054600435907f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b29060ff1615610858575080156108465760068054908290556040805191825260208201929092527fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d19169190a1005b6040516314cee7cd60e11b8152600490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b346102c15760403660031901126102c15761088f6102c6565b336001600160a01b038216036108ab576106d390600435611ba4565b60405163334bd91960e11b8152600490fd5b346102c15760403660031901126102c15760206108de602435600435612b80565b604051908152f35b346102c15760003660031901126102c1576108ff611a33565b60045460ff81161561093e5760ff19166004557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b90815180825260208080930193019160005b828110610970575050505090565b835185529381019392810192600101610962565b906020610629928181520190610950565b346102c15760403660031901126102c15760043567ffffffffffffffff8082116102c157366023830112156102c15781600401356109d281610545565b926109e06040519485610514565b81845260209160248386019160051b830101913683116102c157602401905b828210610a3857856024358681116102c15761045291610a26610a2c92369060040161055d565b90611c74565b60405191829182610984565b838091610a44846102dc565b8152019101906109ff565b346102c1576020806003193601126102c1576001600160a01b03610a716102ab565b16600052600b8152604060002090604051908181845491828152019360005281600020916000905b828210610ab05761045285610a2c81890382610514565b835486529485019460019384019390910190610a99565b346102c15760003660031901126102c157602060ff600454166040519015158152f35b610629906020815260018060a01b038351166020820152602083015160e0610b39610b23610100938460408701526101208601906103fa565b6040870151858203601f190160608701526103fa565b606086015160ff16608085015294608081015160a085015260a081015160c085015260c081015182850152015191019015159052565b346102c15760203660031901126102c157610452604060e08151610b92816104d6565b6000918183809352606060208201526060858201528260608201528260808201528260a08201528260c082015201526004358152600a60205220610c56610c4d6007610bdc610536565b84546001600160a01b0316815293610bf660018201611394565b6020860152610c0760028201611394565b6040860152610c27610c1d600383015460ff1690565b60ff166060870152565b60048101546080860152600581015460a0860152600681015460c0860152015460ff1690565b151560e0830152565b60405191829182610aea565b346102c1576040806003193601126102c157600480359060243592610c85612315565b610c8d612333565b8315610e8357610ca783600052600a602052604060002090565b91610cbd610cb9600785015460ff1690565b1590565b610e755783158015610e69575b610e5b5784610cfe33610ce7876000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b5410610e4d57610d1f610d156005850154876122cd565b82850154906122e0565b9283600c5410610e3e57600690610d37878733612953565b01610d43868254612946565b9055610d59610d5484600c54612946565b600c55565b815163a9059cbb60e01b81523382820190815260208181018690529082908190604001038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610e3957600091610e0b575b5015610dfd575051928352602083015233917fefd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca690604090a36106d36001600555565b90516312171d8360e31b8152fd5b610e2c915060203d8111610e32575b610e248183610514565b810190612300565b38610dbb565b503d610e1a565b611feb565b5090516331d2f70960e01b8152fd5b9051632ca2f52b60e11b8152fd5b905163bb97cc9b60e01b8152fd5b50600754841015610cca565b90516307350d3b60e11b8152fd5b51631f2a200560e01b8152fd5b346102c15760003660031901126102c1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102c15760003660031901126102c1576020600c54604051908152f35b346102c15760003660031901126102c1576020600654604051908152f35b346102c15760203660031901126102c1576020670de0b6b3a7640000610f3b6006546004356122cd565b04604051908152f35b346102c15760003660031901126102c157610f5d611a33565b610f65612315565b600160ff1960045416176004557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102c15760003660031901126102c1576020604051683635c9adc5dea000008152f35b346102c15760403660031901126102c157602060ff611008610fe26102c6565b6004356000526003845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346102c1576020806003193601126102c1576004803590611033612315565b61103b612333565b81156112065761105e611050600654846122cd565b670de0b6b3a7640000900490565b604080516323b872dd60e01b815233848201908152306020820152918201859052600095929392916001600160a01b03919083908290819003606001818a7f000000000000000000000000000000000000000000000000000000000000000087165af1908115610e395787916111e9575b50156111d8573360009081526008602052604090206110ef868254611f40565b905561110561110086600954611f40565b600955565b6040805163a9059cbb60e01b8152338582019081526020810187905290928492849283918b9183910103927f0000000000000000000000000000000000000000000000000000000000000000165af1918215610e395786926111bb575b5050156111ac575060408051928352602083019190915233917f728ef7f9f5da04913a2539a83b1d7620e12ed0fb6ca88328bdba350f977cff0f9190a26111a96001600555565b80f35b6040516312171d8360e31b8152fd5b6111d19250803d10610e3257610e248183610514565b3880611162565b6040516312171d8360e31b81528390fd5b6112009150833d8511610e3257610e248183610514565b386110cf565b604051631f2a200560e01b8152fd5b346102c15760003660031901126102c157602060405160008152f35b801515036102c157565b346102c15760403660031901126102c1576112546102ab565b60243561126081611231565b6001600160a01b0382169182156112df578161129e6112af9233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b346102c15760003660031901126102c1576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102c15760003660031901126102c1576020600754604051908152f35b90600182811c9216801561138a575b602083101461137457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611369565b90604051918260008254926113a88461135a565b90818452600194858116908160001461141557506001146113d2575b505061054392500383610514565b9093915060005260209081600020936000915b8183106113fd575050610543935082010138806113c4565b855488840185015294850194879450918301916113e5565b91505061054394506020925060ff191682840152151560051b82010138806113c4565b96939897949160e096936114676114759260ff9460018060a01b03168b526101008060208d01528b01906103fa565b9089820360408b01526103fa565b98166060870152608086015260a085015260c08401521515910152565b346102c15760203660031901126102c1576004356000908152600a6020526040902080546001600160a01b03166104526114ce60018401611394565b926114db60028201611394565b9060ff600382015416600482015460058301549160ff60076006860154950154169460405198899889611438565b634e487b7160e01b600052603260045260246000fd5b80548210156115375760005260206000200190600090565b611509565b346102c15760403660031901126102c1576115556102ab565b6001600160a01b03166000908152600b60205260409020805460243591908210156102c1576020916115869161151f565b90546040519160031b1c8152f35b346102c15760003660031901126102c15760206040517f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b28152f35b346102c15760203660031901126102c1576001600160a01b036115f06102ab565b1660005260086020526020604060002054604051908152f35b346102c15760003660031901126102c1576020604051670de0b6b3a76400008152f35b346102c15760403660031901126102c1576106d360043561164b6102c6565b90806000526003602052611666600160406000200154611ae9565b611ba4565b346102c15760003660031901126102c157602060405160128152f35b346102c15760003660031901126102c15760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b346102c15760603660031901126102c1576116db6102ab565b6116e36102c6565b6044356116ee611a91565b6001600160a01b03828116939084156117fd57169181908361176f5750600080808093875af161171c61200a565b501561175d576117587ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504915b6040519081529081906020820190565b0390a3005b6040516312171d8360e31b8152600490fd5b60405163a9059cbb60e01b81526001600160a01b0391909116600482015260248101919091526020816044816000875af1908115610e39576000916117df575b501561175d576117587ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f388332850491611748565b6117f7915060203d8111610e3257610e248183610514565b386117af565b604051631f2a200560e01b8152600490fd5b346102c15760003660031901126102c1576020600954604051908152f35b346102c15760403660031901126102c157602060ff61100861184d6102ab565b6118556102c6565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346102c15760a03660031901126102c1576118976102ab565b61189f6102c6565b60843567ffffffffffffffff81116102c1576118bf90369060040161060e565b906001600160a01b03838116903382141580611978575b611951578216156119385715611920576106d3926119186064356044359160405192600184526020840152604083019160018352606084015260808301604052565b929091611d39565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff16156118d6565b9181601f840112156102c15782359167ffffffffffffffff83116102c157602083818601950101116102c157565b346102c15760803660031901126102c15767ffffffffffffffff6024358181116102c1576119fc90369060040161199c565b916044359081116102c157611a1590369060040161199c565b6064359160ff831683036102c1576104529461174894600435612356565b3360009081527f30adeb818ef77f204f5a603c30fa5332397b6e28fb3b7f9d937ae6a6914716de602052604090207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff905b5416156108585750565b3360009081527f4a18c22192f7476ec84391fce95952ace1237d522de16c98159f6d46d423ef36602052604090207fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff90611a87565b6000818152600360209081526040808320338452909152902060ff90611a87565b600090808252600360205260ff611b3684604085209060018060a01b0316600052602052604060002090565b5416611b9e578082526003602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600360205260ff611bd084604085209060018060a01b0316600052602052604060002090565b541615611b9e578082526003602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b634e487b7160e01b600052601160045260246000fd5b6000198114611c5b5760010190565b611c36565b80518210156115375760209160051b010190565b91909180518351808203611d17575050805190611c9082610545565b91611c9e6040519384610514565b808352611cad601f1991610545565b0190602091368385013760005b8151811015611d0f57600581901b8281018401519087018401516000908152602081815260408083206001600160a01b0390941683529290522054611d0a9190611d048287611c60565b52611c4c565b611cba565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b949190918151845190818103611d1757505060005b8251811015611e4a57600581901b83810160209081015191870101516001600160a01b03929186908a8516611dc3575b611d91948216611d96575b505050611c4c565b611d4e565b611db991610ce7611db1926000526000602052604060002090565b918254611f40565b9055388581611d89565b9192939050611de08a610ce7846000526000602052604060002090565b54838110611e135791879184611d9196959403611e0b8d610ce7856000526000602052604060002090565b559450611d7e565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b509491939290936001855114600014611ef5576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b038116611ebe575b5050505050565b8451600103611ee457602080611eda9601519201519233612134565b3880808080611eb7565b611ef094919233612280565b611eda565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611f38888c83611f4d565b0390a4611ea8565b91908201809211611c5b57565b9091611f6461062993604084526040840190610950565b916020818403910152610950565b908160209103126102c157516106298161033d565b909260a0926106299594600180861b03168352600060208401526040830152606082015281608082015201906103fa565b919261062995949160a094600180871b0380921685521660208401526040830152606082015281608082015201906103fa565b6040513d6000823e3d90fd5b60405190612004826104f8565b60008252565b3d15612035573d9061201b826105bb565b916120296040519384610514565b82523d6000602084013e565b606090565b9293919093843b61204c575050505050565b60209161206f604051948593849363f23a6e6160e01b9889865260048601611f87565b038160006001600160a01b0388165af160009181612104575b506120c7578261209661200a565b80519190826120c057604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b031916036120e157503880808080611eb7565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b61212691925060203d811161212d575b61211e8183610514565b810190611f72565b9038612088565b503d612114565b939290949194853b612149575b505050505050565b61216c602093604051958694859463f23a6e6160e01b998a875260048701611fb8565b038160006001600160a01b0388165af1600091816121ae575b50612193578261209661200a565b6001600160e01b031916036120e15750388080808080612141565b6121c791925060203d811161212d5761211e8183610514565b9038612185565b926121fd610629959361220b9360018060a01b031686526000602087015260a0604087015260a0860190610950565b908482036060860152610950565b9160808184039101526103fa565b939061062995936121fd9161220b9460018060a01b03809216885216602087015260a0604087015260a0860190610950565b9293919093843b61225d575050505050565b60209161206f604051948593849363bc197c8160e01b98898652600486016121ce565b939290949194853b61229457505050505050565b61216c602093604051958694859463bc197c8160e01b998a875260048701612219565b90600a820291808304600a1490151715611c5b57565b81810292918115918404141715611c5b57565b81156122ea570490565b634e487b7160e01b600052601260045260246000fd5b908160209103126102c1575161062981611231565b60ff6004541661232157565b60405163d93c066560e01b8152600490fd5b600260055414612344576002600555565b604051633ee5aeb560e01b8152600490fd5b949193929093612364612315565b61236c612333565b683635c9adc5dea00000861061257157601260ff84161161255f576032811161254d57600a841161253b576040516323b872dd60e01b81523360048201523060248201526044810187905260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115610e395760009161251d575b501561175d576125107f209e4cc824c27fb4d0b3d56450b5cdead204b21bfb8286755c4865b577a8a28f93612434610d5489600c54611f40565b60075497889661244b61244689611c4c565b600755565b6124d561246361105061245d86612583565b856122cd565b9361249d61246f610536565b3381529161247e368a8f6105d7565b602084015261248e36868c6105d7565b604084015260ff166060830152565b8460808201528360a08201528460c08201526124bc60e0820160019052565b6124d08a600052600a602052604060002090565b6126b7565b336000908152600b602052604090206124ef90899061275f565b6125026124fa611ff7565b848a336127f1565b604051958695339a876127ba565b0390a36106296001600555565b612535915060203d8111610e3257610e248183610514565b386123fa565b604051631124f78b60e01b8152600490fd5b60405163680b6caf60e01b8152600490fd5b604051630692acc560e51b8152600490fd5b604051632ca2f52b60e11b8152600490fd5b60ff16604d8111611c5b57600a0a90565b90601f81116125a257505050565b600091825260208220906020601f850160051c830194106125de575b601f0160051c01915b8281106125d357505050565b8181556001016125c7565b90925082906125be565b919091825167ffffffffffffffff81116104f3576126108161260a845461135a565b84612594565b602080601f831160011461264c575081929394600092612641575b50508160011b916000199060031b1c1916179055565b01519050388061262b565b90601f1983169561266285600052602060002090565b926000905b88821061269f57505083600195969710612686575b505050811b019055565b015160001960f88460031b161c1916905538808061267c565b80600185968294968601518155019501930190612667565b815181546001600160a01b0319166001600160a01b039091161781556105439160079061274c9060e0906126f26020820151600187016125e8565b6127036040820151600287016125e8565b612727612714606083015160ff1690565b600387019060ff1660ff19825416179055565b6080810151600486015560a0810151600586015560c081015160068601550151151590565b91019060ff801983541691151516179055565b8054680100000000000000008110156104f3576127819160018201815561151f565b819291549060031b91821b91600019901b1916179055565b908060209392818452848401376000828201840152601f01601f1916010190565b9290936127d96060956127e79499989799608087526080870191612799565b918483036020860152612799565b9460408201520152565b6001600160a01b038116939290919084156119385761282d60405192600184526020840152604083019160018352606084015260808301604052565b928151845190818103611d1757505060005b8251811015612884578061287f9160051b612878611db187610ce7602080868b010151958c010151946000526000602052604060002090565b9055611c4c565b61283f565b5092919360018251146000146128fb5760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b80516001036128f1579060208061054395930151910151913361203a565b610543933361224b565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061292f888883611f4d565b0390a46128d3565b600019810191908211611c5b57565b91908203918211611c5b57565b6001600160a01b0381169290919083156119205761298e60405192600184526020840152604083019160018352606084015260808301604052565b9190604094600086516129a0816104f8565b528151845190818103612ad457505060005b8251811015612a4d578060051b602080828601015191870101516129e486610ce7846000526000602052604060002090565b54818110612a175786610ce7612a12959493612a0c9303936000526000602052604060002090565b55611c4c565b6129b2565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514612aa25760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291612a9d9183611f4d565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b90610543612b776007612b06610536565b85546001600160a01b0316815294612b2060018201611394565b6020870152612b3160028201611394565b6040870152612b51612b47600383015460ff1690565b60ff166060880152565b60048101546080870152600581015460a0870152600681015460c0870152015460ff1690565b151560e0840152565b600052600a602052604060002060ff600782015416158015612bc5575b612bbe576004612bb5610629936005840154906122cd565b910154906122e0565b5050600090565b50600481015415612b9d565b90612be4602092828151948592016103d7565b0190565b80158015612ce4575b612cdb57612c0c612c1191600052600a602052604060002090565b612af5565b612c21610cb960e0830151151590565b612cdb5761062981612ccd612cc06020612c8f95015192612c89612ca7612c62612c5d612c576060604087015196015160ff1690565b60ff1690565b612d12565b92612c89604051998a98612c8960208b01600990683d913730b6b2911d1160b91b81520190565b90612bd1565b6b11161139bcb6b137b6111d1160a11b8152600c0190565b6c1116113232b1b4b6b0b639911d60991b8152600d0190565b607d60f81b815260010190565b03601f198101835282610514565b50610629611ff7565b50600754811015612bf1565b60ff166030019060ff8211611c5b57565b908151811015611537570160200190565b8015612dc6578060008281935b612db2575081612d2e846105bb565b93612d3c6040519586610514565b808552601f19612d4b826105bb565b01366020870137905b612d5e5750505090565b612d6790612937565b9182612daa612da1612d91612d8c612c57600a870496612d86886122b7565b90612946565b612cf0565b60f81b6001600160f81b03191690565b841a9186612d01565b539182612d54565b92612dbe600a91611c4c565b930480612d1f565b506040516040810181811067ffffffffffffffff8211176104f35760405260018152600360fc1b60208201529056fea264697066735822122013e382b7353f13894daae4d39b99f298b4de4c6cbdf79dc82417526b424271f764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3B420A73 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x546FDAD4 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x5E79C1DC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x5ED6C1DB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x6D8061B8 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6D8554E2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6DD9CBD4 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x74B334C5 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8760550D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x97E05E86 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xAE5014B1 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB135BBB0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC21C64A7 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xCB327B8B EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xCB4CD556 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xDF525B7D EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xE8321987 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1E3 JUMPI PUSH4 0xFD44D274 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x187E JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST PUSH2 0x166B JUMP JUMPDEST PUSH2 0x162C JUMP JUMPDEST PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x133C JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1014 JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xF44 JUMP JUMPDEST PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH2 0x334 PUSH2 0x30E PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x36E DUP2 PUSH2 0x33D JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x394 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3C6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3B5 JUMPI JUMPDEST POP CODESIZE PUSH2 0x389 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x3AE JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3EA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x413 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x452 PUSH2 0x43E PUSH1 0x4 CALLDATALOAD PUSH2 0x2BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x543 DUP3 PUSH2 0x4D6 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x574 DUP4 PUSH2 0x545 JUMP JUMPDEST SWAP3 PUSH2 0x582 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2C1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x5AC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x59E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x5E3 DUP3 PUSH2 0x5BB JUMP JUMPDEST SWAP2 PUSH2 0x5F1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x629 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x5D7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x645 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x64D PUSH2 0x2C6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x2C1 JUMPI PUSH2 0x672 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x68A SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x55D JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x6A2 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x60E JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x731 JUMPI JUMPDEST PUSH2 0x704 JUMPI DUP4 AND ISZERO PUSH2 0x6EC JUMPI ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6D3 SWAP6 POP PUSH2 0x1D39 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B9 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x6D3 PUSH1 0x4 CALLDATALOAD PUSH2 0x774 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x78F PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x1B0A JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE96A28FB06CA29CE31A17DE45A1073CD88B8170E4A67F7F416F721E36BDE95C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x858 JUMPI POP DUP1 ISZERO PUSH2 0x846 JUMPI PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB38780DDDE1F073D91C150DE2696F3F7085883648BA21CC5EF01029CB21D1916 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14CEE7CD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x88F PUSH2 0x2C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8AB JUMPI PUSH2 0x6D3 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH2 0x8DE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x8FF PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x93E JUMPI PUSH1 0xFF NOT AND PUSH1 0x4 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x970 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x962 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x629 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x2C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x9D2 DUP2 PUSH2 0x545 JUMP JUMPDEST SWAP3 PUSH2 0x9E0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x514 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2C1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA38 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x452 SWAP2 PUSH2 0xA26 PUSH2 0xA2C SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x55D JUMP JUMPDEST SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x984 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xA44 DUP5 PUSH2 0x2DC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9FF JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA71 PUSH2 0x2AB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAB0 JUMPI PUSH2 0x452 DUP6 PUSH2 0xA2C DUP2 DUP10 SUB DUP3 PUSH2 0x514 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA99 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x629 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xE0 PUSH2 0xB39 PUSH2 0xB23 PUSH2 0x100 SWAP4 DUP5 PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH1 0x80 DUP6 ADD MSTORE SWAP5 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x452 PUSH1 0x40 PUSH1 0xE0 DUP2 MLOAD PUSH2 0xB92 DUP2 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 DUP1 SWAP4 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0xC56 PUSH2 0xC4D PUSH1 0x7 PUSH2 0xBDC PUSH2 0x536 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP4 PUSH2 0xBF6 PUSH1 0x1 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC07 PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xC27 PUSH2 0xC1D PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xAEA JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0xC85 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x2333 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xE83 JUMPI PUSH2 0xCA7 DUP4 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xCBD PUSH2 0xCB9 PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xE75 JUMPI DUP4 ISZERO DUP1 ISZERO PUSH2 0xE69 JUMPI JUMPDEST PUSH2 0xE5B JUMPI DUP5 PUSH2 0xCFE CALLER PUSH2 0xCE7 DUP8 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD LT PUSH2 0xE4D JUMPI PUSH2 0xD1F PUSH2 0xD15 PUSH1 0x5 DUP6 ADD SLOAD DUP8 PUSH2 0x22CD JUMP JUMPDEST DUP3 DUP6 ADD SLOAD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0xC SLOAD LT PUSH2 0xE3E JUMPI PUSH1 0x6 SWAP1 PUSH2 0xD37 DUP8 DUP8 CALLER PUSH2 0x2953 JUMP JUMPDEST ADD PUSH2 0xD43 DUP7 DUP3 SLOAD PUSH2 0x2946 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xD59 PUSH2 0xD54 DUP5 PUSH1 0xC SLOAD PUSH2 0x2946 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xE0B JUMPI JUMPDEST POP ISZERO PUSH2 0xDFD JUMPI POP MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xEFD5D515529A8F76C5944B1D953CDE6B2C61C8B81E144C964AEB038714CABCA6 SWAP1 PUSH1 0x40 SWAP1 LOG3 PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0xE2C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI JUMPDEST PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2300 JUMP JUMPDEST CODESIZE PUSH2 0xDBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST POP SWAP1 MLOAD PUSH4 0x31D2F709 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBB97CC9B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x7 SLOAD DUP5 LT ISZERO PUSH2 0xCCA JUMP JUMPDEST SWAP1 MLOAD PUSH4 0x7350D3B PUSH1 0xE1 SHL DUP2 MSTORE REVERT JUMPDEST MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF3B PUSH1 0x6 SLOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x22CD JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0xF5D PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0xF65 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1008 PUSH2 0xFE2 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 PUSH2 0x1033 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x103B PUSH2 0x2333 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1206 JUMPI PUSH2 0x105E PUSH2 0x1050 PUSH1 0x6 SLOAD DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP6 SWAP3 SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD DUP2 DUP11 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI DUP8 SWAP2 PUSH2 0x11E9 JUMPI JUMPDEST POP ISZERO PUSH2 0x11D8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x10EF DUP7 DUP3 SLOAD PUSH2 0x1F40 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1105 PUSH2 0x1100 DUP7 PUSH1 0x9 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 DUP5 SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP12 SWAP2 DUP4 SWAP2 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xE39 JUMPI DUP7 SWAP3 PUSH2 0x11BB JUMPI JUMPDEST POP POP ISZERO PUSH2 0x11AC JUMPI POP PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0x728EF7F9F5DA04913A2539A83B1D7620E12ED0FB6CA88328BDBA350F977CFF0F SWAP2 SWAP1 LOG2 PUSH2 0x11A9 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST PUSH2 0x11D1 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST PUSH2 0x1200 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1254 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1260 DUP2 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x12DF JUMPI DUP2 PUSH2 0x129E PUSH2 0x12AF SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x138A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1374 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1369 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x13A8 DUP5 PUSH2 0x135A JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1415 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13D2 JUMPI JUMPDEST POP POP PUSH2 0x543 SWAP3 POP SUB DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x13FD JUMPI POP POP PUSH2 0x543 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13C4 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x543 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13C4 JUMP JUMPDEST SWAP7 SWAP4 SWAP9 SWAP8 SWAP5 SWAP2 PUSH1 0xE0 SWAP7 SWAP4 PUSH2 0x1467 PUSH2 0x1475 SWAP3 PUSH1 0xFF SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST SWAP9 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x452 PUSH2 0x14CE PUSH1 0x1 DUP5 ADD PUSH2 0x1394 JUMP JUMPDEST SWAP3 PUSH2 0x14DB PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 PUSH2 0x1438 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1537 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1509 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1555 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1586 SWAP2 PUSH2 0x151F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x15F0 PUSH2 0x2AB JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x6D3 PUSH1 0x4 CALLDATALOAD PUSH2 0x164B PUSH2 0x2C6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1666 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST PUSH2 0x1BA4 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x16DB PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x16E3 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x16EE PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP4 SWAP1 DUP5 ISZERO PUSH2 0x17FD JUMPI AND SWAP2 DUP2 SWAP1 DUP4 PUSH2 0x176F JUMPI POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 DUP8 GAS CALL PUSH2 0x171C PUSH2 0x200A JUMP JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x1758 PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17DF JUMPI JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x1758 PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x17F7 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1008 PUSH2 0x184D PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x1855 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH2 0x1897 PUSH2 0x2AB JUMP JUMPDEST PUSH2 0x189F PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x18BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x60E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1978 JUMPI JUMPDEST PUSH2 0x1951 JUMPI DUP3 AND ISZERO PUSH2 0x1938 JUMPI ISZERO PUSH2 0x1920 JUMPI PUSH2 0x6D3 SWAP3 PUSH2 0x1918 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18D6 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x2C1 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2C1 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x2C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C1 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C1 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x19FC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2C1 JUMPI PUSH2 0x1A15 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x199C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x2C1 JUMPI PUSH2 0x452 SWAP5 PUSH2 0x1748 SWAP5 PUSH1 0x4 CALLDATALOAD PUSH2 0x2356 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x30ADEB818EF77F204F5A603C30FA5332397B6E28FB3B7F9D937AE6A6914716DE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x858 JUMPI POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A18C22192F7476EC84391FCE95952ACE1237D522DE16C98159F6D46D423EF36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1B36 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x1B9E JUMPI DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1BD0 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1B9E JUMPI DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1C5B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C36 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1537 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1D17 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1C90 DUP3 PUSH2 0x545 JUMP JUMPDEST SWAP2 PUSH2 0x1C9E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1CAD PUSH1 0x1F NOT SWAP2 PUSH2 0x545 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 SWAP2 CALLDATASIZE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1D0F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1D0A SWAP2 SWAP1 PUSH2 0x1D04 DUP3 DUP8 PUSH2 0x1C60 JUMP JUMPDEST MSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1CBA JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1D17 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E4A JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x1DC3 JUMPI JUMPDEST PUSH2 0x1D91 SWAP5 DUP3 AND PUSH2 0x1D96 JUMPI JUMPDEST POP POP POP PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1DB9 SWAP2 PUSH2 0xCE7 PUSH2 0x1DB1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1F40 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x1D89 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x1DE0 DUP11 PUSH2 0xCE7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x1E13 JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1D91 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x1E0B DUP14 PUSH2 0xCE7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EBE JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1EE4 JUMPI PUSH1 0x20 DUP1 PUSH2 0x1EDA SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x2134 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH2 0x1EF0 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1F38 DUP9 DUP13 DUP4 PUSH2 0x1F4D JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1EA8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1F64 PUSH2 0x629 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x950 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C1 JUMPI MLOAD PUSH2 0x629 DUP2 PUSH2 0x33D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x629 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x629 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2004 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2035 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x201B DUP3 PUSH2 0x5BB JUMP JUMPDEST SWAP2 PUSH2 0x2029 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x204C JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x206F PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1F87 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2104 JUMPI JUMPDEST POP PUSH2 0x20C7 JUMPI DUP3 PUSH2 0x2096 PUSH2 0x200A JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x20C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x20E1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x2126 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x212D JUMPI JUMPDEST PUSH2 0x211E DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2088 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2114 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2149 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216C PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1FB8 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x21AE JUMPI JUMPDEST POP PUSH2 0x2193 JUMPI DUP3 PUSH2 0x2096 PUSH2 0x200A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x20E1 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x21C7 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x212D JUMPI PUSH2 0x211E DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2185 JUMP JUMPDEST SWAP3 PUSH2 0x21FD PUSH2 0x629 SWAP6 SWAP4 PUSH2 0x220B SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x950 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3FA JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x629 SWAP6 SWAP4 PUSH2 0x21FD SWAP2 PUSH2 0x220B SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x225D JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x206F PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x21CE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x2294 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x216C PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x2219 JUMP JUMPDEST SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1C5B JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1C5B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x22EA JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C1 JUMPI MLOAD PUSH2 0x629 DUP2 PUSH2 0x1231 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH2 0x2321 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x2344 JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH2 0x2364 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0x236C PUSH2 0x2333 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP7 LT PUSH2 0x2571 JUMPI PUSH1 0x12 PUSH1 0xFF DUP5 AND GT PUSH2 0x255F JUMPI PUSH1 0x32 DUP2 GT PUSH2 0x254D JUMPI PUSH1 0xA DUP5 GT PUSH2 0x253B JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x251D JUMPI JUMPDEST POP ISZERO PUSH2 0x175D JUMPI PUSH2 0x2510 PUSH32 0x209E4CC824C27FB4D0B3D56450B5CDEAD204B21BFB8286755C4865B577A8A28F SWAP4 PUSH2 0x2434 PUSH2 0xD54 DUP10 PUSH1 0xC SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP8 DUP9 SWAP7 PUSH2 0x244B PUSH2 0x2446 DUP10 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x24D5 PUSH2 0x2463 PUSH2 0x1050 PUSH2 0x245D DUP7 PUSH2 0x2583 JUMP JUMPDEST DUP6 PUSH2 0x22CD JUMP JUMPDEST SWAP4 PUSH2 0x249D PUSH2 0x246F PUSH2 0x536 JUMP JUMPDEST CALLER DUP2 MSTORE SWAP2 PUSH2 0x247E CALLDATASIZE DUP11 DUP16 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x248E CALLDATASIZE DUP7 DUP13 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE DUP5 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x24BC PUSH1 0xE0 DUP3 ADD PUSH1 0x1 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x24D0 DUP11 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x26B7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x24EF SWAP1 DUP10 SWAP1 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2502 PUSH2 0x24FA PUSH2 0x1FF7 JUMP JUMPDEST DUP5 DUP11 CALLER PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 CALLER SWAP11 DUP8 PUSH2 0x27BA JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x629 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x2535 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE32 JUMPI PUSH2 0xE24 DUP2 DUP4 PUSH2 0x514 JUMP JUMPDEST CODESIZE PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1124F78B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x680B6CAF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x692ACC5 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x1C5B JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x25A2 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x25DE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x25D3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x25C7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x25BE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F3 JUMPI PUSH2 0x2610 DUP2 PUSH2 0x260A DUP5 SLOAD PUSH2 0x135A JUMP JUMPDEST DUP5 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x264C JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2641 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2662 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x269F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2686 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x267C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x2667 JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH2 0x543 SWAP2 PUSH1 0x7 SWAP1 PUSH2 0x274C SWAP1 PUSH1 0xE0 SWAP1 PUSH2 0x26F2 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP8 ADD PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x2703 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP8 ADD PUSH2 0x25E8 JUMP JUMPDEST PUSH2 0x2727 PUSH2 0x2714 PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD SWAP1 PUSH1 0xFF AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP7 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP7 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x2781 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x151F JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH2 0x27D9 PUSH1 0x60 SWAP6 PUSH2 0x27E7 SWAP5 SWAP10 SWAP9 SWAP8 SWAP10 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP2 PUSH2 0x2799 JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2799 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0x1938 JUMPI PUSH2 0x282D PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1D17 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2884 JUMPI DUP1 PUSH2 0x287F SWAP2 PUSH1 0x5 SHL PUSH2 0x2878 PUSH2 0x1DB1 DUP8 PUSH2 0xCE7 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x283F JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x28FB JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x28F1 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x543 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x203A JUMP JUMPDEST PUSH2 0x543 SWAP4 CALLER PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x292F DUP9 DUP9 DUP4 PUSH2 0x1F4D JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x28D3 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x1920 JUMPI PUSH2 0x298E PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x29A0 DUP2 PUSH2 0x4F8 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x2AD4 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2A4D JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x29E4 DUP7 PUSH2 0xCE7 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x2A17 JUMPI DUP7 PUSH2 0xCE7 PUSH2 0x2A12 SWAP6 SWAP5 SWAP4 PUSH2 0x2A0C SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x29B2 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x2AA2 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x2A9D SWAP2 DUP4 PUSH2 0x1F4D JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x543 PUSH2 0x2B77 PUSH1 0x7 PUSH2 0x2B06 PUSH2 0x536 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP5 PUSH2 0x2B20 PUSH1 0x1 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x2B31 PUSH1 0x2 DUP3 ADD PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x2B51 PUSH2 0x2B47 PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO DUP1 ISZERO PUSH2 0x2BC5 JUMPI JUMPDEST PUSH2 0x2BBE JUMPI PUSH1 0x4 PUSH2 0x2BB5 PUSH2 0x629 SWAP4 PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH2 0x22CD JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x22E0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD SLOAD ISZERO PUSH2 0x2B9D JUMP JUMPDEST SWAP1 PUSH2 0x2BE4 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x3D7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x2CE4 JUMPI JUMPDEST PUSH2 0x2CDB JUMPI PUSH2 0x2C0C PUSH2 0x2C11 SWAP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2AF5 JUMP JUMPDEST PUSH2 0x2C21 PUSH2 0xCB9 PUSH1 0xE0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CDB JUMPI PUSH2 0x629 DUP2 PUSH2 0x2CCD PUSH2 0x2CC0 PUSH1 0x20 PUSH2 0x2C8F SWAP6 ADD MLOAD SWAP3 PUSH2 0x2C89 PUSH2 0x2CA7 PUSH2 0x2C62 PUSH2 0x2C5D PUSH2 0x2C57 PUSH1 0x60 PUSH1 0x40 DUP8 ADD MLOAD SWAP7 ADD MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2D12 JUMP JUMPDEST SWAP3 PUSH2 0x2C89 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 PUSH2 0x2C89 PUSH1 0x20 DUP12 ADD PUSH1 0x9 SWAP1 PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BD1 JUMP JUMPDEST PUSH12 0x11161139BCB6B137B6111D11 PUSH1 0xA1 SHL DUP2 MSTORE PUSH1 0xC ADD SWAP1 JUMP JUMPDEST PUSH13 0x1116113232B1B4B6B0B639911D PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD SWAP1 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x514 JUMP JUMPDEST POP PUSH2 0x629 PUSH2 0x1FF7 JUMP JUMPDEST POP PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x30 ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x1C5B JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1537 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC6 JUMPI DUP1 PUSH1 0x0 DUP3 DUP2 SWAP4 JUMPDEST PUSH2 0x2DB2 JUMPI POP DUP2 PUSH2 0x2D2E DUP5 PUSH2 0x5BB JUMP JUMPDEST SWAP4 PUSH2 0x2D3C PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x514 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x1F NOT PUSH2 0x2D4B DUP3 PUSH2 0x5BB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP1 JUMPDEST PUSH2 0x2D5E JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2D67 SWAP1 PUSH2 0x2937 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x2DAA PUSH2 0x2DA1 PUSH2 0x2D91 PUSH2 0x2D8C PUSH2 0x2C57 PUSH1 0xA DUP8 DIV SWAP7 PUSH2 0x2D86 DUP9 PUSH2 0x22B7 JUMP JUMPDEST SWAP1 PUSH2 0x2946 JUMP JUMPDEST PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE SWAP2 DUP7 PUSH2 0x2D01 JUMP JUMPDEST MSTORE8 SWAP2 DUP3 PUSH2 0x2D54 JUMP JUMPDEST SWAP3 PUSH2 0x2DBE PUSH1 0xA SWAP2 PUSH2 0x1C4C JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x2D1F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F3 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xE3 DUP3 0xB7 CALLDATALOAD EXTCODEHASH SGT DUP10 0x4D 0xAA 0xE4 0xD3 SWAP12 SWAP10 CALLCODE SWAP9 0xB4 0xDE 0x4C PUSH13 0xBDF79DC82417526B424271F764 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"803:11999:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;803:11999:36;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;803:11999:36;;;;;;:::o;:::-;;;-1:-1:-1;;;;;803:11999:36;;;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;2348:22:5;803:11999:36;;:::i;:::-;;;-1:-1:-1;803:11999:36;-1:-1:-1;803:11999:36;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;2348:22:5;803:11999:36;;;;;;;;-1:-1:-1;;;;;;803:11999:36;;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;:::i;:::-;;;;;2688:32:0;;;2673:47;;:87;;;;;803:11999:36;;;;;;;;;;2673:87:0;-1:-1:-1;;;1515:41:5;;;-1:-1:-1;1515:109:5;;;;2673:87:0;1515:161:5;;;;2673:87:0;;;;;1515:161:5;-1:-1:-1;;;862:40:31;;-1:-1:-1;1515:161:5;;;:109;-1:-1:-1;;;1572:52:5;;;-1:-1:-1;1515:109:5;;803:11999:36;;;;;;;;-1:-1:-1;;803:11999:36;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;803:11999:36;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1146:27;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;-1:-1:-1;803:11999:36;;;;;3901:22:0;803:11999:36;-1:-1:-1;803:11999:36;3901:22:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;803:11999:36;;;;735:10:19;4249:14:5;;;;:49;;803:11999:36;4245:129:5;;803:11999:36;;9216:16:5;9212:88;;9313:18;9309:88;;9456:4;;;;:::i;:::-;803:11999:36;9309:88:5;803:11999:36;;-1:-1:-1;;;9354:32:5;;9230:1;9354:32;;;803:11999:36;;;9354:32:5;9212:88;803:11999:36;;-1:-1:-1;;;9255:34:5;;9230:1;9255:34;;;803:11999:36;;;9255:34:5;4245:129;803:11999:36;;;-1:-1:-1;;;4321:42:5;;735:10:19;4321:42:5;;;803:11999:36;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;4321:42:5;;;4249:49;-1:-1:-1;;803:11999:36;;;;;;;;;;;;735:10:19;803:11999:36;;;;;;;;;;4267:31:5;4249:49;;803:11999:36;;;;;;-1:-1:-1;;803:11999:36;;;;4330:25:0;803:11999:36;;;;:::i;:::-;;;-1:-1:-1;803:11999:36;;;;2475:4:0;3901:22;803:11999:36;-1:-1:-1;803:11999:36;3901:22:0;803:11999:36;2475:4:0;:::i;:::-;4330:25;:::i;803:11999:36:-;;;;;;-1:-1:-1;;803:11999:36;;;;735:10:19;-1:-1:-1;803:11999:36;;;;;;;;;;;;;1001:30;;803:11999;;3519:23:0;3515:108;;8592:12:36;;;8588:35;;8660:13;803:11999;;;;;;;;;;;;;;;;;;;8730:29;;803:11999;8730:29;803:11999;8588:35;803:11999;;-1:-1:-1;;;8613:10:36;;803:11999;;8613:10;3515:108:0;803:11999:36;;;;3565:47:0;;;;;;735:10:19;803:11999:36;3565:47:0;;803:11999:36;;;;;3565:47:0;803:11999:36;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;735:10:19;-1:-1:-1;;;;;803:11999:36;;5421:34:0;5417:102;;5529:37;803:11999:36;;;5529:37:0;:::i;5417:102::-;803:11999:36;;-1:-1:-1;;;5478:30:0;;803:11999:36;;5478:30:0;803:11999:36;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;2475:4:0;;:::i;:::-;803:11999:36;;;;;2140:9:22;2136:62;;803:11999:36;;;;;2674:22:22;803:11999:36;;;735:10:19;803:11999:36;;2674:22:22;803:11999:36;2136:62:22;803:11999:36;;-1:-1:-1;;;2172:15:22;;803:11999:36;;2172:15:22;803:11999:36;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;803:11999:36;;:::i;:::-;;-1:-1:-1;803:11999:36;10432:14;803:11999;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;;:::i;:::-;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10168:10;803:11999;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1315:72:22;;;:::i;:::-;2466:103:23;;:::i;:::-;7284:15:36;;7280:40;;7372:18;;803:11999;;7372:10;803:11999;;;;;;;7372:18;7405:15;7404:16;803:11999;7405:15;;;803:11999;;;;;;7404:16;;803:11999;7404:16;7400:49;;7463:11;;:35;;;;803:11999;7459:63;;7600:10;2348:22:5;7600:10:36;2348:13:5;;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;2348:13:5;803:11999:36;;;;;;;;;;;;;;;;2348:22:5;803:11999:36;7590:42;7586:75;;7750:57;7751:30;7764:17;;;803:11999;7751:30;;:::i;:::-;7785:22;;;803:11999;7750:57;;:::i;:::-;803:11999;;7830:10;803:11999;7830:23;7826:60;;8013:22;7600:10;7959;7600;;;7959;:::i;:::-;8013:22;:36;803:11999;;;8013:36;:::i;:::-;803:11999;;8059:24;;803:11999;7830:10;803:11999;8059:24;:::i;:::-;7830:10;803:11999;;8059:24;803:11999;;-1:-1:-1;;;8143:40:36;;7600:10;8143:40;;;803:11999;;;;;;;;;;;;;;;;;8143:40;803:11999;-1:-1:-1;8143:7:36;-1:-1:-1;;;;;803:11999:36;8143:40;;;;;;;-1:-1:-1;8143:40:36;;;803:11999;8142:41;;8138:95;;-1:-1:-1;803:11999:36;;;;;;;;7600:10;;8256:59;;803:11999;;8256:59;2531:1:23;1857;3068:21;803:11999:36;2888:208:23;8138:95:36;803:11999;;-1:-1:-1;;;8206:16:36;;;8143:40;;;;803:11999;8143:40;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7826:60::-;-1:-1:-1;803:11999:36;;-1:-1:-1;;;7862:24:36;;;7586:75;803:11999;;-1:-1:-1;;;7641:20:36;;;7459:63;803:11999;;-1:-1:-1;;;7507:15:36;;;7463:35;803:11999;7405:15;803:11999;7478:20;;;7463:35;;7400:49;803:11999;;-1:-1:-1;;;7429:20:36;;;7280:40;803:11999;-1:-1:-1;;;7308:12:36;;;803:11999;;;;;;-1:-1:-1;;803:11999:36;;;;;;1479:34;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;2326:25;803:11999;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;1561:35;803:11999;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;1387:4;10719:27;10733:13;803:11999;;;10719:27;:::i;:::-;803:11999;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;2475:4:0;;:::i;:::-;1315:72:22;;:::i;:::-;2408:4;803:11999:36;;;;;;;;2427:20:22;803:11999:36;;;735:10:19;803:11999:36;;2427:20:22;803:11999:36;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1229:11;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;2954:29:0;803:11999:36;;:::i;:::-;;;-1:-1:-1;803:11999:36;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;2954:29:0;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:22;;;:::i;:::-;2466:103:23;;:::i;:::-;4229:16:36;;4225:41;;4351:48;4352:27;4366:13;803:11999;4352:27;;:::i;:::-;1387:4;803:11999;;;;4351:48;803:11999;;;-1:-1:-1;;;4459:63:36;;4483:10;4459:63;;;803:11999;;;4503:4;803:11999;;;;;;;;;;-1:-1:-1;;803:11999:36;;4459:63;803:11999;-1:-1:-1;;;;;803:11999:36;;;;;;4459:63;;;803:11999;4459:63;803:11999;-1:-1:-1;4459:10:36;803:11999;;4459:63;;;;;;;;;;;803:11999;4458:64;;4454:118;;4483:10;803:11999;;;;4628:15;803:11999;;;;;4628:42;803:11999;;;4628:42;:::i;:::-;803:11999;;4680:31;;803:11999;4680:31;803:11999;4680:31;:::i;:::-;;803:11999;;4680:31;803:11999;;;-1:-1:-1;;;4766:38:36;;4483:10;4766:38;;;803:11999;;;;;;;;;;;;;;;;;4483:10;;803:11999;;;4766:38;:7;;803:11999;4766:38;;;;;;;;;;;803:11999;4765:39;;;4761:93;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;4483:10;;4877:46;;803:11999;4877:46;2531:1:23;1857;3068:21;803:11999:36;2888:208:23;2531:1;803:11999:36;;4761:93;803:11999;;-1:-1:-1;;;4827:16:36;;;4766:38;;;;;;-1:-1:-1;4766:38:36;;;;;;:::i;:::-;;;;;4454:118;803:11999;;-1:-1:-1;;;4545:16:36;;803:11999;;4545:16;4459:63;;;;;;;;;;;;;;:::i;:::-;;;;4225:41;803:11999;;-1:-1:-1;;;4254:12:36;;;803:11999;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;803:11999:36;;;13383:22:5;;13379:94;;735:10:19;13482:35:5;:46;735:10:19;;-1:-1:-1;803:11999:36;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;13482:35:5;803:11999:36;;;;;;;;;;;;;;;13482:46:5;803:11999:36;;;;;;;13543:41:5;803:11999:36;735:10:19;13543:41:5;;803:11999:36;13379:94:5;803:11999:36;;-1:-1:-1;;;13428:34:5;;-1:-1:-1;803:11999:36;13428:34:5;;803:11999:36;;;13428:34:5;803:11999:36;;;;;;-1:-1:-1;;803:11999:36;;;;;;1519:31;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;1648:29;803:11999;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;803:11999:36;;;;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;-1:-1:-1;803:11999:36;;;2146:51;803:11999;;;;;;;-1:-1:-1;;;;;803:11999:36;;2146:51;803:11999;2146:51;;;:::i;:::-;;;;;;;:::i;:::-;;803:11999;;2146:51;;803:11999;;;2146:51;;803:11999;2146:51;;;803:11999;2146:51;803:11999;2146:51;;;;803:11999;2146:51;;803:11999;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;-1:-1:-1;803:11999:36;;;-1:-1:-1;803:11999:36;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;-1:-1:-1;;;;;803:11999:36;-1:-1:-1;803:11999:36;;;2203:51;803:11999;;;;;;;;;;;2203:51;;;;;803:11999;2203:51;;;;:::i;:::-;803:11999;;;;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1001:30;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;-1:-1:-1;;;;;803:11999:36;;:::i;:::-;;-1:-1:-1;803:11999:36;1761:50;803:11999;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1387:4;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;4747:26:0;803:11999:36;;;;:::i;:::-;;;-1:-1:-1;803:11999:36;;;;2475:4:0;3901:22;803:11999:36;-1:-1:-1;803:11999:36;3901:22:0;803:11999:36;2475:4:0;:::i;:::-;4747:26;:::i;803:11999:36:-;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1336:2;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;1075:24;803:11999;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;;;:::i;:::-;;;2475:4:0;;:::i;:::-;-1:-1:-1;;;;;803:11999:36;;;;;9409:16;;9405:41;;803:11999;;;;9469:19;803:11999;;9551:35;-1:-1:-1;9551:35:36;;;;;;;;;:::i;:::-;;9604:8;9600:37;;9834:36;;9465:346;;803:11999;;;;;;;;;;;;;9834:36;;;;803:11999;9600:37;803:11999;;-1:-1:-1;;;9621:16:36;;803:11999;;9621:16;9465:346;803:11999;;-1:-1:-1;;;9709:34:36;;-1:-1:-1;;;;;803:11999:36;;;;;9709:34;;803:11999;;;;;;;;;;;;-1:-1:-1;9709:34:36;;;;;;;;-1:-1:-1;9709:34:36;;;9465:346;9708:35;;9704:97;;9834:36;;9465:346;;;9709:34;;;;803:11999;9709:34;;;;;;;;;:::i;:::-;;;;9405:41;803:11999;;-1:-1:-1;;;9434:12:36;;803:11999;;9434:12;803:11999;;;;;;-1:-1:-1;;803:11999:36;;;;;1817:31;803:11999;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;3478:37:5;803:11999:36;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;803:11999:36;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;803:11999:36;;;;735:10:19;3755:14:5;;;;:49;;803:11999:36;3751:129:5;;803:11999:36;;8281:16:5;8277:88;;8378:18;8374:88;;8610:4;803:11999:36;8521:29:5;803:11999:36;;;;13707:822:5;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;8521:29;8610:4;;;;:::i;8374:88::-;803:11999:36;;-1:-1:-1;;;8419:32:5;;-1:-1:-1;803:11999:36;8419:32:5;;803:11999:36;;;8419:32:5;8277:88;803:11999:36;;-1:-1:-1;;;8320:34:5;;-1:-1:-1;803:11999:36;8320:34:5;;803:11999:36;;;8320:34:5;3751:129;803:11999:36;;-1:-1:-1;;;3827:42:5;;735:10:19;803:11999:36;3827:42:5;;803:11999:36;-1:-1:-1;;;;;803:11999:36;;;;;;;;4321:42:5;3755:49;-1:-1:-1;;803:11999:36;;;;;;;;;;;;735:10:19;803:11999:36;;;;;;;;;;3773:31:5;3755:49;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;803:11999:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5486:14;803:11999;;;5486:14;:::i;3199:103:0:-;735:10:19;-1:-1:-1;803:11999:36;;;;;;;;;1075:24;;803:11999;;2954:29:0;803:11999:36;;3519:23:0;3515:108;;3199:103;:::o;:::-;735:10:19;-1:-1:-1;803:11999:36;;;;;;;;;1146:27;;803:11999;;2954:29:0;803:11999:36;3199:103:0;-1:-1:-1;803:11999:36;;;2954:6:0;803:11999:36;;;;;;;;735:10:19;803:11999:36;;;;;;;;;2954:29:0;803:11999:36;6179:316:0;-1:-1:-1;803:11999:36;;;;2954:6:0;803:11999:36;;;2954:29:0;803:11999:36;;;;;;;;;;;;;;;;;;;;2954:29:0;803:11999:36;;;;;;;2954:6:0;803:11999:36;;;;;;;;-1:-1:-1;;;;;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;-1:-1:-1;;803:11999:36;6347:4:0;803:11999:36;;;735:10:19;;-1:-1:-1;;;;;803:11999:36;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;;:::o;6732:317::-;-1:-1:-1;803:11999:36;;;;2954:6:0;803:11999:36;;;2954:29:0;803:11999:36;;;;;;;;;;;;;;;;;;;;2954:29:0;803:11999:36;;;;;;;;2954:6:0;803:11999:36;;;;;;;;-1:-1:-1;;;;;803:11999:36;;-1:-1:-1;803:11999:36;;;;;;;;;-1:-1:-1;;803:11999:36;;;735:10:19;;-1:-1:-1;;;;;803:11999:36;;6924:40:0;;;;803:11999:36;6978:11:0;:::o;803:11999:36:-;;;;;;;;;;;;;-1:-1:-1;;803:11999:36;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;2534:552:5:-;;;;803:11999:36;;;;2690:29:5;;;2686:121;;803:11999:36;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;2932:3:5;803:11999:36;;2911:19:5;;;;;16237:82:17;;;;;;;;;;17035;;;;;;2348:9:5;803:11999:36;;;;;;;;;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;2932:3:5;;16237:82:17;2951:87:5;;;;:::i;:::-;803:11999:36;2932:3:5;:::i;:::-;2896:13;;2911:19;-1:-1:-1;2911:19:5;;-1:-1:-1;;;2534:552:5:o;2686:121::-;803:11999:36;;-1:-1:-1;;;2742:54:5;;;;;803:11999:36;;;;;;;;;;;;;4321:42:5;7002:700;;;;;803:11999:36;;;;5263:27:5;;;;5259:117;;5433:13;;-1:-1:-1;5464:3:5;803:11999:36;;5448:14:5;;;;;17035:82:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;803:11999:36;17035:82:17;803:11999:36;;;;;5594:420:5;;5464:3;;803:11999:36;;;6028:81:5;;5464:3;;;;;:::i;:::-;5433:13;;6028:81;6068:26;:13;;:17;:13;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;6068:17:5;803:11999:36;;;6068:26:5;:::i;:::-;803:11999:36;;6028:81:5;;;;;5594:420;5658:13;;;;;:19;:13;;;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;5658:19:5;803:11999:36;5699:19:5;;;5695:129;;803:11999:36;;;;5464:3:5;803:11999:36;;;;5940:19:5;:13;;;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;5940:19:5;803:11999:36;5594:420:5;;;;5695:129;803:11999:36;;-1:-1:-1;;;5749:56:5;;-1:-1:-1;;;;;803:11999:36;;5749:56:5;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;4321:42:5;5448:14;;;;;;;;803:11999:36;;;6133:15:5;6129:288;6147:1;;;17035:82:17;;;;;;;;;803:11999:36;;;;;;;;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;735:10:19;;6279:45:5;;;6129:288;-1:-1:-1;;;;;803:11999:36;;7243:453:5;;6129:288;7002:700;;;;;:::o;7243:453::-;803:11999:36;;;7328:15:5;6147:1;;17035:82:17;;7548:4:5;17035:82:17;;;;;;735:10:19;;7548:4:5;:::i;:::-;7243:453;;;;;;;7324:362;7666:4;735:10:19;;;;7666:4:5;:::i;:::-;7324:362;;6129:288;803:11999:36;;-1:-1:-1;;;;;803:11999:36;;;;;;;;735:10:19;;6360:46:5;;803:11999:36;6360:46:5;;;803:11999:36;6360:46:5;:::i;:::-;;;;6129:288;;803:11999:36;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;803:11999:36;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;803:11999:36;;;;:::o;:::-;;;:::o;1006:959:9:-;;;;;;1205:14;;1201:758;;1006:959;;;;;:::o;1201:758::-;1243:71;803:11999:36;1243:71:9;803:11999:36;;;;;;;;;;1243:71:9;;;;;;;;:::i;:::-;;803:11999:36;;-1:-1:-1;;;;;803:11999:36;;1243:71:9;;803:11999:36;;1243:71:9;;;1201:758;-1:-1:-1;1239:710:9;;1563:386;;;:::i;:::-;803:11999:36;;;;1613:18:9;;;803:11999:36;;-1:-1:-1;;;1718:41:9;;-1:-1:-1;;;;;803:11999:36;;1243:71:9;1718:41;;803:11999:36;;;4321:42:5;1609:326:9;1806:111;;1243:71;1806:111;;1239:710;-1:-1:-1;;;;;;803:11999:36;1363:55:9;1359:189;;1239:710;1201:758;;;;;;;1359:189;803:11999:36;;-1:-1:-1;;;1488:41:9;;-1:-1:-1;;;;;803:11999:36;;;;1243:71:9;1488:41;;803:11999:36;;;4321:42:5;1243:71:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1006:959;;;;;;;1205:14;;1201:758;;1006:959;;;;;;;:::o;1201:758::-;1243:71;;803:11999:36;;;;;;;;;;;1243:71:9;;;;;;;;:::i;:::-;;803:11999:36;1222:1:9;-1:-1:-1;;;;;803:11999:36;;1243:71:9;;1222:1;;1243:71;;;1201:758;-1:-1:-1;1239:710:9;;1563:386;;;:::i;1239:710::-;-1:-1:-1;;;;;;803:11999:36;1363:55:9;1359:189;;1239:710;1201:758;;;;;;;;1243:71;;;;;;;;;;;;;;;:::i;:::-;;;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2521:1026:9:-;;;;;;2745:14;;2741:800;;2521:1026;;;;;:::o;2741:800::-;2783:78;803:11999:36;2783:78:9;803:11999:36;;;;;;;;;;2783:78:9;;;;;;;;:::i;2521:1026::-;;;;;;;2745:14;;2741:800;;2521:1026;;;;;;:::o;2741:800::-;2783:78;;803:11999:36;;;;;;;;;;;2783:78:9;;;;;;;;:::i;803:11999:36:-;;12471:2;803:11999;;;;;;12471:2;803:11999;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1878:128:22:-;803:11999:36;1796:7:22;803:11999:36;;1939:61:22;;1878:128::o;1939:61::-;803:11999:36;;-1:-1:-1;;;1974:15:22;;1796:7;;1974:15;2575:307:23;1899:1;2702:7;803:11999:36;2702:18:23;2698:86;;1899:1;2702:7;803:11999:36;2575:307:23:o;2698:86::-;803:11999:36;;-1:-1:-1;;;2743:30:23;;;;;1315:72:22;;;;;;;;;:::i;:::-;2466:103:23;;:::i;:::-;1229:11:36;5520:29;;5516:62;;1336:2;803:11999;;;5592:34;5588:64;;5687:2;5666:23;;5662:49;;5748:2;5725:25;;5721:53;;803:11999;;-1:-1:-1;;;5843:57:36;;5864:10;5843:57;;;803:11999;5884:4;803:11999;;;;;;;;;;5843:57;803:11999;;;-1:-1:-1;;;;;;5843:7:36;803:11999;5843:57;;;;;;;803:11999;5843:57;;;1315:72:22;5842:58:36;;5838:112;;6811:75;;803:11999;5998:22;;803:11999;5998:22;803:11999;5998:22;:::i;:::-;6048:12;803:11999;6048:12;;;;;;;:::i;:::-;;803:11999;;6048:12;803:11999;6171:46;:27;6183:14;;;:::i;:::-;6171:27;;:::i;:46::-;803:11999;6290:284;803:11999;;:::i;:::-;5864:10;803:11999;;5864:10;803:11999;;;;;:::i;:::-;5843:57;6290:284;;803:11999;;;;;;:::i;:::-;;6290:284;;803:11999;;;6290:284;;;803:11999;;6290:284;;;;;803:11999;6290:284;803:11999;6290:284;;803:11999;6290:284;;;;803:11999;6290:284;803:11999;6290:284;;6559:4;803:11999;;;6290:284;6269:18;;803:11999;;7372:10;803:11999;;;;;;;6269:18;803:11999;:::i;:::-;5864:10;803:11999;;;;6629:14;803:11999;;;;;6629:39;;5864:10;;6629:39;:::i;:::-;6743:44;803:11999;;:::i;:::-;5864:10;;;6743:44;:::i;:::-;803:11999;;5864:10;;;;6811:75;;;:::i;:::-;;;;2531:1:23;1857;3068:21;803:11999:36;2888:208:23;5843:57:36;;;;;;;;;;;;;;:::i;:::-;;;;5721:53;803:11999;;-1:-1:-1;;;5759:15:36;;;;;5662:49;803:11999;;-1:-1:-1;;;5698:13:36;;;;;5588:64;803:11999;;-1:-1:-1;;;5635:17:36;;;;;5516:62;803:11999;;-1:-1:-1;;;5558:20:36;;;;;803:11999;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;803:11999:36;-1:-1:-1;;;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;803:11999:36;;;;;;;;-1:-1:-1;;803:11999:36;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::o;10754:346:5:-;-1:-1:-1;;;;;803:11999:36;;;10754:346:5;;;;10850:16;;10846:88;;10993:29;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;10993:29;803:11999:36;;;;;5263:27:5;;;;5259:117;;5433:13;;803:11999:36;5464:3:5;803:11999:36;;5448:14:5;;;;;17035:82:17;5464:3:5;17035:82:17;;;6068:26:5;:17;17035:82:17;6068:13:5;17035:82:17;;;;;;;;;;;;6068:13:5;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;6068:26:5;803:11999:36;;5464:3:5;:::i;:::-;5433:13;;5448:14;;;;;803:11999:36;;;6133:15:5;6129:288;6032:16;;;17035:82:17;;;;;;;;;803:11999:36;;;;;;;;;;-1:-1:-1;;735:10:19;;6279:45:5;;803:11999:36;6279:45:5;6129:288;803:11999:36;;;7328:15:5;6032:16;;17035:82:17;;;7548:4:5;17035:82:17;;;;;;;735:10:19;;7548:4:5;:::i;7324:362::-;7666:4;735:10:19;;7666:4:5;:::i;6129:288::-;803:11999:36;;;6360:46:5;735:10:19;6360:46:5;;;;;;;:::i;:::-;;;;6129:288;;803:11999:36;-1:-1:-1;;803:11999:36;;;;;;;;:::o;:::-;;;;;;;;;;:::o;12107:329:5:-;-1:-1:-1;;;;;803:11999:36;;;12107:329:5;;;12186:18;;12182:88;;12329:29;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;12329:29;803:11999:36;;;;12202:1:5;803:11999:36;;;;;:::i;:::-;;;;;;5263:27:5;;;;5259:117;;5433:13;;12202:1;5464:3;803:11999:36;;5448:14:5;;;;;17035:82:17;;;803:11999:36;17035:82:17;;;;;;;;;;;5658:19:5;:13;;;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;5658:19:5;803:11999:36;5699:19:5;;;5695:129;;803:11999:36;5940:13:5;5464:3;803:11999:36;;;5940:19:5;803:11999:36;;5940:13:5;7298:1:36;803:11999;7298:1;803:11999;;;7298:1;803:11999;;;5940:19:5;803:11999:36;5464:3:5;:::i;:::-;5433:13;;5695:129;803:11999:36;;-1:-1:-1;;;5749:56:5;;-1:-1:-1;;;;;803:11999:36;;5749:56:5;;;803:11999:36;;;;;;;;;;;;;;;;;;;;;;4321:42:5;5448:14;;;;12202:1;5448:14;;;;803:11999:36;;;6133:15:5;5598:18;;;;803:11999:36;17035:82:17;;;;;;;;803:11999:36;;;;;;;;735:10:19;;6279:45:5;;803:11999:36;;;;6279:45:5;;;;12107:329::o;6129:288::-;803:11999:36;;735:10:19;;6360:46:5;;803:11999:36;;6360:46:5;;803:11999:36;6360:46:5;:::i;5259:117::-;803:11999:36;;-1:-1:-1;;;5313:52:5;;;;;803:11999:36;;;;;;;;;;;;;4321:42:5;803:11999:36;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;803:11999:36;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10937:349;-1:-1:-1;803:11999:36;11107:10;803:11999;;;-1:-1:-1;803:11999:36;;11140:15;;;803:11999;;11139:16;803:11999;;11139:47;;10937:349;11135:61;;11257:22;11223:30;11222:57;11236:17;;;;803:11999;11223:30;;:::i;:::-;11257:22;;803:11999;11222:57;;:::i;11135:61::-;11188:8;;-1:-1:-1;11188:8:36;:::o;11139:47::-;11159:22;;;;803:11999;11159:27;11139:47;;803:11999;;;;;;;;;;;;;:::i;:::-;;;:::o;11652:540::-;11740:11;;:35;;;;11652:540;11736:50;;11837:18;803:11999;11837:18;803:11999;;7372:10;803:11999;;;;;;;11837:18;803:11999;:::i;:::-;11869:16;803:11999;11870:15;;;803:11999;;;;;11869:16;11865:31;;12009:175;12052:13;803:11999;;12052:13;803:11999;12052:13;;;12096:15;803:11999;;12142:27;;803:11999;12151:17;12096:15;;;;12151:17;;803:11999;;;;;;;;;;12142:27;;:::i;:::-;803:11999;;12096:15;803:11999;12009:175;;;803:11999;12052:13;12009:175;;803:11999;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;803:11999:36;;;;;;;-1:-1:-1;;;803:11999:36;;;;;;;-1:-1:-1;;;803:11999:36;;;;;;;12009:175;803:11999;;12009:175;;;;;;:::i;11865:31::-;803:11999;;;:::i;11740:35::-;803:11999;11765:10;803:11999;11755:20;;;11740:35;;803:11999;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;12253:547::-;12335:7;;12331:23;;12373:14;12341:1;12397:11;;12418:66;12425:6;;;803:11999;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;803:11999:36;;;:::i;:::-;;;;;;;12571:194;12578:7;;;12774:19;;;12253:547;:::o;12571:194::-;12605:5;;;:::i;:::-;12601:9;;12720:12;12694;12638:29;12643:24;12649:17;12471:2;803:11999;;12654:12;;;;:::i;:::-;12649:17;;:::i;12643:24::-;12638:29;:::i;:::-;803:11999;;-1:-1:-1;;;;;;803:11999:36;;;12694:12;12720;;;;;:::i;:::-;;12571:194;;;;12418:66;12447:5;;12471:2;12447:5;;:::i;:::-;803:11999;;12418:66;;;12331:23;803:11999;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;803:11999:36;;;;12344:10;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","EMERGENCY_ROLE()":"20df4359","MAX_GAME_TOKEN_DECIMALS()":"df525b7d","MIN_XP_LOCK_AMOUNT()":"8760550d","PAUSER_ROLE()":"e63ab1e9","PRECISION_FACTOR()":"ccd34cd5","RATE_MANAGER_ROLE()":"cb327b8b","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burnGameToken(uint256,uint256)":"5ed6c1db","calculateXpAmount(uint256)":"74b334c5","calculateXpReturn(uint256,uint256)":"3b420a73","createGameToken(uint256,string,string,uint8)":"fd44d274","cridaToXpRate()":"6dd9cbd4","cridaToken()":"6d8061b8","emergencyWithdraw(address,address,uint256)":"e63ea408","gameTokens(uint256)":"bf034b69","getGameTokenInfo(uint256)":"5e79c1dc","getRoleAdmin(bytes32)":"248a9ca3","getUserGameTokens(address)":"546fdad4","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","lockCrida(uint256)":"97e05e86","nextGameId()":"b135bbb0","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setRate(uint256)":"34fcf437","supportsInterface(bytes4)":"01ffc9a7","totalLockedCrida()":"e8321987","unpause()":"3f4ba83a","uri(uint256)":"0e89341c","userGameTokens(address,uint256)":"c21c64a7","userLockedCrida(address)":"cb4cd556","xpReserves()":"6d8554e2","xpToken()":"ae5014b1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cridaToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xpToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameTokenNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientXpReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGameId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SymbolTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroRate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cridaAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpMinted\",\"type\":\"uint256\"}],\"name\":\"CridaLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpReturned\",\"type\":\"uint256\"}],\"name\":\"GameTokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpLocked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"GameTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_GAME_TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_XP_LOCK_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnGameToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cridaAmount\",\"type\":\"uint256\"}],\"name\":\"calculateXpAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"calculateXpReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"xpAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"createGameToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cridaToXpRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cridaToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xpLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGameTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xpLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct GameEcosystem.GameTokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserGameTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCrida\",\"type\":\"uint256\"}],\"name\":\"lockCrida\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedCrida\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userGameTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockedCrida\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xpReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Improved contract architecture using ERC-1155 for game tokens Key improvements: - Uses ERC-1155 instead of deploying separate ERC-20 contracts (massive gas savings) - Enhanced security with proper access controls and reentrancy protection - Optimized data structures and gas-efficient operations - Simplified flow with better reserve management\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burnGameToken(uint256,uint256)\":{\"details\":\"Burn game tokens to reclaim XP tokens\",\"params\":{\"burnAmount\":\"Amount of game tokens to burn\",\"gameId\":\"ID of the game token to burn\"}},\"calculateXpAmount(uint256)\":{\"details\":\"Calculate XP amount for given CRIDA amount\",\"params\":{\"cridaAmount\":\"Amount of CRIDA tokens\"}},\"calculateXpReturn(uint256,uint256)\":{\"details\":\"Calculate XP return for burning game tokens\",\"params\":{\"burnAmount\":\"Amount to burn\",\"gameId\":\"ID of the game token\"}},\"createGameToken(uint256,string,string,uint8)\":{\"details\":\"Create a new game token by locking XP tokens\",\"params\":{\"decimals\":\"Decimals for the game token\",\"name\":\"Name of the game token\",\"symbol\":\"Symbol of the game token\",\"xpAmount\":\"Amount of XP tokens to lock\"}},\"emergencyWithdraw(address,address,uint256)\":{\"details\":\"Emergency withdraw function for stuck tokens\",\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Address to send tokens to\",\"token\":\"Address of token to withdraw\"}},\"getGameTokenInfo(uint256)\":{\"details\":\"Get game token information\",\"params\":{\"gameId\":\"ID of the game token\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserGameTokens(address)\":{\"details\":\"Get user's created game tokens\",\"params\":{\"user\":\"Address of the user\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"lockCrida(uint256)\":{\"details\":\"Lock CRIDA tokens and mint XP tokens\",\"params\":{\"amountCrida\":\"Amount of CRIDA tokens to lock\"}},\"pause()\":{\"details\":\"Pause contract operations\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setRate(uint256)\":{\"details\":\"Update CRIDA to XP conversion rate\",\"params\":{\"newRate\":\"New rate (with PRECISION_FACTOR scaling)\"}},\"unpause()\":{\"details\":\"Unpause contract operations\"},\"uri(uint256)\":{\"details\":\"Override URI function to provide metadata for game tokens\"}},\"title\":\"GameEcosystem\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameEcosystem.sol\":\"GameEcosystem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/GameEcosystem.sol\":{\"keccak256\":\"0x64e6e06832dcab6fe325a825ebbce3c3415214588027486beee8a587fbe54301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2de32d4571d0168bdaa4b4eeaa7a0c459a4c87d0c823b6fac0a57e80263621bf\",\"dweb:/ipfs/QmY3q5HciDDj2faWCL9G4Ghxxw1iSjF6QQL5pmazczywHC\"]}},\"version\":1}"}},"contracts/GameToken.sol":{"GameToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"factory_","type":"address"},{"internalType":"uint256","name":"gameId_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BurnDisabled","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UnauthorizedBurner","type":"error"},{"inputs":[],"name":"ZeroAmount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"BurnStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalBurned","type":"uint256"}],"name":"TokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyRecover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setBurnEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBurned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1305,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"604060e08152346200047c5762001301803803806200001e8162000481565b928339810160e0828203126200047c5781516001600160401b0392908381116200047c578262000050918301620004a7565b9260209283830151908282116200047c576200006e918401620004a7565b90858301519260ff841684036200047c57606081015193620000936080830162000519565b9660c0620000a460a0850162000519565b9301519381518181116200036d576003908154906001948583811c9316801562000471575b8c8410146200045b5781908c601f9485811162000402575b50508c908483116001146200038f5760009262000383575b505060001982851b1c191690851b1782555b87519283116200036d5760049788548581811c9116801562000362575b8c8210146200034d57908b82848796959411620002f0575b50508b918411600114620002855760009362000279575b505082841b92600019911b1c19161785555b6001600160a01b039788169788156200026257600580546001600160a01b031981168b179091558991167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38060065560ff19600854161760085560805260a05260c052600254908282018092116200024d575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610dd290816200052f823960805181610819015260a05181818161025801526105c3015260c051816102200152f35b601190634e487b7160e01b6000525260246000fd5b8951631e4fbdf760e01b8152600081880152602490fd5b01519150388062000157565b60008a81528c812087965093929190601f198616908e5b828210620002d85750508511620002bd575b50505050811b01855562000169565b01519060f884600019921b161c1916905538808080620002ae565b83850151875589989096019593840193018e6200029c565b9091929394508a60005283826000209181880160051c830193881062000343575b9188918897969594930160051c01915b8281106200033357508d915062000140565b6000815587965088910162000321565b9250819262000311565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000128565b634e487b7160e01b600052604160045260246000fd5b015190503880620000f9565b879350908d91601f1984168760005283600020936000905b828210620003e05750508411620003c7575b505050811b0182556200010b565b015160001983871b60f8161c19169055388080620003b9565b91929395968291958786015181550195019301908f918a9695949392620003a7565b909192508560005284826000209181860160051c830193861062000451575b918991869594930160051c01915b8281106200044157508e9150620000e1565b600081558594508991016200042f565b9250819262000421565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000c9565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200036d57604052565b919080601f840112156200047c5782516001600160401b0381116200036d57602090620004dd601f8201601f1916830162000481565b928184528282870101116200047c5760005b8181106200050557508260009394955001015290565b8581018301518482018401528201620004ef565b51906001600160a01b03821682036200047c5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109e657508063095ea7b31461093d57806318160ddd1461091e57806323b872dd1461083d578063313ce567146107ff57806342966c68146107605780635dc96d161461073c57806370a0823114610705578063715018a6146106a857806379cc67901461059b5780637b2c835f146105395780638da5cb5b1461051057806395d89b411461040c578063a9059cbb146103db578063ad1329d114610287578063c45a015514610243578063d7c81b5514610208578063d89135cd146101e9578063dd62ed3e146101915763f2fde38b146100ff57600080fd5b3461018d57602036600319011261018d57610118610b25565b90610121610b75565b6001600160a01b03918216928315610177575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101e557806003193601126101e5576101ab610b25565b6001600160a01b0360243581811692908390036101e1579160209491849316825260018552828220908252845220549051908152f35b8480fd5b5080fd5b5050346101e557816003193601126101e5576020906007549051908152f35b5050346101e557816003193601126101e557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101e557816003193601126101e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461018d5761029736610b40565b91906102a1610b75565b6001600160a01b039081169182156103cb57869392911680610357575082809281925af13d15610352573d67ffffffffffffffff811161033f578251906102f2601f8201601f191660200183610ba1565b81528460203d92013e5b1561030657505080f35b906020606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b855260418452602485fd5b6102fc565b9460209360449293968651978895869463a9059cbb60e01b865285015260248401525af19081156103c2575061038b575080f35b6020813d82116103ba575b816103a360209383610ba1565b810103126101e55751801515036103b75780f35b80fd5b3d9150610396565b513d84823e3d90fd5b8451631f2a200560e01b81528690fd5b5050346101e557806003193601126101e5576020906104056103fb610b25565b6024359033610bd9565b5160018152f35b509190346101e557816003193601126101e557805191809380549160019083821c92828516948515610506575b60209586861081146104f3578589529081156104cf5750600114610477575b6104738787610469828c0383610ba1565b5191829182610adc565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104bc57505050826104739461046992820101943880610458565b805486850188015292860192810161049e565b60ff19168887015250505050151560051b8301019250610469826104733880610458565b634e487b7160e01b845260228352602484fd5b93607f1693610439565b5050346101e557816003193601126101e55760055490516001600160a01b039091168152602090f35b503461018d57602036600319011261018d57359081151580920361018d577f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd91602091610584610b75565b60ff196008541660ff83161760085551908152a180f35b50903461018d578060031936011261018d576105b5610b25565b602435906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811633036106985760ff6008541615610688576105fd610d79565b8215610678578116938486528560205282848720541061066a575090610654817fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00949361064c82600754610cb7565b600755610cda565b60075482519182526020820152a2600160065580f35b8351631e9acf1760e31b8152fd5b50505051631f2a200560e01b8152fd5b5050505163be20705f60e01b8152fd5b5050505163a9c455db60e01b8152fd5b83346103b757806003193601126103b7576106c1610b75565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101e55760203660031901126101e55760209181906001600160a01b0361072d610b25565b16815280845220549051908152f35b5050346101e557816003193601126101e55760209060ff6008541690519015158152f35b50903461018d57602036600319011261018d5781359160ff60085416156107f157610789610d79565b82156107e357507fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00906107be83600754610cb7565b6007556107cb8333610cda565b600754815193845260208401523392a2600160065580f35b9051631f2a200560e01b8152fd5b905163be20705f60e01b8152fd5b5050346101e557816003193601126101e5576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b508290346101e55761084e36610b40565b6001600160a01b0383168086526001602090815287872033885290528686205491959294600019831061088a575b602088610405898989610bd9565b8683106108f25781156108db5733156108c4575082526001602090815286832033845281529186902090859003905582906104058761087c565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101e557816003193601126101e5576020906002549051908152f35b503461018d578160031936011261018d57610956610b25565b6024359033156109cf576001600160a01b03169182156109b857508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b9291905034610ad85783600319360112610ad857600354600181811c9186908281168015610ace575b6020958686108214610abb5750848852908115610a995750600114610a40575b6104738686610469828b0383610ba1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610a86575050508261047394610469928201019438610a2f565b8054868501880152928601928101610a69565b60ff191687860152505050151560051b83010192506104698261047338610a2f565b634e487b7160e01b845260229052602483fd5b93607f1693610a0f565b8380fd5b6020808252825181830181905290939260005b828110610b1157505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610aef565b600435906001600160a01b0382168203610b3b57565b600080fd5b6060906003190112610b3b576001600160a01b03906004358281168103610b3b57916024359081168103610b3b579060443590565b6005546001600160a01b03163303610b8957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff821117610bc357604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b03808416928315610c9e5716928315610c855760009083825281602052604082205490838210610c53575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211610cc457565b634e487b7160e01b600052601160045260246000fd5b906001600160a01b038216908115610c9e5760009282845283602052604084205490828210610d475750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b600260065414610d8a576002600655565b604051633ee5aeb560e01b8152600490fdfea26469706673582212209f1c438f5f60eea04008a1ef860d670535e4031d5538854a94abe019fbceb6d864736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0xE0 DUP2 MSTORE CALLVALUE PUSH3 0x47C JUMPI PUSH3 0x1301 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH3 0x47C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x47C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x47C JUMPI PUSH3 0x6E SWAP2 DUP5 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP1 DUP6 DUP4 ADD MLOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH3 0x47C JUMPI PUSH1 0x60 DUP2 ADD MLOAD SWAP4 PUSH3 0x93 PUSH1 0x80 DUP4 ADD PUSH3 0x519 JUMP JUMPDEST SWAP7 PUSH1 0xC0 PUSH3 0xA4 PUSH1 0xA0 DUP6 ADD PUSH3 0x519 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP4 DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP5 DUP6 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x471 JUMPI JUMPDEST DUP13 DUP5 LT EQ PUSH3 0x45B JUMPI DUP2 SWAP1 DUP13 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x402 JUMPI JUMPDEST POP POP DUP13 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x38F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x383 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP3 SSTORE JUMPDEST DUP8 MLOAD SWAP3 DUP4 GT PUSH3 0x36D JUMPI PUSH1 0x4 SWAP8 DUP9 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x362 JUMPI JUMPDEST DUP13 DUP3 LT EQ PUSH3 0x34D JUMPI SWAP1 DUP12 DUP3 DUP5 DUP8 SWAP7 SWAP6 SWAP5 GT PUSH3 0x2F0 JUMPI JUMPDEST POP POP DUP12 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x285 JUMPI PUSH1 0x0 SWAP4 PUSH3 0x279 JUMPI JUMPDEST POP POP DUP3 DUP5 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP8 DUP9 ISZERO PUSH3 0x262 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP12 OR SWAP1 SWAP2 SSTORE DUP10 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 PUSH1 0x6 SSTORE PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x2 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x24D JUMPI POP PUSH1 0x2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP4 MSTORE DUP5 DUP2 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG3 MLOAD PUSH2 0xDD2 SWAP1 DUP2 PUSH3 0x52F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x819 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x258 ADD MSTORE PUSH2 0x5C3 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x220 ADD MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP10 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE DUP13 DUP2 KECCAK256 DUP8 SWAP7 POP SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP15 JUMPDEST DUP3 DUP3 LT PUSH3 0x2D8 JUMPI POP POP DUP6 GT PUSH3 0x2BD JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0x169 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x2AE JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP8 SSTORE DUP10 SWAP9 SWAP1 SWAP7 ADD SWAP6 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x29C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP11 PUSH1 0x0 MSTORE DUP4 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP9 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP9 LT PUSH3 0x343 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x333 JUMPI POP DUP14 SWAP2 POP PUSH3 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP8 SWAP7 POP DUP9 SWAP2 ADD PUSH3 0x321 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x22 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xF9 JUMP JUMPDEST DUP8 SWAP4 POP SWAP1 DUP14 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP8 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x3E0 JUMPI POP POP DUP5 GT PUSH3 0x3C7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x10B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x3B9 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP6 SWAP7 DUP3 SWAP2 SWAP6 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 DUP16 SWAP2 DUP11 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH3 0x3A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP6 PUSH1 0x0 MSTORE DUP5 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP7 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP7 LT PUSH3 0x451 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x441 JUMPI POP DUP15 SWAP2 POP PUSH3 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x42F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x421 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x36D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x47C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x4DD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x47C JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x505 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x4EF JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x47C JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x9E6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x7FF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB25 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1AB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E1 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x297 CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x3CB JUMPI DUP7 SWAP4 SWAP3 SWAP2 AND DUP1 PUSH2 0x357 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x33F JUMPI DUP3 MLOAD SWAP1 PUSH2 0x2F2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 SWAP4 SWAP7 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3C2 JUMPI POP PUSH2 0x38B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3BA JUMPI JUMPDEST DUP2 PUSH2 0x3A3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E5 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x3B7 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x396 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x405 PUSH2 0x3FB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBD9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x506 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x4F3 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x477 JUMPI JUMPDEST PUSH2 0x473 DUP8 DUP8 PUSH2 0x469 DUP3 DUP13 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xADC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x4BC JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x439 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x18D JUMPI PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x584 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP4 AND OR PUSH1 0x8 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x5B5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x698 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x688 JUMPI PUSH2 0x5FD PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x678 JUMPI DUP2 AND SWAP4 DUP5 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP5 DUP8 KECCAK256 SLOAD LT PUSH2 0x66A JUMPI POP SWAP1 PUSH2 0x654 DUP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP5 SWAP4 PUSH2 0x64C DUP3 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xA9C455DB PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x3B7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B7 JUMPI PUSH2 0x6C1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x72D PUSH2 0xB25 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x789 PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7E3 JUMPI POP PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP1 PUSH2 0x7BE DUP4 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x7CB DUP4 CALLER PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x84E CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP8 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x0 NOT DUP4 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x405 DUP10 DUP10 DUP10 PUSH2 0xBD9 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x8F2 JUMPI DUP2 ISZERO PUSH2 0x8DB JUMPI CALLER ISZERO PUSH2 0x8C4 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x405 DUP8 PUSH2 0x87C JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x956 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x9CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x9B8 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0xAD8 JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xAD8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xACE JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xABB JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xA99 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0x473 DUP7 DUP7 PUSH2 0x469 DUP3 DUP12 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xA86 JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA2F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE PUSH2 0xA2F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA0F JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB11 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB3B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBC3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC9E JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC53 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCC4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xD47 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0xD8A JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SHR NUMBER DUP16 PUSH0 PUSH1 0xEE LOG0 BLOCKHASH ADDMOD LOG1 0xEF DUP7 0xD PUSH8 0x535E4031D553885 0x4A SWAP5 0xAB 0xE0 NOT 0xFB 0xCE 0xB6 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"483:3865:37:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;1648:13:10;483:3865:37;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;-1:-1:-1;;;;483:3865:37;;;;;;;;;;;;;;;;;;;;1671:17:10;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;1273:26:2;;1269:95;;3004:6;483:3865:37;;-1:-1:-1;;;;;;483:3865:37;;;;;;;;;;3052:40:2;-1:-1:-1;;3052:40:2;1857:1:23;2061:21;1857:1;483:3865:37;;945:4;483:3865;;;945:4;483:3865;;1874:21;483:3865;1905:18;483:3865;1933:16;6214:21:10;483:3865:37;;;;;;;;;;-1:-1:-1;6214:21:10;1857:1:23;-1:-1:-1;483:3865:37;;;;;;;;;;;;;1857:1:23;;483:3865:37;;;;;-1:-1:-1;7064:25:10;;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;-1:-1:-1;483:3865:37;1269:95:2;483:3865:37;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;483:3865:37;;;1322:31:2;483:3865:37;;;;-1:-1:-1;483:3865:37;;;;;-1:-1:-1;483:3865:37;;;;;;;;-1:-1:-1;483:3865:37;;;;-1:-1:-1;;483:3865:37;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;-1:-1:-1;483:3865:37;;1671:17:10;483:3865:37;;-1:-1:-1;483:3865:37;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;-1:-1:-1;483:3865:37;;-1:-1:-1;483:3865:37;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;-1:-1:-1;483:3865:37;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;-1:-1:-1;;483:3865:37;;;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2853,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":2780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":3255,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2977,"id":null,"parameterSlots":2,"returnSlots":0},"fun_burn":{"entryPoint":3290,"id":2328,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":2933,"id":463,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":3449,"id":4046,"parameterSlots":0,"returnSlots":0},"fun_transfer":{"entryPoint":3033,"id":2185,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"11090":[{"length":32,"start":2073}],"11092":[{"length":32,"start":600},{"length":32,"start":1475}],"11094":[{"length":32,"start":544}]},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109e657508063095ea7b31461093d57806318160ddd1461091e57806323b872dd1461083d578063313ce567146107ff57806342966c68146107605780635dc96d161461073c57806370a0823114610705578063715018a6146106a857806379cc67901461059b5780637b2c835f146105395780638da5cb5b1461051057806395d89b411461040c578063a9059cbb146103db578063ad1329d114610287578063c45a015514610243578063d7c81b5514610208578063d89135cd146101e9578063dd62ed3e146101915763f2fde38b146100ff57600080fd5b3461018d57602036600319011261018d57610118610b25565b90610121610b75565b6001600160a01b03918216928315610177575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101e557806003193601126101e5576101ab610b25565b6001600160a01b0360243581811692908390036101e1579160209491849316825260018552828220908252845220549051908152f35b8480fd5b5080fd5b5050346101e557816003193601126101e5576020906007549051908152f35b5050346101e557816003193601126101e557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101e557816003193601126101e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461018d5761029736610b40565b91906102a1610b75565b6001600160a01b039081169182156103cb57869392911680610357575082809281925af13d15610352573d67ffffffffffffffff811161033f578251906102f2601f8201601f191660200183610ba1565b81528460203d92013e5b1561030657505080f35b906020606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b855260418452602485fd5b6102fc565b9460209360449293968651978895869463a9059cbb60e01b865285015260248401525af19081156103c2575061038b575080f35b6020813d82116103ba575b816103a360209383610ba1565b810103126101e55751801515036103b75780f35b80fd5b3d9150610396565b513d84823e3d90fd5b8451631f2a200560e01b81528690fd5b5050346101e557806003193601126101e5576020906104056103fb610b25565b6024359033610bd9565b5160018152f35b509190346101e557816003193601126101e557805191809380549160019083821c92828516948515610506575b60209586861081146104f3578589529081156104cf5750600114610477575b6104738787610469828c0383610ba1565b5191829182610adc565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104bc57505050826104739461046992820101943880610458565b805486850188015292860192810161049e565b60ff19168887015250505050151560051b8301019250610469826104733880610458565b634e487b7160e01b845260228352602484fd5b93607f1693610439565b5050346101e557816003193601126101e55760055490516001600160a01b039091168152602090f35b503461018d57602036600319011261018d57359081151580920361018d577f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd91602091610584610b75565b60ff196008541660ff83161760085551908152a180f35b50903461018d578060031936011261018d576105b5610b25565b602435906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811633036106985760ff6008541615610688576105fd610d79565b8215610678578116938486528560205282848720541061066a575090610654817fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00949361064c82600754610cb7565b600755610cda565b60075482519182526020820152a2600160065580f35b8351631e9acf1760e31b8152fd5b50505051631f2a200560e01b8152fd5b5050505163be20705f60e01b8152fd5b5050505163a9c455db60e01b8152fd5b83346103b757806003193601126103b7576106c1610b75565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101e55760203660031901126101e55760209181906001600160a01b0361072d610b25565b16815280845220549051908152f35b5050346101e557816003193601126101e55760209060ff6008541690519015158152f35b50903461018d57602036600319011261018d5781359160ff60085416156107f157610789610d79565b82156107e357507fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00906107be83600754610cb7565b6007556107cb8333610cda565b600754815193845260208401523392a2600160065580f35b9051631f2a200560e01b8152fd5b905163be20705f60e01b8152fd5b5050346101e557816003193601126101e5576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b508290346101e55761084e36610b40565b6001600160a01b0383168086526001602090815287872033885290528686205491959294600019831061088a575b602088610405898989610bd9565b8683106108f25781156108db5733156108c4575082526001602090815286832033845281529186902090859003905582906104058761087c565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101e557816003193601126101e5576020906002549051908152f35b503461018d578160031936011261018d57610956610b25565b6024359033156109cf576001600160a01b03169182156109b857508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b9291905034610ad85783600319360112610ad857600354600181811c9186908281168015610ace575b6020958686108214610abb5750848852908115610a995750600114610a40575b6104738686610469828b0383610ba1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610a86575050508261047394610469928201019438610a2f565b8054868501880152928601928101610a69565b60ff191687860152505050151560051b83010192506104698261047338610a2f565b634e487b7160e01b845260229052602483fd5b93607f1693610a0f565b8380fd5b6020808252825181830181905290939260005b828110610b1157505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610aef565b600435906001600160a01b0382168203610b3b57565b600080fd5b6060906003190112610b3b576001600160a01b03906004358281168103610b3b57916024359081168103610b3b579060443590565b6005546001600160a01b03163303610b8957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff821117610bc357604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b03808416928315610c9e5716928315610c855760009083825281602052604082205490838210610c53575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211610cc457565b634e487b7160e01b600052601160045260246000fd5b906001600160a01b038216908115610c9e5760009282845283602052604084205490828210610d475750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b600260065414610d8a576002600655565b604051633ee5aeb560e01b8152600490fdfea26469706673582212209f1c438f5f60eea04008a1ef860d670535e4031d5538854a94abe019fbceb6d864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x9E6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x7FF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB25 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1AB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E1 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x297 CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x3CB JUMPI DUP7 SWAP4 SWAP3 SWAP2 AND DUP1 PUSH2 0x357 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x33F JUMPI DUP3 MLOAD SWAP1 PUSH2 0x2F2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 SWAP4 SWAP7 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3C2 JUMPI POP PUSH2 0x38B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3BA JUMPI JUMPDEST DUP2 PUSH2 0x3A3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E5 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x3B7 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x396 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x405 PUSH2 0x3FB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBD9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x506 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x4F3 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x477 JUMPI JUMPDEST PUSH2 0x473 DUP8 DUP8 PUSH2 0x469 DUP3 DUP13 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xADC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x4BC JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x439 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x18D JUMPI PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x584 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP4 AND OR PUSH1 0x8 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x5B5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x698 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x688 JUMPI PUSH2 0x5FD PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x678 JUMPI DUP2 AND SWAP4 DUP5 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP5 DUP8 KECCAK256 SLOAD LT PUSH2 0x66A JUMPI POP SWAP1 PUSH2 0x654 DUP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP5 SWAP4 PUSH2 0x64C DUP3 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xA9C455DB PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x3B7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B7 JUMPI PUSH2 0x6C1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x72D PUSH2 0xB25 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x789 PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7E3 JUMPI POP PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP1 PUSH2 0x7BE DUP4 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x7CB DUP4 CALLER PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x84E CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP8 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x0 NOT DUP4 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x405 DUP10 DUP10 DUP10 PUSH2 0xBD9 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x8F2 JUMPI DUP2 ISZERO PUSH2 0x8DB JUMPI CALLER ISZERO PUSH2 0x8C4 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x405 DUP8 PUSH2 0x87C JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x956 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x9CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x9B8 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0xAD8 JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xAD8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xACE JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xABB JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xA99 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0x473 DUP7 DUP7 PUSH2 0x469 DUP3 DUP12 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xA86 JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA2F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE PUSH2 0xA2F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA0F JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB11 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB3B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBC3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC9E JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC53 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCC4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xD47 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0xD8A JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SHR NUMBER DUP16 PUSH0 PUSH1 0xEE LOG0 BLOCKHASH ADDMOD LOG1 0xEF DUP7 0xD PUSH8 0x535E4031D553885 0x4A SWAP5 0xAB 0xE0 NOT 0xFB 0xCE 0xB6 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"483:3865:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;-1:-1:-1;;;;;483:3865:37;;;;2627:22:2;;2623:91;;483:3865:37;;3004:6:2;483:3865:37;;;;;;;;3004:6:2;483:3865:37;;3052:40:2;;;;483:3865:37;;2623:91:2;483:3865:37;-1:-1:-1;;;2672:31:2;;;;;483:3865:37;;;;;2672:31:2;483:3865:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:26;483:3865;;;;;;;;;;;;;;;;;;;;;;;;734:31;483:3865;;;;;;;;;;;;;;;;;;651:32;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;;;:::i;:::-;1500:62:2;;;;:::i;:::-;-1:-1:-1;;;;;483:3865:37;;;;3999:16;;3995:41;;483:3865;;;;;4059:19;483:3865;;4140:35;;;;;;;;483:3865;;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;:::i;:::-;;;;;;;;;;;;;4055:285;;483:3865;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;483:3865:37;;;;;;-1:-1:-1;;;483:3865:37;;;;;;;;;;;4055:285;483:3865;4295:34;483:3865;;;;;;;;;;;;;;;4295:34;;;;483:3865;;;;;4295:34;;;;;;;;;;4055:285;483:3865;;4295:34;;;;;;;;;;;;;;;:::i;:::-;;;483:3865;;;;;;;;;;;;;;;;4295:34;;;-1:-1:-1;4295:34:37;;;483:3865;;;;;;;;3995:41;483:3865;;-1:-1:-1;;;4024:12:37;;483:3865;;4024:12;483:3865;;;;;;;;;;;;;;;;3440:5:10;483:3865:37;;:::i;:::-;;;735:10:19;;3440:5:10;:::i;:::-;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;-1:-1:-1;;;;483:3865:37;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;-1:-1:-1;;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:2;483:3865:37;;;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;;;;;;;;;;3595:26;1500:62:2;483:3865:37;1500:62:2;;;:::i;:::-;483:3865:37;;3559:21;483:3865;;;;;;3559:21;483:3865;;;;;3595:26;483:3865;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1414:7:37;483:3865;;1400:10;:21;1396:54;;483:3865;1516:11;483:3865;;1515:12;1511:39;;2466:103:23;;:::i;:::-;2574:11:37;;2570:36;;483:3865;;;;;;;;;;;;;;2620:24;2616:58;;483:3865;;2838:6;483:3865;2869:39;483:3865;;2763:21;483:3865;2763:21;483:3865;2763:21;:::i;:::-;;483:3865;2838:6;:::i;:::-;2763:21;483:3865;;;;;;;;;;2869:39;483:3865;3068:21:23;483:3865:37;;;2616:58;483:3865;;-1:-1:-1;;;2653:21:37;;;2570:36;483:3865;;;;3143:12;;;2594;;;1511:39;483:3865;;;;1536:14;;;;;;1396:54;483:3865;;;;1430:20;;;;;;483:3865;;;;;;;;;;;;;1500:62:2;;:::i;:::-;3004:6;483:3865:37;;-1:-1:-1;;;;;;483:3865:37;;;;;;;-1:-1:-1;;;;;483:3865:37;3052:40:2;483:3865:37;;3052:40:2;483:3865:37;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;;;;-1:-1:-1;;;;;483:3865:37;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:30;483:3865;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;;;;1516:11;483:3865;;1515:12;1511:39;;2466:103:23;;:::i;:::-;3123:11:37;;3119:36;;483:3865;3254:45;483:3865;3174:21;483:3865;3174:21;483:3865;3174:21;:::i;:::-;;483:3865;3223:6;3211:10;;3223:6;:::i;:::-;3174:21;483:3865;;;;;;;;;;3211:10;3254:45;;483:3865;3068:21:23;483:3865:37;;;3119:36;483:3865;;-1:-1:-1;;;3143:12:37;;;1511:39;483:3865;;-1:-1:-1;;;1536:14:37;;;483:3865;;;;;;;;;;;;;;;;;;2174:9;483:3865;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;735:10:19;483:3865:37;;;;;;;;;;;;-1:-1:-1;;10561:36:10;;10557:309;;483:3865:37;;4967:5:10;;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:19;9892:21:10;9888:90;;-1:-1:-1;483:3865:37;;;;;;;;;;735:10:19;483:3865:37;;;;;;;;;;;;;;;;4967:5:10;10557:309;;;9888:90;483:3865:37;;-1:-1:-1;;;9936:31:10;;;;;483:3865:37;;;;;9936:31:10;9790:89;483:3865:37;;-1:-1:-1;;;9836:32:10;;;;;483:3865:37;;;;;9836:32:10;10613:130;483:3865:37;;-1:-1:-1;;;10668:60:10;;735:10:19;10668:60:10;;;483:3865:37;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;10668:60:10;;;483:3865:37;;;;;;;;;;;;;;;;2908:12:10;483:3865:37;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:19;;9794:19:10;9790:89;;-1:-1:-1;;;;;483:3865:37;;9892:21:10;;9888:90;;735:10:19;;;483:3865:37;735:10:19;;483:3865:37;;;;;;;;;;;;;;;;;;;;10066:31:10;735:10:19;;10066:31:10;;483:3865:37;;;;;9888:90:10;483:3865:37;;-1:-1:-1;;;9936:31:10;;;;;483:3865:37;;;;;9936:31:10;9790:89;483:3865:37;;-1:-1:-1;;;9836:32:10;;;;;483:3865:37;;;;;9836:32:10;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;483:3865:37;;;;;-1:-1:-1;;;483:3865:37;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;-1:-1:-1;;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:2:-;1710:6;483:3865:37;-1:-1:-1;;;;;483:3865:37;735:10:19;1855:23:2;1851:101;;1796:162::o;1851:101::-;483:3865:37;;-1:-1:-1;;;1901:40:2;;735:10:19;1901:40:2;;;483:3865:37;;;1901:40:2;483:3865:37;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5374:300:10;;-1:-1:-1;;;;;483:3865:37;;;;5457:18:10;;5453:86;;483:3865:37;5552:16:10;;;5548:86;;6074:540;483:3865:37;;;;;;;;;;;6321:19:10;;;;6317:115;;483:3865:37;;;;;7064:25:10;483:3865:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:10;5374:300::o;6317:115::-;483:3865:37;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;483:3865:37;;;;6367:50:10;;;483:3865:37;;;;;;;;;;;;;;;;10668:60:10;5548:86;483:3865:37;;-1:-1:-1;;;5591:32:10;;5473:1;5591:32;;;483:3865:37;;;5591:32:10;5453:86;483:3865:37;;-1:-1:-1;;;5498:30:10;;5473:1;5498:30;;;483:3865:37;;;5498:30:10;483:3865:37;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7965:206:10;;-1:-1:-1;;;;;483:3865:37;;;8035:21:10;;8031:89;;6074:540;483:3865:37;;;;;;;;;;;6321:19:10;;;;6317:115;;483:3865:37;;7064:25:10;483:3865:37;;;;;;;;;;;;;;;6791:21:10;483:3865:37;;6791:21:10;483:3865:37;;;;;;7064:25:10;7965:206::o;6317:115::-;483:3865:37;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;483:3865:37;;;;6367:50:10;;;483:3865:37;;;;;;;;;;;;;;;;10668:60:10;2575:307:23;1899:1;2702:7;483:3865:37;2702:18:23;2698:86;;1899:1;2702:7;483:3865:37;2575:307:23:o;2698:86::-;483:3865:37;;-1:-1:-1;;;2743:30:23;;;;"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnEnabled()":"5dc96d16","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","emergencyRecover(address,address,uint256)":"ad1329d1","factory()":"c45a0155","gameId()":"d7c81b55","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setBurnEnabled(bool)":"7b2c835f","symbol()":"95d89b41","totalBurned()":"d89135cd","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BurnDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedBurner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BurnStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBurned\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRecover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setBurnEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optimized ERC-20 game token with enhanced security Each game gets its own instance of this contract Optimized for gas efficiency while maintaining security\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Allow users to burn their own tokens directly\",\"params\":{\"amount\":\"Amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burn tokens from a specific account (called by factory)\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyRecover(address,address,uint256)\":{\"details\":\"Emergency function to recover stuck tokens\",\"params\":{\"amount\":\"Amount to recover\",\"to\":\"Address to send recovered tokens\",\"token\":\"Address of token to recover (address(0) for ETH)\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBurnEnabled(bool)\":{\"details\":\"Enable/disable burning (emergency control)\",\"params\":{\"enabled\":\"Whether burning should be enabled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GameToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameToken.sol\":\"GameToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/GameToken.sol\":{\"keccak256\":\"0x005cb1b144b6bf2826915a6eca1e9759771dd12a7f4d215bdf206a52aa2d311d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ced9e903f6a63a47ad23c116168779cb1ca72f4c14716e5875091e1f944847\",\"dweb:/ipfs/QmYVCpc3WPCkGoTXNkb2AaSJQyqnNMTciYqenhb3M9B1cL\"]}},\"version\":1}"}},"contracts/GameTokenFactory.sol":{"GameTokenFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_credaToken","type":"address"},{"internalType":"address","name":"_xpToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"DuplicateGameName","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"GameTokenDeploymentFailed","type":"error"},{"inputs":[],"name":"GameTokenNotActive","type":"error"},{"inputs":[],"name":"InsufficientAmount","type":"error"},{"inputs":[],"name":"InsufficientXpReserves","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidDecimals","type":"error"},{"inputs":[],"name":"InvalidGameId","type":"error"},{"inputs":[],"name":"NameTooLong","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SymbolTooLong","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"ZeroAmount","type":"error"},{"inputs":[],"name":"ZeroRate","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"credaAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xpMinted","type":"uint256"}],"name":"CredaLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"xpReturned","type":"uint256"}],"name":"GameTokenBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"uint256","name":"xpLocked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"initialSupply","type":"uint256"}],"name":"GameTokenCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"RateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_GAME_TOKEN_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NAME_LENGTH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SYMBOL_LENGTH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_XP_LOCK_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RATE_MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnGameToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"credaAmount","type":"uint256"}],"name":"calculateXpAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"calculateXpReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"xpAmount","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"createGameToken","outputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"credaToXpRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"credaToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gameTokenMetadata","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"uint256","name":"creationTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gameTokens","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"uint88","name":"xpLocked","type":"uint88"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameTokenInfo","outputs":[{"components":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"uint88","name":"xpLocked","type":"uint88"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct GameTokenFactory.GameTokenInfo","name":"info","type":"tuple"},{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"uint256","name":"creationTime","type":"uint256"}],"internalType":"struct GameTokenFactory.GameTokenMetadata","name":"metadata","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserGameTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"string","name":"name","type":"string"}],"name":"isGameNameUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountCreda","type":"uint256"}],"name":"lockCreda","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLockedCreda","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"name":"userGameNames","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userGameTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userLockedCreda","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xpReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xpToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":318,"id":null,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":339,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_784":{"entryPoint":467,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_785":{"entryPoint":629,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_786":{"entryPoint":786,"id":256,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c0346200012357601f620038ec38819003918201601f19168301916001600160401b038311848410176200012857808492604094855283398101031262000123576200005a602062000052836200013e565b92016200013e565b60016002819055670de0b6b3a76400006003556004556001600160a01b039182168015801562000118575b62000106576080521660a0526200009c3362000153565b50620000a833620001d3565b50620000b43362000275565b50620000c03362000312565b5060405161351c9081620003b08239608051818181610b150152610f92015260a05181818161030f015281816104710152818161101f01528181611128015261143e0152f35b60405163e6c4247b60e01b8152600490fd5b508282161562000085565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200012357565b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620001cf57818052816020526040822081835260205260408220600160ff198254161790553391600080516020620038cc8339815191528180a4600190565b5090565b6001600160a01b031660008181527f43393de9c580acbb6a28cd9d65b7ec5698943d0e6fec07062b42a76c1fb8aeb960205260408120549091907f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b29060ff166200027057808352826020526040832082845260205260408320600160ff19825416179055600080516020620038cc833981519152339380a4600190565b505090565b6001600160a01b031660008181527ff7c9542c591017a21c74b6f3fab6263c7952fc0aaf9db4c22a2a04ddc7f8674f60205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff166200027057808352826020526040832082845260205260408320600160ff19825416179055600080516020620038cc833981519152339380a4600190565b6001600160a01b031660008181527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd4660205260408120549091907fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff166200027057808352826020526040832082845260205260408320600160ff19825416179055600080516020620038cc833981519152339380a460019056fe60808060405260043610156200001457600080fd5b600090813560e01c90816301ffc9a71462001b775750806305a619541462001af5578063078199451462001ab85780631bf44cb01462001a1d57806320df435914620019e0578063238d4af814620019c0578063248a9ca314620019925780632f2ff15d146200194d57806334fcf43714620018a257806336568abe14620018535780633b420a73146200182c5780633f4ba83a14620017bc578063546fdad414620017045780635c975abb14620016df5780635e79c1dc14620015485780635ed6c1db14620012e05780636d8554e214620012c057806374b334c514620012885780638456cb59146200122857806386074985146200120a5780638760550d14620011e457806391d148541462001195578063a217fddf1462001177578063aa6450ce1462001157578063ae5014b11462001110578063b135bbb014620010f0578063bec697db1462000f11578063bf034b691462000ea5578063c21c64a71462000e48578063cb327b8b1462000e0b578063ccd34cd51462000de6578063d547741f1462000d9d578063df525b7d1462000d7f578063e3d891711462000d61578063e63ab1e91462000d24578063e63ea4081462000b44578063ecdf8fc41462000afd578063f71575581462000a7d5763fd44d27414620001f657600080fd5b3462000a7a57608036600319011262000a7a576024356001600160401b03811162000a76576200022b90369060040162001e4d565b906044356001600160401b03811162000a72576200024e90369060040162001e4d565b9290916064359260ff8416840362000a6e576200026a62002069565b6200027462002088565b683635c9adc5dea000006004351062000a5c57601260ff85161162000a4a578215801562000a3f575b62000a2d578415801562000a22575b62000a1057338652600a60205260ff604087206020604051809287878337878201908152030190205416620009fe576040516323b872dd60e01b8152336004808301919091523060248301523560448201526020816064818a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115620009f3578791620009cf575b5015620004ba5762000358600435600b546200205b565b600b55600454946000198614620009bb5760018601600455604d60ff861611620009bb57670de0b6b3a76400006200039960ff8716600a0a60043562001ff6565b0492604051806113018101106001600160401b0361130183011117620009a757611301620021e6823960e061130182015280620003fb620003e360e06113018401018986620020aa565b611301830181036020611301850101528587620020aa565b60ff891661130183016040810191909152606081018890523360808201523060a082015260c0018a9052039089f0806200050e578862000440600435600b54620020cb565b600b5560405163a9059cbb60e01b815233600480830191909152356024820152602081604481856001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215620005025791620004cc575b5015620004ba5760405162b5d57b60e61b8152600490fd5b6040516312171d8360e31b8152600490fd5b620004f3915060203d602011620004fa575b620004ea818362001c5c565b81019062002041565b81620004a2565b503d620004de565b604051903d90823e3d90fd5b6040516001600160a01b03919091169660ff906200052c8362001c0e565b60018060a01b03891683523360208401526001600160581b036004351660408401521660608201526001608082015287895260076020526080600260408b2060018060a01b038451166bffffffffffffffffffffffff60a01b82541617815560018060a01b036020850151166001600160581b0360a01b604086015160a01b1660ff60f81b606087015160f81b16911717600182015501910151151560ff80198354169116179055604051620005e28162001c40565b620005ef36878462001dcb565b8152620005fe36848662001dcb565b60208201528460408201524260608201528789526008602052604089209080518051906001600160401b038211620008c65781906200063e855462001bd1565b601f811162000954575b50602090601f8311600114620008e6578d92620008da575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211620008c6576200069b600185015462001bd1565b601f81116200087c575b506020908c601f841160011462000805579260039492819260609592620007f9575b505060001982861b1c1916600191821b17908501555b60408101516002850155015191015533885260096020526040882080549068010000000000000000821015620007e557916040809a6200072e846200078c98979660016200077d9701815562001e1e565b81549060031b908d821b91600019901b1916179055338152600a6020522060208b5180928a8583378a820190815203019020600160ff19825416179055895196608088526080880191620020aa565b918583036020870152620020aa565b90600435868401526060830152837f36b9329ca62bde49b750d7ab93525ccc2ff4ced5c2745cd242894377ec4b5d0560018060a01b038516938033940390a4600160025582519182526001600160a01b03166020820152f35b634e487b7160e01b8a52604160045260248afd5b015190503880620006c7565b5090600185018d5260208d20918d5b601f1985168110620008635750926003949260019260609583601f198116106200084a575b505050811b016001850155620006dd565b015160001983881b60f8161c1916905538808062000839565b9192602060018192868501518155019401920162000814565b600185018d5260208d20601f840160051c810160208510620008be575b601f830160051c82018110620008b1575050620006a5565b6000815560010162000899565b508062000899565b634e487b7160e01b8c52604160045260248cfd5b01519050388062000660565b9250848d5260208d20908d935b601f198416851062000938576001945083601f198116106200091e575b505050811b01825562000675565b015160001960f88460031b161c1916905538808062000910565b81810151835560209485019460019093019290910190620008f3565b909150848d5260208d20601f840160051c8101602085106200099f575b90849392915b601f830160051c820181106200098f57505062000648565b6000815585945060010162000977565b508062000971565b634e487b7160e01b89526041600452602489fd5b634e487b7160e01b87526011600452602487fd5b620009ec915060203d602011620004fa57620004ea818362001c5c565b3862000341565b6040513d89823e3d90fd5b6040516365d7bc1d60e01b8152600490fd5b604051631124f78b60e01b8152600490fd5b50600a8511620002ac565b60405163680b6caf60e01b8152600490fd5b50603283116200029d565b604051630692acc560e51b8152600490fd5b604051632ca2f52b60e11b8152600490fd5b8580fd5b8380fd5b5080fd5b80fd5b503462000a7a57604036600319011262000a7a5762000a9b62001d7c565b6024356001600160401b03811162000af95791602060ff92604062000ac68396369060040162001e4d565b6001600160a01b039093168552600a84529320604051938492908190843782019081520301902054166040519015158152f35b8280fd5b503462000a7a578060031936011262000a7a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503462000a7a57606036600319011262000a7a5762000b6262001d7c565b62000b6c62001d98565b3360009081527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd46602090815260409091205460443591907fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff161562000d0657506001600160a01b0383811694851562000cf457169281838562000c5d57878093508092508091885af13d1562000c57573d62000c0b8162001daf565b9062000c1b604051928362001c5c565b815286833d92013e5b15620004ba577ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504915b604051908152a380f35b62000c24565b60405163a9059cbb60e01b81526001600160a01b0393909316600484015260248301528160448189885af190811562000ce957869162000cc7575b5015620004ba577ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f38833285049162000c4d565b62000ce29150823d8411620004fa57620004ea818362001c5c565b3862000c98565b6040513d88823e3d90fd5b60405163e6c4247b60e01b8152600490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b503462000a7a578060031936011262000a7a5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b503462000a7a578060031936011262000a7a576020604051600a8152f35b503462000a7a578060031936011262000a7a57602060405160128152f35b503462000a7a57604036600319011262000a7a5762000de260043562000dc262001d98565b908084528360205262000ddc600160408620015462001eda565b62001f80565b5080f35b503462000a7a578060031936011262000a7a576020604051670de0b6b3a76400008152f35b503462000a7a578060031936011262000a7a5760206040517f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b28152f35b503462000a7a57604036600319011262000a7a5762000e6662001d7c565b6001600160a01b031681526009602052604081208054602435929083101562000a7a57602062000e97848462001e1e565b90546040519160031b1c8152f35b503462000a7a57602036600319011262000a7a57604060a0916004358152600760205220600180831b03808254169160ff600260018301549201541691604051938452811660208401526001600160581b0381851c16604084015260f81c606083015215156080820152f35b503462000a7a5760208060031936011262000a76576004359062000f3462002069565b62000f3e62002088565b8115620010de57670de0b6b3a764000062000f5c6003548462001ff6565b6040516323b872dd60e01b81523360048201523060248201526044810185905291900491906001600160a01b03908281606481897f000000000000000000000000000000000000000000000000000000000000000087165af190811562000ce9578691620010bc575b5015620004ba57338552600582526040852062000fe48582546200205b565b905562000ff4846006546200205b565b60065560405163a9059cbb60e01b8152336004820152602481018490529082908290604490829089907f0000000000000000000000000000000000000000000000000000000000000000165af1908115620010b15785916200108f575b5015620004ba576040519283528201527f9f7ba93b5a3c052166a93cfb443d72d1fec4f82bb913b1383b8f26c10fb7941e60403392a2600160025580f35b620010aa9150823d8411620004fa57620004ea818362001c5c565b3862001051565b6040513d87823e3d90fd5b620010d79150833d8511620004fa57620004ea818362001c5c565b3862000fc5565b604051631f2a200560e01b8152600490fd5b503462000a7a578060031936011262000a7a576020600454604051908152f35b503462000a7a578060031936011262000a7a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503462000a7a578060031936011262000a7a576020600654604051908152f35b503462000a7a578060031936011262000a7a57602090604051908152f35b503462000a7a57604036600319011262000a7a576040620011b562001d98565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503462000a7a578060031936011262000a7a576020604051683635c9adc5dea000008152f35b503462000a7a578060031936011262000a7a57602060405160328152f35b503462000a7a578060031936011262000a7a576200124562001e7d565b6200124f62002069565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503462000a7a57602036600319011262000a7a576020670de0b6b3a7640000620012b760035460043562001ff6565b04604051908152f35b503462000a7a578060031936011262000a7a576020600b54604051908152f35b503462000a7a57620012f23662001e07565b90620012fd62002069565b6200130762002088565b8115620010de57801580156200153b575b6200152957808352602060078152604084209060ff60028301541615620015175782855260088152620013b060408620604051620013568162001c40565b620013618262001c7e565b8152620013716001830162001c7e565b8482015260606003600284015493604084019485520154910152620013a76001600160581b03600186015460a01c168762001ff6565b90519062002020565b9182600b54106200150557546001600160a01b03908116803b15620015015760405163079cc67960e41b8152336004820152602481018790529087908290604490829084905af18015620009f357620014d0575b506200141383600b54620020cb565b600b5560405163a9059cbb60e01b815233600482015260248101849052908290829060449082908a907f0000000000000000000000000000000000000000000000000000000000000000165af190811562000ce9578691620014ae575b5015620004ba576040519384528301527fefd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca660403393a3600160025580f35b620014c99150823d8411620004fa57620004ea818362001c5c565b3862001470565b6001600160401b038197929711620014ed57604052943862001404565b634e487b7160e01b82526041600452602482fd5b8680fd5b6040516331d2f70960e01b8152600490fd5b6040516307350d3b60e11b8152600490fd5b60405163bb97cc9b60e01b8152600490fd5b5060045481101562001318565b503462000a7a576020908160031936011262000a7a5760043591604051620015708162001c0e565b82815282828201528260408201528260609181838201526080015282816040516200159b8162001c40565b8181528185820152826040820152015283835260078252604083209160405193620015c68562001c0e565b600160a01b600190039586855416865260018501549383870194888116865260408801936001600160581b0397888360a01c168652838a019260f81c83526002015460ff169360808a0194151585528152600886526040902096604051946200162f8662001c40565b6200163a8962001c7e565b86526200164a60018a0162001c7e565b968087019788528b60028b01549a604089019b8c5260030154998689019a8b526040519d8e9d51168d525116908b0152511660408901525160ff1690870152511515608086015260a0850160c090525160c08501608090526101408501620016b29162001d55565b905184820360bf190160e0860152620016cc919062001d55565b9151610100840152516101208301520390f35b503462000a7a578060031936011262000a7a57602060ff600154166040519015158152f35b503462000a7a5760208060031936011262000a76576001600160a01b036200172b62001d7c565b168252600981526040822060405192838383549182815201908193835284832090835b818110620017a757505050846200176791038562001c5c565b60405193838594850191818652518092526040850193925b8281106200178f57505050500390f35b8351855286955093810193928101926001016200177f565b8254845292860192600192830192016200174e565b503462000a7a578060031936011262000a7a57620017d962001e7d565b60015460ff8116156200181a5760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b503462000a7a5760206200184b620018443662001e07565b90620020d9565b604051908152f35b503462000a7a57604036600319011262000a7a576200187162001d98565b336001600160a01b03821603620018905762000de29060043562001f80565b60405163334bd91960e11b8152600490fd5b503462000a7a57602036600319011262000a7a576004357f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2808352826020526040832033845260205260ff6040842054161562000d06575080156200193b5760407fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d191691600354908060035582519182526020820152a180f35b6040516314cee7cd60e11b8152600490fd5b503462000a7a57604036600319011262000a7a5762000de26004356200197262001d98565b90808452836020526200198c600160408620015462001eda565b62001f01565b503462000a7a57602036600319011262000a7a57600160406020926004358152808452200154604051908152f35b503462000a7a578060031936011262000a7a576020600354604051908152f35b503462000a7a578060031936011262000a7a5760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b503462000a7a57604036600319011262000a7a5762001a3b62001d7c565b6024356001600160401b03811162000af9573660238201121562000af957602060ff926040829562001a7c62001aa395369060248160040135910162001dcb565b6001600160a01b039093168152600a84522060405182519094859382908590870162001d30565b82019081520301902054166040519015158152f35b503462000a7a57602036600319011262000a7a576020906040906001600160a01b0362001ae462001d7c565b168152600583522054604051908152f35b503462000a7a57602036600319011262000a7a57604062001b5991600435815260086020522062001b268162001c7e565b9062001b356001820162001c7e565b62001b68600360028401549301549160405195869560808752608087019062001d55565b90858203602087015262001d55565b91604084015260608301520390f35b90503462000a7657602036600319011262000a765760043563ffffffff60e01b811680910362000af95760209250637965db0b60e01b811490811562001bbf575b5015158152f35b6301ffc9a760e01b1490503862001bb8565b90600182811c9216801562001c03575b602083101462001bed57565b634e487b7160e01b600052602260045260246000fd5b91607f169162001be1565b60a081019081106001600160401b0382111762001c2a57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111762001c2a57604052565b90601f801991011681019081106001600160401b0382111762001c2a57604052565b906040519182600082549262001c948462001bd1565b90818452600194858116908160001462001d0b575060011462001cc4575b505062001cc29250038362001c5c565b565b9093915060005260209081600020936000915b81831062001cf257505062001cc29350820101388062001cb2565b8554888401850152948501948794509183019162001cd7565b91505062001cc294506020925060ff191682840152151560051b820101388062001cb2565b60005b83811062001d445750506000910152565b818101518382015260200162001d33565b9060209162001d708151809281855285808601910162001d30565b601f01601f1916010190565b600435906001600160a01b038216820362001d9357565b600080fd5b602435906001600160a01b038216820362001d9357565b6001600160401b03811162001c2a57601f01601f191660200190565b92919262001dd98262001daf565b9162001de9604051938462001c5c565b82948184528183011162001d93578281602093846000960137010152565b604090600319011262001d93576004359060243590565b805482101562001e375760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f8401121562001d93578235916001600160401b03831162001d93576020838186019501011162001d9357565b3360009081527ff7c9542c591017a21c74b6f3fab6263c7952fc0aaf9db4c22a2a04ddc7f8674f60205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff161562000d065750565b80600052600060205260406000203360005260205260ff604060002054161562000d065750565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054161560001462001f7b57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541660001462001f7b5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b818102929181159184041417156200200a57565b634e487b7160e01b600052601160045260246000fd5b81156200202b570490565b634e487b7160e01b600052601260045260246000fd5b9081602091031262001d935751801515810362001d935790565b919082018092116200200a57565b60ff600154166200207657565b60405163d93c066560e01b8152600490fd5b6002805414620020985760028055565b604051633ee5aeb560e01b8152600490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b919082039182116200200a57565b80158015620021d8575b620021d157600090808252600760205260409182812090835192620021088462001c0e565b60018060a01b03938484541681526001840154948516602082015260ff6002878301956001600160581b0397888160a01c16885260f81c6060850152015416159060808215910152620021c857815260086020528381209380516200216d8162001c40565b620021788662001c7e565b8152620021886001870162001c7e565b602082015260606003600288015493830197848952015491015215620021c0575092620013a791620021bd9451169062001ff6565b90565b935050505090565b50935050505090565b5050600090565b50600454811015620020e356fe604060e08152346200047c5762001301803803806200001e8162000481565b928339810160e0828203126200047c5781516001600160401b0392908381116200047c578262000050918301620004a7565b9260209283830151908282116200047c576200006e918401620004a7565b90858301519260ff841684036200047c57606081015193620000936080830162000519565b9660c0620000a460a0850162000519565b9301519381518181116200036d576003908154906001948583811c9316801562000471575b8c8410146200045b5781908c601f9485811162000402575b50508c908483116001146200038f5760009262000383575b505060001982851b1c191690851b1782555b87519283116200036d5760049788548581811c9116801562000362575b8c8210146200034d57908b82848796959411620002f0575b50508b918411600114620002855760009362000279575b505082841b92600019911b1c19161785555b6001600160a01b039788169788156200026257600580546001600160a01b031981168b179091558991167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38060065560ff19600854161760085560805260a05260c052600254908282018092116200024d575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610dd290816200052f823960805181610819015260a05181818161025801526105c3015260c051816102200152f35b601190634e487b7160e01b6000525260246000fd5b8951631e4fbdf760e01b8152600081880152602490fd5b01519150388062000157565b60008a81528c812087965093929190601f198616908e5b828210620002d85750508511620002bd575b50505050811b01855562000169565b01519060f884600019921b161c1916905538808080620002ae565b83850151875589989096019593840193018e6200029c565b9091929394508a60005283826000209181880160051c830193881062000343575b9188918897969594930160051c01915b8281106200033357508d915062000140565b6000815587965088910162000321565b9250819262000311565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000128565b634e487b7160e01b600052604160045260246000fd5b015190503880620000f9565b879350908d91601f1984168760005283600020936000905b828210620003e05750508411620003c7575b505050811b0182556200010b565b015160001983871b60f8161c19169055388080620003b9565b91929395968291958786015181550195019301908f918a9695949392620003a7565b909192508560005284826000209181860160051c830193861062000451575b918991869594930160051c01915b8281106200044157508e9150620000e1565b600081558594508991016200042f565b9250819262000421565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000c9565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200036d57604052565b919080601f840112156200047c5782516001600160401b0381116200036d57602090620004dd601f8201601f1916830162000481565b928184528282870101116200047c5760005b8181106200050557508260009394955001015290565b8581018301518482018401528201620004ef565b51906001600160a01b03821682036200047c5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109e657508063095ea7b31461093d57806318160ddd1461091e57806323b872dd1461083d578063313ce567146107ff57806342966c68146107605780635dc96d161461073c57806370a0823114610705578063715018a6146106a857806379cc67901461059b5780637b2c835f146105395780638da5cb5b1461051057806395d89b411461040c578063a9059cbb146103db578063ad1329d114610287578063c45a015514610243578063d7c81b5514610208578063d89135cd146101e9578063dd62ed3e146101915763f2fde38b146100ff57600080fd5b3461018d57602036600319011261018d57610118610b25565b90610121610b75565b6001600160a01b03918216928315610177575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101e557806003193601126101e5576101ab610b25565b6001600160a01b0360243581811692908390036101e1579160209491849316825260018552828220908252845220549051908152f35b8480fd5b5080fd5b5050346101e557816003193601126101e5576020906007549051908152f35b5050346101e557816003193601126101e557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101e557816003193601126101e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461018d5761029736610b40565b91906102a1610b75565b6001600160a01b039081169182156103cb57869392911680610357575082809281925af13d15610352573d67ffffffffffffffff811161033f578251906102f2601f8201601f191660200183610ba1565b81528460203d92013e5b1561030657505080f35b906020606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b855260418452602485fd5b6102fc565b9460209360449293968651978895869463a9059cbb60e01b865285015260248401525af19081156103c2575061038b575080f35b6020813d82116103ba575b816103a360209383610ba1565b810103126101e55751801515036103b75780f35b80fd5b3d9150610396565b513d84823e3d90fd5b8451631f2a200560e01b81528690fd5b5050346101e557806003193601126101e5576020906104056103fb610b25565b6024359033610bd9565b5160018152f35b509190346101e557816003193601126101e557805191809380549160019083821c92828516948515610506575b60209586861081146104f3578589529081156104cf5750600114610477575b6104738787610469828c0383610ba1565b5191829182610adc565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104bc57505050826104739461046992820101943880610458565b805486850188015292860192810161049e565b60ff19168887015250505050151560051b8301019250610469826104733880610458565b634e487b7160e01b845260228352602484fd5b93607f1693610439565b5050346101e557816003193601126101e55760055490516001600160a01b039091168152602090f35b503461018d57602036600319011261018d57359081151580920361018d577f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd91602091610584610b75565b60ff196008541660ff83161760085551908152a180f35b50903461018d578060031936011261018d576105b5610b25565b602435906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811633036106985760ff6008541615610688576105fd610d79565b8215610678578116938486528560205282848720541061066a575090610654817fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00949361064c82600754610cb7565b600755610cda565b60075482519182526020820152a2600160065580f35b8351631e9acf1760e31b8152fd5b50505051631f2a200560e01b8152fd5b5050505163be20705f60e01b8152fd5b5050505163a9c455db60e01b8152fd5b83346103b757806003193601126103b7576106c1610b75565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101e55760203660031901126101e55760209181906001600160a01b0361072d610b25565b16815280845220549051908152f35b5050346101e557816003193601126101e55760209060ff6008541690519015158152f35b50903461018d57602036600319011261018d5781359160ff60085416156107f157610789610d79565b82156107e357507fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00906107be83600754610cb7565b6007556107cb8333610cda565b600754815193845260208401523392a2600160065580f35b9051631f2a200560e01b8152fd5b905163be20705f60e01b8152fd5b5050346101e557816003193601126101e5576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b508290346101e55761084e36610b40565b6001600160a01b0383168086526001602090815287872033885290528686205491959294600019831061088a575b602088610405898989610bd9565b8683106108f25781156108db5733156108c4575082526001602090815286832033845281529186902090859003905582906104058761087c565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101e557816003193601126101e5576020906002549051908152f35b503461018d578160031936011261018d57610956610b25565b6024359033156109cf576001600160a01b03169182156109b857508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b9291905034610ad85783600319360112610ad857600354600181811c9186908281168015610ace575b6020958686108214610abb5750848852908115610a995750600114610a40575b6104738686610469828b0383610ba1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610a86575050508261047394610469928201019438610a2f565b8054868501880152928601928101610a69565b60ff191687860152505050151560051b83010192506104698261047338610a2f565b634e487b7160e01b845260229052602483fd5b93607f1693610a0f565b8380fd5b6020808252825181830181905290939260005b828110610b1157505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610aef565b600435906001600160a01b0382168203610b3b57565b600080fd5b6060906003190112610b3b576001600160a01b03906004358281168103610b3b57916024359081168103610b3b579060443590565b6005546001600160a01b03163303610b8957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff821117610bc357604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b03808416928315610c9e5716928315610c855760009083825281602052604082205490838210610c53575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211610cc457565b634e487b7160e01b600052601160045260246000fd5b906001600160a01b038216908115610c9e5760009282845283602052604084205490828210610d475750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b600260065414610d8a576002600655565b604051633ee5aeb560e01b8152600490fdfea26469706673582212209f1c438f5f60eea04008a1ef860d670535e4031d5538854a94abe019fbceb6d864736f6c63430008140033a26469706673582212201e52601d7d704f28923316158ac2fca8add36e58459de307cb22c75af8ba169864736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0xC0 CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x1F PUSH3 0x38EC CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x128 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x123 JUMPI PUSH3 0x5A PUSH1 0x20 PUSH3 0x52 DUP4 PUSH3 0x13E JUMP JUMPDEST SWAP3 ADD PUSH3 0x13E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP1 ISZERO DUP1 ISZERO PUSH3 0x118 JUMPI JUMPDEST PUSH3 0x106 JUMPI PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH3 0x9C CALLER PUSH3 0x153 JUMP JUMPDEST POP PUSH3 0xA8 CALLER PUSH3 0x1D3 JUMP JUMPDEST POP PUSH3 0xB4 CALLER PUSH3 0x275 JUMP JUMPDEST POP PUSH3 0xC0 CALLER PUSH3 0x312 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x351C SWAP1 DUP2 PUSH3 0x3B0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xB15 ADD MSTORE PUSH2 0xF92 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x30F ADD MSTORE DUP2 DUP2 PUSH2 0x471 ADD MSTORE DUP2 DUP2 PUSH2 0x101F ADD MSTORE DUP2 DUP2 PUSH2 0x1128 ADD MSTORE PUSH2 0x143E ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP3 DUP3 AND ISZERO PUSH3 0x85 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x123 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x1CF JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x38CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x43393DE9C580ACBB6A28CD9D65B7EC5698943D0E6FEC07062B42A76C1FB8AEB9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 SWAP1 PUSH1 0xFF AND PUSH3 0x270 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x38CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xF7C9542C591017A21C74B6F3FAB6263C7952FC0AAF9DB4C22A2A04DDC7F8674F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0x270 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x38CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND PUSH3 0x270 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x38CC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x1B77 JUMPI POP DUP1 PUSH4 0x5A61954 EQ PUSH3 0x1AF5 JUMPI DUP1 PUSH4 0x7819945 EQ PUSH3 0x1AB8 JUMPI DUP1 PUSH4 0x1BF44CB0 EQ PUSH3 0x1A1D JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH3 0x19E0 JUMPI DUP1 PUSH4 0x238D4AF8 EQ PUSH3 0x19C0 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH3 0x1992 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH3 0x194D JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH3 0x18A2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH3 0x1853 JUMPI DUP1 PUSH4 0x3B420A73 EQ PUSH3 0x182C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH3 0x17BC JUMPI DUP1 PUSH4 0x546FDAD4 EQ PUSH3 0x1704 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH3 0x16DF JUMPI DUP1 PUSH4 0x5E79C1DC EQ PUSH3 0x1548 JUMPI DUP1 PUSH4 0x5ED6C1DB EQ PUSH3 0x12E0 JUMPI DUP1 PUSH4 0x6D8554E2 EQ PUSH3 0x12C0 JUMPI DUP1 PUSH4 0x74B334C5 EQ PUSH3 0x1288 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH3 0x1228 JUMPI DUP1 PUSH4 0x86074985 EQ PUSH3 0x120A JUMPI DUP1 PUSH4 0x8760550D EQ PUSH3 0x11E4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH3 0x1195 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH3 0x1177 JUMPI DUP1 PUSH4 0xAA6450CE EQ PUSH3 0x1157 JUMPI DUP1 PUSH4 0xAE5014B1 EQ PUSH3 0x1110 JUMPI DUP1 PUSH4 0xB135BBB0 EQ PUSH3 0x10F0 JUMPI DUP1 PUSH4 0xBEC697DB EQ PUSH3 0xF11 JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH3 0xEA5 JUMPI DUP1 PUSH4 0xC21C64A7 EQ PUSH3 0xE48 JUMPI DUP1 PUSH4 0xCB327B8B EQ PUSH3 0xE0B JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH3 0xDE6 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH3 0xD9D JUMPI DUP1 PUSH4 0xDF525B7D EQ PUSH3 0xD7F JUMPI DUP1 PUSH4 0xE3D89171 EQ PUSH3 0xD61 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH3 0xD24 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH3 0xB44 JUMPI DUP1 PUSH4 0xECDF8FC4 EQ PUSH3 0xAFD JUMPI DUP1 PUSH4 0xF7157558 EQ PUSH3 0xA7D JUMPI PUSH4 0xFD44D274 EQ PUSH3 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA76 JUMPI PUSH3 0x22B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA72 JUMPI PUSH3 0x24E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH3 0xA6E JUMPI PUSH3 0x26A PUSH3 0x2069 JUMP JUMPDEST PUSH3 0x274 PUSH3 0x2088 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x4 CALLDATALOAD LT PUSH3 0xA5C JUMPI PUSH1 0x12 PUSH1 0xFF DUP6 AND GT PUSH3 0xA4A JUMPI DUP3 ISZERO DUP1 ISZERO PUSH3 0xA3F JUMPI JUMPDEST PUSH3 0xA2D JUMPI DUP5 ISZERO DUP1 ISZERO PUSH3 0xA22 JUMPI JUMPDEST PUSH3 0xA10 JUMPI CALLER DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP8 DUP8 DUP4 CALLDATACOPY DUP8 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH3 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x9F3 JUMPI DUP8 SWAP2 PUSH3 0x9CF JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH3 0x358 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH3 0x205B JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x4 SLOAD SWAP5 PUSH1 0x0 NOT DUP7 EQ PUSH3 0x9BB JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x4 SSTORE PUSH1 0x4D PUSH1 0xFF DUP7 AND GT PUSH3 0x9BB JUMPI PUSH8 0xDE0B6B3A7640000 PUSH3 0x399 PUSH1 0xFF DUP8 AND PUSH1 0xA EXP PUSH1 0x4 CALLDATALOAD PUSH3 0x1FF6 JUMP JUMPDEST DIV SWAP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1301 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1301 DUP4 ADD GT OR PUSH3 0x9A7 JUMPI PUSH2 0x1301 PUSH3 0x21E6 DUP3 CODECOPY PUSH1 0xE0 PUSH2 0x1301 DUP3 ADD MSTORE DUP1 PUSH3 0x3FB PUSH3 0x3E3 PUSH1 0xE0 PUSH2 0x1301 DUP5 ADD ADD DUP10 DUP7 PUSH3 0x20AA JUMP JUMPDEST PUSH2 0x1301 DUP4 ADD DUP2 SUB PUSH1 0x20 PUSH2 0x1301 DUP6 ADD ADD MSTORE DUP6 DUP8 PUSH3 0x20AA JUMP JUMPDEST PUSH1 0xFF DUP10 AND PUSH2 0x1301 DUP4 ADD PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD DUP11 SWAP1 MSTORE SUB SWAP1 DUP10 CREATE DUP1 PUSH3 0x50E JUMPI DUP9 PUSH3 0x440 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH3 0x20CB JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x502 JUMPI SWAP2 PUSH3 0x4CC JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0xB5D57B PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0x4F3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x4FA JUMPI JUMPDEST PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x2041 JUMP JUMPDEST DUP2 PUSH3 0x4A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP7 PUSH1 0xFF SWAP1 PUSH3 0x52C DUP4 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x2 PUSH1 0x40 DUP12 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0xA0 SHL PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xA0 SHL AND PUSH1 0xFF PUSH1 0xF8 SHL PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0xF8 SHL AND SWAP2 OR OR PUSH1 0x1 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH3 0x5E2 DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x5EF CALLDATASIZE DUP8 DUP5 PUSH3 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH3 0x5FE CALLDATASIZE DUP5 DUP7 PUSH3 0x1DCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x8C6 JUMPI DUP2 SWAP1 PUSH3 0x63E DUP6 SLOAD PUSH3 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x954 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8E6 JUMPI DUP14 SWAP3 PUSH3 0x8DA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x8C6 JUMPI PUSH3 0x69B PUSH1 0x1 DUP6 ADD SLOAD PUSH3 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x87C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP13 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x805 JUMPI SWAP3 PUSH1 0x3 SWAP5 SWAP3 DUP2 SWAP3 PUSH1 0x60 SWAP6 SWAP3 PUSH3 0x7F9 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND PUSH1 0x1 SWAP2 DUP3 SHL OR SWAP1 DUP6 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP9 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x7E5 JUMPI SWAP2 PUSH1 0x40 DUP1 SWAP11 PUSH3 0x72E DUP5 PUSH3 0x78C SWAP9 SWAP8 SWAP7 PUSH1 0x1 PUSH3 0x77D SWAP8 ADD DUP2 SSTORE PUSH3 0x1E1E JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP14 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP12 MLOAD DUP1 SWAP3 DUP11 DUP6 DUP4 CALLDATACOPY DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP10 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP2 PUSH3 0x20AA JUMP JUMPDEST SWAP2 DUP6 DUP4 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH3 0x20AA JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD DUP7 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH32 0x36B9329CA62BDE49B750D7AB93525CCC2FF4CED5C2745CD242894377EC4B5D05 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 DUP1 CALLER SWAP5 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x6C7 JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP6 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 SWAP2 DUP14 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x863 JUMPI POP SWAP3 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x60 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x84A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP6 ADD SSTORE PUSH3 0x6DD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x839 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x814 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x8BE JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x8B1 JUMPI POP POP PUSH3 0x6A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x899 JUMP JUMPDEST POP DUP1 PUSH3 0x899 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x660 JUMP JUMPDEST SWAP3 POP DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x938 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x91E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x675 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x910 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x8F3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x99F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x98F JUMPI POP POP PUSH3 0x648 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x977 JUMP JUMPDEST POP DUP1 PUSH3 0x971 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH3 0x9EC SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x65D7BC1D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1124F78B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xA DUP6 GT PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x680B6CAF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x32 DUP4 GT PUSH3 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x692ACC5 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xA9B PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xAF9 JUMPI SWAP2 PUSH1 0x20 PUSH1 0xFF SWAP3 PUSH1 0x40 PUSH3 0xAC6 DUP4 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP6 MSTORE PUSH1 0xA DUP5 MSTORE SWAP4 KECCAK256 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP5 CALLDATACOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xB62 PUSH3 0x1D7C JUMP JUMPDEST PUSH3 0xB6C PUSH3 0x1D98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0xD06 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP5 DUP6 ISZERO PUSH3 0xCF4 JUMPI AND SWAP3 DUP2 DUP4 DUP6 PUSH3 0xC5D JUMPI DUP8 DUP1 SWAP4 POP DUP1 SWAP3 POP DUP1 SWAP2 DUP9 GAS CALL RETURNDATASIZE ISZERO PUSH3 0xC57 JUMPI RETURNDATASIZE PUSH3 0xC0B DUP2 PUSH3 0x1DAF JUMP JUMPDEST SWAP1 PUSH3 0xC1B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH3 0x1C5C JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH3 0x4BA JUMPI PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH3 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE DUP2 PUSH1 0x44 DUP2 DUP10 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0xCC7 JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 PUSH3 0xC4D JUMP JUMPDEST PUSH3 0xCE2 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xDE2 PUSH1 0x4 CALLDATALOAD PUSH3 0xDC2 PUSH3 0x1D98 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH3 0xDDC PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH3 0x1EDA JUMP JUMPDEST PUSH3 0x1F80 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xE66 PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH3 0xE97 DUP5 DUP5 PUSH3 0x1E1E JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 DUP4 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB DUP2 DUP6 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xF8 SHR PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH3 0xF34 PUSH3 0x2069 JUMP JUMPDEST PUSH3 0xF3E PUSH3 0x2088 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x10DE JUMPI PUSH8 0xDE0B6B3A7640000 PUSH3 0xF5C PUSH1 0x3 SLOAD DUP5 PUSH3 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 DIV SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP2 PUSH1 0x64 DUP2 DUP10 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0x10BC JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI CALLER DUP6 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH3 0xFE4 DUP6 DUP3 SLOAD PUSH3 0x205B JUMP JUMPDEST SWAP1 SSTORE PUSH3 0xFF4 DUP5 PUSH1 0x6 SLOAD PUSH3 0x205B JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP10 SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x10B1 JUMPI DUP6 SWAP2 PUSH3 0x108F JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x9F7BA93B5A3C052166A93CFB443D72D1FEC4F82BB913B1383B8F26C10FB7941E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH3 0x10AA SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x10D7 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH3 0x11B5 PUSH3 0x1D98 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1245 PUSH3 0x1E7D JUMP JUMPDEST PUSH3 0x124F PUSH3 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH8 0xDE0B6B3A7640000 PUSH3 0x12B7 PUSH1 0x3 SLOAD PUSH1 0x4 CALLDATALOAD PUSH3 0x1FF6 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH3 0x12F2 CALLDATASIZE PUSH3 0x1E07 JUMP JUMPDEST SWAP1 PUSH3 0x12FD PUSH3 0x2069 JUMP JUMPDEST PUSH3 0x1307 PUSH3 0x2088 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x10DE JUMPI DUP1 ISZERO DUP1 ISZERO PUSH3 0x153B JUMPI JUMPDEST PUSH3 0x1529 JUMPI DUP1 DUP4 MSTORE PUSH1 0x20 PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND ISZERO PUSH3 0x1517 JUMPI DUP3 DUP6 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH3 0x13B0 PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x40 MLOAD PUSH3 0x1356 DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x1361 DUP3 PUSH3 0x1C7E JUMP JUMPDEST DUP2 MSTORE PUSH3 0x1371 PUSH1 0x1 DUP4 ADD PUSH3 0x1C7E JUMP JUMPDEST DUP5 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x40 DUP5 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH3 0x13A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0xA0 SHR AND DUP8 PUSH3 0x1FF6 JUMP JUMPDEST SWAP1 MLOAD SWAP1 PUSH3 0x2020 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xB SLOAD LT PUSH3 0x1505 JUMPI SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 EXTCODESIZE ISZERO PUSH3 0x1501 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x9F3 JUMPI PUSH3 0x14D0 JUMPI JUMPDEST POP PUSH3 0x1413 DUP4 PUSH1 0xB SLOAD PUSH3 0x20CB JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0x14AE JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0xEFD5D515529A8F76C5944B1D953CDE6B2C61C8B81E144C964AEB038714CABCA6 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH3 0x14C9 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x1470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP8 SWAP3 SWAP8 GT PUSH3 0x14ED JUMPI PUSH1 0x40 MSTORE SWAP5 CODESIZE PUSH3 0x1404 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31D2F709 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7350D3B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB97CC9B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x1318 JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD PUSH3 0x1570 DUP2 PUSH3 0x1C0E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP3 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE DUP3 DUP2 PUSH1 0x40 MLOAD PUSH3 0x159B DUP2 PUSH3 0x1C40 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP2 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP4 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH3 0x15C6 DUP6 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP6 DUP7 DUP6 SLOAD AND DUP7 MSTORE PUSH1 0x1 DUP6 ADD SLOAD SWAP4 DUP4 DUP8 ADD SWAP5 DUP9 DUP2 AND DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP8 DUP9 DUP4 PUSH1 0xA0 SHR AND DUP7 MSTORE DUP4 DUP11 ADD SWAP3 PUSH1 0xF8 SHR DUP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP4 PUSH1 0x80 DUP11 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE DUP2 MSTORE PUSH1 0x8 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH3 0x162F DUP7 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x163A DUP10 PUSH3 0x1C7E JUMP JUMPDEST DUP7 MSTORE PUSH3 0x164A PUSH1 0x1 DUP11 ADD PUSH3 0x1C7E JUMP JUMPDEST SWAP7 DUP1 DUP8 ADD SWAP8 DUP9 MSTORE DUP12 PUSH1 0x2 DUP12 ADD SLOAD SWAP11 PUSH1 0x40 DUP10 ADD SWAP12 DUP13 MSTORE PUSH1 0x3 ADD SLOAD SWAP10 DUP7 DUP10 ADD SWAP11 DUP12 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 MLOAD AND DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD AND PUSH1 0x40 DUP10 ADD MSTORE MLOAD PUSH1 0xFF AND SWAP1 DUP8 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD PUSH1 0xC0 SWAP1 MSTORE MLOAD PUSH1 0xC0 DUP6 ADD PUSH1 0x80 SWAP1 MSTORE PUSH2 0x140 DUP6 ADD PUSH3 0x16B2 SWAP2 PUSH3 0x1D55 JUMP JUMPDEST SWAP1 MLOAD DUP5 DUP3 SUB PUSH1 0xBF NOT ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH3 0x16CC SWAP2 SWAP1 PUSH3 0x1D55 JUMP JUMPDEST SWAP2 MLOAD PUSH2 0x100 DUP5 ADD MSTORE MLOAD PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x172B PUSH3 0x1D7C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH3 0x17A7 JUMPI POP POP POP DUP5 PUSH3 0x1767 SWAP2 SUB DUP6 PUSH3 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH3 0x178F JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x177F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x174E JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x17D9 PUSH3 0x1E7D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH3 0x181A JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH3 0x184B PUSH3 0x1844 CALLDATASIZE PUSH3 0x1E07 JUMP JUMPDEST SWAP1 PUSH3 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1871 PUSH3 0x1D98 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x1890 JUMPI PUSH3 0xDE2 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH3 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH3 0xD06 JUMPI POP DUP1 ISZERO PUSH3 0x193B JUMPI PUSH1 0x40 PUSH32 0xB38780DDDE1F073D91C150DE2696F3F7085883648BA21CC5EF01029CB21D1916 SWAP2 PUSH1 0x3 SLOAD SWAP1 DUP1 PUSH1 0x3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14CEE7CD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xDE2 PUSH1 0x4 CALLDATALOAD PUSH3 0x1972 PUSH3 0x1D98 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH3 0x198C PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH3 0x1EDA JUMP JUMPDEST PUSH3 0x1F01 JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1A3B PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xAF9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0xAF9 JUMPI PUSH1 0x20 PUSH1 0xFF SWAP3 PUSH1 0x40 DUP3 SWAP6 PUSH3 0x1A7C PUSH3 0x1AA3 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH3 0x1DCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 PUSH1 0x40 MLOAD DUP3 MLOAD SWAP1 SWAP5 DUP6 SWAP4 DUP3 SWAP1 DUP6 SWAP1 DUP8 ADD PUSH3 0x1D30 JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x1AE4 PUSH3 0x1D7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH3 0x1B59 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 PUSH3 0x1B26 DUP2 PUSH3 0x1C7E JUMP JUMPDEST SWAP1 PUSH3 0x1B35 PUSH1 0x1 DUP3 ADD PUSH3 0x1C7E JUMP JUMPDEST PUSH3 0x1B68 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH3 0x1D55 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH3 0x1D55 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH3 0xA76 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH3 0xAF9 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x1BBF JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH3 0x1BB8 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1C03 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1BED JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1BE1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH3 0x1C94 DUP5 PUSH3 0x1BD1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH3 0x1D0B JUMPI POP PUSH1 0x1 EQ PUSH3 0x1CC4 JUMPI JUMPDEST POP POP PUSH3 0x1CC2 SWAP3 POP SUB DUP4 PUSH3 0x1C5C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH3 0x1CF2 JUMPI POP POP PUSH3 0x1CC2 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH3 0x1CB2 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH3 0x1CD7 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1CC2 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH3 0x1CB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1D44 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1D33 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0x1D70 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0x1D30 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1D93 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1D93 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x1C2A JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH3 0x1DD9 DUP3 PUSH3 0x1DAF JUMP JUMPDEST SWAP2 PUSH3 0x1DE9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH3 0x1C5C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH3 0x1D93 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH3 0x1D93 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH3 0x1E37 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x1D93 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x1D93 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH3 0x1D93 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF7C9542C591017A21C74B6F3FAB6263C7952FC0AAF9DB4C22A2A04DDC7F8674F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0xD06 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0xD06 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH3 0x1F7B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH3 0x1F7B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH3 0x200A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x202B JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x1D93 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x1D93 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x200A JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH3 0x2076 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ PUSH3 0x2098 JUMPI PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH3 0x200A JUMPI JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH3 0x21D8 JUMPI JUMPDEST PUSH3 0x21D1 JUMPI PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP2 KECCAK256 SWAP1 DUP4 MLOAD SWAP3 PUSH3 0x2108 DUP5 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP5 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP5 DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 DUP4 ADD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP8 DUP9 DUP2 PUSH1 0xA0 SHR AND DUP9 MSTORE PUSH1 0xF8 SHR PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 DUP3 ISZERO SWAP2 ADD MSTORE PUSH3 0x21C8 JUMPI DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP4 DUP2 KECCAK256 SWAP4 DUP1 MLOAD PUSH3 0x216D DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x2178 DUP7 PUSH3 0x1C7E JUMP JUMPDEST DUP2 MSTORE PUSH3 0x2188 PUSH1 0x1 DUP8 ADD PUSH3 0x1C7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP9 ADD SLOAD SWAP4 DUP4 ADD SWAP8 DUP5 DUP10 MSTORE ADD SLOAD SWAP2 ADD MSTORE ISZERO PUSH3 0x21C0 JUMPI POP SWAP3 PUSH3 0x13A7 SWAP2 PUSH3 0x21BD SWAP5 MLOAD AND SWAP1 PUSH3 0x1FF6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x20E3 JUMP INVALID PUSH1 0x40 PUSH1 0xE0 DUP2 MSTORE CALLVALUE PUSH3 0x47C JUMPI PUSH3 0x1301 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH3 0x47C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x47C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x47C JUMPI PUSH3 0x6E SWAP2 DUP5 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP1 DUP6 DUP4 ADD MLOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH3 0x47C JUMPI PUSH1 0x60 DUP2 ADD MLOAD SWAP4 PUSH3 0x93 PUSH1 0x80 DUP4 ADD PUSH3 0x519 JUMP JUMPDEST SWAP7 PUSH1 0xC0 PUSH3 0xA4 PUSH1 0xA0 DUP6 ADD PUSH3 0x519 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP4 DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP5 DUP6 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x471 JUMPI JUMPDEST DUP13 DUP5 LT EQ PUSH3 0x45B JUMPI DUP2 SWAP1 DUP13 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x402 JUMPI JUMPDEST POP POP DUP13 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x38F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x383 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP3 SSTORE JUMPDEST DUP8 MLOAD SWAP3 DUP4 GT PUSH3 0x36D JUMPI PUSH1 0x4 SWAP8 DUP9 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x362 JUMPI JUMPDEST DUP13 DUP3 LT EQ PUSH3 0x34D JUMPI SWAP1 DUP12 DUP3 DUP5 DUP8 SWAP7 SWAP6 SWAP5 GT PUSH3 0x2F0 JUMPI JUMPDEST POP POP DUP12 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x285 JUMPI PUSH1 0x0 SWAP4 PUSH3 0x279 JUMPI JUMPDEST POP POP DUP3 DUP5 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP8 DUP9 ISZERO PUSH3 0x262 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP12 OR SWAP1 SWAP2 SSTORE DUP10 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 PUSH1 0x6 SSTORE PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x2 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x24D JUMPI POP PUSH1 0x2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP4 MSTORE DUP5 DUP2 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG3 MLOAD PUSH2 0xDD2 SWAP1 DUP2 PUSH3 0x52F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x819 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x258 ADD MSTORE PUSH2 0x5C3 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x220 ADD MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP10 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE DUP13 DUP2 KECCAK256 DUP8 SWAP7 POP SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP15 JUMPDEST DUP3 DUP3 LT PUSH3 0x2D8 JUMPI POP POP DUP6 GT PUSH3 0x2BD JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0x169 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x2AE JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP8 SSTORE DUP10 SWAP9 SWAP1 SWAP7 ADD SWAP6 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x29C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP11 PUSH1 0x0 MSTORE DUP4 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP9 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP9 LT PUSH3 0x343 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x333 JUMPI POP DUP14 SWAP2 POP PUSH3 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP8 SWAP7 POP DUP9 SWAP2 ADD PUSH3 0x321 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x22 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xF9 JUMP JUMPDEST DUP8 SWAP4 POP SWAP1 DUP14 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP8 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x3E0 JUMPI POP POP DUP5 GT PUSH3 0x3C7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x10B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x3B9 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP6 SWAP7 DUP3 SWAP2 SWAP6 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 DUP16 SWAP2 DUP11 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH3 0x3A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP6 PUSH1 0x0 MSTORE DUP5 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP7 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP7 LT PUSH3 0x451 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x441 JUMPI POP DUP15 SWAP2 POP PUSH3 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x42F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x421 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x36D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x47C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x4DD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x47C JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x505 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x4EF JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x47C JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x9E6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x7FF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB25 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1AB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E1 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x297 CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x3CB JUMPI DUP7 SWAP4 SWAP3 SWAP2 AND DUP1 PUSH2 0x357 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x33F JUMPI DUP3 MLOAD SWAP1 PUSH2 0x2F2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 SWAP4 SWAP7 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3C2 JUMPI POP PUSH2 0x38B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3BA JUMPI JUMPDEST DUP2 PUSH2 0x3A3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E5 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x3B7 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x396 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x405 PUSH2 0x3FB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBD9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x506 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x4F3 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x477 JUMPI JUMPDEST PUSH2 0x473 DUP8 DUP8 PUSH2 0x469 DUP3 DUP13 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xADC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x4BC JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x439 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x18D JUMPI PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x584 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP4 AND OR PUSH1 0x8 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x5B5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x698 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x688 JUMPI PUSH2 0x5FD PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x678 JUMPI DUP2 AND SWAP4 DUP5 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP5 DUP8 KECCAK256 SLOAD LT PUSH2 0x66A JUMPI POP SWAP1 PUSH2 0x654 DUP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP5 SWAP4 PUSH2 0x64C DUP3 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xA9C455DB PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x3B7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B7 JUMPI PUSH2 0x6C1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x72D PUSH2 0xB25 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x789 PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7E3 JUMPI POP PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP1 PUSH2 0x7BE DUP4 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x7CB DUP4 CALLER PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x84E CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP8 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x0 NOT DUP4 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x405 DUP10 DUP10 DUP10 PUSH2 0xBD9 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x8F2 JUMPI DUP2 ISZERO PUSH2 0x8DB JUMPI CALLER ISZERO PUSH2 0x8C4 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x405 DUP8 PUSH2 0x87C JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x956 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x9CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x9B8 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0xAD8 JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xAD8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xACE JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xABB JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xA99 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0x473 DUP7 DUP7 PUSH2 0x469 DUP3 DUP12 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xA86 JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA2F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE PUSH2 0xA2F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA0F JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB11 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB3B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBC3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC9E JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC53 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCC4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xD47 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0xD8A JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SHR NUMBER DUP16 PUSH0 PUSH1 0xEE LOG0 BLOCKHASH ADDMOD LOG1 0xEF DUP7 0xD PUSH8 0x535E4031D553885 0x4A SWAP5 0xAB 0xE0 NOT 0xFB 0xCE 0xB6 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE PUSH1 0x1D PUSH30 0x704F28923316158AC2FCA8ADD36E58459DE307CB22C75AF8BA169864736F PUSH13 0x634300081400332F8788117E7E SELFDESTRUCT SAR DUP3 0xE9 0x26 0xEC PUSH26 0x4901D17C78024A50270940304540A733656F0D00000000000000 ","sourceMap":"830:12790:38:-:0;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;2061:21:23;830:12790:38;;;1715:4;;830:12790;1799:1;830:12790;-1:-1:-1;;;;;830:12790:38;;;4225:25;;:51;;;;-1:-1:-1;4221:105:38;;4344:32;;830:12790;;4386:26;4431:42;4462:10;4431:42;:::i;:::-;;4483:41;4462:10;4483:41;:::i;:::-;;4534:35;4462:10;4534:35;:::i;:::-;;4579:38;4462:10;4579:38;:::i;:::-;;830:12790;;;;;;;;4344:32;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4221:105;830:12790;;-1:-1:-1;;;4299:16:38;;1799:1;;4299:16;4225:51;830:12790;;;;4254:22;4225:51;;830:12790;-1:-1:-1;830:12790:38;;;;;;-1:-1:-1;830:12790:38;;;;;-1:-1:-1;830:12790:38;;;;-1:-1:-1;;;;;830:12790:38;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;830:12790:38;4248:1;830:12790;;;;;;;;;;4248:1;;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:19;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;830:12790:38;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;830:12790:38;2954:6:0;830:12790:38;;;;;;;;;;2954:6:0;;830:12790:38;1022:30;;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;830:12790:38;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;830:12790:38;2954:6:0;830:12790:38;;;;;;;;;;2954:6:0;;830:12790:38;1096:24;;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;830:12790:38;6424:11:0;:::o;6179:316::-;-1:-1:-1;;;;;830:12790:38;2954:6:0;830:12790:38;;;;;;;;;;2954:6:0;;830:12790:38;1167:27;;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;830:12790:38;6424:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7548,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_28252":{"entryPoint":7576,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":7627,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":7757,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256t_uint256":{"entryPoint":7687,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":7509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":8362,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_string":{"entryPoint":7599,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8283,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":8224,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8182,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8395,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":7294,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7472,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7121,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7260,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_28258":{"entryPoint":7182,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_28259":{"entryPoint":7232,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateXpReturn":{"entryPoint":8409,"id":12243,"parameterSlots":2,"returnSlots":1},"fun_checkRole":{"entryPoint":7898,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_28256":{"entryPoint":7805,"id":93,"parameterSlots":0,"returnSlots":0},"fun_grantRole":{"entryPoint":7937,"id":256,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":8328,"id":4046,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":8297,"id":3951,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":8064,"id":294,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_uint256_dyn":{"entryPoint":7710,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"11401":[{"length":32,"start":2837},{"length":32,"start":3986}],"11404":[{"length":32,"start":783},{"length":32,"start":1137},{"length":32,"start":4127},{"length":32,"start":4392},{"length":32,"start":5182}]},"linkReferences":{},"object":"60808060405260043610156200001457600080fd5b600090813560e01c90816301ffc9a71462001b775750806305a619541462001af5578063078199451462001ab85780631bf44cb01462001a1d57806320df435914620019e0578063238d4af814620019c0578063248a9ca314620019925780632f2ff15d146200194d57806334fcf43714620018a257806336568abe14620018535780633b420a73146200182c5780633f4ba83a14620017bc578063546fdad414620017045780635c975abb14620016df5780635e79c1dc14620015485780635ed6c1db14620012e05780636d8554e214620012c057806374b334c514620012885780638456cb59146200122857806386074985146200120a5780638760550d14620011e457806391d148541462001195578063a217fddf1462001177578063aa6450ce1462001157578063ae5014b11462001110578063b135bbb014620010f0578063bec697db1462000f11578063bf034b691462000ea5578063c21c64a71462000e48578063cb327b8b1462000e0b578063ccd34cd51462000de6578063d547741f1462000d9d578063df525b7d1462000d7f578063e3d891711462000d61578063e63ab1e91462000d24578063e63ea4081462000b44578063ecdf8fc41462000afd578063f71575581462000a7d5763fd44d27414620001f657600080fd5b3462000a7a57608036600319011262000a7a576024356001600160401b03811162000a76576200022b90369060040162001e4d565b906044356001600160401b03811162000a72576200024e90369060040162001e4d565b9290916064359260ff8416840362000a6e576200026a62002069565b6200027462002088565b683635c9adc5dea000006004351062000a5c57601260ff85161162000a4a578215801562000a3f575b62000a2d578415801562000a22575b62000a1057338652600a60205260ff604087206020604051809287878337878201908152030190205416620009fe576040516323b872dd60e01b8152336004808301919091523060248301523560448201526020816064818a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115620009f3578791620009cf575b5015620004ba5762000358600435600b546200205b565b600b55600454946000198614620009bb5760018601600455604d60ff861611620009bb57670de0b6b3a76400006200039960ff8716600a0a60043562001ff6565b0492604051806113018101106001600160401b0361130183011117620009a757611301620021e6823960e061130182015280620003fb620003e360e06113018401018986620020aa565b611301830181036020611301850101528587620020aa565b60ff891661130183016040810191909152606081018890523360808201523060a082015260c0018a9052039089f0806200050e578862000440600435600b54620020cb565b600b5560405163a9059cbb60e01b815233600480830191909152356024820152602081604481856001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1918215620005025791620004cc575b5015620004ba5760405162b5d57b60e61b8152600490fd5b6040516312171d8360e31b8152600490fd5b620004f3915060203d602011620004fa575b620004ea818362001c5c565b81019062002041565b81620004a2565b503d620004de565b604051903d90823e3d90fd5b6040516001600160a01b03919091169660ff906200052c8362001c0e565b60018060a01b03891683523360208401526001600160581b036004351660408401521660608201526001608082015287895260076020526080600260408b2060018060a01b038451166bffffffffffffffffffffffff60a01b82541617815560018060a01b036020850151166001600160581b0360a01b604086015160a01b1660ff60f81b606087015160f81b16911717600182015501910151151560ff80198354169116179055604051620005e28162001c40565b620005ef36878462001dcb565b8152620005fe36848662001dcb565b60208201528460408201524260608201528789526008602052604089209080518051906001600160401b038211620008c65781906200063e855462001bd1565b601f811162000954575b50602090601f8311600114620008e6578d92620008da575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211620008c6576200069b600185015462001bd1565b601f81116200087c575b506020908c601f841160011462000805579260039492819260609592620007f9575b505060001982861b1c1916600191821b17908501555b60408101516002850155015191015533885260096020526040882080549068010000000000000000821015620007e557916040809a6200072e846200078c98979660016200077d9701815562001e1e565b81549060031b908d821b91600019901b1916179055338152600a6020522060208b5180928a8583378a820190815203019020600160ff19825416179055895196608088526080880191620020aa565b918583036020870152620020aa565b90600435868401526060830152837f36b9329ca62bde49b750d7ab93525ccc2ff4ced5c2745cd242894377ec4b5d0560018060a01b038516938033940390a4600160025582519182526001600160a01b03166020820152f35b634e487b7160e01b8a52604160045260248afd5b015190503880620006c7565b5090600185018d5260208d20918d5b601f1985168110620008635750926003949260019260609583601f198116106200084a575b505050811b016001850155620006dd565b015160001983881b60f8161c1916905538808062000839565b9192602060018192868501518155019401920162000814565b600185018d5260208d20601f840160051c810160208510620008be575b601f830160051c82018110620008b1575050620006a5565b6000815560010162000899565b508062000899565b634e487b7160e01b8c52604160045260248cfd5b01519050388062000660565b9250848d5260208d20908d935b601f198416851062000938576001945083601f198116106200091e575b505050811b01825562000675565b015160001960f88460031b161c1916905538808062000910565b81810151835560209485019460019093019290910190620008f3565b909150848d5260208d20601f840160051c8101602085106200099f575b90849392915b601f830160051c820181106200098f57505062000648565b6000815585945060010162000977565b508062000971565b634e487b7160e01b89526041600452602489fd5b634e487b7160e01b87526011600452602487fd5b620009ec915060203d602011620004fa57620004ea818362001c5c565b3862000341565b6040513d89823e3d90fd5b6040516365d7bc1d60e01b8152600490fd5b604051631124f78b60e01b8152600490fd5b50600a8511620002ac565b60405163680b6caf60e01b8152600490fd5b50603283116200029d565b604051630692acc560e51b8152600490fd5b604051632ca2f52b60e11b8152600490fd5b8580fd5b8380fd5b5080fd5b80fd5b503462000a7a57604036600319011262000a7a5762000a9b62001d7c565b6024356001600160401b03811162000af95791602060ff92604062000ac68396369060040162001e4d565b6001600160a01b039093168552600a84529320604051938492908190843782019081520301902054166040519015158152f35b8280fd5b503462000a7a578060031936011262000a7a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503462000a7a57606036600319011262000a7a5762000b6262001d7c565b62000b6c62001d98565b3360009081527f3c1b1854ab1360abbb06c8d4c6b2672d4b8cedc5eff522ab19e51d5cb8fdbd46602090815260409091205460443591907fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b269060ff161562000d0657506001600160a01b0383811694851562000cf457169281838562000c5d57878093508092508091885af13d1562000c57573d62000c0b8162001daf565b9062000c1b604051928362001c5c565b815286833d92013e5b15620004ba577ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f3883328504915b604051908152a380f35b62000c24565b60405163a9059cbb60e01b81526001600160a01b0393909316600484015260248301528160448189885af190811562000ce957869162000cc7575b5015620004ba577ff24ef89f38eadc1bde50701ad6e4d6d11a2dc24f7cf834a486991f38833285049162000c4d565b62000ce29150823d8411620004fa57620004ea818362001c5c565b3862000c98565b6040513d88823e3d90fd5b60405163e6c4247b60e01b8152600490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b503462000a7a578060031936011262000a7a5760206040517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b503462000a7a578060031936011262000a7a576020604051600a8152f35b503462000a7a578060031936011262000a7a57602060405160128152f35b503462000a7a57604036600319011262000a7a5762000de260043562000dc262001d98565b908084528360205262000ddc600160408620015462001eda565b62001f80565b5080f35b503462000a7a578060031936011262000a7a576020604051670de0b6b3a76400008152f35b503462000a7a578060031936011262000a7a5760206040517f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b28152f35b503462000a7a57604036600319011262000a7a5762000e6662001d7c565b6001600160a01b031681526009602052604081208054602435929083101562000a7a57602062000e97848462001e1e565b90546040519160031b1c8152f35b503462000a7a57602036600319011262000a7a57604060a0916004358152600760205220600180831b03808254169160ff600260018301549201541691604051938452811660208401526001600160581b0381851c16604084015260f81c606083015215156080820152f35b503462000a7a5760208060031936011262000a76576004359062000f3462002069565b62000f3e62002088565b8115620010de57670de0b6b3a764000062000f5c6003548462001ff6565b6040516323b872dd60e01b81523360048201523060248201526044810185905291900491906001600160a01b03908281606481897f000000000000000000000000000000000000000000000000000000000000000087165af190811562000ce9578691620010bc575b5015620004ba57338552600582526040852062000fe48582546200205b565b905562000ff4846006546200205b565b60065560405163a9059cbb60e01b8152336004820152602481018490529082908290604490829089907f0000000000000000000000000000000000000000000000000000000000000000165af1908115620010b15785916200108f575b5015620004ba576040519283528201527f9f7ba93b5a3c052166a93cfb443d72d1fec4f82bb913b1383b8f26c10fb7941e60403392a2600160025580f35b620010aa9150823d8411620004fa57620004ea818362001c5c565b3862001051565b6040513d87823e3d90fd5b620010d79150833d8511620004fa57620004ea818362001c5c565b3862000fc5565b604051631f2a200560e01b8152600490fd5b503462000a7a578060031936011262000a7a576020600454604051908152f35b503462000a7a578060031936011262000a7a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503462000a7a578060031936011262000a7a576020600654604051908152f35b503462000a7a578060031936011262000a7a57602090604051908152f35b503462000a7a57604036600319011262000a7a576040620011b562001d98565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503462000a7a578060031936011262000a7a576020604051683635c9adc5dea000008152f35b503462000a7a578060031936011262000a7a57602060405160328152f35b503462000a7a578060031936011262000a7a576200124562001e7d565b6200124f62002069565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503462000a7a57602036600319011262000a7a576020670de0b6b3a7640000620012b760035460043562001ff6565b04604051908152f35b503462000a7a578060031936011262000a7a576020600b54604051908152f35b503462000a7a57620012f23662001e07565b90620012fd62002069565b6200130762002088565b8115620010de57801580156200153b575b6200152957808352602060078152604084209060ff60028301541615620015175782855260088152620013b060408620604051620013568162001c40565b620013618262001c7e565b8152620013716001830162001c7e565b8482015260606003600284015493604084019485520154910152620013a76001600160581b03600186015460a01c168762001ff6565b90519062002020565b9182600b54106200150557546001600160a01b03908116803b15620015015760405163079cc67960e41b8152336004820152602481018790529087908290604490829084905af18015620009f357620014d0575b506200141383600b54620020cb565b600b5560405163a9059cbb60e01b815233600482015260248101849052908290829060449082908a907f0000000000000000000000000000000000000000000000000000000000000000165af190811562000ce9578691620014ae575b5015620004ba576040519384528301527fefd5d515529a8f76c5944b1d953cde6b2c61c8b81e144c964aeb038714cabca660403393a3600160025580f35b620014c99150823d8411620004fa57620004ea818362001c5c565b3862001470565b6001600160401b038197929711620014ed57604052943862001404565b634e487b7160e01b82526041600452602482fd5b8680fd5b6040516331d2f70960e01b8152600490fd5b6040516307350d3b60e11b8152600490fd5b60405163bb97cc9b60e01b8152600490fd5b5060045481101562001318565b503462000a7a576020908160031936011262000a7a5760043591604051620015708162001c0e565b82815282828201528260408201528260609181838201526080015282816040516200159b8162001c40565b8181528185820152826040820152015283835260078252604083209160405193620015c68562001c0e565b600160a01b600190039586855416865260018501549383870194888116865260408801936001600160581b0397888360a01c168652838a019260f81c83526002015460ff169360808a0194151585528152600886526040902096604051946200162f8662001c40565b6200163a8962001c7e565b86526200164a60018a0162001c7e565b968087019788528b60028b01549a604089019b8c5260030154998689019a8b526040519d8e9d51168d525116908b0152511660408901525160ff1690870152511515608086015260a0850160c090525160c08501608090526101408501620016b29162001d55565b905184820360bf190160e0860152620016cc919062001d55565b9151610100840152516101208301520390f35b503462000a7a578060031936011262000a7a57602060ff600154166040519015158152f35b503462000a7a5760208060031936011262000a76576001600160a01b036200172b62001d7c565b168252600981526040822060405192838383549182815201908193835284832090835b818110620017a757505050846200176791038562001c5c565b60405193838594850191818652518092526040850193925b8281106200178f57505050500390f35b8351855286955093810193928101926001016200177f565b8254845292860192600192830192016200174e565b503462000a7a578060031936011262000a7a57620017d962001e7d565b60015460ff8116156200181a5760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b503462000a7a5760206200184b620018443662001e07565b90620020d9565b604051908152f35b503462000a7a57604036600319011262000a7a576200187162001d98565b336001600160a01b03821603620018905762000de29060043562001f80565b60405163334bd91960e11b8152600490fd5b503462000a7a57602036600319011262000a7a576004357f9f29eee2263c2102949fd3febafb3dd6dbbaee114f48a474222b2159942eb2b2808352826020526040832033845260205260ff6040842054161562000d06575080156200193b5760407fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d191691600354908060035582519182526020820152a180f35b6040516314cee7cd60e11b8152600490fd5b503462000a7a57604036600319011262000a7a5762000de26004356200197262001d98565b90808452836020526200198c600160408620015462001eda565b62001f01565b503462000a7a57602036600319011262000a7a57600160406020926004358152808452200154604051908152f35b503462000a7a578060031936011262000a7a576020600354604051908152f35b503462000a7a578060031936011262000a7a5760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b503462000a7a57604036600319011262000a7a5762001a3b62001d7c565b6024356001600160401b03811162000af9573660238201121562000af957602060ff926040829562001a7c62001aa395369060248160040135910162001dcb565b6001600160a01b039093168152600a84522060405182519094859382908590870162001d30565b82019081520301902054166040519015158152f35b503462000a7a57602036600319011262000a7a576020906040906001600160a01b0362001ae462001d7c565b168152600583522054604051908152f35b503462000a7a57602036600319011262000a7a57604062001b5991600435815260086020522062001b268162001c7e565b9062001b356001820162001c7e565b62001b68600360028401549301549160405195869560808752608087019062001d55565b90858203602087015262001d55565b91604084015260608301520390f35b90503462000a7657602036600319011262000a765760043563ffffffff60e01b811680910362000af95760209250637965db0b60e01b811490811562001bbf575b5015158152f35b6301ffc9a760e01b1490503862001bb8565b90600182811c9216801562001c03575b602083101462001bed57565b634e487b7160e01b600052602260045260246000fd5b91607f169162001be1565b60a081019081106001600160401b0382111762001c2a57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111762001c2a57604052565b90601f801991011681019081106001600160401b0382111762001c2a57604052565b906040519182600082549262001c948462001bd1565b90818452600194858116908160001462001d0b575060011462001cc4575b505062001cc29250038362001c5c565b565b9093915060005260209081600020936000915b81831062001cf257505062001cc29350820101388062001cb2565b8554888401850152948501948794509183019162001cd7565b91505062001cc294506020925060ff191682840152151560051b820101388062001cb2565b60005b83811062001d445750506000910152565b818101518382015260200162001d33565b9060209162001d708151809281855285808601910162001d30565b601f01601f1916010190565b600435906001600160a01b038216820362001d9357565b600080fd5b602435906001600160a01b038216820362001d9357565b6001600160401b03811162001c2a57601f01601f191660200190565b92919262001dd98262001daf565b9162001de9604051938462001c5c565b82948184528183011162001d93578281602093846000960137010152565b604090600319011262001d93576004359060243590565b805482101562001e375760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f8401121562001d93578235916001600160401b03831162001d93576020838186019501011162001d9357565b3360009081527ff7c9542c591017a21c74b6f3fab6263c7952fc0aaf9db4c22a2a04ddc7f8674f60205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff161562000d065750565b80600052600060205260406000203360005260205260ff604060002054161562000d065750565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054161560001462001f7b57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541660001462001f7b5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b818102929181159184041417156200200a57565b634e487b7160e01b600052601160045260246000fd5b81156200202b570490565b634e487b7160e01b600052601260045260246000fd5b9081602091031262001d935751801515810362001d935790565b919082018092116200200a57565b60ff600154166200207657565b60405163d93c066560e01b8152600490fd5b6002805414620020985760028055565b604051633ee5aeb560e01b8152600490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b919082039182116200200a57565b80158015620021d8575b620021d157600090808252600760205260409182812090835192620021088462001c0e565b60018060a01b03938484541681526001840154948516602082015260ff6002878301956001600160581b0397888160a01c16885260f81c6060850152015416159060808215910152620021c857815260086020528381209380516200216d8162001c40565b620021788662001c7e565b8152620021886001870162001c7e565b602082015260606003600288015493830197848952015491015215620021c0575092620013a791620021bd9451169062001ff6565b90565b935050505090565b50935050505090565b5050600090565b50600454811015620020e356fe604060e08152346200047c5762001301803803806200001e8162000481565b928339810160e0828203126200047c5781516001600160401b0392908381116200047c578262000050918301620004a7565b9260209283830151908282116200047c576200006e918401620004a7565b90858301519260ff841684036200047c57606081015193620000936080830162000519565b9660c0620000a460a0850162000519565b9301519381518181116200036d576003908154906001948583811c9316801562000471575b8c8410146200045b5781908c601f9485811162000402575b50508c908483116001146200038f5760009262000383575b505060001982851b1c191690851b1782555b87519283116200036d5760049788548581811c9116801562000362575b8c8210146200034d57908b82848796959411620002f0575b50508b918411600114620002855760009362000279575b505082841b92600019911b1c19161785555b6001600160a01b039788169788156200026257600580546001600160a01b031981168b179091558991167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38060065560ff19600854161760085560805260a05260c052600254908282018092116200024d575060025560008381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a351610dd290816200052f823960805181610819015260a05181818161025801526105c3015260c051816102200152f35b601190634e487b7160e01b6000525260246000fd5b8951631e4fbdf760e01b8152600081880152602490fd5b01519150388062000157565b60008a81528c812087965093929190601f198616908e5b828210620002d85750508511620002bd575b50505050811b01855562000169565b01519060f884600019921b161c1916905538808080620002ae565b83850151875589989096019593840193018e6200029c565b9091929394508a60005283826000209181880160051c830193881062000343575b9188918897969594930160051c01915b8281106200033357508d915062000140565b6000815587965088910162000321565b9250819262000311565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000128565b634e487b7160e01b600052604160045260246000fd5b015190503880620000f9565b879350908d91601f1984168760005283600020936000905b828210620003e05750508411620003c7575b505050811b0182556200010b565b015160001983871b60f8161c19169055388080620003b9565b91929395968291958786015181550195019301908f918a9695949392620003a7565b909192508560005284826000209181860160051c830193861062000451575b918991869594930160051c01915b8281106200044157508e9150620000e1565b600081558594508991016200042f565b9250819262000421565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000c9565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200036d57604052565b919080601f840112156200047c5782516001600160401b0381116200036d57602090620004dd601f8201601f1916830162000481565b928184528282870101116200047c5760005b8181106200050557508260009394955001015290565b8581018301518482018401528201620004ef565b51906001600160a01b03821682036200047c5756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146109e657508063095ea7b31461093d57806318160ddd1461091e57806323b872dd1461083d578063313ce567146107ff57806342966c68146107605780635dc96d161461073c57806370a0823114610705578063715018a6146106a857806379cc67901461059b5780637b2c835f146105395780638da5cb5b1461051057806395d89b411461040c578063a9059cbb146103db578063ad1329d114610287578063c45a015514610243578063d7c81b5514610208578063d89135cd146101e9578063dd62ed3e146101915763f2fde38b146100ff57600080fd5b3461018d57602036600319011261018d57610118610b25565b90610121610b75565b6001600160a01b03918216928315610177575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101e557806003193601126101e5576101ab610b25565b6001600160a01b0360243581811692908390036101e1579160209491849316825260018552828220908252845220549051908152f35b8480fd5b5080fd5b5050346101e557816003193601126101e5576020906007549051908152f35b5050346101e557816003193601126101e557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101e557816003193601126101e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461018d5761029736610b40565b91906102a1610b75565b6001600160a01b039081169182156103cb57869392911680610357575082809281925af13d15610352573d67ffffffffffffffff811161033f578251906102f2601f8201601f191660200183610ba1565b81528460203d92013e5b1561030657505080f35b906020606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b855260418452602485fd5b6102fc565b9460209360449293968651978895869463a9059cbb60e01b865285015260248401525af19081156103c2575061038b575080f35b6020813d82116103ba575b816103a360209383610ba1565b810103126101e55751801515036103b75780f35b80fd5b3d9150610396565b513d84823e3d90fd5b8451631f2a200560e01b81528690fd5b5050346101e557806003193601126101e5576020906104056103fb610b25565b6024359033610bd9565b5160018152f35b509190346101e557816003193601126101e557805191809380549160019083821c92828516948515610506575b60209586861081146104f3578589529081156104cf5750600114610477575b6104738787610469828c0383610ba1565b5191829182610adc565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104bc57505050826104739461046992820101943880610458565b805486850188015292860192810161049e565b60ff19168887015250505050151560051b8301019250610469826104733880610458565b634e487b7160e01b845260228352602484fd5b93607f1693610439565b5050346101e557816003193601126101e55760055490516001600160a01b039091168152602090f35b503461018d57602036600319011261018d57359081151580920361018d577f1509137b40df48e8ef9596f9db16b632b15353d0e0688d9f23221953eb0328dd91602091610584610b75565b60ff196008541660ff83161760085551908152a180f35b50903461018d578060031936011261018d576105b5610b25565b602435906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811633036106985760ff6008541615610688576105fd610d79565b8215610678578116938486528560205282848720541061066a575090610654817fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00949361064c82600754610cb7565b600755610cda565b60075482519182526020820152a2600160065580f35b8351631e9acf1760e31b8152fd5b50505051631f2a200560e01b8152fd5b5050505163be20705f60e01b8152fd5b5050505163a9c455db60e01b8152fd5b83346103b757806003193601126103b7576106c1610b75565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101e55760203660031901126101e55760209181906001600160a01b0361072d610b25565b16815280845220549051908152f35b5050346101e557816003193601126101e55760209060ff6008541690519015158152f35b50903461018d57602036600319011261018d5781359160ff60085416156107f157610789610d79565b82156107e357507fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00906107be83600754610cb7565b6007556107cb8333610cda565b600754815193845260208401523392a2600160065580f35b9051631f2a200560e01b8152fd5b905163be20705f60e01b8152fd5b5050346101e557816003193601126101e5576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b508290346101e55761084e36610b40565b6001600160a01b0383168086526001602090815287872033885290528686205491959294600019831061088a575b602088610405898989610bd9565b8683106108f25781156108db5733156108c4575082526001602090815286832033845281529186902090859003905582906104058761087c565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101e557816003193601126101e5576020906002549051908152f35b503461018d578160031936011261018d57610956610b25565b6024359033156109cf576001600160a01b03169182156109b857508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b9291905034610ad85783600319360112610ad857600354600181811c9186908281168015610ace575b6020958686108214610abb5750848852908115610a995750600114610a40575b6104738686610469828b0383610ba1565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610a86575050508261047394610469928201019438610a2f565b8054868501880152928601928101610a69565b60ff191687860152505050151560051b83010192506104698261047338610a2f565b634e487b7160e01b845260229052602483fd5b93607f1693610a0f565b8380fd5b6020808252825181830181905290939260005b828110610b1157505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610aef565b600435906001600160a01b0382168203610b3b57565b600080fd5b6060906003190112610b3b576001600160a01b03906004358281168103610b3b57916024359081168103610b3b579060443590565b6005546001600160a01b03163303610b8957565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff821117610bc357604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b03808416928315610c9e5716928315610c855760009083825281602052604082205490838210610c53575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211610cc457565b634e487b7160e01b600052601160045260246000fd5b906001600160a01b038216908115610c9e5760009282845283602052604084205490828210610d475750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b600260065414610d8a576002600655565b604051633ee5aeb560e01b8152600490fdfea26469706673582212209f1c438f5f60eea04008a1ef860d670535e4031d5538854a94abe019fbceb6d864736f6c63430008140033a26469706673582212201e52601d7d704f28923316158ac2fca8add36e58459de307cb22c75af8ba169864736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x1B77 JUMPI POP DUP1 PUSH4 0x5A61954 EQ PUSH3 0x1AF5 JUMPI DUP1 PUSH4 0x7819945 EQ PUSH3 0x1AB8 JUMPI DUP1 PUSH4 0x1BF44CB0 EQ PUSH3 0x1A1D JUMPI DUP1 PUSH4 0x20DF4359 EQ PUSH3 0x19E0 JUMPI DUP1 PUSH4 0x238D4AF8 EQ PUSH3 0x19C0 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH3 0x1992 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH3 0x194D JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH3 0x18A2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH3 0x1853 JUMPI DUP1 PUSH4 0x3B420A73 EQ PUSH3 0x182C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH3 0x17BC JUMPI DUP1 PUSH4 0x546FDAD4 EQ PUSH3 0x1704 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH3 0x16DF JUMPI DUP1 PUSH4 0x5E79C1DC EQ PUSH3 0x1548 JUMPI DUP1 PUSH4 0x5ED6C1DB EQ PUSH3 0x12E0 JUMPI DUP1 PUSH4 0x6D8554E2 EQ PUSH3 0x12C0 JUMPI DUP1 PUSH4 0x74B334C5 EQ PUSH3 0x1288 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH3 0x1228 JUMPI DUP1 PUSH4 0x86074985 EQ PUSH3 0x120A JUMPI DUP1 PUSH4 0x8760550D EQ PUSH3 0x11E4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH3 0x1195 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH3 0x1177 JUMPI DUP1 PUSH4 0xAA6450CE EQ PUSH3 0x1157 JUMPI DUP1 PUSH4 0xAE5014B1 EQ PUSH3 0x1110 JUMPI DUP1 PUSH4 0xB135BBB0 EQ PUSH3 0x10F0 JUMPI DUP1 PUSH4 0xBEC697DB EQ PUSH3 0xF11 JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH3 0xEA5 JUMPI DUP1 PUSH4 0xC21C64A7 EQ PUSH3 0xE48 JUMPI DUP1 PUSH4 0xCB327B8B EQ PUSH3 0xE0B JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH3 0xDE6 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH3 0xD9D JUMPI DUP1 PUSH4 0xDF525B7D EQ PUSH3 0xD7F JUMPI DUP1 PUSH4 0xE3D89171 EQ PUSH3 0xD61 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH3 0xD24 JUMPI DUP1 PUSH4 0xE63EA408 EQ PUSH3 0xB44 JUMPI DUP1 PUSH4 0xECDF8FC4 EQ PUSH3 0xAFD JUMPI DUP1 PUSH4 0xF7157558 EQ PUSH3 0xA7D JUMPI PUSH4 0xFD44D274 EQ PUSH3 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA76 JUMPI PUSH3 0x22B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA72 JUMPI PUSH3 0x24E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH3 0xA6E JUMPI PUSH3 0x26A PUSH3 0x2069 JUMP JUMPDEST PUSH3 0x274 PUSH3 0x2088 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x4 CALLDATALOAD LT PUSH3 0xA5C JUMPI PUSH1 0x12 PUSH1 0xFF DUP6 AND GT PUSH3 0xA4A JUMPI DUP3 ISZERO DUP1 ISZERO PUSH3 0xA3F JUMPI JUMPDEST PUSH3 0xA2D JUMPI DUP5 ISZERO DUP1 ISZERO PUSH3 0xA22 JUMPI JUMPDEST PUSH3 0xA10 JUMPI CALLER DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP8 DUP8 DUP4 CALLDATACOPY DUP8 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH3 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x9F3 JUMPI DUP8 SWAP2 PUSH3 0x9CF JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH3 0x358 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH3 0x205B JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x4 SLOAD SWAP5 PUSH1 0x0 NOT DUP7 EQ PUSH3 0x9BB JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x4 SSTORE PUSH1 0x4D PUSH1 0xFF DUP7 AND GT PUSH3 0x9BB JUMPI PUSH8 0xDE0B6B3A7640000 PUSH3 0x399 PUSH1 0xFF DUP8 AND PUSH1 0xA EXP PUSH1 0x4 CALLDATALOAD PUSH3 0x1FF6 JUMP JUMPDEST DIV SWAP3 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1301 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1301 DUP4 ADD GT OR PUSH3 0x9A7 JUMPI PUSH2 0x1301 PUSH3 0x21E6 DUP3 CODECOPY PUSH1 0xE0 PUSH2 0x1301 DUP3 ADD MSTORE DUP1 PUSH3 0x3FB PUSH3 0x3E3 PUSH1 0xE0 PUSH2 0x1301 DUP5 ADD ADD DUP10 DUP7 PUSH3 0x20AA JUMP JUMPDEST PUSH2 0x1301 DUP4 ADD DUP2 SUB PUSH1 0x20 PUSH2 0x1301 DUP6 ADD ADD MSTORE DUP6 DUP8 PUSH3 0x20AA JUMP JUMPDEST PUSH1 0xFF DUP10 AND PUSH2 0x1301 DUP4 ADD PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD DUP11 SWAP1 MSTORE SUB SWAP1 DUP10 CREATE DUP1 PUSH3 0x50E JUMPI DUP9 PUSH3 0x440 PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD PUSH3 0x20CB JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH3 0x502 JUMPI SWAP2 PUSH3 0x4CC JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0xB5D57B PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0x4F3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x4FA JUMPI JUMPDEST PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x2041 JUMP JUMPDEST DUP2 PUSH3 0x4A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP7 PUSH1 0xFF SWAP1 PUSH3 0x52C DUP4 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x80 PUSH1 0x2 PUSH1 0x40 DUP12 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0xA0 SHL PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0xA0 SHL AND PUSH1 0xFF PUSH1 0xF8 SHL PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0xF8 SHL AND SWAP2 OR OR PUSH1 0x1 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH3 0x5E2 DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x5EF CALLDATASIZE DUP8 DUP5 PUSH3 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH3 0x5FE CALLDATASIZE DUP5 DUP7 PUSH3 0x1DCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP8 DUP10 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x8C6 JUMPI DUP2 SWAP1 PUSH3 0x63E DUP6 SLOAD PUSH3 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x954 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8E6 JUMPI DUP14 SWAP3 PUSH3 0x8DA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x8C6 JUMPI PUSH3 0x69B PUSH1 0x1 DUP6 ADD SLOAD PUSH3 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x87C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP13 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x805 JUMPI SWAP3 PUSH1 0x3 SWAP5 SWAP3 DUP2 SWAP3 PUSH1 0x60 SWAP6 SWAP3 PUSH3 0x7F9 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND PUSH1 0x1 SWAP2 DUP3 SHL OR SWAP1 DUP6 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP9 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x7E5 JUMPI SWAP2 PUSH1 0x40 DUP1 SWAP11 PUSH3 0x72E DUP5 PUSH3 0x78C SWAP9 SWAP8 SWAP7 PUSH1 0x1 PUSH3 0x77D SWAP8 ADD DUP2 SSTORE PUSH3 0x1E1E JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP14 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x20 DUP12 MLOAD DUP1 SWAP3 DUP11 DUP6 DUP4 CALLDATACOPY DUP11 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP10 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP2 PUSH3 0x20AA JUMP JUMPDEST SWAP2 DUP6 DUP4 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH3 0x20AA JUMP JUMPDEST SWAP1 PUSH1 0x4 CALLDATALOAD DUP7 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH32 0x36B9329CA62BDE49B750D7AB93525CCC2FF4CED5C2745CD242894377EC4B5D05 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 DUP1 CALLER SWAP5 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x6C7 JUMP JUMPDEST POP SWAP1 PUSH1 0x1 DUP6 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 SWAP2 DUP14 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x863 JUMPI POP SWAP3 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x60 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x84A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP6 ADD SSTORE PUSH3 0x6DD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x839 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x814 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x8BE JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x8B1 JUMPI POP POP PUSH3 0x6A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x899 JUMP JUMPDEST POP DUP1 PUSH3 0x899 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x660 JUMP JUMPDEST SWAP3 POP DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 SWAP1 DUP14 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x938 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x91E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x675 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x910 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x8F3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x99F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x98F JUMPI POP POP PUSH3 0x648 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x977 JUMP JUMPDEST POP DUP1 PUSH3 0x971 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH3 0x9EC SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x65D7BC1D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1124F78B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xA DUP6 GT PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x680B6CAF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x32 DUP4 GT PUSH3 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x692ACC5 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xA9B PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xAF9 JUMPI SWAP2 PUSH1 0x20 PUSH1 0xFF SWAP3 PUSH1 0x40 PUSH3 0xAC6 DUP4 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP6 MSTORE PUSH1 0xA DUP5 MSTORE SWAP4 KECCAK256 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 SWAP1 DUP2 SWAP1 DUP5 CALLDATACOPY DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xB62 PUSH3 0x1D7C JUMP JUMPDEST PUSH3 0xB6C PUSH3 0x1D98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3C1B1854AB1360ABBB06C8D4C6B2672D4B8CEDC5EFF522AB19E51D5CB8FDBD46 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0xD06 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP5 DUP6 ISZERO PUSH3 0xCF4 JUMPI AND SWAP3 DUP2 DUP4 DUP6 PUSH3 0xC5D JUMPI DUP8 DUP1 SWAP4 POP DUP1 SWAP3 POP DUP1 SWAP2 DUP9 GAS CALL RETURNDATASIZE ISZERO PUSH3 0xC57 JUMPI RETURNDATASIZE PUSH3 0xC0B DUP2 PUSH3 0x1DAF JUMP JUMPDEST SWAP1 PUSH3 0xC1B PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH3 0x1C5C JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH3 0x4BA JUMPI PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH3 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE DUP2 PUSH1 0x44 DUP2 DUP10 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0xCC7 JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH32 0xF24EF89F38EADC1BDE50701AD6E4D6D11A2DC24F7CF834A486991F3883328504 SWAP2 PUSH3 0xC4D JUMP JUMPDEST PUSH3 0xCE2 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xDE2 PUSH1 0x4 CALLDATALOAD PUSH3 0xDC2 PUSH3 0x1D98 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH3 0xDDC PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH3 0x1EDA JUMP JUMPDEST PUSH3 0x1F80 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xE66 PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH3 0xE97 DUP5 DUP5 PUSH3 0x1E1E JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 DUP4 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB DUP2 DUP6 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xF8 SHR PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH3 0xF34 PUSH3 0x2069 JUMP JUMPDEST PUSH3 0xF3E PUSH3 0x2088 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x10DE JUMPI PUSH8 0xDE0B6B3A7640000 PUSH3 0xF5C PUSH1 0x3 SLOAD DUP5 PUSH3 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 DIV SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP2 PUSH1 0x64 DUP2 DUP10 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0x10BC JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI CALLER DUP6 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH3 0xFE4 DUP6 DUP3 SLOAD PUSH3 0x205B JUMP JUMPDEST SWAP1 SSTORE PUSH3 0xFF4 DUP5 PUSH1 0x6 SLOAD PUSH3 0x205B JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP10 SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x10B1 JUMPI DUP6 SWAP2 PUSH3 0x108F JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x9F7BA93B5A3C052166A93CFB443D72D1FEC4F82BB913B1383B8F26C10FB7941E PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH3 0x10AA SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x10D7 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH3 0x11B5 PUSH3 0x1D98 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1245 PUSH3 0x1E7D JUMP JUMPDEST PUSH3 0x124F PUSH3 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH8 0xDE0B6B3A7640000 PUSH3 0x12B7 PUSH1 0x3 SLOAD PUSH1 0x4 CALLDATALOAD PUSH3 0x1FF6 JUMP JUMPDEST DIV PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH3 0x12F2 CALLDATASIZE PUSH3 0x1E07 JUMP JUMPDEST SWAP1 PUSH3 0x12FD PUSH3 0x2069 JUMP JUMPDEST PUSH3 0x1307 PUSH3 0x2088 JUMP JUMPDEST DUP2 ISZERO PUSH3 0x10DE JUMPI DUP1 ISZERO DUP1 ISZERO PUSH3 0x153B JUMPI JUMPDEST PUSH3 0x1529 JUMPI DUP1 DUP4 MSTORE PUSH1 0x20 PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND ISZERO PUSH3 0x1517 JUMPI DUP3 DUP6 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH3 0x13B0 PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x40 MLOAD PUSH3 0x1356 DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x1361 DUP3 PUSH3 0x1C7E JUMP JUMPDEST DUP2 MSTORE PUSH3 0x1371 PUSH1 0x1 DUP4 ADD PUSH3 0x1C7E JUMP JUMPDEST DUP5 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 PUSH1 0x40 DUP5 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH3 0x13A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0xA0 SHR AND DUP8 PUSH3 0x1FF6 JUMP JUMPDEST SWAP1 MLOAD SWAP1 PUSH3 0x2020 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xB SLOAD LT PUSH3 0x1505 JUMPI SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 EXTCODESIZE ISZERO PUSH3 0x1501 JUMPI PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x9F3 JUMPI PUSH3 0x14D0 JUMPI JUMPDEST POP PUSH3 0x1413 DUP4 PUSH1 0xB SLOAD PUSH3 0x20CB JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP11 SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0xCE9 JUMPI DUP7 SWAP2 PUSH3 0x14AE JUMPI JUMPDEST POP ISZERO PUSH3 0x4BA JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0xEFD5D515529A8F76C5944B1D953CDE6B2C61C8B81E144C964AEB038714CABCA6 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH3 0x14C9 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH3 0x4FA JUMPI PUSH3 0x4EA DUP2 DUP4 PUSH3 0x1C5C JUMP JUMPDEST CODESIZE PUSH3 0x1470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SWAP8 SWAP3 SWAP8 GT PUSH3 0x14ED JUMPI PUSH1 0x40 MSTORE SWAP5 CODESIZE PUSH3 0x1404 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31D2F709 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7350D3B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBB97CC9B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x1318 JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD PUSH3 0x1570 DUP2 PUSH3 0x1C0E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP3 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE DUP3 DUP2 PUSH1 0x40 MLOAD PUSH3 0x159B DUP2 PUSH3 0x1C40 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP2 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE DUP4 DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH3 0x15C6 DUP6 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP6 DUP7 DUP6 SLOAD AND DUP7 MSTORE PUSH1 0x1 DUP6 ADD SLOAD SWAP4 DUP4 DUP8 ADD SWAP5 DUP9 DUP2 AND DUP7 MSTORE PUSH1 0x40 DUP9 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP8 DUP9 DUP4 PUSH1 0xA0 SHR AND DUP7 MSTORE DUP4 DUP11 ADD SWAP3 PUSH1 0xF8 SHR DUP4 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP4 PUSH1 0x80 DUP11 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE DUP2 MSTORE PUSH1 0x8 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH3 0x162F DUP7 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x163A DUP10 PUSH3 0x1C7E JUMP JUMPDEST DUP7 MSTORE PUSH3 0x164A PUSH1 0x1 DUP11 ADD PUSH3 0x1C7E JUMP JUMPDEST SWAP7 DUP1 DUP8 ADD SWAP8 DUP9 MSTORE DUP12 PUSH1 0x2 DUP12 ADD SLOAD SWAP11 PUSH1 0x40 DUP10 ADD SWAP12 DUP13 MSTORE PUSH1 0x3 ADD SLOAD SWAP10 DUP7 DUP10 ADD SWAP11 DUP12 MSTORE PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 MLOAD AND DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD AND PUSH1 0x40 DUP10 ADD MSTORE MLOAD PUSH1 0xFF AND SWAP1 DUP8 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD PUSH1 0xC0 SWAP1 MSTORE MLOAD PUSH1 0xC0 DUP6 ADD PUSH1 0x80 SWAP1 MSTORE PUSH2 0x140 DUP6 ADD PUSH3 0x16B2 SWAP2 PUSH3 0x1D55 JUMP JUMPDEST SWAP1 MLOAD DUP5 DUP3 SUB PUSH1 0xBF NOT ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH3 0x16CC SWAP2 SWAP1 PUSH3 0x1D55 JUMP JUMPDEST SWAP2 MLOAD PUSH2 0x100 DUP5 ADD MSTORE MLOAD PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x172B PUSH3 0x1D7C JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH3 0x17A7 JUMPI POP POP POP DUP5 PUSH3 0x1767 SWAP2 SUB DUP6 PUSH3 0x1C5C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH3 0x178F JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x177F JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x174E JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x17D9 PUSH3 0x1E7D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH3 0x181A JUMPI PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH3 0x184B PUSH3 0x1844 CALLDATASIZE PUSH3 0x1E07 JUMP JUMPDEST SWAP1 PUSH3 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1871 PUSH3 0x1D98 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x1890 JUMPI PUSH3 0xDE2 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH3 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x9F29EEE2263C2102949FD3FEBAFB3DD6DBBAEE114F48A474222B2159942EB2B2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH3 0xD06 JUMPI POP DUP1 ISZERO PUSH3 0x193B JUMPI PUSH1 0x40 PUSH32 0xB38780DDDE1F073D91C150DE2696F3F7085883648BA21CC5EF01029CB21D1916 SWAP2 PUSH1 0x3 SLOAD SWAP1 DUP1 PUSH1 0x3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14CEE7CD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0xDE2 PUSH1 0x4 CALLDATALOAD PUSH3 0x1972 PUSH3 0x1D98 JUMP JUMPDEST SWAP1 DUP1 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH3 0x198C PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH3 0x1EDA JUMP JUMPDEST PUSH3 0x1F01 JUMP JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x1 PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xBF233DD2AAFEB4D50879C4AA5C81E96D92F6E6945C906A58F9F2D1C1631B4B26 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH3 0x1A3B PUSH3 0x1D7C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xAF9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0xAF9 JUMPI PUSH1 0x20 PUSH1 0xFF SWAP3 PUSH1 0x40 DUP3 SWAP6 PUSH3 0x1A7C PUSH3 0x1AA3 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH3 0x1DCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 PUSH1 0x40 MLOAD DUP3 MLOAD SWAP1 SWAP5 DUP6 SWAP4 DUP3 SWAP1 DUP6 SWAP1 DUP8 ADD PUSH3 0x1D30 JUMP JUMPDEST DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x1AE4 PUSH3 0x1D7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0xA7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA7A JUMPI PUSH1 0x40 PUSH3 0x1B59 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 PUSH3 0x1B26 DUP2 PUSH3 0x1C7E JUMP JUMPDEST SWAP1 PUSH3 0x1B35 PUSH1 0x1 DUP3 ADD PUSH3 0x1C7E JUMP JUMPDEST PUSH3 0x1B68 PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH3 0x1D55 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH3 0x1D55 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH3 0xA76 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xA76 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH3 0xAF9 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x1BBF JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH3 0x1BB8 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1C03 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1BED JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1BE1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x1C2A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH3 0x1C94 DUP5 PUSH3 0x1BD1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH3 0x1D0B JUMPI POP PUSH1 0x1 EQ PUSH3 0x1CC4 JUMPI JUMPDEST POP POP PUSH3 0x1CC2 SWAP3 POP SUB DUP4 PUSH3 0x1C5C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH3 0x1CF2 JUMPI POP POP PUSH3 0x1CC2 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH3 0x1CB2 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH3 0x1CD7 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1CC2 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH3 0x1CB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x1D44 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1D33 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0x1D70 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0x1D30 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1D93 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x1D93 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x1C2A JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH3 0x1DD9 DUP3 PUSH3 0x1DAF JUMP JUMPDEST SWAP2 PUSH3 0x1DE9 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH3 0x1C5C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH3 0x1D93 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH3 0x1D93 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH3 0x1E37 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x1D93 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x1D93 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH3 0x1D93 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF7C9542C591017A21C74B6F3FAB6263C7952FC0AAF9DB4C22A2A04DDC7F8674F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0xD06 JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0xD06 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH3 0x1F7B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH3 0x1F7B JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH3 0x200A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x202B JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0x1D93 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x1D93 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x200A JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH3 0x2076 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ PUSH3 0x2098 JUMPI PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH3 0x200A JUMPI JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH3 0x21D8 JUMPI JUMPDEST PUSH3 0x21D1 JUMPI PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP2 KECCAK256 SWAP1 DUP4 MLOAD SWAP3 PUSH3 0x2108 DUP5 PUSH3 0x1C0E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP5 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP5 DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 DUP4 ADD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP8 DUP9 DUP2 PUSH1 0xA0 SHR AND DUP9 MSTORE PUSH1 0xF8 SHR PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 DUP3 ISZERO SWAP2 ADD MSTORE PUSH3 0x21C8 JUMPI DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP4 DUP2 KECCAK256 SWAP4 DUP1 MLOAD PUSH3 0x216D DUP2 PUSH3 0x1C40 JUMP JUMPDEST PUSH3 0x2178 DUP7 PUSH3 0x1C7E JUMP JUMPDEST DUP2 MSTORE PUSH3 0x2188 PUSH1 0x1 DUP8 ADD PUSH3 0x1C7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x3 PUSH1 0x2 DUP9 ADD SLOAD SWAP4 DUP4 ADD SWAP8 DUP5 DUP10 MSTORE ADD SLOAD SWAP2 ADD MSTORE ISZERO PUSH3 0x21C0 JUMPI POP SWAP3 PUSH3 0x13A7 SWAP2 PUSH3 0x21BD SWAP5 MLOAD AND SWAP1 PUSH3 0x1FF6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x20E3 JUMP INVALID PUSH1 0x40 PUSH1 0xE0 DUP2 MSTORE CALLVALUE PUSH3 0x47C JUMPI PUSH3 0x1301 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0xE0 DUP3 DUP3 SUB SLT PUSH3 0x47C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x47C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x47C JUMPI PUSH3 0x6E SWAP2 DUP5 ADD PUSH3 0x4A7 JUMP JUMPDEST SWAP1 DUP6 DUP4 ADD MLOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH3 0x47C JUMPI PUSH1 0x60 DUP2 ADD MLOAD SWAP4 PUSH3 0x93 PUSH1 0x80 DUP4 ADD PUSH3 0x519 JUMP JUMPDEST SWAP7 PUSH1 0xC0 PUSH3 0xA4 PUSH1 0xA0 DUP6 ADD PUSH3 0x519 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP4 DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP5 DUP6 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x471 JUMPI JUMPDEST DUP13 DUP5 LT EQ PUSH3 0x45B JUMPI DUP2 SWAP1 DUP13 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x402 JUMPI JUMPDEST POP POP DUP13 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x38F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x383 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP3 SSTORE JUMPDEST DUP8 MLOAD SWAP3 DUP4 GT PUSH3 0x36D JUMPI PUSH1 0x4 SWAP8 DUP9 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x362 JUMPI JUMPDEST DUP13 DUP3 LT EQ PUSH3 0x34D JUMPI SWAP1 DUP12 DUP3 DUP5 DUP8 SWAP7 SWAP6 SWAP5 GT PUSH3 0x2F0 JUMPI JUMPDEST POP POP DUP12 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x285 JUMPI PUSH1 0x0 SWAP4 PUSH3 0x279 JUMPI JUMPDEST POP POP DUP3 DUP5 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP8 DUP9 ISZERO PUSH3 0x262 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP12 OR SWAP1 SWAP2 SSTORE DUP10 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 PUSH1 0x6 SSTORE PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x2 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x24D JUMPI POP PUSH1 0x2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP4 MSTORE DUP5 DUP2 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE DUP5 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG3 MLOAD PUSH2 0xDD2 SWAP1 DUP2 PUSH3 0x52F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x819 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x258 ADD MSTORE PUSH2 0x5C3 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x220 ADD MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP10 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0x157 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE DUP13 DUP2 KECCAK256 DUP8 SWAP7 POP SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP15 JUMPDEST DUP3 DUP3 LT PUSH3 0x2D8 JUMPI POP POP DUP6 GT PUSH3 0x2BD JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0x169 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x2AE JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP8 SSTORE DUP10 SWAP9 SWAP1 SWAP7 ADD SWAP6 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x29C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP11 PUSH1 0x0 MSTORE DUP4 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP9 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP9 LT PUSH3 0x343 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x333 JUMPI POP DUP14 SWAP2 POP PUSH3 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP8 SWAP7 POP DUP9 SWAP2 ADD PUSH3 0x321 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x22 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xF9 JUMP JUMPDEST DUP8 SWAP4 POP SWAP1 DUP14 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP8 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x3E0 JUMPI POP POP DUP5 GT PUSH3 0x3C7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x10B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x3B9 JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP6 SWAP7 DUP3 SWAP2 SWAP6 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 DUP16 SWAP2 DUP11 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH3 0x3A7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP6 PUSH1 0x0 MSTORE DUP5 DUP3 PUSH1 0x0 KECCAK256 SWAP2 DUP2 DUP7 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 DUP7 LT PUSH3 0x451 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x441 JUMPI POP DUP15 SWAP2 POP PUSH3 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x42F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x421 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x36D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x47C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x36D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x4DD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x481 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x47C JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x505 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x4EF JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x47C JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x9E6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x7FF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x5DC96D16 EQ PUSH2 0x73C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x7B2C835F EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xAD1329D1 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD7C81B55 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB25 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1AB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E1 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH2 0x297 CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x3CB JUMPI DUP7 SWAP4 SWAP3 SWAP2 AND DUP1 PUSH2 0x357 JUMPI POP DUP3 DUP1 SWAP3 DUP2 SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x33F JUMPI DUP3 MLOAD SWAP1 PUSH2 0x2F2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 MSTORE DUP5 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x306 JUMPI POP POP DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x2FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x44 SWAP3 SWAP4 SWAP7 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3C2 JUMPI POP PUSH2 0x38B JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x3BA JUMPI JUMPDEST DUP2 PUSH2 0x3A3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBA1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E5 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x3B7 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x396 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x405 PUSH2 0x3FB PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBD9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x506 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x4F3 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x477 JUMPI JUMPDEST PUSH2 0x473 DUP8 DUP8 PUSH2 0x469 DUP3 DUP13 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xADC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x4BC JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x49E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE DUP1 PUSH2 0x458 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x439 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x18D JUMPI PUSH32 0x1509137B40DF48E8EF9596F9DB16B632B15353D0E0688D9F23221953EB0328DD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x584 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0xFF DUP4 AND OR PUSH1 0x8 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x5B5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x698 JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x688 JUMPI PUSH2 0x5FD PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x678 JUMPI DUP2 AND SWAP4 DUP5 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP5 DUP8 KECCAK256 SLOAD LT PUSH2 0x66A JUMPI POP SWAP1 PUSH2 0x654 DUP2 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP5 SWAP4 PUSH2 0x64C DUP3 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP MLOAD PUSH4 0xA9C455DB PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x3B7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3B7 JUMPI PUSH2 0x6C1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x72D PUSH2 0xB25 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x789 PUSH2 0xD79 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7E3 JUMPI POP PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP1 PUSH2 0x7BE DUP4 PUSH1 0x7 SLOAD PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x7CB DUP4 CALLER PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 MLOAD PUSH4 0xBE20705F PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x84E CALLDATASIZE PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP8 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x0 NOT DUP4 LT PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x405 DUP10 DUP10 DUP10 PUSH2 0xBD9 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x8F2 JUMPI DUP2 ISZERO PUSH2 0x8DB JUMPI CALLER ISZERO PUSH2 0x8C4 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x405 DUP8 PUSH2 0x87C JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1E5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x956 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x9CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x9B8 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0xAD8 JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xAD8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xACE JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xABB JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xA99 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0x473 DUP7 DUP7 PUSH2 0x469 DUP3 DUP12 SUB DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xA86 JUMPI POP POP POP DUP3 PUSH2 0x473 SWAP5 PUSH2 0x469 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA2F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x469 DUP3 PUSH2 0x473 CODESIZE PUSH2 0xA2F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA0F JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB11 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB3B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xB3B JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB89 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBC3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xC9E JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC53 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xCC4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0xD47 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0xD8A JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SHR NUMBER DUP16 PUSH0 PUSH1 0xEE LOG0 BLOCKHASH ADDMOD LOG1 0xEF DUP7 0xD PUSH8 0x535E4031D553885 0x4A SWAP5 0xAB 0xE0 NOT 0xFB 0xCE 0xB6 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E MSTORE PUSH1 0x1D PUSH30 0x704F28923316158AC2FCA8ADD36E58459DE307CB22C75AF8BA169864736F PUSH13 0x63430008140033000000000000 ","sourceMap":"830:12790:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1315:72:22;;:::i;:::-;2466:103:23;;:::i;:::-;1250:11:38;830:12790;;6283:29;6279:62;;1357:2;830:12790;;;6355:34;6351:64;;6429:23;;:63;;;;830:12790;6425:89;;6528:25;;:69;;;;830:12790;6524:97;;6649:10;830:12790;;6635:13;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;6631:63;;830:12790;;-1:-1:-1;;;6763:57:38;;6649:10;830:12790;6763:57;;;830:12790;;;;6804:4;830:12790;;;;;;;;;;;;;;-1:-1:-1;;;;;6763:7:38;830:12790;6763:57;;;;;;;;;;;830:12790;6762:58;;6758:112;;6918:22;830:12790;;6918:22;830:12790;6918:22;:::i;:::-;;830:12790;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;1408:4;7091:27;830:12790;;;6635:13;830:12790;;;7091:27;:::i;:::-;830:12790;;;;7201:201;;;;;-1:-1:-1;;;;;7201:201:38;;;;;;;;;;;830:12790;7201:201;;;830:12790;7201:201;830:12790;;;7201:201;;;830:12790;;;;:::i;:::-;7201:201;;;830:12790;;;7201:201;;;830:12790;;;;;:::i;:::-;;;;7201:201;;;830:12790;;;;;;;;;;;;;6649:10;830:12790;;;;6804:4;830:12790;;;;;;;;;7201:201;;;;;;;830:12790;7564:22;830:12790;;6918:22;830:12790;7564:22;:::i;:::-;6918;830:12790;;;-1:-1:-1;;;7605:38:38;;6649:10;830:12790;7605:38;;;830:12790;;;;;;;;;;;;;;-1:-1:-1;;;;;6763:7:38;830:12790;7605:38;;;;;;;;;;7197:562;7604:39;;7600:101;;830:12790;;-1:-1:-1;;;7721:27:38;;830:12790;;7721:27;7600:101;830:12790;;-1:-1:-1;;;7670:16:38;;830:12790;;7670:16;7605:38;;;;830:12790;7605:38;830:12790;7605:38;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;830:12790;;;;;;;;;;7197:562;830:12790;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;:::i;:::-;;;;;;;;;;6649:10;830:12790;7847:227;;830:12790;-1:-1:-1;;;;;830:12790:38;;;;7847:227;;830:12790;;;7847:227;;830:12790;;;7847:227;;830:12790;;;;7826:10;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7847:227;;830:12790;;-1:-1:-1;;;;;830:12790:38;;;7847:227;;830:12790;;;;;;;;7847:227;;830:12790;;;;;;;;;;;;7847:227;;830:12790;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;8158:166;;830:12790;8158:166;830:12790;8158:166;;830:12790;8298:15;830:12790;8158:166;;830:12790;;;;8130:17;830:12790;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;:::i;:::-;;;;;;7197:562;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8158:166;;830:12790;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;830:12790:38;;;;;;;;;;;;;;;;;8158:166;;830:12790;;;;;8158:166;830:12790;;;;6649:10;830:12790;;8389:14;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;6649:10;830:12790;;6635:13;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8500:89;830:12790;;;;;;;6649:10;;;8500:89;;;;830:12790;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;-1:-1:-1;;;830:12790:38;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;-1:-1:-1;;;830:12790:38;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;-1:-1:-1;830:12790:38;;;7201:201;-1:-1:-1;;;830:12790:38;;;;;;;;;-1:-1:-1;;;830:12790:38;;;;;;;;6763:57;;;;830:12790;6763:57;830:12790;6763:57;;;;;;;:::i;:::-;;;;;830:12790;;;;;;;;;6631:63;830:12790;;-1:-1:-1;;;6675:19:38;;830:12790;;6675:19;6524:97;830:12790;;-1:-1:-1;;;6606:15:38;;830:12790;;6606:15;6528:69;6557:40;1540:2;6557:40;;6528:69;;6425:89;830:12790;;-1:-1:-1;;;6501:13:38;;830:12790;;6501:13;6429:63;6456:36;1488:2;6456:36;;6429:63;;6351:64;830:12790;;-1:-1:-1;;;6398:17:38;;830:12790;;6398:17;6279:62;830:12790;;-1:-1:-1;;;6321:20:38;;830:12790;;6321:20;830:12790;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;:::i;:::-;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;830:12790:38;;;;;13586:13;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:34;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;:::i;:::-;;;:::i;:::-;735:10:19;830:12790:38;;;;;;;;;;;;;;;;;;1167:27;;830:12790;;3519:23:0;3515:108;;-1:-1:-1;;;;;;830:12790:38;;;;11109:16;;11105:45;;830:12790;;11173:19;;;830:12790;;11255:35;;;;;;;;;;;;830:12790;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;11308:8;11304:37;;11538:36;11169:346;;830:12790;;;;;11538:36;830:12790;;;;;11169:346;830:12790;;-1:-1:-1;;;11413:34:38;;-1:-1:-1;;;;;830:12790:38;;;;;11413:34;;830:12790;;;;;;;;11413:34;;;;;;;;;;;;;11169:346;11412:35;;11408:97;;11538:36;11169:346;;;11413:34;;;;;;;;;;;;;;:::i;:::-;;;;;830:12790;;;;;;;;;11105:45;830:12790;;-1:-1:-1;;;11134:16:38;;830:12790;;11134:16;3515:108:0;830:12790:38;;;;3565:47:0;;;;;;735:10:19;830:12790:38;3565:47:0;;830:12790:38;;;;;3565:47:0;830:12790:38;;;;;;;;;;;;;;;;1096:24;830:12790;;;;;;;;;;;;;;;;;;;1540:2;830:12790;;;;;;;;;;;;;;;;;;;1357:2;830:12790;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;4747:26:0;830:12790:38;;;;:::i;:::-;;;;;;;;2475:4:0;830:12790:38;;;;3901:22:0;830:12790:38;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;830:12790:38;;;;;;;;;;;;;;;;;;1408:4;830:12790;;;;;;;;;;;;;;;;;;;1022:30;830:12790;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;:::i;:::-;-1:-1:-1;;;;;830:12790:38;;;2702:51;830:12790;;;;;;;;;;;2702:51;;;;;830:12790;2702:51;;;;:::i;:::-;830:12790;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;2577:51;830:12790;;;;;;;;;;;;2577:51;830:12790;2577:51;830:12790;2577:51;;830:12790;2577:51;;830:12790;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:72:22;;;:::i;:::-;2466:103:23;;:::i;:::-;4935:16:38;;4931:41;;1408:4;5058:27;830:12790;;5058:27;;:::i;:::-;830:12790;;-1:-1:-1;;;5165:63:38;;5189:10;830:12790;5165:63;;830:12790;5209:4;830:12790;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;5165:10;;830:12790;;5165:63;;;;;;;;;;;830:12790;5164:64;;5160:118;;5189:10;830:12790;;5334:15;830:12790;;;;;5334:42;830:12790;;;5334:42;:::i;:::-;830:12790;;5386:31;830:12790;5386:31;830:12790;5386:31;:::i;:::-;;830:12790;;;-1:-1:-1;;;5472:38:38;;5189:10;830:12790;5472:38;;830:12790;;;;;;;;;;;;;;;;5189:10;;5472:7;830:12790;5472:38;;;;;;;;;;;830:12790;5471:39;;5467:93;;830:12790;;;;;;;;5583:46;830:12790;5189:10;5583:46;;830:12790;3068:21:23;830:12790:38;;;5472:38;;;;;;;;;;;;;;:::i;:::-;;;;;830:12790;;;;;;;;;5165:63;;;;;;;;;;;;;;:::i;:::-;;;;4931:41;830:12790;;-1:-1:-1;;;4960:12:38;;830:12790;;4960:12;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1642:31;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;1940:31;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:11;830:12790;;;;;;;;;;;;;;;;;;;1488:2;830:12790;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1315:72:22;;:::i;:::-;2408:4;830:12790:38;;;;;;2408:4:22;830:12790:38;2427:20:22;830:12790:38;;;735:10:19;830:12790:38;;2427:20:22;830:12790:38;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;1408:4;12552:27;830:12790;;;;12552:27;:::i;:::-;830:12790;;;;;;;;;;;;;;;;;;;;;2931:25;830:12790;;;;;;;;;;;;;;;:::i;:::-;1315:72:22;;;:::i;:::-;2466:103:23;;:::i;:::-;8987:15:38;;8983:40;;9037:11;;:35;;;;830:12790;9033:63;;830:12790;;;;9148:10;830:12790;;;;;9181:15;830:12790;9181:15;;;830:12790;;9180:16;9176:49;;830:12790;;;9280:17;830:12790;;9394:66;830:12790;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;9181:15;830:12790;;;;;;;;;;;;;;;9395:39;-1:-1:-1;;;;;830:12790:38;9416:17;;830:12790;;;;9395:39;;:::i;:::-;830:12790;;9394:66;;:::i;:::-;830:12790;;9483:10;830:12790;9483:23;9479:60;;830:12790;-1:-1:-1;;;;;830:12790:38;;;9674:42;;;;;830:12790;;-1:-1:-1;;;9674:42:38;;9693:10;830:12790;9674:42;;830:12790;;;;;;;;;;;;;;;;;;9674:42;;;;;;;;830:12790;;9759:24;830:12790;9483:10;830:12790;9759:24;:::i;:::-;9483:10;830:12790;;;-1:-1:-1;;;9843:40:38;;9693:10;830:12790;9843:40;;830:12790;;;;;;;;;;;;;;;;9693:10;;9843:7;830:12790;9843:40;;;;;;;;;;;830:12790;9842:41;;9838:95;;830:12790;;;;;;;;9956:59;830:12790;9693:10;9956:59;;830:12790;9181:15;830:12790;;;9843:40;;;;;;;;;;;;;;:::i;:::-;;;;9674:42;-1:-1:-1;;;;;830:12790:38;;;;;;;;;9674:42;;;;830:12790;-1:-1:-1;;;830:12790:38;;;;;;;;9674:42;830:12790;;;9479:60;830:12790;;-1:-1:-1;;;9515:24:38;;830:12790;;9515:24;9176:49;830:12790;;-1:-1:-1;;;9205:20:38;;830:12790;;9205:20;9033:63;830:12790;;-1:-1:-1;;;9081:15:38;;830:12790;;9081:15;9037:35;830:12790;;;9052:20;;;9037:35;;830:12790;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11955:10;830:12790;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11994:17;830:12790;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:7:22;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;:::i;:::-;;;;12265:14;830:12790;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1796:7:22;830:12790:38;;;;2140:9:22;2136:62;;830:12790:38;;;1796:7:22;830:12790:38;2674:22:22;830:12790:38;;;735:10:19;830:12790:38;;2674:22:22;830:12790:38;;2136:62:22;830:12790:38;;-1:-1:-1;;;2172:15:22;;830:12790:38;;2172:15:22;830:12790:38;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;:::i;:::-;735:10:19;-1:-1:-1;;;;;830:12790:38;;5421:34:0;5417:102;;5529:37;830:12790:38;;;5529:37:0;:::i;5417:102::-;830:12790:38;;-1:-1:-1;;;5478:30:0;;830:12790:38;;5478:30:0;830:12790:38;;;;;;;-1:-1:-1;;830:12790:38;;;;;;1022:30;830:12790;;;;;;;;;735:10:19;830:12790:38;;;;;;;;;;3519:23:0;3515:108;;10292:12:38;;;10288:35;;830:12790;10430:29;830:12790;;;;;;;;;;;;;;;;10430:29;830:12790;;10288:35;830:12790;;-1:-1:-1;;;10313:10:38;;830:12790;;10313:10;830:12790;;;;;;;-1:-1:-1;;830:12790:38;;;;4330:25:0;830:12790:38;;;;:::i;:::-;;;;;;;;2475:4:0;830:12790:38;;;;3901:22:0;830:12790:38;2475:4:0;:::i;:::-;4330:25;:::i;830:12790:38:-;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;3901:22:0;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:27;830:12790;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;:::i;:::-;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;830:12790:38;;;;;2790:64;830:12790;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;-1:-1:-1;;;;;830:12790:38;;:::i;:::-;;;;1884:50;830:12790;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;2634:62;830:12790;;;2634:62;;;:::i;:::-;;;830:12790;2634:62;;;:::i;:::-;830:12790;;2634:62;;;830:12790;2634:62;;830:12790;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2673:47:0;;;:87;;;;830:12790:38;;;;;;;2673:87:0;-1:-1:-1;;;862:40:31;;-1:-1:-1;2673:87:0;;;830:12790:38;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;:::o;:::-;;;;;;-1:-1:-1;830:12790:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;830:12790:38;;;;-1:-1:-1;830:12790:38;;-1:-1:-1;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;830:12790:38;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;830:12790:38;;;;:::o;:::-;;;;-1:-1:-1;;;;;830:12790:38;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;:::o;:::-;-1:-1:-1;;;;;830:12790:38;;;;;;-1:-1:-1;;830:12790:38;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;830:12790:38;;-1:-1:-1;830:12790:38;;;-1:-1:-1;830:12790:38;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;:::o;3199:103:0:-;735:10:19;2954:6:0;830:12790:38;;;;;;;;;;1096:24;;830:12790;;3519:23:0;3515:108;;3199:103;:::o;:::-;830:12790:38;2954:6:0;830:12790:38;2954:6:0;830:12790:38;;;2954:6:0;830:12790:38;735:10:19;2954:6:0;830:12790:38;;;;;2954:6:0;830:12790:38;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;2954:6;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:19;6370:40:0;;;830:12790:38;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6732:317::-;;2954:6;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6826:217:0;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;;;6924:40:0;735:10:19;6924:40:0;;;830:12790:38;6978:11:0;:::o;830:12790:38:-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;1878:128:22:-;830:12790:38;1796:7:22;830:12790:38;;1939:61:22;;1878:128::o;1939:61::-;830:12790:38;;-1:-1:-1;;;1974:15:22;;;;;2575:307:23;2702:7;830:12790:38;;2702:18:23;2698:86;;2702:7;830:12790:38;;2575:307:23:o;2698:86::-;830:12790:38;;-1:-1:-1;;;2743:30:23;;;;;830:12790:38;;;;;;;;;;;;;-1:-1:-1;830:12790:38;;;;;;;;-1:-1:-1;;830:12790:38;;;;:::o;:::-;;;;;;;;;;:::o;12770:525::-;12911:11;;:35;;;;12770:525;12907:49;;12921:1;830:12790;;;;13007:10;830:12790;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;830:12790:38;;;;;;;;;;;;;;;;;;;;;;;;;13035:30;;830:12790;;13120:17;830:12790;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13159:27;13155:41;;830:12790;;13223:39;830:12790;13222:66;830:12790;;;13223:39;;:::i;13222:66::-;12770:525;:::o;13155:41::-;13188:8;;;;;;:::o;13035:30::-;13057:8;;;;;;;:::o;12907:49::-;12948:8;;12921:1;12948:8;:::o;12911:35::-;830:12790;12936:10;830:12790;12926:20;;;12911:35;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","EMERGENCY_ROLE()":"20df4359","MAX_GAME_TOKEN_DECIMALS()":"df525b7d","MAX_NAME_LENGTH()":"86074985","MAX_SYMBOL_LENGTH()":"e3d89171","MIN_XP_LOCK_AMOUNT()":"8760550d","PAUSER_ROLE()":"e63ab1e9","PRECISION_FACTOR()":"ccd34cd5","RATE_MANAGER_ROLE()":"cb327b8b","burnGameToken(uint256,uint256)":"5ed6c1db","calculateXpAmount(uint256)":"74b334c5","calculateXpReturn(uint256,uint256)":"3b420a73","createGameToken(uint256,string,string,uint8)":"fd44d274","credaToXpRate()":"238d4af8","credaToken()":"ecdf8fc4","emergencyWithdraw(address,address,uint256)":"e63ea408","gameTokenMetadata(uint256)":"05a61954","gameTokens(uint256)":"bf034b69","getGameTokenInfo(uint256)":"5e79c1dc","getRoleAdmin(bytes32)":"248a9ca3","getUserGameTokens(address)":"546fdad4","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isGameNameUsed(address,string)":"f7157558","lockCreda(uint256)":"bec697db","nextGameId()":"b135bbb0","pause()":"8456cb59","paused()":"5c975abb","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setRate(uint256)":"34fcf437","supportsInterface(bytes4)":"01ffc9a7","totalLockedCreda()":"aa6450ce","unpause()":"3f4ba83a","userGameNames(address,string)":"1bf44cb0","userGameTokens(address,uint256)":"c21c64a7","userLockedCreda(address)":"07819945","xpReserves()":"6d8554e2","xpToken()":"ae5014b1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credaToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xpToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateGameName\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameTokenDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameTokenNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientXpReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGameId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SymbolTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroRate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"credaAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpMinted\",\"type\":\"uint256\"}],\"name\":\"CredaLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpReturned\",\"type\":\"uint256\"}],\"name\":\"GameTokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xpLocked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"GameTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_GAME_TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NAME_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SYMBOL_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_XP_LOCK_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RATE_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnGameToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"credaAmount\",\"type\":\"uint256\"}],\"name\":\"calculateXpAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"calculateXpReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"xpAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"createGameToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"credaToXpRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"credaToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameTokenMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint88\",\"name\":\"xpLocked\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGameTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint88\",\"name\":\"xpLocked\",\"type\":\"uint88\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct GameTokenFactory.GameTokenInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct GameTokenFactory.GameTokenMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserGameTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"isGameNameUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCreda\",\"type\":\"uint256\"}],\"name\":\"lockCreda\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedCreda\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userGameNames\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userGameTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockedCreda\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xpReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enhanced factory contract maintaining original flow with improved security Key improvements: - Enhanced security with reentrancy protection and access controls - Gas optimizations through packed structs and efficient operations - Comprehensive input validation and error handling - Emergency controls and reserve management - Maintains original flow: CREDA \\u2192 XP \\u2192 Deploy GameToken \\u2192 Burn \\u2192 XP\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"burnGameToken(uint256,uint256)\":{\"details\":\"Burn game tokens to reclaim XP tokens\",\"params\":{\"burnAmount\":\"Amount of game tokens to burn\",\"gameId\":\"ID of the game token to burn\"}},\"calculateXpAmount(uint256)\":{\"details\":\"Calculate XP amount for given CREDA amount\",\"params\":{\"credaAmount\":\"Amount of CREDA tokens\"}},\"calculateXpReturn(uint256,uint256)\":{\"details\":\"Calculate XP return for burning game tokens\",\"params\":{\"burnAmount\":\"Amount to burn\",\"gameId\":\"ID of the game token\"}},\"createGameToken(uint256,string,string,uint8)\":{\"details\":\"Create a new ERC-20 game token by locking XP tokens\",\"params\":{\"decimals\":\"Decimals for the game token\",\"name\":\"Name of the game token\",\"symbol\":\"Symbol of the game token\",\"xpAmount\":\"Amount of XP tokens to lock\"}},\"emergencyWithdraw(address,address,uint256)\":{\"details\":\"Emergency withdraw function for stuck tokens\",\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Address to send tokens to\",\"token\":\"Address of token to withdraw\"}},\"getGameTokenInfo(uint256)\":{\"details\":\"Get complete game token information\",\"params\":{\"gameId\":\"ID of the game token\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserGameTokens(address)\":{\"details\":\"Get user's created game tokens\",\"params\":{\"user\":\"Address of the user\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isGameNameUsed(address,string)\":{\"details\":\"Check if user has already used a game name\",\"params\":{\"name\":\"Name to check\",\"user\":\"Address of the user\"}},\"lockCreda(uint256)\":{\"details\":\"Lock CREDA tokens and receive XP tokens\",\"params\":{\"amountCreda\":\"Amount of CREDA tokens to lock\"}},\"pause()\":{\"details\":\"Pause contract operations\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setRate(uint256)\":{\"details\":\"Update CREDA to XP conversion rate\",\"params\":{\"newRate\":\"New rate (with PRECISION_FACTOR scaling)\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"unpause()\":{\"details\":\"Unpause contract operations\"}},\"title\":\"GameTokenFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameTokenFactory.sol\":\"GameTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/GameToken.sol\":{\"keccak256\":\"0x005cb1b144b6bf2826915a6eca1e9759771dd12a7f4d215bdf206a52aa2d311d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ced9e903f6a63a47ad23c116168779cb1ca72f4c14716e5875091e1f944847\",\"dweb:/ipfs/QmYVCpc3WPCkGoTXNkb2AaSJQyqnNMTciYqenhb3M9B1cL\"]},\"contracts/GameTokenFactory.sol\":{\"keccak256\":\"0x265340e971ffe6cfbb15fa3287f7d242641f93d0955ff93cb1f99ba922988648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852b17dd5280b5b32807f9bc47e5811b647351b68e418401a8db07f27d2e0290\",\"dweb:/ipfs/QmVwsKr58YXaMRUiN6EZ9YdCVEUtTyUgFo7f2aA2CxqgQd\"]}},\"version\":1}"}},"contracts/Token.sol":{"MyToken":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"pauser","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1382,"id":null,"parameterSlots":1,"returnSlots":0},"fun_grantRole":{"entryPoint":1723,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_12678":{"entryPoint":1431,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_12679":{"entryPoint":1560,"id":256,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":1881,"id":4224,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_12677":{"entryPoint":2336,"id":4224,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"610160346200056157601f906001600160401b0390601f19906200206a3881900385810184168301929185841183851017620004635781608092849260409687528339810103126200056157620000568162000582565b906020916200006783830162000582565b906200008360606200007b87860162000582565b940162000582565b93855196620000928862000566565b60078852818801986626bcaa37b5b2b760c91b808b52885190620000b68262000566565b6007825284820152885192620000cc8462000566565b60039c8d8552624d544b60e81b868601528a519d8e620000ec8162000566565b876001918281520194603160f81b865280519087821162000463578354908382811c9216801562000556575b8b83101462000540578186849311620004ea575b508a90868311600114620004855760009262000479575b505060001982851b1c191690821b1782555b865192868411620004635760049788548381811c9116801562000458575b8b8210146200044357828111620003f8575b50899185116001146200038f578495509084929160009562000383575b50501b92600019911b1c19161783555b620001bd8a62000759565b9a6101209b8c52620001cf8d62000920565b9a6101409b8c525190209b8c60e052519020936101009b858d524660a052895195858701917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528b88015260608701524660808701523060a087015260a0865260c0860192868410908411176200036e57828a52855190206080523060c0526001600160a01b03169384156200035757505060ff6005541662000349576002546a084595161401484a000000918282018092116200033457509260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620002dd94620002e49794620002eb9a99976002558484528382528b84208181540190558b51908152a362000597565b5062000618565b50620006bb565b505191611571938462000ad9853960805184611275015260a05184611341015260c0518461123f015260e051846112c4015251836112ea0152518261055b015251816105850152f35b601190634e487b7160e01b6000525260246000fd5b865163d93c066560e01b8152fd5b63ec442f0560e01b8252600060c490910152602490fd5b604184634e487b7160e01b6000525260246000fd5b015193503880620001a2565b92919484169288600052848a6000209460005b8c89838310620003e05750505010620003c5575b50505050811b018355620001b2565b01519060f884600019921b161c1916905538808080620003b6565b868601518955909701969485019488935001620003a2565b896000528a6000208380880160051c8201928d891062000439575b0160051c019084905b8281106200042c57505062000185565b600081550184906200041c565b9250819262000413565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000173565b634e487b7160e01b600052604160045260246000fd5b01519050388062000143565b908785941691866000528c600020928d6000905b828210620004d25750508411620004b9575b505050811b01825562000155565b015160001983871b60f8161c19169055388080620004ab565b83850151865588979095019493840193018e62000499565b909150846000528a6000208680850160051c8201928d861062000536575b918691869594930160051c01915b828110620005265750506200012c565b6000815585945086910162000516565b9250819262000508565b634e487b7160e01b600052602260045260246000fd5b91607f169162000118565b600080fd5b604081019081106001600160401b038211176200046357604052565b51906001600160a01b03821682036200056157565b6001600160a01b031660008181527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8602052604081205490919060ff16620006145781805260066020526040822081835260205260408220600160ff1982541617905533916000805160206200204a8339815191528180a4600190565b5090565b6001600160a01b031660008181527fe09f975e15f8f53f24cbbc282b13c40b84df485fcdb8d3997fa103dc5a4ef84160205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16620006b65780835260066020526040832082845260205260408320600160ff198254161790556000805160206200204a833981519152339380a4600190565b505090565b6001600160a01b031660008181527f3195c024b2ddd6d9b8f6c836aa52f67fe69376c8903d009b80229b3ce4425f5160205260408120549091907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff16620006b65780835260066020526040832082845260205260408320600160ff198254161790556000805160206200204a833981519152339380a4600190565b805160209081811015620007f65750601f8251116200079557808251920151908083106200078657501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620007dc575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620007b8565b906001600160401b0382116200046357600754926001938481811c9116801562000915575b838210146200054057601f8111620008db575b5081601f84116001146200086f575092829391839260009462000863575b50501b916000199060031b1c19161760075560ff90565b0151925038806200084c565b919083601f198116600760005284600020946000905b88838310620008c05750505010620008a6575b505050811b0160075560ff90565b015160001960f88460031b161c1916905538808062000898565b85870151885590960195948501948793509081019062000885565b600760005284601f84600020920160051c820191601f860160051c015b828110620009085750506200082e565b60008155018590620008f8565b90607f16906200081b565b805160209081811015620009ae5750601f8251116200094d57808251920151908083106200078657501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000994575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000970565b906001600160401b0382116200046357600854926001938481811c9116801562000acd575b838210146200054057601f811162000a93575b5081601f841160011462000a27575092829391839260009462000a1b575b50501b916000199060031b1c19161760085560ff90565b01519250388062000a04565b919083601f198116600860005284600020946000905b8883831062000a78575050501062000a5e575b505050811b0160085560ff90565b015160001960f88460031b161c1916905538808062000a50565b85870151885590960195948501948793509081019062000a3d565b600860005284601f84600020920160051c820191601f860160051c015b82811062000ac0575050620009e6565b6000815501859062000ab0565b90607f1690620009d356fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610b4b5750816306fdde0314610a78578163095ea7b314610a4e57816318160ddd14610a2f57816323b872dd146109f2578163248a9ca3146109c75781632f2ff15d1461099d578163313ce567146109815781633644e5151461095d57816336568abe146109175781633f4ba83a146108ad57816340c10f19146107a057816342966c68146107825781635c975abb1461075e57816370a082311461072757816379cc6790146106f45781637ecebe00146106bc5781638456cb591461066157816384b0196e1461054357816391d14854146104fc57816395d89b4114610411578163a217fddf146103f6578163a9059cbb146103c5578163d505accf1461025d578163d539139314610222578163d547741f146101de57508063dd62ed3e146101965763e63ab1e91461015957600080fd5b34610192578160031936011261019257602090517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b5080fd5b5034610192578060031936011261019257806020926101b3610bde565b6101bb610bf9565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b9190503461021e578060031936011261021e5761021a91356102156001610203610bf9565b93838752600660205286200154610c89565b610d2f565b5080f35b8280fd5b505034610192578160031936011261019257602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b839150346101925760e036600319011261019257610279610bde565b610281610bf9565b906044359260643560843560ff811681036103c1578142116103aa5760018060a01b0390818516928389526009602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610397578b525190206103659161035c9161033661123c565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611127565b909291926111b7565b1681810361037c5786610379878787610f1a565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b875163313c898160e11b8152808401839052602490fd5b8680fd5b5050346101925780600319360112610192576020906103ef6103e5610bde565b6024359033610e34565b5160018152f35b50503461019257816003193601126101925751908152602090f35b9190503461021e578260031936011261021e578051918381549061043482610da6565b808652926001928084169081156104d15750600114610475575b610471868661045f828b0383610e12565b51918291602083526020830190610b9e565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104b95750505061045f82602061047195820101943861044e565b8054602087870181019190915290950194810161049b565b905061047197508693506020925061045f94915060ff191682840152151560051b820101943861044e565b90503461021e578160031936011261021e578160209360ff9261051d610bf9565b90358252600686528282206001600160a01b039091168252855220549151911615158152f35b9190503461021e578260031936011261021e5761057f7f0000000000000000000000000000000000000000000000000000000000000000611367565b926105a97f0000000000000000000000000000000000000000000000000000000000000000611463565b908251926020928385019585871067ffffffffffffffff88111761064e575092806106048388966105f7998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610b9e565b91898303908a0152610b9e565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061063757505050500390f35b835185528695509381019392810192600101610628565b634e487b7160e01b845260419052602483fd5b50503461019257816003193601126101925760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161069f610c0f565b6106a761151d565b600160ff19600554161760055551338152a180f35b5050346101925760203660031901126101925760209181906001600160a01b036106e4610bde565b1681526009845220549051908152f35b5050346101925736600319011261072457610379610710610bde565b6024359061071f823383610fad565b611080565b80fd5b5050346101925760203660031901126101925760209181906001600160a01b0361074f610bde565b16815280845220549051908152f35b50503461019257816003193601126101925760209060ff6005541690519015158152f35b83903461019257602036600319011261019257610379903533611080565b9190503461021e578060031936011261021e576107bb610bde565b90602435917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6808652600660205282862033875260205260ff83872054161561088f57506001600160a01b031692831561087a5761081761151d565b60025490838201809211610867575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b825163e2517d3f60e01b815233818701526024810191909152604490fd5b90503461021e578260031936011261021e576108c7610c0f565b6005549060ff821615610909575060ff1916600555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b838334610192578060031936011261019257610931610bf9565b90336001600160a01b0383160361094e575061021a919235610d2f565b5163334bd91960e11b81528390fd5b50503461019257816003193601126101925760209061097a61123c565b9051908152f35b5050346101925781600319360112610192576020905160128152f35b9190503461021e578060031936011261021e5761021a91356109c26001610203610bf9565b610caf565b90503461021e57602036600319011261021e5781602093600192358152600685522001549051908152f35b505034610192576060366003190112610192576020906103ef610a13610bde565b610a1b610bf9565b60443591610a2a833383610fad565b610e34565b5050346101925781600319360112610192576020906002549051908152f35b5050346101925780600319360112610192576020906103ef610a6e610bde565b6024359033610f1a565b50503461019257816003193601126101925780519082600354610a9a81610da6565b80855291600191808316908115610b235750600114610ac6575b50505061045f82610471940383610e12565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610b0b5750505061045f8260206104719582010194610ab4565b80546020878701810191909152909501948101610aee565b61047197508693506020925061045f94915060ff191682840152151560051b82010194610ab4565b84913461021e57602036600319011261021e573563ffffffff60e01b811680910361021e5760209250637965db0b60e01b8114908115610b8d575b5015158152f35b6301ffc9a760e01b14905083610b86565b919082519283825260005b848110610bca575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ba9565b600435906001600160a01b0382168203610bf457565b600080fd5b602435906001600160a01b0382168203610bf457565b3360009081527fe09f975e15f8f53f24cbbc282b13c40b84df485fcdb8d3997fa103dc5a4ef84160205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff1615610c6b5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600660205260406000203360005260205260ff6040600020541615610c6b5750565b906000918083526006602052604083209160018060a01b03169182845260205260ff60408420541615600014610d2a5780835260066020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526006602052604083209160018060a01b03169182845260205260ff604084205416600014610d2a578083526006602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c92168015610dd6575b6020831014610dc057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610db5565b6040810190811067ffffffffffffffff821117610dfc57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610dfc57604052565b916001600160a01b03808416928315610f015716928315610ee857610e5761151d565b60009083825281602052604082205490838210610eb6575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b03908116918215610f945716918215610f7b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b9160018060a01b038093169160009383855260016020526040938486209183169182875260205284862054926000198410610fec575b50505050505050565b8484106110505750801561103857811561102057855260016020528385209085526020520391205538808080808080610fe3565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b038216908115610f015761109a61151d565b600092828452836020526040842054908282106110f55750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116111ab57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561119f5780516001600160a01b0381161561119657918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561122657806111c9575050565b600181036111e35760405163f645eedf60e01b8152600490fd5b600281036112045760405163fce698f760e01b815260048101839052602490fd5b60031461120e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061133e575b15611297577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610dfc5760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461126e565b60ff81146113a55760ff811690601f8211611393576040519161138983610de0565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516007548160006113b883610da6565b8083529260019081811690811561144157506001146113e2575b506113df92500382610e12565b90565b6007600090815291507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b84831061142657506113df9350508101602001386113d2565b8193509081602092548385890101520191019091849261140d565b9050602092506113df94915060ff191682840152151560051b820101386113d2565b60ff81146114855760ff811690601f8211611393576040519161138983610de0565b5060405160085481600061149883610da6565b8083529260019081811690811561144157506001146114be57506113df92500382610e12565b6008600090815291507ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b84831061150257506113df9350508101602001386113d2565b819350908160209254838589010152019101909184926114e9565b60ff6005541661152957565b60405163d93c066560e01b8152600490fdfea26469706673582212206e841c09d240a722bffa331c60dc2a1b0cdf217b5de335af2cebf32e62f791f264736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH2 0x160 CALLVALUE PUSH3 0x561 JUMPI PUSH1 0x1F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F NOT SWAP1 PUSH3 0x206A CODESIZE DUP2 SWAP1 SUB DUP6 DUP2 ADD DUP5 AND DUP4 ADD SWAP3 SWAP2 DUP6 DUP5 GT DUP4 DUP6 LT OR PUSH3 0x463 JUMPI DUP2 PUSH1 0x80 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x561 JUMPI PUSH3 0x56 DUP2 PUSH3 0x582 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0x67 DUP4 DUP4 ADD PUSH3 0x582 JUMP JUMPDEST SWAP1 PUSH3 0x83 PUSH1 0x60 PUSH3 0x7B DUP8 DUP7 ADD PUSH3 0x582 JUMP JUMPDEST SWAP5 ADD PUSH3 0x582 JUMP JUMPDEST SWAP4 DUP6 MLOAD SWAP7 PUSH3 0x92 DUP9 PUSH3 0x566 JUMP JUMPDEST PUSH1 0x7 DUP9 MSTORE DUP2 DUP9 ADD SWAP9 PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP1 DUP12 MSTORE DUP9 MLOAD SWAP1 PUSH3 0xB6 DUP3 PUSH3 0x566 JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE DUP5 DUP3 ADD MSTORE DUP9 MLOAD SWAP3 PUSH3 0xCC DUP5 PUSH3 0x566 JUMP JUMPDEST PUSH1 0x3 SWAP13 DUP14 DUP6 MSTORE PUSH3 0x4D544B PUSH1 0xE8 SHL DUP7 DUP7 ADD MSTORE DUP11 MLOAD SWAP14 DUP15 PUSH3 0xEC DUP2 PUSH3 0x566 JUMP JUMPDEST DUP8 PUSH1 0x1 SWAP2 DUP3 DUP2 MSTORE ADD SWAP5 PUSH1 0x31 PUSH1 0xF8 SHL DUP7 MSTORE DUP1 MLOAD SWAP1 DUP8 DUP3 GT PUSH3 0x463 JUMPI DUP4 SLOAD SWAP1 DUP4 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x556 JUMPI JUMPDEST DUP12 DUP4 LT EQ PUSH3 0x540 JUMPI DUP2 DUP7 DUP5 SWAP4 GT PUSH3 0x4EA JUMPI JUMPDEST POP DUP11 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x485 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x479 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP3 SHL OR DUP3 SSTORE JUMPDEST DUP7 MLOAD SWAP3 DUP7 DUP5 GT PUSH3 0x463 JUMPI PUSH1 0x4 SWAP8 DUP9 SLOAD DUP4 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x458 JUMPI JUMPDEST DUP12 DUP3 LT EQ PUSH3 0x443 JUMPI DUP3 DUP2 GT PUSH3 0x3F8 JUMPI JUMPDEST POP DUP10 SWAP2 DUP6 GT PUSH1 0x1 EQ PUSH3 0x38F JUMPI DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x383 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH3 0x1BD DUP11 PUSH3 0x759 JUMP JUMPDEST SWAP11 PUSH2 0x120 SWAP12 DUP13 MSTORE PUSH3 0x1CF DUP14 PUSH3 0x920 JUMP JUMPDEST SWAP11 PUSH2 0x140 SWAP12 DUP13 MSTORE MLOAD SWAP1 KECCAK256 SWAP12 DUP13 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x100 SWAP12 DUP6 DUP14 MSTORE CHAINID PUSH1 0xA0 MSTORE DUP10 MLOAD SWAP6 DUP6 DUP8 ADD SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP4 MSTORE DUP12 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE CHAINID PUSH1 0x80 DUP8 ADD MSTORE ADDRESS PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 MSTORE PUSH1 0xC0 DUP7 ADD SWAP3 DUP7 DUP5 LT SWAP1 DUP5 GT OR PUSH3 0x36E JUMPI DUP3 DUP11 MSTORE DUP6 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH3 0x357 JUMPI POP POP PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH3 0x349 JUMPI PUSH1 0x2 SLOAD PUSH11 0x84595161401484A000000 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x334 JUMPI POP SWAP3 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH3 0x2DD SWAP5 PUSH3 0x2E4 SWAP8 SWAP5 PUSH3 0x2EB SWAP11 SWAP10 SWAP8 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP12 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE DUP12 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH3 0x597 JUMP JUMPDEST POP PUSH3 0x618 JUMP JUMPDEST POP PUSH3 0x6BB JUMP JUMPDEST POP MLOAD SWAP2 PUSH2 0x1571 SWAP4 DUP5 PUSH3 0xAD9 DUP6 CODECOPY PUSH1 0x80 MLOAD DUP5 PUSH2 0x1275 ADD MSTORE PUSH1 0xA0 MLOAD DUP5 PUSH2 0x1341 ADD MSTORE PUSH1 0xC0 MLOAD DUP5 PUSH2 0x123F ADD MSTORE PUSH1 0xE0 MLOAD DUP5 PUSH2 0x12C4 ADD MSTORE MLOAD DUP4 PUSH2 0x12EA ADD MSTORE MLOAD DUP3 PUSH2 0x55B ADD MSTORE MLOAD DUP2 PUSH2 0x585 ADD MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x0 PUSH1 0xC4 SWAP1 SWAP2 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x41 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 DUP5 AND SWAP3 DUP9 PUSH1 0x0 MSTORE DUP5 DUP11 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP13 DUP10 DUP4 DUP4 LT PUSH3 0x3E0 JUMPI POP POP POP LT PUSH3 0x3C5 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0x1B2 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x3B6 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x3A2 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP10 LT PUSH3 0x439 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x42C JUMPI POP POP PUSH3 0x185 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH3 0x41C JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x22 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x173 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x143 JUMP JUMPDEST SWAP1 DUP8 DUP6 SWAP5 AND SWAP2 DUP7 PUSH1 0x0 MSTORE DUP13 PUSH1 0x0 KECCAK256 SWAP3 DUP14 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x4D2 JUMPI POP POP DUP5 GT PUSH3 0x4B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x155 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x4AB JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP9 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x499 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP7 LT PUSH3 0x536 JUMPI JUMPDEST SWAP2 DUP7 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x526 JUMPI POP POP PUSH3 0x12C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP7 SWAP2 ADD PUSH3 0x516 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x508 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x118 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x463 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x561 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x54CDD369E4E8A8515E52CA72EC816C2101831AD1F18BF44102ED171459C9B4F8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x614 JUMPI DUP2 DUP1 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x204A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xE09F975E15F8F53F24CBBC282B13C40B84DF485FCDB8D3997FA103DC5A4EF841 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0x6B6 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x204A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x3195C024B2DDD6D9B8F6C836AA52F67FE69376C8903D009B80229B3CE4425F51 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND PUSH3 0x6B6 JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x204A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x7F6 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x795 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x786 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x7DC JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x7B8 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x463 JUMPI PUSH1 0x7 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x915 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x540 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x8DB JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x86F JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x863 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x84C JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x7 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x8C0 JUMPI POP POP POP LT PUSH3 0x8A6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x898 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x885 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x908 JUMPI POP POP PUSH3 0x82E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x8F8 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x81B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x9AE JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x94D JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x786 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x994 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x970 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x463 JUMPI PUSH1 0x8 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xACD JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x540 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xA93 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0xA27 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0xA1B JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xA04 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xA78 JUMPI POP POP POP LT PUSH3 0xA5E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xA50 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xA3D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xAC0 JUMPI POP POP PUSH3 0x9E6 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xAB0 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x9D3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0xB4B JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xA78 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA4E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0xA2F JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x9F2 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x9C7 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x99D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x981 JUMPI DUP2 PUSH4 0x3644E515 EQ PUSH2 0x95D JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x917 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x8AD JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x7A0 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x782 JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x75E JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x727 JUMPI DUP2 PUSH4 0x79CC6790 EQ PUSH2 0x6F4 JUMPI DUP2 PUSH4 0x7ECEBE00 EQ PUSH2 0x6BC JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x661 JUMPI DUP2 PUSH4 0x84B0196E EQ PUSH2 0x543 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x4FC JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x411 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x3F6 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x3C5 JUMPI DUP2 PUSH4 0xD505ACCF EQ PUSH2 0x25D JUMPI DUP2 PUSH4 0xD5391393 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1DE JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x196 JUMPI PUSH4 0xE63AB1E9 EQ PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1B3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x1BB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x21A SWAP2 CALLDATALOAD PUSH2 0x215 PUSH1 0x1 PUSH2 0x203 PUSH2 0xBF9 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xC89 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH2 0x279 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x281 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x3C1 JUMPI DUP2 TIMESTAMP GT PUSH2 0x3AA JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 AND SWAP3 DUP4 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP10 DUP10 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE DUP11 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP7 DUP14 DUP5 ADD MSTORE DUP6 DUP11 AND PUSH1 0x60 DUP5 ADD MSTORE DUP11 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x397 JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x365 SWAP2 PUSH2 0x35C SWAP2 PUSH2 0x336 PUSH2 0x123C JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x11B7 JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x37C JUMPI DUP7 PUSH2 0x379 DUP8 DUP8 DUP8 PUSH2 0xF1A JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0x3E5 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xE34 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x434 DUP3 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x4D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x475 JUMPI JUMPDEST PUSH2 0x471 DUP7 DUP7 PUSH2 0x45F DUP3 DUP12 SUB DUP4 PUSH2 0xE12 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xB9E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x4B9 JUMPI POP POP POP PUSH2 0x45F DUP3 PUSH1 0x20 PUSH2 0x471 SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x44E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x471 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x45F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x44E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x51D PUSH2 0xBF9 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x57F PUSH32 0x0 PUSH2 0x1367 JUMP JUMPDEST SWAP3 PUSH2 0x5A9 PUSH32 0x0 PUSH2 0x1463 JUMP JUMPDEST SWAP1 DUP3 MLOAD SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP6 ADD SWAP6 DUP6 DUP8 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP9 GT OR PUSH2 0x64E JUMPI POP SWAP3 DUP1 PUSH2 0x604 DUP4 DUP9 SWAP7 PUSH2 0x5F7 SWAP10 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE DUP2 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xF PUSH1 0xF8 SHL DUP12 MSTORE PUSH1 0xE0 DUP7 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0xB9E JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0xB9E JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x637 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x628 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x69F PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6E4 PUSH2 0xBDE JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x724 JUMPI PUSH2 0x379 PUSH2 0x710 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x71F DUP3 CALLER DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74F PUSH2 0xBDE JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH2 0x379 SWAP1 CALLDATALOAD CALLER PUSH2 0x1080 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x7BB PUSH2 0xBDE JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x87A JUMPI PUSH2 0x817 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x867 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x8C7 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x909 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x5 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH2 0x931 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x94E JUMPI POP PUSH2 0x21A SWAP2 SWAP3 CALLDATALOAD PUSH2 0xD2F JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x97A PUSH2 0x123C JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x21A SWAP2 CALLDATALOAD PUSH2 0x9C2 PUSH1 0x1 PUSH2 0x203 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0xA13 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xA2A DUP4 CALLER DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0xA6E PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xF1A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0xA9A DUP2 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0xB23 JUMPI POP PUSH1 0x1 EQ PUSH2 0xAC6 JUMPI JUMPDEST POP POP POP PUSH2 0x45F DUP3 PUSH2 0x471 SWAP5 SUB DUP4 PUSH2 0xE12 JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0xB0B JUMPI POP POP POP PUSH2 0x45F DUP3 PUSH1 0x20 PUSH2 0x471 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0xAB4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x471 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x45F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xAB4 JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x21E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xB8D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xB86 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xBCA JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF4 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE09F975E15F8F53F24CBBC282B13C40B84DF485FCDB8D3997FA103DC5A4EF841 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC6B JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC6B JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xD2A JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xD2A JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xDD6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xDC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF01 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xEE8 JUMPI PUSH2 0xE57 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xEB6 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xF94 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP2 PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP7 KECCAK256 SWAP2 DUP4 AND SWAP2 DUP3 DUP8 MSTORE PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0xFEC JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP5 LT PUSH2 0x1050 JUMPI POP DUP1 ISZERO PUSH2 0x1038 JUMPI DUP2 ISZERO PUSH2 0x1020 JUMPI DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE SUB SWAP2 KECCAK256 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xFE3 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xF01 JUMPI PUSH2 0x109A PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x10F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x11AB JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x119F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1196 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1226 JUMPI DUP1 PUSH2 0x11C9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1204 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x120E JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x133E JUMPI JUMPDEST ISZERO PUSH2 0x1297 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x126E JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x13A5 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1389 DUP4 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x7 SLOAD DUP2 PUSH1 0x0 PUSH2 0x13B8 DUP4 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1441 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13E2 JUMPI JUMPDEST POP PUSH2 0x13DF SWAP3 POP SUB DUP3 PUSH2 0xE12 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 JUMPDEST DUP5 DUP4 LT PUSH2 0x1426 JUMPI POP PUSH2 0x13DF SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x13DF SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1485 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1389 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1498 DUP4 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1441 JUMPI POP PUSH1 0x1 EQ PUSH2 0x14BE JUMPI POP PUSH2 0x13DF SWAP3 POP SUB DUP3 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 JUMPDEST DUP5 DUP4 LT PUSH2 0x1502 JUMPI POP PUSH2 0x13DF SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x1529 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x841C09D240A722BFFA331C60DC2A1B 0xC 0xDF 0x21 PUSH28 0x5DE335AF2CEBF32E62F791F264736F6C634300081400332F8788117E PUSH31 0xFF1D82E926EC794901D17C78024A50270940304540A733656F0D0000000000 ","sourceMap":"541:1087:39:-:0;;;;;;-1:-1:-1;;;;;541:1087:39;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;541:1087:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;541:1087:39;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;-1:-1:-1;541:1087:39;;;;-1:-1:-1;;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;1671:17:10;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;3501:45:29;;;:::i;:::-;3493:53;;;;;3567:51;;;:::i;:::-;3556:62;;;;;541:1087:39;3642:22:29;;3628:36;;;;541:1087:39;3691:25:29;;3674:42;;;;;;3744:13;3727:30;;541:1087:39;;4304:80:29;;;;2079:95;;;;;;;;541:1087:39;2079:95:29;;;3744:13;541:1087:39;2079:95:29;;;4378:4;3727:30;2079:95;;541:1087:39;3727:30:29;4304:80;;2079:95;541:1087:39;;;;;;;;;;;;;;;;;4294:91:29;;541:1087:39;3767:48:29;4378:4;2079:95;3825:27;-1:-1:-1;;;;;541:1087:39;;7509:21:10;;7505:91;;541:1087:39;;;1796:7:22;541:1087:39;;1939:61:22;;6214:21:10;541:1087:39;;;;;;;;;;;;;-1:-1:-1;7064:25:10;985:44:39;541:1087;1039:31;541:1087;;1080:31;541:1087;;;6214:21:10;541:1087:39;;;;;;;;;;;;;;;;;;2079:95:29;;;7064:25:10;985:44:39;:::i;:::-;;1039:31;:::i;:::-;;1080;:::i;:::-;;541:1087;;;;;;;;;;;;;;3727:30:29;541:1087:39;;;;;2079:95:29;541:1087:39;;;;;3628:36:29;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;-1:-1:-1;541:1087:39;1939:61:22;541:1087:39;;-1:-1:-1;;;1974:15:22;;;7505:91:10;-1:-1:-1;;;7553:32:10;;-1:-1:-1;7553:32:10;;;;541:1087:39;;;7553:32:10;541:1087:39;;;;;;-1:-1:-1;541:1087:39;;;-1:-1:-1;541:1087:39;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;-1:-1:-1;541:1087:39;;1671:17:10;541:1087:39;;-1:-1:-1;541:1087:39;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;-1:-1:-1;541:1087:39;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;-1:-1:-1;541:1087:39;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;-1:-1:-1;;;;;541:1087:39;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;541:1087:39;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;735:10:19;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;541:1087:39;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;541:1087:39;-1:-1:-1;541:1087:39;;;;;;;;;;-1:-1:-1;;541:1087:39;669:24;;541:1087;;;;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;541:1087:39;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;541:1087:39;-1:-1:-1;541:1087:39;;;;;;;;;;-1:-1:-1;;541:1087:39;737:24;;541:1087;;;;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:19;6370:40:0;;;541:1087:39;6424:11:0;:::o;2887:340:24:-;541:1087:39;;3032:2:24;;3010:24;;;3032:2;;;541:1087:39;1854:2:24;541:1087:39;;1840:16:24;1836:72;;541:1087:39;;;;;;;;;;;;1949:36:24;;3050:27;:::o;541:1087:39:-;;;;;;;;;;1949:36:24;3050:27;:::o;1836:72::-;541:1087:39;;;1879:18:24;;;;;;;;;;;541:1087:39;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;1854:2:24;541:1087:39;;;;;;;1879:18:24;;;;541:1087:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;3006:215:24;541:1087:39;-1:-1:-1;;;;;541:1087:39;;;;;;;;;;;;;;;;;;;3006:215:24;541:1087:39;;;;;;;;;;;3006:215:24;541:1087:39;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;1390:66:24;3168:42;:::o;541:1087:39:-;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;1390:66:24;3168:42;:::o;541:1087:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;-1:-1:-1;541:1087:39;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;2887:340:24;541:1087:39;;3032:2:24;;3010:24;;;3032:2;;;541:1087:39;1854:2:24;541:1087:39;;1840:16:24;1836:72;;541:1087:39;;;;;;;;;;;;1949:36:24;;3050:27;:::o;1836:72::-;541:1087:39;;;1879:18:24;;;;;;;;;;;541:1087:39;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;1854:2:24;541:1087:39;;;;;;;1879:18:24;;;;541:1087:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;3006:215:24;541:1087:39;-1:-1:-1;;;;;541:1087:39;;;;3601:16:29;541:1087:39;;;;;;;;;;;;;;3006:215:24;541:1087:39;;;;;;;;;;;3006:215:24;541:1087:39;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;3601:16:29;541:1087:39;1390:66:24;3168:42;:::o;541:1087:39:-;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;3601:16:29;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;3601:16:29;541:1087:39;1390:66:24;3168:42;:::o;541:1087:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;3601:16:29;-1:-1:-1;541:1087:39;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3065,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_11929":{"entryPoint":3038,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":2974,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3494,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3602,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_17888":{"entryPoint":3552,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":3866,"id":2406,"parameterSlots":3,"returnSlots":0},"fun_burn":{"entryPoint":4224,"id":2328,"parameterSlots":2,"returnSlots":0},"fun_checkRole":{"entryPoint":3209,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_11935":{"entryPoint":3087,"id":93,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":4668,"id":6410,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":3247,"id":256,"parameterSlots":2,"returnSlots":1},"fun_requireNotPaused":{"entryPoint":5405,"id":3951,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":3375,"id":294,"parameterSlots":2,"returnSlots":1},"fun_spendAllowance":{"entryPoint":4013,"id":2454,"parameterSlots":3,"returnSlots":0},"fun_throwError":{"entryPoint":4535,"id":6286,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":5219,"id":4251,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_11943":{"entryPoint":4967,"id":4251,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":3636,"id":2185,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":4391,"id":6201,"parameterSlots":4,"returnSlots":3}},"generatedSources":[],"immutableReferences":{"6308":[{"length":32,"start":4725}],"6310":[{"length":32,"start":4929}],"6312":[{"length":32,"start":4671}],"6314":[{"length":32,"start":4804}],"6316":[{"length":32,"start":4842}],"6319":[{"length":32,"start":1371}],"6322":[{"length":32,"start":1413}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610b4b5750816306fdde0314610a78578163095ea7b314610a4e57816318160ddd14610a2f57816323b872dd146109f2578163248a9ca3146109c75781632f2ff15d1461099d578163313ce567146109815781633644e5151461095d57816336568abe146109175781633f4ba83a146108ad57816340c10f19146107a057816342966c68146107825781635c975abb1461075e57816370a082311461072757816379cc6790146106f45781637ecebe00146106bc5781638456cb591461066157816384b0196e1461054357816391d14854146104fc57816395d89b4114610411578163a217fddf146103f6578163a9059cbb146103c5578163d505accf1461025d578163d539139314610222578163d547741f146101de57508063dd62ed3e146101965763e63ab1e91461015957600080fd5b34610192578160031936011261019257602090517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b5080fd5b5034610192578060031936011261019257806020926101b3610bde565b6101bb610bf9565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b9190503461021e578060031936011261021e5761021a91356102156001610203610bf9565b93838752600660205286200154610c89565b610d2f565b5080f35b8280fd5b505034610192578160031936011261019257602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b839150346101925760e036600319011261019257610279610bde565b610281610bf9565b906044359260643560843560ff811681036103c1578142116103aa5760018060a01b0390818516928389526009602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff821117610397578b525190206103659161035c9161033661123c565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611127565b909291926111b7565b1681810361037c5786610379878787610f1a565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b875163313c898160e11b8152808401839052602490fd5b8680fd5b5050346101925780600319360112610192576020906103ef6103e5610bde565b6024359033610e34565b5160018152f35b50503461019257816003193601126101925751908152602090f35b9190503461021e578260031936011261021e578051918381549061043482610da6565b808652926001928084169081156104d15750600114610475575b610471868661045f828b0383610e12565b51918291602083526020830190610b9e565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104b95750505061045f82602061047195820101943861044e565b8054602087870181019190915290950194810161049b565b905061047197508693506020925061045f94915060ff191682840152151560051b820101943861044e565b90503461021e578160031936011261021e578160209360ff9261051d610bf9565b90358252600686528282206001600160a01b039091168252855220549151911615158152f35b9190503461021e578260031936011261021e5761057f7f0000000000000000000000000000000000000000000000000000000000000000611367565b926105a97f0000000000000000000000000000000000000000000000000000000000000000611463565b908251926020928385019585871067ffffffffffffffff88111761064e575092806106048388966105f7998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610b9e565b91898303908a0152610b9e565b924660608801523060808801528460a088015286840360c088015251928381520193925b82811061063757505050500390f35b835185528695509381019392810192600101610628565b634e487b7160e01b845260419052602483fd5b50503461019257816003193601126101925760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161069f610c0f565b6106a761151d565b600160ff19600554161760055551338152a180f35b5050346101925760203660031901126101925760209181906001600160a01b036106e4610bde565b1681526009845220549051908152f35b5050346101925736600319011261072457610379610710610bde565b6024359061071f823383610fad565b611080565b80fd5b5050346101925760203660031901126101925760209181906001600160a01b0361074f610bde565b16815280845220549051908152f35b50503461019257816003193601126101925760209060ff6005541690519015158152f35b83903461019257602036600319011261019257610379903533611080565b9190503461021e578060031936011261021e576107bb610bde565b90602435917f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6808652600660205282862033875260205260ff83872054161561088f57506001600160a01b031692831561087a5761081761151d565b60025490838201809211610867575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b825163e2517d3f60e01b815233818701526024810191909152604490fd5b90503461021e578260031936011261021e576108c7610c0f565b6005549060ff821615610909575060ff1916600555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b838334610192578060031936011261019257610931610bf9565b90336001600160a01b0383160361094e575061021a919235610d2f565b5163334bd91960e11b81528390fd5b50503461019257816003193601126101925760209061097a61123c565b9051908152f35b5050346101925781600319360112610192576020905160128152f35b9190503461021e578060031936011261021e5761021a91356109c26001610203610bf9565b610caf565b90503461021e57602036600319011261021e5781602093600192358152600685522001549051908152f35b505034610192576060366003190112610192576020906103ef610a13610bde565b610a1b610bf9565b60443591610a2a833383610fad565b610e34565b5050346101925781600319360112610192576020906002549051908152f35b5050346101925780600319360112610192576020906103ef610a6e610bde565b6024359033610f1a565b50503461019257816003193601126101925780519082600354610a9a81610da6565b80855291600191808316908115610b235750600114610ac6575b50505061045f82610471940383610e12565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828610610b0b5750505061045f8260206104719582010194610ab4565b80546020878701810191909152909501948101610aee565b61047197508693506020925061045f94915060ff191682840152151560051b82010194610ab4565b84913461021e57602036600319011261021e573563ffffffff60e01b811680910361021e5760209250637965db0b60e01b8114908115610b8d575b5015158152f35b6301ffc9a760e01b14905083610b86565b919082519283825260005b848110610bca575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ba9565b600435906001600160a01b0382168203610bf457565b600080fd5b602435906001600160a01b0382168203610bf457565b3360009081527fe09f975e15f8f53f24cbbc282b13c40b84df485fcdb8d3997fa103dc5a4ef84160205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff1615610c6b5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600660205260406000203360005260205260ff6040600020541615610c6b5750565b906000918083526006602052604083209160018060a01b03169182845260205260ff60408420541615600014610d2a5780835260066020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b906000918083526006602052604083209160018060a01b03169182845260205260ff604084205416600014610d2a578083526006602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b90600182811c92168015610dd6575b6020831014610dc057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610db5565b6040810190811067ffffffffffffffff821117610dfc57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610dfc57604052565b916001600160a01b03808416928315610f015716928315610ee857610e5761151d565b60009083825281602052604082205490838210610eb6575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6001600160a01b03908116918215610f945716918215610f7b5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b9160018060a01b038093169160009383855260016020526040938486209183169182875260205284862054926000198410610fec575b50505050505050565b8484106110505750801561103857811561102057855260016020528385209085526020520391205538808080808080610fe3565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b038216908115610f015761109a61151d565b600092828452836020526040842054908282106110f55750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116111ab57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561119f5780516001600160a01b0381161561119657918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600481101561122657806111c9575050565b600181036111e35760405163f645eedf60e01b8152600490fd5b600281036112045760405163fce698f760e01b815260048101839052602490fd5b60031461120e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061133e575b15611297577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610dfc5760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461126e565b60ff81146113a55760ff811690601f8211611393576040519161138983610de0565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516007548160006113b883610da6565b8083529260019081811690811561144157506001146113e2575b506113df92500382610e12565b90565b6007600090815291507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b84831061142657506113df9350508101602001386113d2565b8193509081602092548385890101520191019091849261140d565b9050602092506113df94915060ff191682840152151560051b820101386113d2565b60ff81146114855760ff811690601f8211611393576040519161138983610de0565b5060405160085481600061149883610da6565b8083529260019081811690811561144157506001146114be57506113df92500382610e12565b6008600090815291507ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b84831061150257506113df9350508101602001386113d2565b819350908160209254838589010152019101909184926114e9565b60ff6005541661152957565b60405163d93c066560e01b8152600490fdfea26469706673582212206e841c09d240a722bffa331c60dc2a1b0cdf217b5de335af2cebf32e62f791f264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0xB4B JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xA78 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA4E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0xA2F JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x9F2 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x9C7 JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x99D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x981 JUMPI DUP2 PUSH4 0x3644E515 EQ PUSH2 0x95D JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x917 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x8AD JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x7A0 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x782 JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x75E JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x727 JUMPI DUP2 PUSH4 0x79CC6790 EQ PUSH2 0x6F4 JUMPI DUP2 PUSH4 0x7ECEBE00 EQ PUSH2 0x6BC JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x661 JUMPI DUP2 PUSH4 0x84B0196E EQ PUSH2 0x543 JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x4FC JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x411 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x3F6 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x3C5 JUMPI DUP2 PUSH4 0xD505ACCF EQ PUSH2 0x25D JUMPI DUP2 PUSH4 0xD5391393 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1DE JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x196 JUMPI PUSH4 0xE63AB1E9 EQ PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1B3 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x1BB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x21A SWAP2 CALLDATALOAD PUSH2 0x215 PUSH1 0x1 PUSH2 0x203 PUSH2 0xBF9 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xC89 JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH2 0x279 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x281 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x3C1 JUMPI DUP2 TIMESTAMP GT PUSH2 0x3AA JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP6 AND SWAP3 DUP4 DUP10 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP10 DUP10 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP4 ADD SWAP1 SSTORE DUP11 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE DUP7 DUP14 DUP5 ADD MSTORE DUP6 DUP11 AND PUSH1 0x60 DUP5 ADD MSTORE DUP11 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x397 JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x365 SWAP2 PUSH2 0x35C SWAP2 PUSH2 0x336 PUSH2 0x123C JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x11B7 JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x37C JUMPI DUP7 PUSH2 0x379 DUP8 DUP8 DUP8 PUSH2 0xF1A JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0x3E5 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xE34 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x434 DUP3 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x4D1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x475 JUMPI JUMPDEST PUSH2 0x471 DUP7 DUP7 PUSH2 0x45F DUP3 DUP12 SUB DUP4 PUSH2 0xE12 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xB9E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x4B9 JUMPI POP POP POP PUSH2 0x45F DUP3 PUSH1 0x20 PUSH2 0x471 SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x44E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x471 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x45F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x44E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x51D PUSH2 0xBF9 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x57F PUSH32 0x0 PUSH2 0x1367 JUMP JUMPDEST SWAP3 PUSH2 0x5A9 PUSH32 0x0 PUSH2 0x1463 JUMP JUMPDEST SWAP1 DUP3 MLOAD SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP6 ADD SWAP6 DUP6 DUP8 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP9 GT OR PUSH2 0x64E JUMPI POP SWAP3 DUP1 PUSH2 0x604 DUP4 DUP9 SWAP7 PUSH2 0x5F7 SWAP10 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE DUP2 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xF PUSH1 0xF8 SHL DUP12 MSTORE PUSH1 0xE0 DUP7 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0xB9E JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0xB9E JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x637 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x628 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x69F PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6E4 PUSH2 0xBDE JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x724 JUMPI PUSH2 0x379 PUSH2 0x710 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x71F DUP3 CALLER DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74F PUSH2 0xBDE JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH2 0x379 SWAP1 CALLDATALOAD CALLER PUSH2 0x1080 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x7BB PUSH2 0xBDE JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP1 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x87A JUMPI PUSH2 0x817 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x867 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x8C7 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x909 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x5 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH2 0x931 PUSH2 0xBF9 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x94E JUMPI POP PUSH2 0x21A SWAP2 SWAP3 CALLDATALOAD PUSH2 0xD2F JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x97A PUSH2 0x123C JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x21E JUMPI PUSH2 0x21A SWAP2 CALLDATALOAD PUSH2 0x9C2 PUSH1 0x1 PUSH2 0x203 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0xA13 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xA2A DUP4 CALLER DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3EF PUSH2 0xA6E PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xF1A JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x192 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x192 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0xA9A DUP2 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0xB23 JUMPI POP PUSH1 0x1 EQ PUSH2 0xAC6 JUMPI JUMPDEST POP POP POP PUSH2 0x45F DUP3 PUSH2 0x471 SWAP5 SUB DUP4 PUSH2 0xE12 JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0xB0B JUMPI POP POP POP PUSH2 0x45F DUP3 PUSH1 0x20 PUSH2 0x471 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0xAB4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x471 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x45F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xAB4 JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x21E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x21E JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x21E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xB8D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xB86 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xBCA JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBF4 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE09F975E15F8F53F24CBBC282B13C40B84DF485FCDB8D3997FA103DC5A4EF841 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC6B JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC6B JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xD2A JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xD2A JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xDD6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xDC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF01 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xEE8 JUMPI PUSH2 0xE57 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xEB6 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xF94 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP2 PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP7 KECCAK256 SWAP2 DUP4 AND SWAP2 DUP3 DUP8 MSTORE PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 LT PUSH2 0xFEC JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP5 LT PUSH2 0x1050 JUMPI POP DUP1 ISZERO PUSH2 0x1038 JUMPI DUP2 ISZERO PUSH2 0x1020 JUMPI DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 DUP6 KECCAK256 SWAP1 DUP6 MSTORE PUSH1 0x20 MSTORE SUB SWAP2 KECCAK256 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xFE3 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0xF01 JUMPI PUSH2 0x109A PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x10F5 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x11AB JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x119F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1196 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1226 JUMPI DUP1 PUSH2 0x11C9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1204 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x120E JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x133E JUMPI JUMPDEST ISZERO PUSH2 0x1297 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDFC JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x126E JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x13A5 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1389 DUP4 PUSH2 0xDE0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x7 SLOAD DUP2 PUSH1 0x0 PUSH2 0x13B8 DUP4 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1441 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13E2 JUMPI JUMPDEST POP PUSH2 0x13DF SWAP3 POP SUB DUP3 PUSH2 0xE12 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 JUMPDEST DUP5 DUP4 LT PUSH2 0x1426 JUMPI POP PUSH2 0x13DF SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x13DF SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1485 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1389 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1498 DUP4 PUSH2 0xDA6 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1441 JUMPI POP PUSH1 0x1 EQ PUSH2 0x14BE JUMPI POP PUSH2 0x13DF SWAP3 POP SUB DUP3 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 JUMPDEST DUP5 DUP4 LT PUSH2 0x1502 JUMPI POP PUSH2 0x13DF SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x13D2 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0x1529 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x841C09D240A722BFFA331C60DC2A1B 0xC 0xDF 0x21 PUSH28 0x5DE335AF2CEBF32E62F791F264736F6C634300081400330000000000 ","sourceMap":"541:1087:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:24;541:1087;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;541:1087:39;;2475:4:0;541:1087:39;;;:::i;:::-;;;;;3901:6:0;541:1087:39;;;;3901:22:0;541:1087:39;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;737:24;541:1087;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;1886:15:14;;:26;1882:97;;541:1087:39;;;;;;;;;;;;;1121:7:20;541:1087:39;;;;;;;;;;;;;;;;2020:78:14;541:1087:39;2020:78:14;;541:1087:39;1024:95:14;541:1087:39;;1024:95:14;;;;541:1087:39;;;;;1024:95:14;;541:1087:39;1024:95:14;541:1087:39;1024:95:14;;541:1087:39;;1024:95:14;;541:1087:39;;1024:95:14;;541:1087:39;;2020:78:14;;541:1087:39;;;;;;;;;;;;;;;2010:89:14;;7105:8:28;;7051:25;;5153:20:29;;:::i;:::-;3993:249:30;;;;-1:-1:-1;;;3993:249:30;;;;;;;;;;541:1087:39;;;3993:249:30;541:1087:39;;3993:249:30;;7051:25:28;:::i;:::-;7105:8;;;;;:::i;:::-;541:1087:39;2223:15:14;;;2219:88;;8823:4:10;;;;;;:::i;:::-;541:1087:39;;2219:88:14;541:1087:39;;-1:-1:-1;;;2261:35:14;;;;;541:1087:39;;1024:95:14;;541:1087:39;;;-1:-1:-1;2261:35:14;541:1087:39;-1:-1:-1;;;541:1087:39;;;;;;;;1882:97:14;541:1087:39;;-1:-1:-1;;;1935:33:14;;;;;541:1087:39;;;;;1935:33:14;541:1087:39;;;;;;;;;;;;;;;;;;;;3440:5:10;541:1087:39;;:::i;:::-;;;735:10:19;;3440:5:10;:::i;:::-;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;541:1087:39;;;;;-1:-1:-1;;;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6198:41:29;:5;:41;:::i;:::-;6653:8;:47;:8;:47;:::i;:::-;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5689:13:29;;541:1087:39;;;;5724:4:29;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;-1:-1:-1;;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;2427:20:22;2475:4:0;;;:::i;:::-;1315:72:22;;:::i;:::-;2408:4;541:1087:39;;2398:14:22;541:1087:39;;;2398:14:22;541:1087:39;;735:10:19;541:1087:39;;2427:20:22;541:1087:39;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;-1:-1:-1;;;;;541:1087:39;;:::i;:::-;;;;624:7:20;541:1087:39;;;;;;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;1166:5:12;541:1087:39;;:::i;:::-;;;735:10:19;1135:5:12;735:10:19;;1135:5:12;;:::i;:::-;1166;:::i;541:1087:39:-;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;-1:-1:-1;;;;;541:1087:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:7:22;541:1087:39;;;;;;;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;692:5:12;541:1087:39;;735:10:19;692:5:12;:::i;541:1087:39:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;737:24;;541:1087;;;2954:6:0;541:1087:39;;;;;735:10:19;541:1087:39;;;;;;;;;;3519:23:0;3515:108;;-1:-1:-1;;;;;;541:1087:39;;7509:21:10;;7505:91;;1315:72:22;;:::i;:::-;6214:21:10;541:1087:39;;;;;;;;;;;;;7064:25:10;541:1087:39;;;6214:21:10;541:1087:39;;;;;;;;;;;;;;;;;;;;7064:25:10;541:1087:39;;;-1:-1:-1;;;541:1087:39;;;;;;;;7505:91:10;541:1087:39;;;;7553:32:10;;;;;;;;541:1087:39;7553:32:10;3515:108:0;541:1087:39;;-1:-1:-1;;;3565:47:0;;735:10:19;3565:47:0;;;541:1087:39;;;;;;;;;;3565:47:0;541:1087:39;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1796:7:22;541:1087:39;;;;;2140:9:22;2136:62;;-1:-1:-1;;;541:1087:39;1796:7:22;541:1087:39;;735:10:19;541:1087:39;;2674:22:22;;541:1087:39;;2674:22:22;541:1087:39;;2136:62:22;541:1087:39;;-1:-1:-1;;;2172:15:22;;;541:1087:39;;;;;;;;;;;;;;;;:::i;:::-;735:10:19;;-1:-1:-1;;;;;541:1087:39;;5421:34:0;5417:102;;541:1087:39;5529:37:0;541:1087:39;;;5529:37:0;:::i;5417:102::-;541:1087:39;-1:-1:-1;;;5478:30:0;;541:1087:39;;5478:30:0;541:1087:39;;;;;;;;;;;;;;;2744:20:14;;;:::i;:::-;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;2761:2:10;541:1087:39;;;;;;;;;;;;;;;;;;4330:25:0;541:1087:39;;2475:4:0;541:1087:39;;;:::i;2475:4:0:-;4330:25;:::i;541:1087:39:-;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;3901:6:0;541:1087:39;;;3901:22:0;541:1087:39;;;;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;4967:5:10;541:1087:39;;:::i;:::-;;;:::i;:::-;;;735:10:19;4931:5:10;735:10:19;;4931:5:10;;:::i;:::-;4967;:::i;541:1087:39:-;;;;;;;;;;;;;;;;2908:12:10;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;8823:4:10;541:1087:39;;:::i;:::-;;;735:10:19;;8823:4:10;:::i;541:1087:39:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2673:47:0;;;:87;;;;541:1087:39;;;;;;;2673:87:0;-1:-1:-1;;;862:40:31;;-1:-1:-1;2673:87:0;;;541:1087:39;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;-1:-1:-1;541:1087:39;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;541:1087:39;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;541:1087:39;;;;;;:::o;3199:103:0:-;735:10:19;-1:-1:-1;541:1087:39;;;;;;;;;;669:24;;541:1087;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;541:1087:39;;;;3565:47:0;;;;;;735:10:19;3565:47:0;;;541:1087:39;;;;;3565:47:0;3199:103;541:1087:39;-1:-1:-1;541:1087:39;2954:6:0;541:1087:39;;;-1:-1:-1;541:1087:39;735:10:19;-1:-1:-1;541:1087:39;;;;;-1:-1:-1;541:1087:39;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;-1:-1:-1;541:1087:39;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;541:1087:39;;;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:19;6370:40:0;;;541:1087:39;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6732:317::-;;-1:-1:-1;541:1087:39;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;6826:217:0;541:1087:39;;;;;;2954:6:0;541:1087:39;;;;;;;;;;;;;;;;;;;;6924:40:0;735:10:19;6924:40:0;;;541:1087:39;6978:11:0;:::o;541:1087:39:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5374:300:10:-;;-1:-1:-1;;;;;541:1087:39;;;;5457:18:10;;5453:86;;541:1087:39;5552:16:10;;;5548:86;;1315:72:22;;:::i;:::-;6074:540:10;541:1087:39;;;;;;;;;;;6321:19:10;;;;6317:115;;541:1087:39;;;;;7064:25:10;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:10;5374:300::o;6317:115::-;541:1087:39;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;541:1087:39;;;;6367:50:10;;;541:1087:39;;;;;;;;;;;;;;;;6367:50:10;5548:86;541:1087:39;;-1:-1:-1;;;5591:32:10;;5473:1;5591:32;;;541:1087:39;;;5591:32:10;5453:86;541:1087:39;;-1:-1:-1;;;5498:30:10;;5473:1;5498:30;;;541:1087:39;;;5498:30:10;9682:432;-1:-1:-1;;;;;541:1087:39;;;;9794:19:10;;9790:89;;541:1087:39;9892:21:10;;;9888:90;;541:1087:39;10066:31:10;541:1087:39;;9811:1:10;541:1087:39;;;;;9811:1:10;541:1087:39;;9811:1:10;541:1087:39;;;;;9811:1:10;541:1087:39;;;;;;;10066:31:10;9682:432::o;9888:90::-;541:1087:39;;-1:-1:-1;;;9936:31:10;;9811:1;9936:31;;;541:1087:39;;;9936:31:10;9790:89;541:1087:39;;-1:-1:-1;;;9836:32:10;;9811:1;9836:32;;;541:1087:39;;;9836:32:10;10396:476;;541:1087:39;;;;;;;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;10580:17:10;;;10561:36;;10557:309;;10396:476;;;;;;;;:::o;10557:309::-;10617:24;;;10613:130;;9794:19;;;9790:89;;9892:21;;9888:90;;541:1087:39;;;;;;;;;;;;;;;;;10557:309:10;;;;;;;;;9888:90;541:1087:39;;-1:-1:-1;;;9936:31:10;;;;;541:1087:39;;;;;9936:31:10;9790:89;541:1087:39;;-1:-1:-1;;;9836:32:10;;;;;541:1087:39;;;;;9836:32:10;10613:130;541:1087:39;;-1:-1:-1;;;10668:60:10;;-1:-1:-1;;;;;541:1087:39;;;;10668:60:10;;;541:1087:39;;;;;;;;;;;;;;;6367:50:10;7965:206;;-1:-1:-1;;;;;541:1087:39;;;8035:21:10;;8031:89;;1315:72:22;;:::i;:::-;6074:540:10;541:1087:39;;;;;;;;;;;6321:19:10;;;;6317:115;;541:1087:39;;7064:25:10;541:1087:39;;;;;;;;;;;;;;;6791:21:10;541:1087:39;;6791:21:10;541:1087:39;;;;;;7064:25:10;7965:206::o;6317:115::-;541:1087:39;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;541:1087:39;;;;6367:50:10;;;541:1087:39;;;;;;;;;;;;;;;;6367:50:10;5203:1551:28;;;6283:66;6270:79;;6266:164;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:28;;;;;;;;;;;;;;-1:-1:-1;;;;;541:1087:39;;6579:20:28;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;541:1087:39;;;;;;;;;;6266:164:28;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;541:1087:39;;;;;;7366:29:28;;;7411:7;;:::o;7362:444::-;541:1087:39;7462:38:28;;541:1087:39;;;;-1:-1:-1;;;7523:23:28;;541:1087:39;;7523:23:28;7458:348;7576:35;7567:44;;7576:35;;541:1087:39;;-1:-1:-1;;;7634:46:28;;541:1087:39;7634:46:28;;541:1087:39;;;;;7634:46:28;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;541:1087:39;;;;7763:32:28;;;;;;541:1087:39;7763:32:28;;541:1087:39;7763:32:28;541:1087:39;;;;7375:20:28;541:1087:39;;;;;7375:20:28;541:1087:39;3945:262:29;4029:4;4038:11;-1:-1:-1;;;;;541:1087:39;4021:28:29;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;541:1087:39;;4304:80:29;;;541:1087:39;2079:95:29;541:1087:39;;4326:11:29;541:1087:39;2079:95:29;;541:1087:39;4339:14:29;2079:95;;;541:1087:39;4355:13:29;2079:95;;;541:1087:39;4029:4:29;541:1087:39;2079:95:29;;541:1087:39;;4304:80:29;;2079:95;541:1087:39;;;;;;;;;;;;;;4294:91:29;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;3368:267:24;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;541:1087:39;;;;;;:::i;:::-;2324:106:24;;2311:2;541:1087:39;;2324:106:24;3553:22;:::o;2675:69::-;541:1087:39;;-1:-1:-1;;;2713:20:24;;;;;3487:142;-1:-1:-1;541:1087:39;;6225:13:29;541:1087:39;;-1:-1:-1;541:1087:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1390:66:24;;;;;;;:::i;:::-;3606:12;:::o;541:1087:39:-;6225:13:29;-1:-1:-1;541:1087:39;;;-1:-1:-1;;541:1087:39;;;;;;;-1:-1:-1;1390:66:24;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:24;541:1087:39;;;;;;;;;;;;;;;;;;;;3368:267:24;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;541:1087:39;;;;;;:::i;3487:142:24:-;-1:-1:-1;541:1087:39;;6683:16:29;541:1087:39;;-1:-1:-1;541:1087:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1390:66:24;;;;;;;:::i;541:1087:39:-;6683:16:29;-1:-1:-1;541:1087:39;;;-1:-1:-1;;541:1087:39;;;;;;;-1:-1:-1;1390:66:24;;-1:-1:-1;;541:1087:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:128:22;541:1087:39;1796:7:22;541:1087:39;;1939:61:22;;1878:128::o;1939:61::-;541:1087:39;;-1:-1:-1;;;1974:15:22;;;;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Token.sol\":{\"keccak256\":\"0x02b1ece6553172290f64229d25d9825612f90e67c0447d33a415cb1af04e363f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bceff3e6090d7174f57ee17b9d231c72263496184cd5d574fce19b9624554a7\",\"dweb:/ipfs/QmViaMoPrFS5MbekrJ86z87jLtoyQuM5tivhmeEF6mxHWh\"]}},\"version\":1}"}},"contracts/mocks/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"tokenDecimals","type":"uint8"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":1001,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":963,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60406080815234620003be5762000c92803803806200001e81620003c3565b9283398101608082820312620003be5781516001600160401b039290838111620003be578262000050918301620003e9565b906020928382015190858211620003be576200006e918301620003e9565b91858201519160ff8316809303620003be5760600151948151818111620002be576003908154906001948583811c93168015620003b3575b898410146200039d578190601f9384811162000347575b508990848311600114620002e057600092620002d4575b505060001982851b1c191690851b1782555b8551928311620002be5760049586548581811c91168015620002b3575b898210146200029e5782811162000253575b5087918411600114620001e857938394918492600095620001dc575b50501b92600019911b1c19161782555b60ff1960055416176005553315620001c55760025490838201809211620001b057506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a35161083690816200045c8239f35b601190634e487b7160e01b6000525260246000fd5b602490600085519163ec442f0560e01b8352820152fd5b01519350388062000131565b9190601f198416928760005284896000209460005b8b898383106200023b575050501062000220575b50505050811b01825562000141565b01519060f884600019921b161c191690553880808062000211565b868601518955909701969485019488935001620001fd565b87600052886000208380870160051c8201928b881062000294575b0160051c019086905b8281106200028757505062000115565b6000815501869062000277565b925081926200026e565b602288634e487b7160e01b6000525260246000fd5b90607f169062000103565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d4565b90879350601f19831691866000528b6000209260005b8d82821062000330575050841162000317575b505050811b018255620000e6565b015160001983871b60f8161c1916905538808062000309565b8385015186558b97909501949384019301620002f6565b90915084600052896000208480850160051c8201928c861062000393575b918991869594930160051c01915b82811062000383575050620000bd565b6000815585945089910162000373565b9250819262000365565b634e487b7160e01b600052602260045260246000fd5b92607f1692620000a6565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002be57604052565b919080601f84011215620003be5782516001600160401b038111620002be576020906200041f601f8201601f19168301620003c3565b92818452828287010111620003be5760005b8181106200044757508260009394955001015290565b85810183015184820184015282016200043156fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146105d057508163095ea7b31461052657816318160ddd1461050757816323b872dd14610410578163313ce567146103ee57816340c10f191461034257816370a082311461030b57816395d89b41146101ec5781639dc29fac1461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6106f1565b6100c261070c565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086106f1565b6024359033610722565b5160018152f35b839150346100e557826003193601126100e5576101346106f1565b6001600160a01b038116916024359183156101d5578385528460205285852054918383106101a15750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b865163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810184905281906060010390fd5b8551634b637e8f60e11b8152808301869052602490fd5b8383346100e557816003193601126100e557805190828454600181811c90808316928315610301575b60209384841081146102ee578388529081156102d2575060011461027d575b505050829003601f01601f191682019267ffffffffffffffff84118385101761026a57508291826102669252826106a8565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102be5750505050830101858080610234565b8054888601830152930192849082016102a8565b60ff1916878501525050151560051b8401019050858080610234565b634e487b7160e01b895260228a52602489fd5b91607f1691610215565b5050346100e55760203660031901126100e55760209181906001600160a01b036103336106f1565b16815280845220549051908152f35b919050346103ea57806003193601126103ea5761035d6106f1565b6001600160a01b031691602435919083156103d557600254908382018092116103c2575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b8280fd5b5050346100e557816003193601126100e55760209060ff600554169051908152f35b905082346105045760603660031901126105045761042c6106f1565b61043461070c565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610470575b602088610112898989610722565b8683106104d85781156104c15733156104aa5750825260016020908152868320338452815291869020908590039055829061011287610462565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100e557816003193601126100e5576020906002549051908152f35b9050346103ea57816003193601126103ea576105406106f1565b6024359033156105b9576001600160a01b03169182156105a257508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849084346103ea57826003193601126103ea5782600354600181811c9080831692831561069e575b60209384841081146102ee578388529081156102d2575060011461064857505050829003601f01601f191682019267ffffffffffffffff84118385101761026a57508291826102669252826106a8565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061068a5750505050830101858080610234565b805488860183015293019284908201610674565b91607f16916105f8565b6020808252825181830181905290939260005b8281106106dd57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016106bb565b600435906001600160a01b038216820361070757565b600080fd5b602435906001600160a01b038216820361070757565b916001600160a01b038084169283156107e757169283156107ce576000908382528160205260408220549083821061079c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212205479cfaa6f15355f206eb64d068f0807769ed06fc123285a7b443dd14dba1bb264736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLVALUE PUSH3 0x3BE JUMPI PUSH3 0xC92 DUP1 CODESIZE SUB DUP1 PUSH3 0x1E DUP2 PUSH3 0x3C3 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH3 0x3BE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x3BE JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0x3E9 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP3 DUP4 DUP3 ADD MLOAD SWAP1 DUP6 DUP3 GT PUSH3 0x3BE JUMPI PUSH3 0x6E SWAP2 DUP4 ADD PUSH3 0x3E9 JUMP JUMPDEST SWAP2 DUP6 DUP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP1 SWAP4 SUB PUSH3 0x3BE JUMPI PUSH1 0x60 ADD MLOAD SWAP5 DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x2BE JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP5 DUP6 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x3B3 JUMPI JUMPDEST DUP10 DUP5 LT EQ PUSH3 0x39D JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH3 0x347 JUMPI JUMPDEST POP DUP10 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2E0 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2D4 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP3 SSTORE JUMPDEST DUP6 MLOAD SWAP3 DUP4 GT PUSH3 0x2BE JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2B3 JUMPI JUMPDEST DUP10 DUP3 LT EQ PUSH3 0x29E JUMPI DUP3 DUP2 GT PUSH3 0x253 JUMPI JUMPDEST POP DUP8 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x1E8 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1DC JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH3 0x1C5 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x1B0 JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 MLOAD PUSH2 0x836 SWAP1 DUP2 PUSH3 0x45C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 DUP6 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x131 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP8 PUSH1 0x0 MSTORE DUP5 DUP10 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP12 DUP10 DUP4 DUP4 LT PUSH3 0x23B JUMPI POP POP POP LT PUSH3 0x220 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x141 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x211 JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1FD JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP9 LT PUSH3 0x294 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x287 JUMPI POP POP PUSH3 0x115 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x277 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x26E JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x103 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD4 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP7 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x330 JUMPI POP POP DUP5 GT PUSH3 0x317 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0xE6 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x309 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2F6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x393 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x383 JUMPI POP POP PUSH3 0xBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x373 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x365 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0xA6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2BE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x3BE JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2BE JUMPI PUSH1 0x20 SWAP1 PUSH3 0x41F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x3C3 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x3BE JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x447 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x431 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x5D0 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x507 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x410 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3EE JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x342 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1EC JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x722 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x134 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 DUP4 ISZERO PUSH2 0x1D5 JUMPI DUP4 DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0x1A1 JUMPI POP POP DUP2 DUP5 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2EE JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x27D JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x26A JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x266 SWAP3 MSTORE DUP3 PUSH2 0x6A8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x2BE JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x215 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x333 PUSH2 0x6F1 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI PUSH2 0x35D PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3C2 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x504 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x504 JUMPI PUSH2 0x42C PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x434 PUSH2 0x70C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x470 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x112 DUP10 DUP10 DUP10 PUSH2 0x722 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x4D8 JUMPI DUP2 ISZERO PUSH2 0x4C1 JUMPI CALLER ISZERO PUSH2 0x4AA JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x112 DUP8 PUSH2 0x462 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3EA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI PUSH2 0x540 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5A2 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x3EA JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x69E JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2EE JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x648 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x26A JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x266 SWAP3 MSTORE DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x68A JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x674 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DD JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x707 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x707 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x7E7 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x79C JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH26 0xCFAA6F15355F206EB64D068F0807769ED06FC123285A7B443DD1 0x4D 0xBA SHL 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"189:604:40:-:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;189:604:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:10;189:604:40;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;-1:-1:-1;189:604:40;;;;-1:-1:-1;;;;189:604:40;;;;;;;;;;;;;;;;;;;;1671:17:10;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;423:25;189:604;;;423:25;189:604;464:10;7509:21:10;7505:91;;6214:21;189:604:40;;;;;;;;;;;-1:-1:-1;189:604:40;7064:25:10;189:604:40;6214:21:10;189:604:40;464:10;189:604;;;;;;;;;;;;;;;;;;;464:10;7064:25:10;;189:604:40;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;-1:-1:-1;189:604:40;7505:91:10;189:604:40;;-1:-1:-1;189:604:40;;7553:32:10;;;;;;;;189:604:40;7553:32:10;189:604:40;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;-1:-1:-1;189:604:40;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;-1:-1:-1;189:604:40;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;-1:-1:-1;189:604:40;;;;;;;;;;;;-1:-1:-1;189:604:40;;1671:17:10;189:604:40;;-1:-1:-1;189:604:40;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;-1:-1:-1;189:604:40;;-1:-1:-1;189:604:40;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;-1:-1:-1;;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;-1:-1:-1;189:604:40;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;-1:-1:-1;;189:604:40;;;-1:-1:-1;;;;;189:604:40;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;189:604:40;;;;;;;;;;-1:-1:-1;;189:604:40;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1777,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3731":{"entryPoint":1804,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":1704,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1826,"id":2185,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146105d057508163095ea7b31461052657816318160ddd1461050757816323b872dd14610410578163313ce567146103ee57816340c10f191461034257816370a082311461030b57816395d89b41146101ec5781639dc29fac1461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6106f1565b6100c261070c565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086106f1565b6024359033610722565b5160018152f35b839150346100e557826003193601126100e5576101346106f1565b6001600160a01b038116916024359183156101d5578385528460205285852054918383106101a15750508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936020938688528785520381872055816002540360025551908152a380f35b865163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810184905281906060010390fd5b8551634b637e8f60e11b8152808301869052602490fd5b8383346100e557816003193601126100e557805190828454600181811c90808316928315610301575b60209384841081146102ee578388529081156102d2575060011461027d575b505050829003601f01601f191682019267ffffffffffffffff84118385101761026a57508291826102669252826106a8565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102be5750505050830101858080610234565b8054888601830152930192849082016102a8565b60ff1916878501525050151560051b8401019050858080610234565b634e487b7160e01b895260228a52602489fd5b91607f1691610215565b5050346100e55760203660031901126100e55760209181906001600160a01b036103336106f1565b16815280845220549051908152f35b919050346103ea57806003193601126103ea5761035d6106f1565b6001600160a01b031691602435919083156103d557600254908382018092116103c2575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b8280fd5b5050346100e557816003193601126100e55760209060ff600554169051908152f35b905082346105045760603660031901126105045761042c6106f1565b61043461070c565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610470575b602088610112898989610722565b8683106104d85781156104c15733156104aa5750825260016020908152868320338452815291869020908590039055829061011287610462565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100e557816003193601126100e5576020906002549051908152f35b9050346103ea57816003193601126103ea576105406106f1565b6024359033156105b9576001600160a01b03169182156105a257508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849084346103ea57826003193601126103ea5782600354600181811c9080831692831561069e575b60209384841081146102ee578388529081156102d2575060011461064857505050829003601f01601f191682019267ffffffffffffffff84118385101761026a57508291826102669252826106a8565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83851061068a5750505050830101858080610234565b805488860183015293019284908201610674565b91607f16916105f8565b6020808252825181830181905290939260005b8281106106dd57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016106bb565b600435906001600160a01b038216820361070757565b600080fd5b602435906001600160a01b038216820361070757565b916001600160a01b038084169283156107e757169283156107ce576000908382528160205260408220549083821061079c575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212205479cfaa6f15355f206eb64d068f0807769ed06fc123285a7b443dd14dba1bb264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x5D0 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x526 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x507 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x410 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x3EE JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0x342 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1EC JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x722 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x134 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 DUP4 ISZERO PUSH2 0x1D5 JUMPI DUP4 DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP6 KECCAK256 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0x1A1 JUMPI POP POP DUP2 DUP5 SWAP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH1 0x20 SWAP4 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x301 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2EE JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x27D JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x26A JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x266 SWAP3 MSTORE DUP3 PUSH2 0x6A8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x2BE JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x215 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x333 PUSH2 0x6F1 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI PUSH2 0x35D PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3C2 JUMPI POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE DUP6 DUP6 MSTORE DUP5 DUP4 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x504 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x504 JUMPI PUSH2 0x42C PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x434 PUSH2 0x70C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x470 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x112 DUP10 DUP10 DUP10 PUSH2 0x722 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x4D8 JUMPI DUP2 ISZERO PUSH2 0x4C1 JUMPI CALLER ISZERO PUSH2 0x4AA JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x112 DUP8 PUSH2 0x462 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3EA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI PUSH2 0x540 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5A2 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x3EA JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EA JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x69E JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2EE JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x648 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x26A JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x266 SWAP3 MSTORE DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x68A JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x234 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x674 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x6DD JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x707 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x707 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x7E7 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x79C JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH26 0xCFAA6F15355F206EB64D068F0807769ED06FC123285A7B443DD1 0x4D 0xBA SHL 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"189:604:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3440:5:10;189:604:40;;:::i;:::-;;;735:10:19;;3440:5:10;:::i;:::-;189:604:40;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;189:604:40;;;;;;8035:21:10;;8031:89;;189:604:40;;;;;;;;;;6321:19:10;;;;6317:115;;189:604:40;;;;;7064:25:10;189:604:40;;;;;;;;;;;;;;;6791:21:10;189:604:40;;6791:21:10;189:604:40;;;;;7064:25:10;189:604:40;;6317:115:10;189:604:40;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;189:604:40;;;6367:50:10;;;189:604:40;;;;;;;;;;;;;;;;;;;6367:50:10;;;8031:89;189:604:40;;-1:-1:-1;;;8079:30:10;;;;;189:604:40;;;;;8079:30:10;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;189:604:40;;;;;-1:-1:-1;;189:604:40;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;189:604:40;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;189:604:40;;;;;-1:-1:-1;;189:604:40;;;;;;;;-1:-1:-1;189:604:40;;;;;;-1:-1:-1;;;189:604:40;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;189:604:40;;;;;;;;-1:-1:-1;;;;;189:604:40;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;189:604:40;;;;;;7509:21:10;;7505:91;;6214:21;189:604:40;;;;;;;;;;;;;7064:25:10;189:604:40;;;6214:21:10;189:604:40;;;;;;;;;;;;;;;;;;;;7064:25:10;189:604:40;;;-1:-1:-1;;;189:604:40;;;;;;;;7505:91:10;189:604:40;;;;7553:32:10;;;;;;;;189:604:40;7553:32:10;189:604:40;;;;;;;;;;;;;;;;;;;;;581:9;189:604;;;;;;;;;;;;;;;;;-1:-1:-1;;189:604:40;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:19;189:604:40;;;;;;;;10580:17:10;;;10561:36;;10557:309;;189:604:40;;4967:5:10;;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:19;9892:21:10;9888:90;;-1:-1:-1;189:604:40;;;;;;;;;;735:10:19;189:604:40;;;;;;;;;;;;;;;;4967:5:10;10557:309;;;9888:90;189:604:40;;-1:-1:-1;;;9936:31:10;;;;;189:604:40;;;;;9936:31:10;9790:89;189:604:40;;-1:-1:-1;;;9836:32:10;;;;;189:604:40;;;;;9836:32:10;10613:130;189:604:40;;-1:-1:-1;;;10668:60:10;;735:10:19;10668:60:10;;;189:604:40;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;6367:50:10;;;189:604:40;;;;;;;;;;;;;;;;;;;2908:12:10;189:604:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:19;;9794:19:10;9790:89;;-1:-1:-1;;;;;189:604:40;;9892:21:10;;9888:90;;735:10:19;;;189:604:40;735:10:19;;189:604:40;;;;;;;;;;;;;;;;;;;;10066:31:10;735:10:19;;10066:31:10;;189:604:40;;;;;9888:90:10;189:604:40;;-1:-1:-1;;;9936:31:10;;;;;189:604:40;;;;;9936:31:10;9790:89;189:604:40;;-1:-1:-1;;;9836:32:10;;;;;189:604:40;;;;;9836:32:10;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;189:604:40;;;;;-1:-1:-1;;189:604:40;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;189:604:40;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;189:604:40;;;;;;:::o;5374:300:10:-;;-1:-1:-1;;;;;189:604:40;;;;5457:18:10;;5453:86;;189:604:40;5552:16:10;;;5548:86;;6074:540;189:604:40;;;;;;;;;;;6321:19:10;;;;6317:115;;189:604:40;;;;;7064:25:10;189:604:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:10;5374:300::o;6317:115::-;189:604:40;;-1:-1:-1;;;6367:50:10;;-1:-1:-1;;;;;189:604:40;;;;6367:50:10;;;189:604:40;;;;;;;;;;;;;;;;6367:50:10;5548:86;189:604:40;;-1:-1:-1;;;5591:32:10;;5473:1;5591:32;;;189:604:40;;;5591:32:10;5453:86;189:604:40;;-1:-1:-1;;;5498:30:10;;5473:1;5498:30;;;189:604:40;;;5498:30:10"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock ERC20 token for testing purposes\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"MockERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mocks/MockERC20.sol\":{\"keccak256\":\"0x83c2cb4ef7f2c52ae488f261ca66b3e26f3af73903b78987b1a9b862b9c5edf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9792a93dda1e2b058f38f76459229a2080631cac577223048fc265a1b0ac9fdd\",\"dweb:/ipfs/QmWtWmYLuvLudw5Nh6GqbiEW2PGzNk6nDvGv55yAEhfeWj\"]}},\"version\":1}"}}}}}